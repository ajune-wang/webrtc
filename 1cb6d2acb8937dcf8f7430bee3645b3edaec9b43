{
  "comments": [
    {
      "key": {
        "uuid": "02327c1b_5aa34c48",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 11
      },
      "lineNbr": 41,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-16T10:23:15Z",
      "side": 1,
      "message": "This is now posted just before we destroy the task queue, so it isn\u0027t even guaranteed that it will do anything. This line should be removed since it\u0027s not guaranteed to have any effect. Note that it\u0027s incorrect behavior to call any member function (like SendAudioData) from another class when we have entered the destructor.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 41,
        "endChar": 13
      },
      "revId": "1cb6d2acb8937dcf8f7430bee3645b3edaec9b43",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed1d7c83_a6dfc547",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 188,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-13T23:55:37Z",
      "side": 1,
      "message": "Test added on for safe state handling for exiting with pending data in encoder_queue.  With further thinking, we don\u0027t need to wait for pending input samples to be transmitted when caller is stopping.  We\u0027ll just need to make sure that we can safely discard and process afterwards.  Thus, I removed rtc::Event for the wait on queue draining we had previously.",
      "range": {
        "startLine": 188,
        "startChar": 0,
        "endLine": 188,
        "endChar": 57
      },
      "revId": "1cb6d2acb8937dcf8f7430bee3645b3edaec9b43",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdb57a1f_bf979b7e",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 210,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-16T10:23:15Z",
      "side": 1,
      "message": "There\u0027s no race condition here in the current code, task queues guarantees that tasks are executed in the order they are posted.",
      "range": {
        "startLine": 210,
        "startChar": 0,
        "endLine": 210,
        "endChar": 71
      },
      "revId": "1cb6d2acb8937dcf8f7430bee3645b3edaec9b43",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1142e5f6_36e2a61b",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 11
      },
      "lineNbr": 215,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-16T10:23:15Z",
      "side": 1,
      "message": "Since we don\u0027t have any expects, I assume that we just want to ensure that there\u0027s no crash/sanitizer errors due to this? If so I think it\u0027s good to be explicit about it. Now it\u0027s not entirely clear what we are testing for.",
      "range": {
        "startLine": 213,
        "startChar": 0,
        "endLine": 215,
        "endChar": 35
      },
      "revId": "1cb6d2acb8937dcf8f7430bee3645b3edaec9b43",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}