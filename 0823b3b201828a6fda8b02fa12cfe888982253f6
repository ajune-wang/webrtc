{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7b1ba90a_8bba207a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-10-09T08:41:59Z",
      "side": 1,
      "message": "danilchap@ / ssilkin@ could you PTAL first?",
      "revId": "0823b3b201828a6fda8b02fa12cfe888982253f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bb710af_0003120d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-10-09T11:22:59Z",
      "side": 1,
      "message": "From the discussion here (https://github.com/aboba/hevc-webrtc/issues/13), I don\u0027t think we are interested in adding RPSI to WebRTC, we should be looking at implementing a codec agnostic LTR mechanism.",
      "revId": "0823b3b201828a6fda8b02fa12cfe888982253f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47987223_376f7d47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-10-09T13:11:04Z",
      "side": 1,
      "message": "I\u0027m not sure how we can use current LNTF feedback to explicitly signal switching to certain LTRP as reference. Besides using LNTF makes interop with non-libWebRTC-based endpoints difficult - after all LNTF is not defined as supported in RFC 7798.\n\nSince WebRTC team don\u0027t have plan adding RPSI back, I\u0027ll drop this CL unless LNTF is added to RFC 7798 or its amendment as a mechanism of explicit reference picture indication(instead of letting sending side guess whether it should respond with IDR or referencing LTRP).",
      "parentUuid": "7bb710af_0003120d",
      "revId": "0823b3b201828a6fda8b02fa12cfe888982253f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0823b3b201828a6fda8b02fa12cfe888982253f6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0823b3b201828a6fda8b02fa12cfe888982253f6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}