{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4c55ca89_59645942",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1103,
      "author": {
        "id": 18444
      },
      "writtenOn": "2023-02-09T08:42:12Z",
      "side": 1,
      "message": "An idea - you can fork this test into one for the explicit legacy case (3 active layers \u003d 1 KSVC stream) and the new case (3 active layers with scalability modes \u003d\u003e 3 streams). The second case can be explicitly disabled for now with a comment to \"enable this when the above bug is fixed\".",
      "range": {
        "startLine": 1103,
        "startChar": 7,
        "endLine": 1103,
        "endChar": 42
      },
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2bbb02e_e15489ca",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1103,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-02-09T09:08:34Z",
      "side": 1,
      "message": "It does make sense, but I think I prefer to stick with one test per scenario with TODOs while iterating on this. (And ultimately we should TEST_P with all codecs to expect the exact same things, but that is way in the future)",
      "parentUuid": "4c55ca89_59645942",
      "range": {
        "startLine": 1103,
        "startChar": 7,
        "endLine": 1103,
        "endChar": 42
      },
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea810212_ec25715c",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1108,
      "author": {
        "id": 18444
      },
      "writtenOn": "2023-02-09T08:42:12Z",
      "side": 1,
      "message": "nit: Add a comment that this means active? Hard when reading to know what true means.",
      "range": {
        "startLine": 1108,
        "startChar": 69,
        "endLine": 1108,
        "endChar": 73
      },
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5b4e1b99_31bee856",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1108,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-02-09T09:08:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea810212_ec25715c",
      "range": {
        "startLine": 1108,
        "startChar": 69,
        "endLine": 1108,
        "endChar": 73
      },
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11efe020_c84ef6a9",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-02-08T15:13:25Z",
      "side": 1,
      "message": "Because the fallback does not happen until after the codec has been fully configured, i.e. after SRD(answer), I think the only way to feature detect \"simulcast VP9 is supported\" is to actually configure it (e.g. with a dummy peer connection) or to do something blunt like check milestone of browser. Let me know if you have better ideas.",
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efcfddde_a7f4183c",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-08T15:16:42Z",
      "side": 1,
      "message": "The fact that you get 1 RTP stat when you asked for 3 is a clear indication, but does that require connecting the PC?",
      "parentUuid": "11efe020_c84ef6a9",
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7c263e0_80de2ce7",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-02-08T15:25:09Z",
      "side": 1,
      "message": "You do need to do the O/A to get the RTP stream (including spawning the encoders). Today you don\u0027t need to be connected for the RTP streams to show up (I think), but the spec says to only create the RTP stream \"when the first RTP packet is sent\", so that would require a connection. (Ugh, that means that during ramp-up, simulcast would just have some of the RTP streams, it would be better to have all or none as it takes several seconds for ramp up to complete...)",
      "parentUuid": "efcfddde_a7f4183c",
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74fbc7fa_2ea227cb",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-02-08T15:36:50Z",
      "side": 1,
      "message": "You can use getParameters() to detect scalabilityMode is undefined without connecting, but in either case we have to O/A, but that may be better than getStats()",
      "parentUuid": "f7c263e0_80de2ce7",
      "revId": "8dad63c1bd9b980be2719057f7b7cfbe94e0598e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}