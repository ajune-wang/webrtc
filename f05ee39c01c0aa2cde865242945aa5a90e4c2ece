{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "37a899a4_d34e5022",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "took a style look at the test file",
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f3ff59a_2e57f87d",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "needed?",
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d14fd1d0_649d6c12",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "nit: may be 15\u0027000",
      "range": {
        "startLine": 29,
        "startChar": 50,
        "endLine": 29,
        "endChar": 55
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec8bb7f8_641fc4f4",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "what is a point of this constant?\n(doesn\u0027t save that much horizontal space)\nand name-wise right side is imho clearer",
      "range": {
        "startLine": 30,
        "startChar": 19,
        "endLine": 30,
        "endChar": 40
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dcb93818_68cf0888",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "prefer narrow type, convert to integer on demand:\n  constexpr TimeDelta kObservationDurationLowerBound \u003d TimeDelta::Millis(200);\n...\n  config_string.AppendFormat(\",ObservationDurationLowerBound:%dms\",\n                               kObservationDurationLowerBound.ms());",
      "range": {
        "startLine": 31,
        "startChar": 10,
        "endLine": 31,
        "endChar": 13
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0860610_0dc32f49",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "personally I prefer to avoid extra word \u0027Create\u0027 or \u0027Make\u0027 when feasible.\nif function return something by value, it does create it.\nwould you find `ConfigString` as readable?  (or just Config, or may be something like BweFieldTrial)",
      "range": {
        "startLine": 33,
        "startChar": 12,
        "endLine": 33,
        "endChar": 18
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96b0c62d_fe060623",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "instead of\n`T v \u003d T(args);`\nyou can write shorter\n`T v(args);`",
      "range": {
        "startLine": 69,
        "startChar": 2,
        "endLine": 70,
        "endChar": 50
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39e10acf_3b7346d9",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "feel free to put everything (including TESTs) into unnamed namespace.",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 84,
        "endChar": 15
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22dcba9c_988e3862",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "same code without extra CreateLossBasedBweV2 helper would be as large, so, why use helper?",
      "range": {
        "startLine": 89,
        "startChar": 2,
        "endLine": 90,
        "endChar": 63
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd5d6f25_fe97aa57",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "This test, or even this test file validates only v2, likely no need to repeat that in the variable name every time. \n(having it in variable name would be helpful if there would be v1 in the same scope)",
      "range": {
        "startLine": 97,
        "startChar": 47,
        "endLine": 97,
        "endChar": 51
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0530bf21_12e2c365",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "instead of having these two variables, prefer comments\n/*enabled\u003d*/false, /*valid\u003d*/true\n\nThese comment can be verified by clang-tidy tool.\nhttps://clang.llvm.org/extra/clang-tidy/checks/bugprone-argument-comment.html\n\nAlso, `bool enabled \u003d false` may mean two different things.\nmay mean \u0027not enabled\u0027, \nbut in other context it may mean \u0027to enable this parameter should be set to false\u0027",
      "range": {
        "startLine": 98,
        "startChar": 46,
        "endLine": 98,
        "endChar": 60
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6214b72_8f36c225",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "this helper imho makes it harder to understand the test: what do parameters mean?\nthough removing it will make code 1-line longer, it would address the question:\nPacketResult packet_result_1;\npacket_result_1.send_time \u003d Timestamp::Zero();\npacket_result_1.receive_time \u003d kObservationDurationLowerBound;\npacket_result_1.packet_size \u003d DataSize::Bytes(15\u0027000);",
      "range": {
        "startLine": 111,
        "startChar": 33,
        "endLine": 111,
        "endChar": 51
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72e0aad1_9c2b04fa",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "you mean there is a valid bandwidth estimation.\nthen may be use positive expectation:\nEXPECT_TRUE(loss_based_bandwidth_estimator_v2.GetBandwidthEstimate().IsFinite());",
      "range": {
        "startLine": 127,
        "startChar": 2,
        "endLine": 128,
        "endChar": 38
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25953e9f_0f82bc0d",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2_test.cc",
        "patchSetId": 4
      },
      "lineNbr": 227,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-07-26T11:57:49Z",
      "side": 1,
      "message": "why std::vector? plane c-vector would work too:\neither\n  PacketResult enough_feedback_1[] \u003d {packet_result_1, packet_result2_}\nor\n  PacketResult enough_feedback_1[] \u003d {CreatePacketResult(...), \n                                      CreatePacketResult(...)};\nor (using another comment)\n  PacketResult feedback1[2];\n  feedback1[0].receive_time \u003d ...;\n  ...\n  feedback1[1].packet_size \u003d ...;\n  ...\n  loss_based_bandwidth_estimator_v2_1.UpdateBandwidthEstimate(feedback1);",
      "range": {
        "startLine": 227,
        "startChar": 2,
        "endLine": 227,
        "endChar": 27
      },
      "revId": "f05ee39c01c0aa2cde865242945aa5a90e4c2ece",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}