{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2bdab9c3_8c931f2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-03T11:44:49Z",
      "side": 1,
      "message": "I now have a working lambda-capture that doesn\u0027t break any other unittests.\nI used it for the simplest case in connection_context - the two other thread pointers are more complex, so I\u0027ll do a different CL for those.\n\nPTAL.",
      "revId": "ee714a08e4aaa2f58b813de12746f298383dbb51",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ce0a59b_0ccbce67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-05-03T13:00:00Z",
      "side": 1,
      "message": "I like the use case and the extension.\nDidn\u0027t look at template sorcery,\nbut you and Bj√∂rn seem to have that under control! ",
      "revId": "ee714a08e4aaa2f58b813de12746f298383dbb51",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beacdaf1_a8501441",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5522
      },
      "writtenOn": "2022-05-03T11:55:46Z",
      "side": 1,
      "message": "Sorry for the suggesting this form, as it looks like it\u0027s more common in the WebRTC codebase to write this as\n`typename std::enable_if\u003c!(std::is_invocable\u003cArg\u003e::value)\u003e::type* \u003d nullptr`\nSo maybe replace \u0027,bool\u003e::type \u003d true\u0027 by \u0027\u003e::type* \u003d nullptr\u0027 ?\n\nSame below.",
      "range": {
        "startLine": 33,
        "startChar": 12,
        "endLine": 34,
        "endChar": 54
      },
      "revId": "ee714a08e4aaa2f58b813de12746f298383dbb51",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dafe4711_7853645e",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-03T13:41:52Z",
      "side": 1,
      "message": "I think this is an OK form... don\u0027t quite dare to touch it....",
      "parentUuid": "beacdaf1_a8501441",
      "range": {
        "startLine": 33,
        "startChar": 12,
        "endLine": 34,
        "endChar": 54
      },
      "revId": "ee714a08e4aaa2f58b813de12746f298383dbb51",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "ee714a08e4aaa2f58b813de12746f298383dbb51",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "ee714a08e4aaa2f58b813de12746f298383dbb51",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}