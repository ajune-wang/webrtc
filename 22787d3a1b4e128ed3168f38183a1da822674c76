{
  "comments": [
    {
      "key": {
        "uuid": "952c1b61_ea7ebce0",
        "filename": "modules/video_coding/frame_buffer2.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T10:17:26Z",
      "side": 1,
      "message": "I think it\u0027s easier to just keep the old comment, this is not all correct.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 45,
        "endChar": 14
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f95efd2_76803f3d",
        "filename": "modules/video_coding/frame_buffer2.cc",
        "patchSetId": 2
      },
      "lineNbr": 45,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "952c1b61_ea7ebce0",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 45,
        "endChar": 14
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d526e33_2da2071e",
        "filename": "modules/video_coding/frame_buffer2.cc",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "Last CL introduced an issue here. We abolished num_buffered_frames and replaced it with frames_.size().\n\nBut this line adds new entry in frames_ (without image), yet it didn\u0027t increase num_buffered_frames here.\n\nShould we just increase kMaxFramesBuffered and change it to be the total number of undecoded frames known to the FrameBuffer? Or I can return the num_buffered_frames counted back.",
      "range": {
        "startLine": 588,
        "startChar": 4,
        "endLine": 588,
        "endChar": 43
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "145fc7c7_0c348e9a",
        "filename": "modules/video_coding/frame_buffer2.cc",
        "patchSetId": 2
      },
      "lineNbr": 588,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T12:43:19Z",
      "side": 1,
      "message": "I agree that the behavior changed in regards to max frames in the buffer, but I think this is cleaner compared to keeping track of the number of stored frames separately.\n\nI think the current comment \"Max number of decoded frame info that will be saved.\" explains this well enough.",
      "parentUuid": "2d526e33_2da2071e",
      "range": {
        "startLine": 588,
        "startChar": 4,
        "endLine": 588,
        "endChar": 43
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a97ee497_d46ba49d",
        "filename": "modules/video_coding/frame_buffer2.h",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T10:17:26Z",
      "side": 1,
      "message": "This should be tracked by DecodedFramesHistory now right?",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 178,
        "endChar": 78
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f3a8f1_917715ca",
        "filename": "modules/video_coding/frame_buffer2.h",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "No, still needed to understand where to look for the reference: in decoded frames history or in the frames_ set.",
      "parentUuid": "a97ee497_d46ba49d",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 178,
        "endChar": 78
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1cf563ce_3db4e12b",
        "filename": "modules/video_coding/frame_buffer2.h",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T12:43:19Z",
      "side": 1,
      "message": "I think it\u0027s weird that we have a class tracking decoded frames, but it can\u0027t keep track of the last decoded frame timestamp or it\u0027s VideoLayerFrameId. I strongly feel like this class should track this information.",
      "parentUuid": "d0f3a8f1_917715ca",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 178,
        "endChar": 78
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7d4c2e6_5a66a394",
        "filename": "modules/video_coding/frame_buffer2.h",
        "patchSetId": 2
      },
      "lineNbr": 178,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:58:45Z",
      "side": 1,
      "message": "last_decoded_frame_timestamp_ can\u0027t be moved, because history doesn\u0027t care about timestamps.\n\nlast_decoded_frame_ can be moved there, but i think there\u0027s no merit.\n\nIt will still be accessed here, in FrameBuffer:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/video_coding/frame_buffer2.cc?rcl\u003d0554368eedf987c317eb29544f42a44baa2388ba\u0026l\u003d377\n\nAnd most importantly, here:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/video_coding/frame_buffer2.cc?q\u003dframe_buffer2.cc\u0026sq\u003dpackage:chromium\u0026dr\u0026l\u003d535\n\nIt isn\u0027t a state of the history, but it\u0027s the state of the FrameBuffer, independent of history.\n\nMoving this to DecodedFramesHistory will just add extra logical layer to accessing this. What if we decide to replace it with something tracking updated buffers, which will only store up-to 8 frames? That implementation will not even have anything like last decoded frame, but we will need to implement it there just because it\u0027s important to FrameBuffer.\n\nThis change would also require movement of VideoLayerId to a separate file, which I don\u0027t want to do for just this reason.\n\nIf you would please think about DecodedFramesHistory as a specially optimized set, I hope you could agree to leave these members in FrameBuffer.",
      "parentUuid": "1cf563ce_3db4e12b",
      "range": {
        "startLine": 177,
        "startChar": 0,
        "endLine": 178,
        "endChar": 78
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a12437c5_9455eb48",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T10:17:26Z",
      "side": 1,
      "message": "When all spatial layers are known you would no longer clean up old information since you return here.",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 11
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cf39f9b_72daaa3a",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "This if processes the case then we insert a first frame for some layer. \n\nIf all layers are known already, the layer_.size() will be big enough and the |if| body would not be triggered.\n\nIf some intermediate layers were to be created here, they would be initialized to correct state (all zeros).\n\nKeep in mind that all layers are processed completely separately in this class. Inserting frame to SL 1 wouldn\u0027t change history view in SL 1.\n\nI might be not understanding your question here, please elaborate.",
      "parentUuid": "a12437c5_9455eb48",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 11
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78e38fd0_88fa86cf",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T10:17:26Z",
      "side": 1,
      "message": "This will read OOB, you have to resize first.",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 46
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1d7a8a0_122f3377",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "Resize is done in the if above.",
      "parentUuid": "78e38fd0_88fa86cf",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 46
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e78cc5d3_9be8f018",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T12:43:19Z",
      "side": 1,
      "message": "I realize I misunderstood the above if case, this makes sense now.",
      "parentUuid": "f1d7a8a0_122f3377",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 37,
        "endChar": 46
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ecac0e76_3df93dea",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T10:17:26Z",
      "side": 1,
      "message": "Does history.last_stored_index hold a meaningful value when it is first created?",
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a45393c0_05a26598",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "Yes, it is 0. And all values in the buffer_ are false. It can really be anything, the only requirement is for it to be smaller than the first inserted value, which I sassume is always the case, since picture ids are all start from 1000000000 or something.",
      "parentUuid": "ecac0e76_3df93dea",
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6506985e_76b091ae",
        "filename": "modules/video_coding/utility/decoded_frames_history.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T12:43:19Z",
      "side": 1,
      "message": "This also makes sense now.",
      "parentUuid": "a45393c0_05a26598",
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1cfdfb_e28947b8",
        "filename": "modules/video_coding/utility/decoded_frames_history.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-01-11T10:17:26Z",
      "side": 1,
      "message": "WDYT about DecodeHistory instead?",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48cae13c_4533b76c",
        "filename": "modules/video_coding/utility/decoded_frames_history.h",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-11T12:21:47Z",
      "side": 1,
      "message": "I think the current name is reflecting the nature of this class better.",
      "parentUuid": "cd1cfdfb_e28947b8",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "22787d3a1b4e128ed3168f38183a1da822674c76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}