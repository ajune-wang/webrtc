{
  "comments": [
    {
      "key": {
        "uuid": "89532896_2df9ae1d",
        "filename": "modules/video_coding/codecs/h264/h264_decoder_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 325,
      "author": {
        "id": 6008
      },
      "writtenOn": "2017-11-08T18:56:33Z",
      "side": 1,
      "message": "How come you decided not to handle AVERROR(EAGAIN) here? Ditto for receive_frame() below? Also AVERROR_EOF is \u003c 0, so I think it needs to be handled?\n\nhttps://cs.chromium.org/chromium/src/media/ffmpeg/ffmpeg_decoding_loop.cc?l\u003d24",
      "revId": "8c37b618b162c01ee8806fbf845dbcb3d6b11e8f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25e985f5_c7e35593",
        "filename": "modules/video_coding/codecs/h264/h264_decoder_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 325,
      "author": {
        "id": 5825
      },
      "writtenOn": "2017-11-08T21:59:08Z",
      "side": 1,
      "message": "We don’t expect decoder to return those in WebRTC because:\n1. We always pass whole frame in one call;\n2. There is no support for reordering in WebRTC;\n3. We don’t use multithreading (does ffmpeg h264 dec support it?) and don’t expect frames queuing.\nAny of those codes would indicate some issue.",
      "parentUuid": "89532896_2df9ae1d",
      "revId": "8c37b618b162c01ee8806fbf845dbcb3d6b11e8f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c857011_eb2c7a76",
        "filename": "modules/video_coding/codecs/h264/h264_decoder_impl.cc",
        "patchSetId": 9
      },
      "lineNbr": 325,
      "author": {
        "id": 6008
      },
      "writtenOn": "2017-11-08T22:04:37Z",
      "side": 1,
      "message": "Thanks for the explanation! Most of the ffmpeg decoders and certainly all the ones we use on the web support multithreading to an extent.",
      "parentUuid": "25e985f5_c7e35593",
      "revId": "8c37b618b162c01ee8806fbf845dbcb3d6b11e8f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}