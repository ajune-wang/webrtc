{
  "comments": [
    {
      "key": {
        "uuid": "1fc0ccc7_fa048a69",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 141,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 141,
        "startChar": 62,
        "endLine": 141,
        "endChar": 75
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5bd2876e_23ec0cec",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 151,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "Maybe just check that we get less pixels? Exact scale ratio is an implementation detail which can change in the future.",
      "range": {
        "startLine": 151,
        "startChar": 32,
        "endLine": 151,
        "endChar": 55
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e373981_2fded6be",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 151,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-18T09:12:59Z",
      "side": 1,
      "message": "If you feel strongly about this I will address the comments and losen up the requirements. But I think asserting exactly what the implementation does, in *unit tests* of those implementations, is a good thing.\n\nThis is not something I would want to do in an *integration test*. Likewise, because it is an \"implementation detail\", a user of VideoStreamAdapter should only expect that it goes down, not exactly how much. The API and documentation does not say how much either.\n\nBut because this is a unit test of this particular implementation: exact expectations has several benefits:\n- It provides strong protection against regressions. If something changes, even just a little bit, tests will fail.\n- It exactly shows how everything is supposed to work (today).\n- Test coverage is clear - if we change something, and we have coverage, tests will fail. If they don\u0027t fail, something is not covered by tests.\n\nSo what if we the implementation changes in the future? Updating the expectations is a cheap change. In fact, if a future change modifies the behavior and all tests still pass that would raise an eye-brow...\n\nHaving to update the tests when behavior changes is a good thing: It forces us to make a conscious decision: \"did we intend for this change?\" If the answer is yes, then just update the EXPECT_EQs. If not, well then the test did its job.\n\n---\n\nI realize this goes down into testing philosophy so let me know if you still think I should expect less and I will do that, but for now I have not addressed this comment.",
      "parentUuid": "5bd2876e_23ec0cec",
      "range": {
        "startLine": 151,
        "startChar": 32,
        "endLine": 151,
        "endChar": 55
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5867dc75_b850a3b0",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 151,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-18T10:33:05Z",
      "side": 1,
      "message": "I agree with Henrik here. Since this is where the implementation is done, we should test it. But yes, in things that depend on this they shouldn\u0027t depend on these specifics. Furthermore, if these details change or move, then so should the tests.",
      "parentUuid": "9e373981_2fded6be",
      "range": {
        "startLine": 151,
        "startChar": 32,
        "endLine": 151,
        "endChar": 55
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec17659b_33bdc03e",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 177,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "nit: remove",
      "range": {
        "startLine": 177,
        "startChar": 61,
        "endLine": 177,
        "endChar": 72
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7958580_35c9ec5e",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 194,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "nit: Again, maybe it\u0027s a good idea to change these to check only that max_pixels/target is more than input_pixels and max_pixels is more than target.",
      "range": {
        "startLine": 191,
        "startChar": 2,
        "endLine": 194,
        "endChar": 69
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a514277_edd27972",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-17T09:16:14Z",
      "side": 1,
      "message": "EXPECT_EQ(1, adapter.adaptation_counters().resolution_adaptations);",
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aa3d783_9a0f2721",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 195,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-18T09:12:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a514277_edd27972",
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a2b9732_cfda2015",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 205,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-17T09:16:14Z",
      "side": 1,
      "message": "kLimitReached works but there is an edge-case where we can get kAwaitingPreviosAdaptation as the Status instead which is a strange code to return if we had reached the limit anyway, see https://crbug.com/webrtc/11435",
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7634c1b_a6fbc652",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 215,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "again, exact ratio probably shouldn\u0027t be fixed in tests.",
      "range": {
        "startLine": 215,
        "startChar": 60,
        "endLine": 215,
        "endChar": 71
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "055a876b_7e082986",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "LT",
      "range": {
        "startLine": 228,
        "startChar": 9,
        "endLine": 228,
        "endChar": 11
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "124cfb48_b5d3832a",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 252,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 252,
        "startChar": 59,
        "endLine": 252,
        "endChar": 72
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268e557f_d814d0d4",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 271,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "gt",
      "range": {
        "startLine": 271,
        "startChar": 9,
        "endLine": 271,
        "endChar": 11
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "750009cd_ad3da153",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 312,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-17T09:16:14Z",
      "side": 1,
      "message": "EXPECT_EQ(0, adapter.adaptation_counters().resolution_adaptations);\n EXPECT_EQ(1, adapter.adaptation_counters().fps_adaptations);",
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04e6e9cf_6e95b9e7",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 312,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-18T09:12:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "750009cd_ad3da153",
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50626485_42c20662",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 523,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "Please add a hard limit on number of loop iterations. So that if something is broken and test never achieves kLimitReached, it would fail and not hang.",
      "range": {
        "startLine": 523,
        "startChar": 2,
        "endLine": 523,
        "endChar": 16
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d434a8f9_b001081d",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 523,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-18T09:12:59Z",
      "side": 1,
      "message": "Good idea! Done.",
      "parentUuid": "50626485_42c20662",
      "range": {
        "startLine": 523,
        "startChar": 2,
        "endLine": 523,
        "endChar": 16
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d86221f_cc3d528c",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 610,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-17T09:16:14Z",
      "side": 1,
      "message": "(Did not due out of laziness)",
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4acbf84a_0bfc01ed",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 699,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-17T10:02:50Z",
      "side": 1,
      "message": "ToFrom?",
      "range": {
        "startLine": 699,
        "startChar": 29,
        "endLine": 699,
        "endChar": 35
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa83509b_cb02ce56",
        "filename": "video/adaptation/video_stream_adapter_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 699,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-18T09:12:59Z",
      "side": 1,
      "message": "\"To/From\"? :) OK this just looks weird.\n\"ToOrFrom\" it is!",
      "parentUuid": "4acbf84a_0bfc01ed",
      "range": {
        "startLine": 699,
        "startChar": 29,
        "endLine": 699,
        "endChar": 35
      },
      "revId": "d1aff8b356d0b8c298e2d82643e468079a72a5cf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}