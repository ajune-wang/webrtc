{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "971d3771_a8b6b312",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-02-20T16:45:42Z",
      "side": 1,
      "message": "I would prefer to continue using the members of metadata_ rather than storing extra copies of these values to reduce the risk of them diverging. It looks like that should be possible, but maybe I\u0027m missing something?",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "362359c29344003a85a07dac10f7df01c2b19ce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67fd1af6_94980a61",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-02-20T18:17:43Z",
      "side": 1,
      "message": "I thought the idea was that we\u0027d just construct Metadata objects on the fly to serve the TransformableVideoFrameInterface, storing in the relevant underlying data types here - header_, ssrc_ and csrc_ etc.\nOnce we\u0027ve deprecated and then deleted the const ref method and so can delete metadata_, there won\u0027t be any duplication.\n\n\nI guess the alternative is to delete header_, ssrcs_, csrcs_ et al, just store a metadata_ here, change GetHeader() to also return by value instead of constref, construct the header on the fly in GetHeader() etc. Would mean we\u0027d do a Header-\u003eMetadata-\u003eHeader roundtrip all the time even in cases where the metadata isn\u0027t touched/modified.",
      "parentUuid": "971d3771_a8b6b312",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "362359c29344003a85a07dac10f7df01c2b19ce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e04d96_f5c0fe41",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc",
        "patchSetId": 9
      },
      "lineNbr": 45,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-21T07:17:03Z",
      "side": 1,
      "message": "The argument for adding GetCopyOfMetadata instead of changing GetMetadata to return by value was that we didn\u0027t want to be trapped into a synchronous update of all callers to match.\n\nOnce we have GetCopyOfMetadata, we can deprecate/delete GetMetadata-with-reference, and once we\u0027re sure all references are gone, we can add GetMetadata as a synonym for GetCopyOfMetadata, and then finally delete GetCopyOfMetadata.\n\nJust the ordinary dance we do for backwards compatibility.",
      "parentUuid": "67fd1af6_94980a61",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 45,
        "endChar": 22
      },
      "revId": "362359c29344003a85a07dac10f7df01c2b19ce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d12c22cd_bd5ad494",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_frame_transformer_delegate.cc",
        "patchSetId": 9
      },
      "lineNbr": 88,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-02-20T16:45:42Z",
      "side": 1,
      "message": "Why can\u0027t we just copy metadata into metadata_? I see that something similar was done also in the existing implementation, but it is unclear to me why.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 88,
        "endChar": 36
      },
      "revId": "362359c29344003a85a07dac10f7df01c2b19ce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}