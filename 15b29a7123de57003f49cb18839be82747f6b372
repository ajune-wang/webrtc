{
  "comments": [
    {
      "key": {
        "uuid": "f6012d04_678ca8de",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 7,
      "author": {
        "id": 5525
      },
      "writtenOn": "2020-02-27T13:39:04Z",
      "side": 1,
      "message": "Update the description to make it more clear what this CL does.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 54
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22995489_9a47050c",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1897,
      "author": {
        "id": 5525
      },
      "writtenOn": "2020-02-27T13:39:04Z",
      "side": 1,
      "message": "This sounds like we disable all types of adaptation if we have disabled CPU-based adaptation. Does that mean we wouldn\u0027t adapt to BW/qp?",
      "range": {
        "startLine": 1897,
        "startChar": 0,
        "endLine": 1897,
        "endChar": 51
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97c588f7_7eecba6b",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1897,
      "author": {
        "id": 7036
      },
      "writtenOn": "2020-03-04T14:48:55Z",
      "side": 1,
      "message": "It is to my knowledge only used in test scenarios and code paths that are likely obsolete (targeting extremely old browsers).",
      "parentUuid": "22995489_9a47050c",
      "range": {
        "startLine": 1897,
        "startChar": 0,
        "endLine": 1897,
        "endChar": 51
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44b5f8a8_3637a779",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1920,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-03T09:56:43Z",
      "side": 1,
      "message": "Florent, can we as a first step of rolling balanced degradation on the web, do it in a safer way?\n\nCould you please move this |if| 4 lines above, to the default \u0027BALANCED\u0027 case? So that if the user requested balanced, they will get it always, but default value is controlled by the trial.\n\nThe problem with the current set-up is that we can\u0027t experiment in the controlled environment. Everyone with no set defaults will get the BALANCED, once we roll the experiment. \n\nSetting degradation from the client doesn\u0027t make a lot of sense, because with no field trial it will have no effect, but if the trial is there, there\u0027s no need to set the degradation manually in the first place (for default case).\n\nIf you leave this field trial to control only the default value, we could roll the experiment from the front-end.",
      "range": {
        "startLine": 1920,
        "startChar": 2,
        "endLine": 1920,
        "endChar": 4
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc4bc9db_b3f417a7",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1920,
      "author": {
        "id": 5525
      },
      "writtenOn": "2020-03-03T15:26:13Z",
      "side": 1,
      "message": "I agree that it would be preferable to not switch the default at this time. Better to do that later once we know what would be useful good default settings to go with it.",
      "parentUuid": "44b5f8a8_3637a779",
      "range": {
        "startLine": 1920,
        "startChar": 2,
        "endLine": 1920,
        "endChar": 4
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4596bc0c_de07a4d2",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1920,
      "author": {
        "id": 7036
      },
      "writtenOn": "2020-03-04T14:48:55Z",
      "side": 1,
      "message": "Agreed.",
      "parentUuid": "bc4bc9db_b3f417a7",
      "range": {
        "startLine": 1920,
        "startChar": 2,
        "endLine": 1920,
        "endChar": 4
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35eb91bb_b5df8247",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1922,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-02-25T09:12:07Z",
      "side": 1,
      "message": "Can we use parameters_.options.is_screencast here to choose between MAINTAIN_FRAMERATE and MAINTAIN_RESOLUTION to not change any default behavior at all? Like:\n\ndegradation_preference \u003d parameters_.options.is_screencast ? \n                         webrtc::DegradationPreference::MAINTAIN_RESOLUTION : \n                         webrtc::DegradationPreference::MAINTAIN_FRAMERATE;\n\nIt might break, for example, chromoting, which depends only on is_screencast() method of videotrack, which is ultimately propagated to options.is_screencast.",
      "range": {
        "startLine": 1922,
        "startChar": 27,
        "endLine": 1922,
        "endChar": 28
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c396a4_50ff759c",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1922,
      "author": {
        "id": 7036
      },
      "writtenOn": "2020-02-25T13:01:19Z",
      "side": 1,
      "message": "That\u0027s actually done that way.",
      "parentUuid": "35eb91bb_b5df8247",
      "range": {
        "startLine": 1922,
        "startChar": 27,
        "endLine": 1922,
        "endChar": 28
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b272f763_a63127c5",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1922,
      "author": {
        "id": 5525
      },
      "writtenOn": "2020-02-27T13:39:04Z",
      "side": 1,
      "message": "I don\u0027t follow this. Why do we switch to MAINTAIN_FRAMERATE if the preferred degradation is BALANCED and the BalancedDegradation field trial is on? Definitely needs a comment, if it is at all the right thing to do.",
      "parentUuid": "f8c396a4_50ff759c",
      "range": {
        "startLine": 1922,
        "startChar": 27,
        "endLine": 1922,
        "endChar": 28
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0a9d0c7_1e27b873",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1922,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-03T09:56:43Z",
      "side": 1,
      "message": "It\u0027s !IsEnabled() there. We switch to MAINTAIN_FRAMERATE if the experiment is not on.",
      "parentUuid": "b272f763_a63127c5",
      "range": {
        "startLine": 1922,
        "startChar": 27,
        "endLine": 1922,
        "endChar": 28
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41ff447f_3f988ee5",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1922,
      "author": {
        "id": 5525
      },
      "writtenOn": "2020-03-03T15:26:13Z",
      "side": 1,
      "message": "Ah, even if the user requests BALANCED. In some way MAINTAIN_FRAMERATE is a special case of BALANCED, so I think that\u0027s fine for now.",
      "parentUuid": "b0a9d0c7_1e27b873",
      "range": {
        "startLine": 1922,
        "startChar": 27,
        "endLine": 1922,
        "endChar": 28
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a685a1a3_c6b3959b",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1922,
      "author": {
        "id": 7036
      },
      "writtenOn": "2020-03-04T14:48:55Z",
      "side": 1,
      "message": "Correct, this is just to update the internal behavior when the experiment is on while maintaining a correct user facing value.\n\nIf they ask for BALANCED using get/setParameters(), they will see in next getParameters() call that BALANCED is set, but get the MAINTAIN_FRAMERATE behavior (until we release it properly).",
      "parentUuid": "41ff447f_3f988ee5",
      "range": {
        "startLine": 1922,
        "startChar": 27,
        "endLine": 1922,
        "endChar": 28
      },
      "revId": "15b29a7123de57003f49cb18839be82747f6b372",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}