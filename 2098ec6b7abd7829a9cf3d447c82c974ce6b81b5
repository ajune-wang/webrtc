{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "94f66a22_ab017582",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-10-19T16:48:50Z",
      "side": 1,
      "message": "Is it worth it to cache this result in a static local variable?",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a04b271d_573ff5bb",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-10-19T16:59:07Z",
      "side": 1,
      "message": "Current implemenetation is such that it\u0027s essentially querying at least one cached variable; but that could change and we don\u0027t really expect support to change without a restart so sure.",
      "parentUuid": "94f66a22_ab017582",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8355d22d_e9474912",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-10-19T16:48:50Z",
      "side": 1,
      "message": "ISTM that this could also go into pipewire_utils since it\u0027s not in the anonymous namespace and internal to this file.   I don\u0027t feel strongly though.",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8325f85d_461dee3e",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-10-19T16:59:07Z",
      "side": 1,
      "message": "It\u0027s used outside of this file? (screen_capturer_linux, window_capturer_linux). Or am I not understanding your statement about it being internal to this file?",
      "parentUuid": "8355d22d_e9474912",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bd6d20d_2c5fdc27",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-10-19T17:08:51Z",
      "side": 1,
      "message": "Sorry if I was not clear.  It\u0027s not internal to this file, so it can be moved out of it into pipewire_utils.h",
      "parentUuid": "8325f85d_461dee3e",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86b395ba_0926e110",
        "filename": "modules/desktop_capture/linux/wayland/pipewire_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-10-19T16:48:50Z",
      "side": 1,
      "message": "dlopen for pipewire only make sense when running under Wayland, so checking DesktopCapturer::IsRunningUnderWayland() here would prevent accidental initialization under X11.",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61851e4b_86d9473d",
        "filename": "modules/desktop_capture/linux/wayland/pipewire_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-10-19T16:59:07Z",
      "side": 1,
      "message": "IIUC, PipeWire *can* be used on X11, we just don\u0027t have any use cases for it there at the moment, so I\u0027d prefer not to add that check to this generic function.",
      "parentUuid": "86b395ba_0926e110",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c4240ef_26d318ea",
        "filename": "modules/desktop_capture/linux/wayland/pipewire_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-10-19T17:08:51Z",
      "side": 1,
      "message": "I didn\u0027t quite follow.  Is dlopening pipewire under X11 a bug or a feature?\n\nISTM from Chrome\u0027s point of view it\u0027s the former; and it would be helpful for enforce that behavior to prevent future changes from accidentally regressing.",
      "parentUuid": "61851e4b_86d9473d",
      "revId": "2098ec6b7abd7829a9cf3d447c82c974ce6b81b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}