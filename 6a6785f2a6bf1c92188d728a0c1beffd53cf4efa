{
  "comments": [
    {
      "key": {
        "uuid": "27257479_da924b82",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-01-31T12:31:05Z",
      "side": 1,
      "message": "Why do we need to use nogncheck? Is this causing a circular dependency?\n\nSame question about media/base/videocapturer.h and p2p/base/portallocator.h.",
      "range": {
        "startLine": 97,
        "startChar": 68,
        "endLine": 97,
        "endChar": 80
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "141f7fc8_b3a97659",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-01-31T12:36:52Z",
      "side": 1,
      "message": "I\u0027d need to double check, but I think that adding the dependency corresponding to any of those header files results in a circular dependency.",
      "parentUuid": "27257479_da924b82",
      "range": {
        "startLine": 97,
        "startChar": 68,
        "endLine": 97,
        "endChar": 80
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36614696_760d1919",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-01-31T12:42:40Z",
      "side": 1,
      "message": "Ok, I think we should understand if it is possible to untangle these circular dependencies before landing this cl, because nogncheck is a slippery slope.\n\nMaybe we can start with one header and see what happens if we remove nogncheck.",
      "parentUuid": "141f7fc8_b3a97659",
      "range": {
        "startLine": 97,
        "startChar": 68,
        "endLine": 97,
        "endChar": 80
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29520c88_f2934dd0",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-01-31T12:58:37Z",
      "side": 1,
      "message": "For rtc_event_log_factory_interface.h, we get the cycle\n\n  //modules:module_api -\u003e\n  //api:libjingle_peerconnection_api -\u003e\n  //logging:rtc_event_log_api -\u003e\n  //modules/remote_bitrate_estimator:remote_bitrate_estimator -\u003e\n  //modules:module_api\n\nI imagine the right link to break is rtc_event_log_api --\u003e remote_bitrate_estimator.\n\nAlso, the dependency module_api --\u003e libjingle_peerconnection_api look suspicious to me, but I haven\u0027t investigated what goes into module_api.\n\nAs was mentioned in a comment on the related (larger) cl https://webrtc-review.googlesource.com/c/src/+/40360, there\u0027s ongoing work by qingsi@ to reorganize the rtc_event_log_api target. So I hope this will be solved.",
      "parentUuid": "36614696_760d1919",
      "range": {
        "startLine": 97,
        "startChar": 68,
        "endLine": 97,
        "endChar": 80
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "525a2bf7_46d2c97c",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-01-31T14:04:11Z",
      "side": 1,
      "message": "Right, qingsi@ landed https://webrtc-review.googlesource.com/c/src/+/43247 yesterday and it solves the problem. I had to revert it though because of a problem with a downstream project. I am in contact with him to try to re-land.\n\nRegarding module_api --\u003e libjingle_peerconnection_api it is because of api/rtp_headers.h. It is exposed by //api:libjingle_peerconnection_api which can be probably broken in smaller targets to reduce the probability of generating dependency cycles.",
      "parentUuid": "29520c88_f2934dd0",
      "range": {
        "startLine": 97,
        "startChar": 68,
        "endLine": 97,
        "endChar": 80
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93a25f31_8102124a",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-01-31T12:58:37Z",
      "side": 1,
      "message": "Corresponds to the cycle\n\n  //api:libjingle_peerconnection_api -\u003e\n  //media:rtc_media_base -\u003e\n  //p2p:p2p -\u003e\n  //p2p:libstunprober -\u003e\n  //p2p:rtc_p2p -\u003e\n  //api:libjingle_peerconnection_api",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 51
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50aab2ff_daa0cb92",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-01-31T14:04:11Z",
      "side": 1,
      "message": "It look like //p2p:rtc_p2p wants to use:\n- api/umametrics.h\n- api/turncustomizer.h\n- api/candidate.h\n\n(maybe something else).",
      "parentUuid": "93a25f31_8102124a",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 51
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a398a34_00e991f5",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-02-01T09:51:11Z",
      "side": 1,
      "message": "While thinking about the possibility of splitting the libjingle_peerconnection_api target I tried to understand why we need to depend on //media/rtc_media_base and it looks like it is only for cricket::VideoCapturer, but there is a TODO from Taylor and it seems that this should be removed from API: https://cs.chromium.org/chromium/src/third_party/webrtc/api/peerconnectioninterface.h?l\u003d1149\u0026rcl\u003d6daa27815625009de99edf4dfd939f4dcc48362f.\n\nMaybe this can be removed in another CL, before landing this one. Is that doable?",
      "parentUuid": "50aab2ff_daa0cb92",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 51
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db7b700d_331878db",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-02-01T10:18:01Z",
      "side": 1,
      "message": "We have been working hard to migrate from cricket::VideoCapturer to webrtc::VideoTrackSource for application capturers we are aware of.\n\nBut we still use cricket::VideoCapturer internally in webrtc, for WebRtcVideoCapturer (media/engine/). As I understand it, the platform specific implementations from modules/video_capture is wrapped in a cricket::VideoCapturer which is then wrapped in a VideoCapturerTrackSource. So we have several layers of deprecated interfaces here.\n\nThe right way would most likely be to rip out the legacy interfaces and rewrite modules/video_capture/linux/video_capture_linux.cc and friends to implement VideoTrackSourceInterface directly, which is fair amount of work.",
      "parentUuid": "6a398a34_00e991f5",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 51
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "413f109e_c9206f3c",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-02-02T08:20:52Z",
      "side": 1,
      "message": "I see, thanks for the explanation. I am not sure what to do here.\nSplitting //api:libjingle_peerconnection_api into small targets, while it seems the right thing to do, it also seems needed only to workaround problems we are already trying to solve. Do we have a bug for the cricket::VideoCapturer --\u003e webrtc::VideoTrackSource migration?",
      "parentUuid": "db7b700d_331878db",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 99,
        "endChar": 51
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6129913b_477f22d9",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-01-31T12:58:37Z",
      "side": 1,
      "message": "And this is the cycle\n\n  //api:libjingle_peerconnection_api -\u003e\n  //p2p:rtc_p2p -\u003e\n  //api:libjingle_peerconnection_api",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a9b98b_8b05d981",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-01-31T14:04:11Z",
      "side": 1,
      "message": "Same as the previous comment.\n\nI have the feeling that //api:libjingle_peerconnection_api is too big and that it is too easy to depend on it, causing these circular dependencies.",
      "parentUuid": "6129913b_477f22d9",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8467397_9f68f4ca",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-02-01T09:51:11Z",
      "side": 1,
      "message": "Looking more into this... Isn\u0027t cricket::PortAllocator part of the API?\nIt looks like it is a parameter of PeerConnectionFactoryInterface::CreatePeerConnection.",
      "parentUuid": "02a9b98b_8b05d981",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fd5c46e_79640c5c",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-02-01T10:18:01Z",
      "side": 1,
      "message": "I also think it\u0027s part of the api. If I understood Taylor right, typical application use is to create a port BasicPortAllocator with a custom PacketSocketFactory, and it\u0027s desirable to change the PeerConnection interfaces so that the PacketSocketFactory is injectable instead.",
      "parentUuid": "d8467397_9f68f4ca",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ce4e01c_3ccb60a7",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-02-01T19:28:48Z",
      "side": 1,
      "message": "You\u0027re correct; it\u0027s part of the API, and I hope to replace it with just PacketSocketFactory (or something equivalent). In the meantime, is \"nogncheck\" acceptable? If not we could just move portallocator.h to the api directory.",
      "parentUuid": "1fd5c46e_79640c5c",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d70df87_3309ba36",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-02-02T08:20:52Z",
      "side": 1,
      "message": "I would prefer to avoid \"nogncheck\" because it is easy to forget and if that happens it will be difficult to remove in the future (since it will allow dependencies to sneak in).\n\nMoving portallocator.h could be an option, I guess we can try on another CL and see if that is possible.\n\nAnyway, I would like to hear Patrik\u0027s opinion here. He is working hard to untangle circular dependencies and he could have some insights.",
      "parentUuid": "1ce4e01c_3ccb60a7",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "369c36ff_21ed9908",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-02-02T15:34:09Z",
      "side": 1,
      "message": "Yes, the only legit use of //nogncheck is if headers are #ifdef\u0027d such that no cycles are formed; in that case we need to suppress the check because gn --check does not understand #ifdef. Using them to suppress circular dependencies is not OK. If we really, REALLY need to do that it\u0027s better to use check_includes \u003d false and extract a minimal source set with the offending files.\n\nSee https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d8733.\n\nFor removing the current //nogncheck entries: I\u0027ve tried removing them, but most of them are tech debt from when datachannel-only WebRTC were hacked into the codebase. Perhaps we will be able to remove datachannel-only WebRTC in the not too distant future, and then we can clean all the non legit //nogncheck up.",
      "parentUuid": "4d70df87_3309ba36",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b22c1acc_42e718e0",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-02-02T19:14:52Z",
      "side": 1,
      "message": "I think it\u0027s likely we\u0027ll need to continue supporting datachannel-only builds. The right way to remove those \"//nogncheck\"s would be to continue separating the interface from the implementation. For example, MediaEngineInterface should be in a separate target from the implementations, WebRtcVoiceEngine and WebRtcVideoEngine.\n\nOr are there some \"//nogncheck\"s that are more stubborn?",
      "parentUuid": "369c36ff_21ed9908",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90a698d7_f47d738d",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-02-05T10:35:08Z",
      "side": 1,
      "message": "I think Patrik is referring to these: https://cs.chromium.org/chromium/src/third_party/webrtc/sdk/objc/Framework/Classes/PeerConnection/RTCPeerConnectionFactory.mm?l\u003d30\u0026rcl\u003d3ff50fba59cb260067a4e1186b61a4792d4e8bb2.",
      "parentUuid": "b22c1acc_42e718e0",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22e9347c_5f1eb59a",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-02-05T22:49:31Z",
      "side": 1,
      "message": "Right, the Obj-C and Java support for data-only builds was more hacked in and may take more work to solve. But I still expected it would eventually be solved by sufficiently modularizing things, and getting rid of the #ifdefs.",
      "parentUuid": "90a698d7_f47d738d",
      "range": {
        "startLine": 100,
        "startChar": 40,
        "endLine": 100,
        "endChar": 49
      },
      "revId": "6a6785f2a6bf1c92188d728a0c1beffd53cf4efa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}