{
  "comments": [
    {
      "key": {
        "uuid": "355e3733_389f0b23",
        "filename": "test/scenario/network/network_emulation.cc",
        "patchSetId": 6
      },
      "lineNbr": 214,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-09T15:17:49Z",
      "side": 1,
      "message": "Could we do the posting to network thread in the socket class rather than here?",
      "range": {
        "startLine": 214,
        "startChar": 6,
        "endLine": 214,
        "endChar": 21
      },
      "revId": "de42004698952a8ff9d1c9dd57fd160eaa8df25e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13fe459d_bdba0b0f",
        "filename": "test/scenario/network/network_emulation.cc",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-09T15:17:49Z",
      "side": 1,
      "message": "If you really want to do move rather than copy, you can make a local movable closure with a struct:\n\nstruct ForwardPacket {\nvoid operator()(){\n socket-\u003eOnPacketReceived(std::move(packet));\n}\nFakeNetworkSocket* socket;\nEmulatedIpPacket packet;\n};\nnetwork_thread_-\u003eInvoke\u003cvoid\u003e(\n        RTC_FROM_HERE,ForwardPacket{socket, std::move(packet)});",
      "range": {
        "startLine": 215,
        "startChar": 3,
        "endLine": 217,
        "endChar": 73
      },
      "revId": "de42004698952a8ff9d1c9dd57fd160eaa8df25e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f988c0e1_988bd797",
        "filename": "test/scenario/network/network_emulation.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-09T15:17:49Z",
      "side": 1,
      "message": "You could let FakeNetworkSocket implement EmulatedNetworkReceiverInterface and use that in EndpointNode, right? Then you can also delete the #include in the cc file.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 24
      },
      "revId": "de42004698952a8ff9d1c9dd57fd160eaa8df25e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a0efe6f_4cf8b812",
        "filename": "test/scenario/network/network_emulation.h",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-09T15:17:49Z",
      "side": 1,
      "message": "Nothing inherits from this class, should these could be private right?",
      "range": {
        "startLine": 146,
        "startChar": 1,
        "endLine": 146,
        "endChar": 10
      },
      "revId": "de42004698952a8ff9d1c9dd57fd160eaa8df25e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72085e67_e8df5e00",
        "filename": "test/scenario/network/network_emulation.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-09T15:17:49Z",
      "side": 1,
      "message": "Shouldn\u0027t there be a mapping rtc::IPAddress-\u003euint64_t for endpoint IDs?",
      "range": {
        "startLine": 148,
        "startChar": 7,
        "endLine": 148,
        "endChar": 29
      },
      "revId": "de42004698952a8ff9d1c9dd57fd160eaa8df25e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}