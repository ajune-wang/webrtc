{
  "comments": [
    {
      "key": {
        "uuid": "361e0b58_28d894db",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "absl::optional\u003cint\u003e?",
      "range": {
        "startLine": 29,
        "startChar": 55,
        "endLine": 30,
        "endChar": 30
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40dd136a_af15852b",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "on a second thought... I do not need that feature for now.\nThe periodic task I plan to use it for always ask to reschedule itself.\n\nso better not to add it until it is actually needed.\n(with a bit of template magic it should be possible to support both int and optional\u003cint\u003e as return type)",
      "parentUuid": "361e0b58_28d894db",
      "range": {
        "startLine": 29,
        "startChar": 55,
        "endLine": 30,
        "endChar": 30
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94d2652c_d28e73a5",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-31T09:46:09Z",
      "side": 1,
      "message": "OK. Since int converts implicitly to optional\u003cint\u003e, I guess that will happen almost automatically.",
      "parentUuid": "40dd136a_af15852b",
      "range": {
        "startLine": 29,
        "startChar": 55,
        "endLine": 30,
        "endChar": 30
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28c0566f_5c9ffeda",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "How can this possibly work? Is `this` owned by raw pointer when `Run` is called, and leaked afterwards?",
      "range": {
        "startLine": 46,
        "startChar": 37,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "328be8a1_e20ce345",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "That is how reposting same task to TaskQueue works (see PostAndReuse in task_queue_unittest):\nreturning \u0027true\u0027 means TaskQueue still owns this Task and will delete it.\nreturn \u0027false\u0027 means Task took ownership of itself.",
      "parentUuid": "28c0566f_5c9ffeda",
      "range": {
        "startLine": 46,
        "startChar": 37,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93a1909a_abff262b",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-31T09:46:09Z",
      "side": 1,
      "message": "OK. Then please document this on the lines where you return. E.g.\n\n  return true;  // Caller retains ownership of `this`, and will destroy it.\n\n  return false;  // Caller will relinquish ownership of `this`.\n\nIt\u0027s still icky, because for a brief moment `this` is uniquely owned both by the caller and by the unique_ptr we send to Post(Delayed)Task.",
      "parentUuid": "328be8a1_e20ce345",
      "range": {
        "startLine": 46,
        "startChar": 37,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02bc32cb_34f2970e",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-31T11:51:47Z",
      "side": 1,
      "message": "Added comments, also added helper variable.\n\nYep, that part of TaskQueue is weird.\nhopefully this class allows to create Periodic tasks without need to worry about TaskQueue::Run return value.",
      "parentUuid": "93a1909a_abff262b",
      "range": {
        "startLine": 46,
        "startChar": 37,
        "endLine": 46,
        "endChar": 59
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76871adf_f2a808fa",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "Put this class in an implementation namespace, e.g. rtc::cancelable_periodic_task_impl?",
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee7b73b2_b9fc2747",
        "filename": "rtc_base/cancelable_periodic_task.h",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "Done.\n(except using suffix \u0027internal\u0027 http://go/totw/56 )",
      "parentUuid": "76871adf_f2a808fa",
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6db14c1_2831cbab",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "You don\u0027t actually check that it does nothing.",
      "range": {
        "startLine": 64,
        "startChar": 55,
        "endLine": 64,
        "endChar": 66
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9aef8e6_a2577285",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "renamed (checking it doesn\u0027t crash and documenting it is valid)",
      "parentUuid": "f6db14c1_2831cbab",
      "range": {
        "startLine": 64,
        "startChar": 55,
        "endLine": 64,
        "endChar": 66
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c88f233_3703510d",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "Runs\n\nYou have several more of these below.",
      "range": {
        "startLine": 69,
        "startChar": 51,
        "endLine": 69,
        "endChar": 54
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89a4855e_2fb6c0c6",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 69,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c88f233_3703510d",
      "range": {
        "startLine": 69,
        "startChar": 51,
        "endLine": 69,
        "endChar": 54
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a03ca3f8_a03670da",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "It looks like this method should be named `GetCancellantionHandle`. Because it returns a new handle that can be used to cancel the task.",
      "range": {
        "startLine": 78,
        "startChar": 45,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "668bb071_d6e26215",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a03ca3f8_a03670da",
      "range": {
        "startLine": 78,
        "startChar": 45,
        "endLine": 78,
        "endChar": 63
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad7b185_df089dcb",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "Reposts",
      "range": {
        "startLine": 117,
        "startChar": 48,
        "endLine": 117,
        "endChar": 55
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c39d1e88_a35a93a7",
        "filename": "rtc_base/cancelable_periodic_task_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad7b185_df089dcb",
      "range": {
        "startLine": 117,
        "startChar": 48,
        "endLine": 117,
        "endChar": 55
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5b9fd23_917cd7df",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "Do you mean \"handle\"?",
      "range": {
        "startLine": 21,
        "startChar": 49,
        "endLine": 21,
        "endChar": 56
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f617e26_4319b4bb",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "Done.\nI\u0027m not too sure what the difference between \u0027handle\u0027 and \u0027handler\u0027\nRenamed everywhere to \u0027handle\u0027 (at least it is shorter)",
      "parentUuid": "f5b9fd23_917cd7df",
      "range": {
        "startLine": 21,
        "startChar": 49,
        "endLine": 21,
        "endChar": 56
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f751e587_7397eae8",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-31T09:46:09Z",
      "side": 1,
      "message": "\"Handle\" traditionally means something like a unique integer or something similar that you get from an API as a means to refer to something; the API promises nothing about this value except that it can be used to refer to that something when you\u0027re talking to the API. Often, handles are just pointers under the hood. Unix file handles are one example, although since their integer nature is exposed in several ways, they arguably aren\u0027t a \"clean\" example of handles.\n\nCancelableTaskHandler isn\u0027t technically just a copyable blob, but the user can treat it just as if it were (specifically, the user can copy it, and get rid of it when they no longer plan to use it), which is why I find it reasonable to call it a \"handle\".\n\nA \"handler\" on the other hand brings to mind some class that manages some resource. In particular, I would not expect a handler to be copyable.\n\nThat\u0027s my 2 cents on the matter.",
      "parentUuid": "8f617e26_4319b4bb",
      "range": {
        "startLine": 21,
        "startChar": 49,
        "endLine": 21,
        "endChar": 56
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f25c4048_f7905217",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-31T11:51:47Z",
      "side": 1,
      "message": "Thank you,\nyep, I want CancelableTaskHandle be a Handle\n\nCancel function spoils it a bit. but looking at alternatives:\nstatic rtc::BaseCancelableTask::Cancel(const CancelableTaskHandle\u0026 handle);\nrtc::CancelTask(const CancelableTaskHandle\u0026 handle);\n\nI think it is still better to have it as member function.",
      "parentUuid": "f751e587_7397eae8",
      "range": {
        "startLine": 21,
        "startChar": 49,
        "endLine": 21,
        "endChar": 56
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "163ef89b_367ed09a",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-29T07:34:36Z",
      "side": 1,
      "message": "Even in US English, this word is most commonly spelled with two l\u0027s.",
      "range": {
        "startLine": 42,
        "startChar": 48,
        "endLine": 42,
        "endChar": 49
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7da38193_c6e6e04e",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-29T11:05:34Z",
      "side": 1,
      "message": "Done, thank you.\n(wouldn\u0027t guess that canellation use double \u0027l\u0027 while cancelable doesn\u0027t double it (still has two))",
      "parentUuid": "163ef89b_367ed09a",
      "range": {
        "startLine": 42,
        "startChar": 48,
        "endLine": 42,
        "endChar": 49
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "860bee90_f30c70b9",
        "filename": "rtc_base/cancelable_task_handler.h",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-31T09:46:09Z",
      "side": 1,
      "message": "Yeah, the only way to spell English correctly is to learn every word individually...",
      "parentUuid": "7da38193_c6e6e04e",
      "range": {
        "startLine": 42,
        "startChar": 48,
        "endLine": 42,
        "endChar": 49
      },
      "revId": "168f26932bc6a197a5677880d400b6f897d8eae0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}