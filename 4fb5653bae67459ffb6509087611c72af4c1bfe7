{
  "comments": [
    {
      "key": {
        "uuid": "88235d6e_95975ca9",
        "filename": "modules/rtp_rtcp/source/receive_statistics_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-08-02T08:57:45Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Casting\n\n\"Do not use C-style casts.\"\n(for this case use brace initialization)",
      "range": {
        "startLine": 314,
        "startChar": 15,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "4fb5653bae67459ffb6509087611c72af4c1bfe7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3500114_48f028ea",
        "filename": "modules/rtp_rtcp/source/receive_statistics_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-08-02T08:57:45Z",
      "side": 1,
      "message": "though right now cumulative_loss is always positive, according to spec it might be negative too.",
      "range": {
        "startLine": 314,
        "startChar": 24,
        "endLine": 314,
        "endChar": 40
      },
      "revId": "4fb5653bae67459ffb6509087611c72af4c1bfe7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db571d21_afc95ae9",
        "filename": "modules/rtp_rtcp/source/receive_statistics_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-02T09:16:47Z",
      "side": 1,
      "message": "Done. Just back from vacation...",
      "parentUuid": "88235d6e_95975ca9",
      "range": {
        "startLine": 314,
        "startChar": 15,
        "endLine": 314,
        "endChar": 24
      },
      "revId": "4fb5653bae67459ffb6509087611c72af4c1bfe7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "374c0062_f7b6fe33",
        "filename": "modules/rtp_rtcp/source/receive_statistics_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 314,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-02T09:16:47Z",
      "side": 1,
      "message": "Added comment. The cast converts from uint32_t to int64_t, which will always be non-negative.",
      "parentUuid": "e3500114_48f028ea",
      "range": {
        "startLine": 314,
        "startChar": 24,
        "endLine": 314,
        "endChar": 40
      },
      "revId": "4fb5653bae67459ffb6509087611c72af4c1bfe7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3621f9c9_2172f77f",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 4
      },
      "lineNbr": 290,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-01T16:06:16Z",
      "side": 1,
      "message": "This Stop() call makes me a little confused. It means that if Stop is called explicitly by the user of this class it will be called twice. Also, the implementation of stop uses the flag |decoder_running_| to exclude some but not all of what it is doing if it is called a second time.\n\nIt would be clearer to either (i) require that Stop is called exactly once, or (ii) allow multiple calls, but arrange so all but the first call do nothing at all.\n\nIn this cl, I had to put the UpdateHistograms inside the block protected by |decoder_running_|, without that, some test failed due to getting more histogram samples than expected.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 290,
        "endChar": 9
      },
      "revId": "4fb5653bae67459ffb6509087611c72af4c1bfe7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}