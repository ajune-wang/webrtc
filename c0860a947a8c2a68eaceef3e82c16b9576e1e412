{
  "comments": [
    {
      "key": {
        "uuid": "529e3bbe_b2b54f22",
        "filename": "api/video/adaptation_counters.cc",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-03-27T12:07:18Z",
      "side": 1,
      "message": "Is this method really needed? Can it underflow? If not, consider adding DCHECKs.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 1
      },
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35707f3a_601bef77",
        "filename": "api/video/adaptation_counters.cc",
        "patchSetId": 8
      },
      "lineNbr": 36,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-27T12:30:13Z",
      "side": 1,
      "message": "It can underflow. It is used for converting the total adaptations to the \"active counts\". It is not strictly needed, but makes the accounting.",
      "parentUuid": "529e3bbe_b2b54f22",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 36,
        "endChar": 1
      },
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c13b417_9c66ae04",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-03-30T08:53:59Z",
      "side": 1,
      "message": "Feels a bit unfortunate to hard-code these modes into the API, but perhaps it can be a somewhat temporary measure?",
      "range": {
        "startLine": 84,
        "startChar": 6,
        "endLine": 86,
        "endChar": 34
      },
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce878240_1178c449",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-30T09:26:42Z",
      "side": 1,
      "message": "Agree here. It was exposed before but indirectly. It was the caller\u0027s responsibility to null out the stats that they couldn\u0027t affect. I could change this API to make it less implementation detaily, but allowing the enumeration of all \u003creason, scaling\u003e pairs that are allowed as the input here. I don\u0027t know if that is worth doing or not.",
      "parentUuid": "9c13b417_9c66ae04",
      "range": {
        "startLine": 84,
        "startChar": 6,
        "endLine": 86,
        "endChar": 34
      },
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ba58ab_5d384ecf",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 8
      },
      "lineNbr": 713,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-03-30T08:53:59Z",
      "side": 1,
      "message": "Can it have a 0 value? If so .value_or(0) \u003e 0 might be better?\n(same below)",
      "range": {
        "startLine": 713,
        "startChar": 65,
        "endLine": 713,
        "endChar": 74
      },
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ca4a245_399766bb",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 8
      },
      "lineNbr": 713,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-30T09:26:42Z",
      "side": 1,
      "message": "I am not sure of the original intention, but it seems it was checking to see if the scaling was enabled. Before that was the same as downscales \u003d\u003d -1. The equivalent today is if the masked value is absent.",
      "parentUuid": "01ba58ab_5d384ecf",
      "range": {
        "startLine": 713,
        "startChar": 65,
        "endLine": 713,
        "endChar": 74
      },
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0360f707_fb075467",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 8
      },
      "lineNbr": 1094,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-26T16:32:37Z",
      "side": 1,
      "message": "nit: Accidental {}? They\u0027re around the method call not the whole case.",
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cee8d0c_2856a855",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 8
      },
      "lineNbr": 1094,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-27T09:08:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0360f707_fb075467",
      "revId": "c0860a947a8c2a68eaceef3e82c16b9576e1e412",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}