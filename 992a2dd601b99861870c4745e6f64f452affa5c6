{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0038cce7_e8548bda",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-20T22:26:37Z",
      "side": 1,
      "message": "Do we care about the stats on the client end or the remote end? ISTM that this would support client stats; but that we may care more about/want to add data more on the server end?\n\nAlso worth noting that because they aren\u0027t in this repo, the variation in Mac capturers will also be left out...",
      "range": {
        "startLine": 11,
        "startChar": 15,
        "endLine": 11,
        "endChar": 47
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "831dae6f_021f4a8a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T17:46:57Z",
      "side": 1,
      "message": "What additional data are you thinking of?  For our purposes the capturer ID is added to the frame stats which are sent to the client (which is the remote end from the perspective of this code) and logged there along with capture, encode, and network round-trip times per frame.\n\nMac isn\u0027t a focus at the moment so I\u0027d prefer to prioritize the Linux capturers and then revisit Mac when I\u0027m looking into optimizing that capture path.",
      "parentUuid": "0038cce7_e8548bda",
      "range": {
        "startLine": 11,
        "startChar": 15,
        "endLine": 11,
        "endChar": 47
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dde1b7d_8853420f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-23T18:01:49Z",
      "side": 1,
      "message": "Sorry, I guess my question was more along the lines of: Does it make sense to send this data back from the remote machine/machine being remoted into to the machine the user is actually at for that machine to log the data, or should the remote machine just log the data up itself?",
      "parentUuid": "831dae6f_021f4a8a",
      "range": {
        "startLine": 11,
        "startChar": 15,
        "endLine": 11,
        "endChar": 47
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9648081_f462f9b9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T20:04:58Z",
      "side": 1,
      "message": "At the moment it makes sense to log it at the client as we don\u0027t log anything from the host (remote machine) today and the client is the only endpoint in a position to log round-trip times.",
      "parentUuid": "7dde1b7d_8853420f",
      "range": {
        "startLine": 11,
        "startChar": 15,
        "endLine": 11,
        "endChar": 47
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2033107e_8326a255",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-20T21:42:59Z",
      "side": 1,
      "message": "PTAL!",
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8de0ea6d_89ce3860",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-20T22:26:37Z",
      "side": 1,
      "message": "There\u0027s some interop here that seems a bit odd. Do you have context for some of the legacy usage/compat? Can you explain the side that you\u0027re trying to collect metrics from?\n\nI guess it makes some sense to differentiate the frame source for the Windows capturers which utilize a chain of fallbacks; but for the two linux capturers, they won\u0027t change mid-stream...",
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2986a3bf_28854455",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T17:46:57Z",
      "side": 1,
      "message": "I dropped the changes to the desktop_capture_metrics_helper file.  I think that file is incorrectly named as after looking at your comments it is very much geared towards Windows and should have been named as such.  I don\u0027t think there is any value in adding the Linux capturers there.",
      "parentUuid": "8de0ea6d_89ce3860",
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f296fc2e_cb6511bd",
        "filename": "modules/desktop_capture/desktop_capture_metrics_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-20T22:26:37Z",
      "side": 1,
      "message": "I think we should probably just take a page out of the \"WgcCapturerWin\" book and not designate this as a ScreenCapturer since it can do multiple things.",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 29
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0d8d62e_f71c7453",
        "filename": "modules/desktop_capture/desktop_capture_metrics_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T17:46:57Z",
      "side": 1,
      "message": "Done, but in the other file since I\u0027ve reverted this one.",
      "parentUuid": "f296fc2e_cb6511bd",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 29
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce35b9bd_2ea1d9f9",
        "filename": "modules/desktop_capture/desktop_capture_metrics_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-20T22:26:37Z",
      "side": 1,
      "message": "If we, for example, add another Windows value later this enum will just end up sparse then. I don\u0027t think there\u0027s any harm in still passing the same kMaxValue if we do think we need to update this enum. It also seems like something that may be somewhat tricky to track.",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 14
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbb9bf28_b974796a",
        "filename": "modules/desktop_capture/desktop_capture_metrics_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T17:46:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ce35b9bd_2ea1d9f9",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 14
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "047b5bfd_f86c9eef",
        "filename": "modules/desktop_capture/desktop_capture_metrics_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-20T22:26:37Z",
      "side": 1,
      "message": "Given that this logs the \"Win\" version of a metric; I expect we actually don\u0027t want to log these values through this method. (which unfortunately is somewhat generically named) We probably don\u0027t want to lose the data associated with the Win metric (because I\u0027m currently using it for the WGC roll-out, after which it will likely be removed), but if we did want to log out any capturer type in a single enum this would probably be a good place to do so.\n\nDo you know where this DesktopFrame::capturer_id() is used today? Would it be possible to maybe change it from an int to a more structured enum?",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 62,
        "endChar": 12
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0ac74f9_4790b3fc",
        "filename": "modules/desktop_capture/desktop_capture_metrics_helper.cc",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T17:46:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "047b5bfd_f86c9eef",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 62,
        "endChar": 12
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "123d1240_a4cafe6e",
        "filename": "modules/desktop_capture/desktop_capture_types.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-20T22:26:37Z",
      "side": 1,
      "message": "It seems to me that this method was intended for legacy compat of the existing GDI/DXGI enums, but that it perhaps should not be used anymore. (I don\u0027t think these values actually are in-sync with the SequentialDesktopCapturerId values either, per the comment above it though I guess RecordCapturerImpl does a translation). It\u0027s a bit hard to figure out what these values would work out to to avoid a collision. Do we know the legacy compat that this is solving?",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 63,
        "endChar": 57
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37655c27_9b64849b",
        "filename": "modules/desktop_capture/desktop_capture_types.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T17:46:57Z",
      "side": 1,
      "message": "I\u0027m not sure there is a legacy compat issue to be resolved.  The CRD client unpacks the FourCC value and includes it in the frame stats and telemetry so it makes life simpler for us to use it (rather than introducing an enum that we need to keep in sync with the WebRTC constants).\n\nUnless we expect a large number of capturers to be added, I don\u0027t think there is a concern around conflicting IDs when using FourCC.",
      "parentUuid": "123d1240_a4cafe6e",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 63,
        "endChar": 57
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7c1a752_1ce876cd",
        "filename": "modules/desktop_capture/desktop_capture_types.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-23T18:01:49Z",
      "side": 1,
      "message": "I\u0027m specifically asking about the comment at the top of the DesktopCapturerId namespace:\n```\n// `kScreenCapturerWinGdi` and `kScreenCapturerWinDirectx` values are preserved\n// to maintain compatibility\n```\n\nAnd the use of FourCC versus just manually assigning the next available int instead of using FourCC; that way we have some readable value and could theoretically drop it in to a regular enum in the future; which I don\u0027t think FourCC really lets us do?\n\nOr are you saying the benefit of this FourCC value is that because it encodes 4 characters you can decode it back to a string in CRD and that\u0027s the benefit to you rather than introducing an enum? IF it\u0027s just for logging purposes, that\u0027s fine, but if you do/want to do any kind of logic off of it, you still need to refer to a WebRTC constant.",
      "parentUuid": "37655c27_9b64849b",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 63,
        "endChar": 57
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8daae448_c1605c09",
        "filename": "modules/desktop_capture/desktop_capture_types.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T20:04:58Z",
      "side": 1,
      "message": "It looks like that comment was introduced in this commit:\nhttps://webrtc-review.googlesource.com/c/src/+/214060 and was because they didn\u0027t care about having the char packed id (the author used sequential IDs because of the metric they were logging) however they then introduced the Win-specific sequential ids and metrics and left the comment.\n\nThe ID is used for logging, I can provide a link out-of-band if you\u0027d like to see the code (it decodes the fourcc value and logs the metric).\n\nI guess from my perspective, the original values (GDI/DXGI) used FourCC then someone made a patch with sequential IDs (note that there isn\u0027t anything preventing overlap since they are unrelated constants) instead of following the previous pattern.  The values are uint32_t so whether it is a sequential ID or char packed it takes up the same amount of space.",
      "parentUuid": "a7c1a752_1ce876cd",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 63,
        "endChar": 57
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c8d43ce_33a870d3",
        "filename": "modules/desktop_capture/desktop_capture_types.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-09-23T20:32:15Z",
      "side": 1,
      "message": "Right; however, the packed value would only be suitable for determining what metric value to log out (or providing a string to log out), vs. having an assigned uint32_t which can *be* the metric value that is logged out.\n\nIt feels like the packed value is just a way to side-step needing to take a dependency by having two separately maintained \"lists\"/\"sets\" of strings, which could also be accomplished with two separately maintained \"lists\" of ints (though preferably we would just take a further dependency on a more stable type).\n\nDo you mind sending me the pointer?",
      "parentUuid": "8daae448_c1605c09",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 63,
        "endChar": 57
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6010e8f0_d1235254",
        "filename": "modules/desktop_capture/desktop_capture_types.h",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 13849
      },
      "writtenOn": "2022-09-23T20:47:01Z",
      "side": 1,
      "message": "I sent you the link OOB.\n\nIn my mind these IDs were meant for logging, not branching but the person that added the newer Windows IDs decided to use them for UMA instead.  If you feel strongly that they should be sequential instead then that\u0027s fine but we will have to treat the original values one way and the newer values another.",
      "parentUuid": "2c8d43ce_33a870d3",
      "range": {
        "startLine": 63,
        "startChar": 45,
        "endLine": 63,
        "endChar": 57
      },
      "revId": "992a2dd601b99861870c4745e6f64f452affa5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}