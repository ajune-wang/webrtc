{
  "comments": [
    {
      "key": {
        "uuid": "f7fafe27_cb2e3e14",
        "filename": "api/jsep.cc",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "I believe this is safe to land without accidentally exposing it to blink, since there\u0027s an IDL type-check for RTCSdpType and \"rollback\" is not listed here:\nhttps://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/peerconnection/rtc_session_description.idl?type\u003dcs\u0026q\u003dRTCSdpType+f:idl\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d34",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcd26b15_2bea45d4",
        "filename": "api/jsep.cc",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "If there is testcase for implicit rollback then that may start to give unexpected result though.",
      "parentUuid": "f7fafe27_cb2e3e14",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76d3a860_3a7e9d91",
        "filename": "api/jsep.cc",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T13:26:52Z",
      "side": 1,
      "message": "Oh, right. If landing this CL causes implicit rollback to be shipped in chromium I think we should guard against that before we think we\u0027re ready.\n\nI would have suggested to do this by looking at the signaling state in blink and throwing if it would have caused implicit rollback, but this could maybe cause edge-case differences because blink is on the main thread and webrtc is on the signaling thread (so the signaling state might not be up-to-date in some unintuitive edge-cases).\n\nThis could be addressed in the content namespace (chromium), but it might be easier to simply add a flag in this CL to RTCConfiguration that enables or disables implicit rollback, and make sure that when chromium uses the PC the feature is turned off (for now).\n\nWhen we\u0027re ready to ship, the shipping CL can be a simple switch.",
      "parentUuid": "fcd26b15_2bea45d4",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b624e515_0be52135",
        "filename": "api/jsep.cc",
        "patchSetId": 8
      },
      "lineNbr": 68,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-09T15:30:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76d3a860_3a7e9d91",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9988c246_03b422c8",
        "filename": "pc/jsep_session_description.cc",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "This logic seems suspicious; if SdpDeserialize fails for any reason, and SdpType is kRollback, the result will be that we return std::move(jsep_desc), which could be anything (no guarantee on error).\nInstead write as \"if (sdp !\u003d \"\" \u0026\u0026 type \u003d\u003d SdpType::kRollback) { report error \u0026 return nullptr } else SdpDeserialize(....)\"",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50f2ae21_8b9e4013",
        "filename": "pc/jsep_session_description.cc",
        "patchSetId": 8
      },
      "lineNbr": 156,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9988c246_03b422c8",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a8f9df7_e7d1a918",
        "filename": "pc/jsep_transport_controller.h",
        "patchSetId": 8
      },
      "lineNbr": 243,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "Unless I\u0027m mistaken, can you add a TODO comment saying that it should be possible to roll back the state of a transport to a previous snapshot but that we only support removing it?",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce3c130a_79d22312",
        "filename": "pc/jsep_transport_controller.h",
        "patchSetId": 8
      },
      "lineNbr": 243,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a8f9df7_e7d1a918",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "020ea089_a819dc8a",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 8
      },
      "lineNbr": 7808,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "I\u0027m puzzled. This seems to me to destroy all transceivers for which a stable state existed, but to leave untouched the transceivers that have been created as part of the SLD/SRD that is being rolled back. This is contrary to what I\u0027d expect.\n\nWhere\u0027s the code that destroys / detaches newly added transceivers?",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1125a5e8_4d2adaee",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 8
      },
      "lineNbr": 7808,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Well, transceiver_stable_states_by_transceivers_ holds only stable states for modified transceivers. Actual deleting of transceiver happens under \u0027state.created()\u0027 condition.",
      "parentUuid": "020ea089_a819dc8a",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59c37490_e0c3475f",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 8
      },
      "lineNbr": 7819,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "Interesting... with this, the following sender could still be rolled back:\n\nsender \u003d pc.addTrack(track);\nsender.replaceTrack(null);  // maybe the \"mute\" button is pressed...\n\u003crollback\u003e\nsender.replaceTrack(track);  // \"unmute\", but the sender is no longer valid!\n\nHowever, if we only look at \"did addTrack get called?\" then the following would also be rolled back:\n\ntransceiver.sender.replaceTrack(track);\n\nI think the spec is under-specified here. Probably the right thing to do is \"if the sender has ever had a track, whether through addTrack or replaceTrack, then don\u0027t roll it back even if it\u0027s currently null\". What if some other property of the transceiver is modified, like the direction? I don\u0027t know.\n\nI\u0027m not proposing any changes to this CL until the spec gives is more guidance. I think the current code covers most cases and I asked here:\nhttps://github.com/w3c/webrtc-pc/issues/2324#issuecomment-539044177",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2df97fd_4a6714fb",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 8
      },
      "lineNbr": 7819,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "59c37490_e0c3475f",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a8de6b1_269313f7",
        "filename": "pc/peer_connection.h",
        "patchSetId": 8
      },
      "lineNbr": 389,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "Are you sure this needs to be a struct? In general I prefer to go with classes with accessors - especially for things like this, which are created in one place and only read afterwards.",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9343acf2_f893c73c",
        "filename": "pc/peer_connection.h",
        "patchSetId": 8
      },
      "lineNbr": 389,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Didn\u0027t have a preference. Just noticed other structs there.",
      "parentUuid": "2a8de6b1_269313f7",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7ef3919_2d335270",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 8
      },
      "lineNbr": 5494,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "nit: srd_observer",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24f14882_90666525",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 8
      },
      "lineNbr": 5494,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c7ef3919_2d335270",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5025ea65_a6e34264",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 8
      },
      "lineNbr": 5496,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "There\u0027s no call to \"rollback\" in this test (or I missed it). If you\u0027re testing automatic rollback, please change the test to \"AutomaticRollbackVisitsStableState\".",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bccf650f_59a13766",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 8
      },
      "lineNbr": 5496,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5025ea65_a6e34264",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19602316_1a99f9f4",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1748,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "micro-nit: In the two tests that explicitly say \"InUnifiedPlan\" or \"InPlanB\", can you explicitly set the sdp_semantics member of RTCConfiguration being passed instead of relying on defaults? But don\u0027t bother in the remaining tests.",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5fca531_212c13f0",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1748,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19602316_1a99f9f4",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52c6de0e_742baa22",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1790,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "Can you add a test that says that the PC is functional after a rollback?\nIE \"create connection, SLD(offer that removes a track), rollback, check that media still flows\"?",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9445ac46_6f4030d0",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1790,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Added AudioKeepsFlowingAfterImplicitRollback.",
      "parentUuid": "52c6de0e_742baa22",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0eb1a21_b71fcfc0",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1827,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "Can you add the same test but instead of \"pc.addTrack\" you do \"sender.replaceTrack\"?",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ba4b89a_c0bfd8c0",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1827,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "In native API didn\u0027t find replaceTrack. Maybe can add such test in wpt?",
      "parentUuid": "b0eb1a21_b71fcfc0",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a76e14f3_bb369a0f",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1861,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "Here too you\u0027re testing automatic rollback. Please name test accordingly.",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5552422_3b1bf05d",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1861,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a76e14f3_bb369a0f",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e8a47ce_dc3ea924",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1919,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T14:49:09Z",
      "side": 1,
      "message": "Should we have a test, either here or in a follow-up, that checks that if bundling is used and we successfully negotiate so we have a transport, that we if do another offer to create a second m\u003d section to bundle the same transport, that if that m\u003d section gets rolled back, the initial transceiver should still use the same transport? \"Rollback should not damage old m\u003d sections\u0027 transports\"",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80a154a5_d21837cc",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 1919,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "Added bundling in RollbackToNegotiatedStableState. Actually I was expecting that bundling happens by default but wasn\u0027t the case.",
      "parentUuid": "1e8a47ce_dc3ea924",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "744f08f7_90fcc2e7",
        "filename": "pc/sdp_utils.cc",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-08T07:11:20Z",
      "side": 1,
      "message": "Is it OK to leave session_id() and session_version() fields blank when you clone a rollback?\nIf not, initialize the clone with a null description.",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70dd45d3_09ffa255",
        "filename": "pc/sdp_utils.cc",
        "patchSetId": 8
      },
      "lineNbr": 35,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-08T22:34:44Z",
      "side": 1,
      "message": "I think the id and version doesn\u0027t matter for rollback. Only the type of description is used.",
      "parentUuid": "744f08f7_90fcc2e7",
      "revId": "f41e232be2a2391caa4e3a54d86252d5a1ffacb2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}