{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ef0f25a1_788b9ee0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-01T10:37:05Z",
      "side": 1,
      "message": "Sideline comment: JsepTransport is guaranteed to be either sdes mode or dtls mode, there is no way to change between them (and I\u0027d *really* like to get rid of sdes mode, usage is low enough that we may be able to do it soon).\nSo it should be relatively simple to make the dtls_transport_ and sdes_transport_ members const; it\u0027s possible that they may be set to null at some point; it\u0027s also possible that we could just check if they are stopped instead.\n\n\n",
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "288688c7_559d80b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-01T10:50:19Z",
      "side": 1,
      "message": "follow up cl for employing more constness sgtm.",
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30847a58_625039a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-01T10:50:19Z",
      "side": 1,
      "message": "+1\n\nShould we add a TODO for that in this CL before landing?",
      "parentUuid": "ef0f25a1_788b9ee0",
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06cb4215_cda7bf7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-02-01T10:55:52Z",
      "side": 1,
      "message": "What\u0027s unclear to me is if the `accessor_lock_` in this class is intended to only protect the member pointers, or if it\u0027s intended to also protect the pointed-too objects\u0027 internal state (i.e., RTC_PT_GUARDED_BY)?",
      "parentUuid": "288688c7_559d80b2",
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2bd9033c_6f54a87e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-02-01T11:06:58Z",
      "side": 1,
      "message": "Thanks for taking this on! I put an initial discussion comment.",
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1354a9_2f635a91",
        "filename": "rtc_base/synchronization/mutex.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-02-01T11:06:58Z",
      "side": 1,
      "message": "Hmm I propose to drop the change in the Mutex code. I remember we discussed the topic already when it was introduced. The state is actually changed when Lock/Unlock is used, and const is also inconsistent with Abseil mutex semantics.",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 19
      },
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd5f90ab_55220861",
        "filename": "rtc_base/synchronization/mutex.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-02-01T11:11:02Z",
      "side": 1,
      "message": "Lock/unlock certainly is a state change. But how do we then deal with the usecase where we have a member with a const getter called on one thread, and a setter called on a different thread?",
      "parentUuid": "de1354a9_2f635a91",
      "range": {
        "startLine": 41,
        "startChar": 14,
        "endLine": 41,
        "endChar": 19
      },
      "revId": "1c3b068a8f3e3f634ee1d3a582785fb3eacea875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}