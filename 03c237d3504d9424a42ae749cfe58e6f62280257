{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2886393f_a0adc45f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-26T12:57:47Z",
      "side": 1,
      "message": "Danil, PTAL.",
      "revId": "03c237d3504d9424a42ae749cfe58e6f62280257",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bd0961f_3c9ba2bf",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-26T13:09:00Z",
      "side": 1,
      "message": "Maybe mention again this is a dbg build (or RTC_DCHECK_ALWAYS_ON\u003d\u003d1) thing and not a production thing.",
      "range": {
        "startLine": 95,
        "startChar": 55,
        "endLine": 96,
        "endChar": 46
      },
      "revId": "03c237d3504d9424a42ae749cfe58e6f62280257",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "410d870f_e246dd23",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-26T13:14:00Z",
      "side": 1,
      "message": "RTC_DCHECK_IS_ON is mentioned a few lines up. Is that sufficient?",
      "parentUuid": "8bd0961f_3c9ba2bf",
      "range": {
        "startLine": 95,
        "startChar": 55,
        "endLine": 96,
        "endChar": 46
      },
      "revId": "03c237d3504d9424a42ae749cfe58e6f62280257",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e61750b2_1b33d50f",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-26T13:17:00Z",
      "side": 1,
      "message": "For someone randomly reading the comment (e.g. jumping on code search) it might feel strange that we are fine with UB. I would add something between ().",
      "parentUuid": "410d870f_e246dd23",
      "range": {
        "startLine": 95,
        "startChar": 55,
        "endLine": 96,
        "endChar": 46
      },
      "revId": "03c237d3504d9424a42ae749cfe58e6f62280257",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a879dbf8_a1d62145",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 5
      },
      "lineNbr": 96,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-26T13:31:56Z",
      "side": 1,
      "message": "Done. If we\u0027re really concerned about avoiding UB also in the failure case, one compromise might be to use std::atomic with memory_order_relaxed. Leaves the essence of the race, but guarantees that each load sees one of the values that were previously stored (and most likely, *recently* stored), with nothing stranger going on.",
      "parentUuid": "e61750b2_1b33d50f",
      "range": {
        "startLine": 95,
        "startChar": 55,
        "endLine": 96,
        "endChar": 46
      },
      "revId": "03c237d3504d9424a42ae749cfe58e6f62280257",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}