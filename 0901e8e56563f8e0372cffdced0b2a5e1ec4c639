{
  "comments": [
    {
      "key": {
        "uuid": "7e2db6a4_cae8802f",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-20T12:32:00Z",
      "side": 1,
      "message": "\"data produced by the observer\" sounds a bit confusing...\n\nI guess the idea is that the class implementing the observer interface wants to know its bitrate allocation on order to send some RTP packets, and |has_packet_feedback| means that it promises to attach transport sequence numbers to those packets?\n\nIt seems a bit awkward to signal that with this method. Is there any way it could be routed via RtpTransportControllerSend instead? E.g., VideoSendStreamImpl::OnBitrateUpdated should know both if it gets a non-zero bitrate, and if it intends to send transport sequence numbers.\n\nYou had another cl to move the BitrateAllocator to RtpTransportControllerSend, right? Then VideoSendStreamImpl perhaps won\u0027t need direct access to the BitRateAllocator, and its call to AddObserver could be replaced with some call on RtpTransportControllerSendInterface instead, which might make more sense.",
      "range": {
        "startLine": 81,
        "startChar": 48,
        "endLine": 81,
        "endChar": 77
      },
      "revId": "0901e8e56563f8e0372cffdced0b2a5e1ec4c639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad7d67ad_ba2fbfa9",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-20T12:32:00Z",
      "side": 1,
      "message": "spelling",
      "range": {
        "startLine": 81,
        "startChar": 37,
        "endLine": 81,
        "endChar": 43
      },
      "revId": "0901e8e56563f8e0372cffdced0b2a5e1ec4c639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95aea3bd_1fdcb550",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-03-20T12:48:13Z",
      "side": 1,
      "message": "I agree about the design issue. To me it makes sense doing the refactor first. However it adds to the number of CLs that have to land probably making it hard to achieve before DR32 at the normal rate of CL-reviews. WDYT?",
      "parentUuid": "7e2db6a4_cae8802f",
      "range": {
        "startLine": 81,
        "startChar": 48,
        "endLine": 81,
        "endChar": 77
      },
      "revId": "0901e8e56563f8e0372cffdced0b2a5e1ec4c639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be6d61ce_fa6fbace",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-03-20T12:48:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad7d67ad_ba2fbfa9",
      "range": {
        "startLine": 81,
        "startChar": 37,
        "endLine": 81,
        "endChar": 43
      },
      "revId": "0901e8e56563f8e0372cffdced0b2a5e1ec4c639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6e5ab6c_0a8cbfdd",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-03-20T12:51:43Z",
      "side": 1,
      "message": "Regarding the use of \"observer\" to represent a media stream. I do have a patch for that for the BitrateAllocator. However there\u0027s many variables and comments that need to be changed to fix it so it will be a large CL. It would probably take a while to land. I figured I should use \"observer\" as a synonym for allocatable media stream to be consistent with usage in the rest of this file. WDYT?",
      "parentUuid": "95aea3bd_1fdcb550",
      "range": {
        "startLine": 81,
        "startChar": 48,
        "endLine": 81,
        "endChar": 77
      },
      "revId": "0901e8e56563f8e0372cffdced0b2a5e1ec4c639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c631890c_932cf5c3",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 2
      },
      "lineNbr": 81,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-20T12:55:32Z",
      "side": 1,
      "message": "\u003e I agree about the design issue. To me it makes sense doing the refactor first. However it adds to the number of CLs that have to land probably making it hard to achieve before DR32 at the normal rate of CL-reviews. WDYT?\n\nI guess it could make more sense as a temporary hack, if commented properly.\n\nAnd about the TODO below, you probably should *not* update more callers than absolutely necessary, since the argument should be deleted again after moving responsibility to RtpTransportControllerSendInterface. Or make it a separate method, AddObserverAndSignalPacketFeedback (or preferably with a name closer to what the RtpTransportControllerSendInterface method should be).",
      "parentUuid": "95aea3bd_1fdcb550",
      "range": {
        "startLine": 81,
        "startChar": 48,
        "endLine": 81,
        "endChar": 77
      },
      "revId": "0901e8e56563f8e0372cffdced0b2a5e1ec4c639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}