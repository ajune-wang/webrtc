{
  "comments": [
    {
      "key": {
        "uuid": "3fca94ae_f8520fc7",
        "filename": "sdk/android/api/org/webrtc/JavaI420ABuffer.java",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 5098
      },
      "writtenOn": "2018-02-13T10:47:31Z",
      "side": 1,
      "message": "I think we would be able to reuse more code in e.g. JavaI420Buffer.wrap and cropAndScaleI420A and write this with a net reduction in code if you did not inherit from JavaI420Buffer and instead held an instance to a JavaI420Buffer that you delegate to.",
      "range": {
        "startLine": 18,
        "startChar": 14,
        "endLine": 18,
        "endChar": 85
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dc18ec7_05f48091",
        "filename": "sdk/android/api/org/webrtc/JavaI420ABuffer.java",
        "patchSetId": 6
      },
      "lineNbr": 18,
      "author": {
        "id": 5656
      },
      "writtenOn": "2018-02-15T19:26:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3fca94ae_f8520fc7",
      "range": {
        "startLine": 18,
        "startChar": 14,
        "endLine": 18,
        "endChar": 85
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "72ac5b84_21f51820",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-02-13T11:52:49Z",
      "side": 1,
      "message": "I don\u0027t think I420ABuffer should extend I420Buffer.",
      "range": {
        "startLine": 91,
        "startChar": 30,
        "endLine": 91,
        "endChar": 49
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b42caf_0a17a3ae",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 91,
      "author": {
        "id": 5656
      },
      "writtenOn": "2018-02-15T19:26:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "72ac5b84_21f51820",
      "range": {
        "startLine": 91,
        "startChar": 30,
        "endLine": 91,
        "endChar": 49
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3b9a9bf_a810e798",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-02-13T11:52:49Z",
      "side": 1,
      "message": "I think this could be be in I420A buffer implementation.",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 217,
        "endChar": 71
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "194e952f_218da8d1",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 5656
      },
      "writtenOn": "2018-02-15T19:26:48Z",
      "side": 1,
      "message": "I just did things parallel with JavaI420Buffer.\nNot sure whey JavaI420Buffer puts its crop function here.\n\nI can move everything to JavaI420ABuffer, but that way, we will have to add another .cc file to handle the native function call.\n\nWhich way do you prefer?",
      "parentUuid": "b3b9a9bf_a810e798",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 217,
        "endChar": 71
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eae2809d_08413bb4",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-02-16T09:43:49Z",
      "side": 1,
      "message": "Actually, we should just place libyuv::ScalePlane in YuvHelper.java. Then just implement the logic in Java.",
      "parentUuid": "194e952f_218da8d1",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 217,
        "endChar": 71
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f9d261c_78caaad9",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-02-21T07:49:37Z",
      "side": 1,
      "message": "Please address.",
      "parentUuid": "eae2809d_08413bb4",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 217,
        "endChar": 71
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2710ed01_0cbacb39",
        "filename": "sdk/android/api/org/webrtc/VideoFrame.java",
        "patchSetId": 6
      },
      "lineNbr": 217,
      "author": {
        "id": 5656
      },
      "writtenOn": "2018-02-27T23:47:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f9d261c_78caaad9",
      "range": {
        "startLine": 216,
        "startChar": 0,
        "endLine": 217,
        "endChar": 71
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03c43fe9_eed1b858",
        "filename": "sdk/android/src/jni/videoframe.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-02-16T09:43:49Z",
      "side": 1,
      "message": "I am still confused about how you are planning to use this class, can you address magjed\u0027s comment?",
      "range": {
        "startLine": 120,
        "startChar": 6,
        "endLine": 120,
        "endChar": 29
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5e764b7_a74756e5",
        "filename": "sdk/android/src/jni/videoframe.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-02-21T07:49:37Z",
      "side": 1,
      "message": "Please address.",
      "parentUuid": "03c43fe9_eed1b858",
      "range": {
        "startLine": 120,
        "startChar": 6,
        "endLine": 120,
        "endChar": 29
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a36bd53_629cfe46",
        "filename": "sdk/android/src/jni/videoframe.cc",
        "patchSetId": 6
      },
      "lineNbr": 120,
      "author": {
        "id": 5656
      },
      "writtenOn": "2018-02-27T23:47:51Z",
      "side": 1,
      "message": "For android app, say AppRTC, we may apply some segmentation algorithm on the video frame, say AIMatter, which takes in the video frame, and returns a mask array of the same size, where foreground pixel is labelled as 0xFF, and background pixel is labelled as 0. Now we want to stream both the color image and the mask to the remote side. Then we need some place to store the mask on the code path from capturer to the encoder. Naturally, we can store the segmentation result (the mask array) as the alpha channel of the frame.",
      "parentUuid": "b5e764b7_a74756e5",
      "range": {
        "startLine": 120,
        "startChar": 6,
        "endLine": 120,
        "endChar": 29
      },
      "revId": "7acd77a7d98e05b2532891ece11020948d697ff2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}