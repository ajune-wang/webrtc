{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ac1356dc_39976f16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 18829
      },
      "writtenOn": "2022-02-08T16:23:04Z",
      "side": 1,
      "message": "Thanks for the review. I have incorporated the suggestion. Please take another look.",
      "revId": "bae3a00bc88fc77bd8cb1393ec7151ed363d2793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7991e642_d70a5bad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-02-08T17:38:29Z",
      "side": 1,
      "message": "Is there a design doc for this \"remote desktop portal implementation\"?  Are you building another xdg-desktop-portal client?",
      "revId": "bae3a00bc88fc77bd8cb1393ec7151ed363d2793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3104d358_41230858",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-02-08T18:14:06Z",
      "side": 1,
      "message": "Here: https://github.com/flatpak/xdg-desktop-portal/blob/main/data/org.freedesktop.portal.RemoteDesktop.xml\n\nEssentially the remote desktop portal combines screencast portal (the one we use for screensharing) with hooks/callbacks so you can notify the Wayland compositor with mouse/keyboard events.\n\nSo the remote desktop portal implementation is just about connecting mouse/keyboard events from WebRTC to portal calls so the wayland compositor can be notified about those events. This is used for stuff like VNC implementation on Wayland.\n\nHowever, this should not replace screensharing as we have implemented now, because the remote desktop portal involves slightly different dialog, because it asks the user for mouse/keyboard permissions.",
      "parentUuid": "7991e642_d70a5bad",
      "revId": "bae3a00bc88fc77bd8cb1393ec7151ed363d2793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "025acb86_407b8fec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 18829
      },
      "writtenOn": "2022-02-09T15:42:54Z",
      "side": 1,
      "message": "Yes, remote desktop portal implementation is another client that will leverage the xdg desktop portal APIs for both screen capture as well as input injection (needed for CRD connecting to linux/wayland host). If you think the design doc will be good to have, please let me know about what are the expected contents of the doc (class hierarchies/call flow?) as well as pointers to existing design docs in this space (e.g. for screencast portal implementation, if one exists) and I can create one following the set guidance. Thanks.",
      "parentUuid": "3104d358_41230858",
      "revId": "bae3a00bc88fc77bd8cb1393ec7151ed363d2793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}