{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "15ba2c96_7dc15706",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2022-01-28T15:46:58Z",
      "side": 1,
      "message": "LGTM*2",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcaa31be_c024318b",
        "filename": "test/run_loop.h",
        "patchSetId": 24
      },
      "lineNbr": 33,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-29T09:33:27Z",
      "side": 1,
      "message": "can you document the difference between the two flush methods?\nIt would also be good to add a test for it, similar to RunLoopTest.Flush that both tests the correct functionality and helps understand when one would need the \u0027Immediate\u0027 method.",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee9dbb53_d669a80c",
        "filename": "test/run_loop.h",
        "patchSetId": 24
      },
      "lineNbr": 33,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "Looking at this again, I think that the FlushImmediate method could be removed. The real difference is that if there is a test clock, Flush() does not work since the process loop must run either forever or 0ms. Due to the condition   \n\n RTC_DCHECK(GetClockForTesting() \u003d\u003d nullptr || cmsLoop \u003d\u003d 0 || cmsLoop \u003d\u003d \n kForever);\n \nI can perhaps change `Flush()` to instead check `GetClockForTesting` and use 0 for the delay in the case there is a testing clock. WDYT?",
      "parentUuid": "fcaa31be_c024318b",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5748a6b1_fbd0f687",
        "filename": "test/run_loop.h",
        "patchSetId": 24
      },
      "lineNbr": 33,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T10:17:51Z",
      "side": 1,
      "message": "I have implemented this solution and removed FlushImmediate.",
      "parentUuid": "ee9dbb53_d669a80c",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68ff423a_f869d353",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 24
      },
      "lineNbr": 137,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-29T09:33:27Z",
      "side": 1,
      "message": "Class docs?",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12223ace_5b37aa28",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 24
      },
      "lineNbr": 137,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68ff423a_f869d353",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30a227c6_51f46708",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 24
      },
      "lineNbr": 139,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-29T09:33:27Z",
      "side": 1,
      "message": "there\u0027s a lot of logic in this implementation, so I\u0027m going to lean on Philip as the frame buffer expert ðŸ˜Š",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9975b017_3f1a0b57",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 24
      },
      "lineNbr": 139,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "Yes agreed! Once this is merged into VideoReceiveStream2 a lot of things can hopefully be cleaned up",
      "parentUuid": "30a227c6_51f46708",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12e6cf02_5851046d",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 24
      },
      "lineNbr": 512,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-29T09:33:27Z",
      "side": 1,
      "message": "nit: this \u0027else\u0027 isn\u0027t needed since the preceding scope is an early return.\n\nThis pattern:\n\n  int Method() {\n    if (foo) {\n      return Bar();\n    } else {\n      return NotBar();\n    }\n  }\n\nTends to read as if there are three exit paths for the function (as if the return type was void), whereas this makes it clear where the return paths are:\n\n  int Method() {\n    if (foo) {\n      return Bar();\n    }\n    return NotBar();\n  }",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3554be4_edbff924",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 24
      },
      "lineNbr": 512,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12e6cf02_5851046d",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38cb32de_fe110a27",
        "filename": "video/frame_buffer_proxy_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 620,
      "author": {
        "id": 5527
      },
      "writtenOn": "2022-01-28T15:46:58Z",
      "side": 1,
      "message": "Should we keep this test? Keep it if you think it\u0027s useful.",
      "range": {
        "startLine": 620,
        "startChar": 29,
        "endLine": 620,
        "endChar": 49
      },
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "13fe195c_c89225d0",
        "filename": "video/frame_buffer_proxy_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 620,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "It can be removed as it is covered by the following test.",
      "parentUuid": "38cb32de_fe110a27",
      "range": {
        "startLine": 620,
        "startChar": 29,
        "endLine": 620,
        "endChar": 49
      },
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7b84f1a_5f6e83eb",
        "filename": "video/frame_buffer_proxy_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 659,
      "author": {
        "id": 5527
      },
      "writtenOn": "2022-01-28T15:46:58Z",
      "side": 1,
      "message": "nit: WDYT about `VeryLongStreamPause` or `NextFrameWithOldTimestamp`?\n\nnit: Could this test be simplified? Would it be possible to just insert two frames?",
      "range": {
        "startLine": 659,
        "startChar": 29,
        "endLine": 659,
        "endChar": 41
      },
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b09e5262_6c3b4b2c",
        "filename": "video/frame_buffer_proxy_unittest.cc",
        "patchSetId": 24
      },
      "lineNbr": 659,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "You are correct, 2 frames work! I will clean this.",
      "parentUuid": "c7b84f1a_5f6e83eb",
      "range": {
        "startLine": 659,
        "startChar": 29,
        "endLine": 659,
        "endChar": 41
      },
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6aff72d5_d7a859e9",
        "filename": "video/frame_decode_timing.cc",
        "patchSetId": 24
      },
      "lineNbr": 51,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-29T09:33:27Z",
      "side": 1,
      "message": "thanks for using dlog!",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5060b57_c5d1cf16",
        "filename": "video/frame_decode_timing.cc",
        "patchSetId": 24
      },
      "lineNbr": 51,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-31T09:34:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6aff72d5_d7a859e9",
      "revId": "26de07444efcaadbe78dbd5858dbe7bb04f8eab4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}