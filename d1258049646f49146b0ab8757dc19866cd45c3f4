{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "afbb6733_4f71d5f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-01-27T16:44:54Z",
      "side": 1,
      "message": "note: we still need agreement to change the spec",
      "revId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c4d56d69_6792a733",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-29T10:58:52Z",
      "side": 1,
      "message": "Nice discussion in the bug about why we shouldn\u0027t do this, but approving since it is spec conformant.",
      "revId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b164783_dc593fa0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-02-02T21:11:15Z",
      "side": 1,
      "message": "so far it is not spec conformant. The spec would require to check that \u003e 0 bytes have been sent. Not impossible to do with a very similar change but I think that this behavior is improving and does not break.\n\nWill wait for spec issue to come to a conclusion.",
      "parentUuid": "c4d56d69_6792a733",
      "revId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b1f04a_c327b5e2",
        "filename": "pc/rtc_stats_collector_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 2954,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-29T10:58:52Z",
      "side": 1,
      "message": "I know we have a ton of those hardcoded stats IDs in the tests, they are still a Bad Thing. The right thing to check for is that there is a codec stat with a codec_id that matches this id, and that its payload type is 3.\n\nWon\u0027t insist on doing it right in this CL, since all the rest of the code is wrong.",
      "revId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1f94568_bdadc13e",
        "filename": "pc/rtc_stats_collector_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 2954,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-02-02T21:11:15Z",
      "side": 1,
      "message": "lets settle for \"once hbos gets really annoyed and randomizes all ids he\u0027ll have to fix this\"? Trying to not incentivise him ;-)",
      "parentUuid": "d2b1f04a_c327b5e2",
      "revId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a728ae9_bdf9d680",
        "filename": "pc/rtc_stats_collector_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 2954,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-02-03T06:37:49Z",
      "side": 1,
      "message": "Looking forward to breaking everything depending on that...",
      "parentUuid": "f1f94568_bdadc13e",
      "revId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "d1258049646f49146b0ab8757dc19866cd45c3f4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}