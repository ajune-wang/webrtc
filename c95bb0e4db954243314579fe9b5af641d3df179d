{
  "comments": [
    {
      "key": {
        "uuid": "164f19c8_c7c7515d",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 72,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-02-11T15:57:51Z",
      "side": 1,
      "message": "This seems incorrect, it should be 3 or 4, not 160?\n\nAnd I wonder if it is possible to enforce (fail at compile time) when we do not provide the full array contents in the definition?",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 61
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "018b8f9b_c5c7d534",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 72,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-12T21:58:40Z",
      "side": 1,
      "message": "Ouch!!! Good find! \n\nI guess the reason that it was not caught by the compiler is that it produces a larger array?\n\nDone.",
      "parentUuid": "164f19c8_c7c7515d",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 61
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4966713_18ffdc88",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-02-11T15:57:51Z",
      "side": 1,
      "message": "It is a little confusing to pass in -buffer_shift and then negate it _again_ here. Does it make sense to pass in buffer_shift, maybe under the name offset or some such, and instead assign `int shift \u003d -offset` and iterate over `k \u003c offset`?",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 117,
        "endChar": 25
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95e961be_9cbb1627",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 117,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-12T21:58:40Z",
      "side": 1,
      "message": "I agree!\nThis is now changed in the latest patchset.\n\nPTAL",
      "parentUuid": "f4966713_18ffdc88",
      "range": {
        "startLine": 117,
        "startChar": 12,
        "endLine": 117,
        "endChar": 25
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf7dbfbd_02a78008",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-02-11T15:57:51Z",
      "side": 1,
      "message": "What do you think about storing the zero filters as well, and getting rid of this index computation?",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 199,
        "endChar": 68
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4fa6e58_caf5b291",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-12T21:58:40Z",
      "side": 1,
      "message": "We could, but it would increase complexity. \n\nThe index computation is quite cheap.\nBut adding the zero filters would increase complexity by 2/12 ~\u003d 16%.\n\nOne way would be to store the zero filters, but never use them. That would, however, anyway require either a zero filter detection or in index lookup.\n\nI would prefer to keep it like this since\n-It is cheaper\n-This is one of the core computational parts of APM, which \n--is expensive  \n--always active. \n--Has a complexity that scales linearly with the number of input channels.\n\nWDYT?",
      "parentUuid": "bf7dbfbd_02a78008",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 199,
        "endChar": 68
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3edc167_b9bcf42a",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 225,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-02-11T15:57:51Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 225,
        "startChar": 50,
        "endLine": 225,
        "endChar": 51
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3a4f45_5419a877",
        "filename": "modules/audio_processing/three_band_filter_bank.cc",
        "patchSetId": 6
      },
      "lineNbr": 225,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-12T21:58:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3edc167_b9bcf42a",
      "range": {
        "startLine": 225,
        "startChar": 50,
        "endLine": 225,
        "endChar": 51
      },
      "revId": "c95bb0e4db954243314579fe9b5af641d3df179d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}