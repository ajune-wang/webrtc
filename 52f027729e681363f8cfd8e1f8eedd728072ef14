{
  "comments": [
    {
      "key": {
        "uuid": "5612c786_511eeff6",
        "filename": "api/transport/rtp/dependency_descriptor.h",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 5150
      },
      "writtenOn": "2020-06-11T09:57:44Z",
      "side": 1,
      "message": "Is there a reason for this particular number?\n\nAlso, sizeof(DecodeTargetIndication) is compiler defined afaik. What does clang choose in practice? The reason I\u0027m asking is that I\u0027m a bit worried we might end up in a situation where we create a frame dependency structure per packet, each having, say, 16 templates and each template allocates a vector of length 10 where each enum uses 4 bytes. This would give a total of 640 bytes per packet.",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c668965_13af1c25",
        "filename": "api/transport/rtp/dependency_descriptor.h",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-11T10:31:09Z",
      "side": 1,
      "message": "this is same value used in FrameDependencyTemplate (see line 75)\nI guess it was chosen to be large enough to fit largest used structure (L3T3) that has 9 decode targets.\n\nthe function itself is just moved from from common_video/generic_frame_descriptor/generic_frame_info\nand renamed from GenericFrameInfo::DecodeTargetInfo\n\nI checked size of this structure locally (linux x64),\ngot 4 bytes for DecodeTargetIndication \nand 48 bytes for the absl::InlinedVector\u003cDecodeTargetIndication, 10\u003e\nit is possible to reduce those numbers (enum DecodeTargetIndictation : uint8_t {... reduces size of the vector to 24 bytes), but I prefer to trust compiler that by default alignment is more important than size.\n\nEach packet only has template for itself, so it is 48 bytes per packet.\nthe only exception is first packet of a key frame that needs frame dependency structure and thus needs multiple templates.",
      "parentUuid": "5612c786_511eeff6",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "497962a5_b8bd65a2",
        "filename": "api/transport/rtp/dependency_descriptor.h",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 5150
      },
      "writtenOn": "2020-06-11T10:56:10Z",
      "side": 1,
      "message": "Well, if this extension was included in header dumps, then the size definitely would matter since the tools might read, say, 100\u0027000 headers into memory.",
      "parentUuid": "8c668965_13af1c25",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7999760e_b2605597",
        "filename": "api/transport/rtp/dependency_descriptor.h",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-11T11:04:59Z",
      "side": 1,
      "message": "header dump itself stores extension unparsed, right? there this field uses 2bits per dti (or 0 bits when there is matching template, which is expected to be most of the time)\n\nfor a tool 100\u0027000 headers each using extra 48 bytes would mean extra 4.8 megabytes. is it a lot?\nif 1000 of those headers are key frames, then that would be extra 640 kilobytes.",
      "parentUuid": "497962a5_b8bd65a2",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78e5de1c_abfaab4c",
        "filename": "api/transport/rtp/dependency_descriptor.h",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-06-11T11:08:52Z",
      "side": 1,
      "message": "Just want to point out that no matter what this number is it does not affect the size on the wire.",
      "parentUuid": "8c668965_13af1c25",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1c2c801_55f5c16d",
        "filename": "api/transport/rtp/dependency_descriptor.h",
        "patchSetId": 4
      },
      "lineNbr": 113,
      "author": {
        "id": 5150
      },
      "writtenOn": "2020-06-11T16:06:08Z",
      "side": 1,
      "message": "Yes, I am well aware that we\u0027re talking about size in memory and not size on the wire.\n\n5 megabytes is obviously not prohibitive (and it is a lot better than the 64 megabytes I was worried about), but it is also not an insignificant increase. Depending on the resources of the machine where you are analyzing the logs and the number of logs you\u0027re processing, this may contribute to a memory bottle neck.\n\nAlso, 100\u0027000 packets was just an example and not an upper limit. To make the calculation concrete, imagine a 450 kbps audio+video call. Audio typically sends 50 packets per second and might use about 50 kbps including overhead which leave 400kbps for video. With a typical packet size of 1000 bytes, this gives an additional 50 packets per second. Assuming it is a 2-way call, we double that for 200 packets per second, meaning even a fairly low-bitrate call reaches 100\u0027000 packets in about 8 minutes. This scales with bandwidth, so a 5 Mbps call might reach 100\u0027000 packets in about 2 minutes.",
      "parentUuid": "78e5de1c_abfaab4c",
      "range": {
        "startLine": 113,
        "startChar": 44,
        "endLine": 113,
        "endChar": 46
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1e501f1_d69d408c",
        "filename": "modules/video_coding/codecs/av1/scalability_structure_l3t3.cc",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5150
      },
      "writtenOn": "2020-06-11T09:57:44Z",
      "side": 1,
      "message": "nit: , ?",
      "range": {
        "startLine": 99,
        "startChar": 33,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dacad7e5_01bcb335",
        "filename": "modules/video_coding/codecs/av1/scalability_structure_l3t3.cc",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-11T10:31:09Z",
      "side": 1,
      "message": "it is a dot, let me annotate that it is a reference to code.",
      "parentUuid": "f1e501f1_d69d408c",
      "range": {
        "startLine": 99,
        "startChar": 33,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d1f6671_593c6df8",
        "filename": "modules/video_coding/codecs/av1/scalability_structure_l3t3.cc",
        "patchSetId": 4
      },
      "lineNbr": 99,
      "author": {
        "id": 5150
      },
      "writtenOn": "2020-06-11T10:56:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dacad7e5_01bcb335",
      "range": {
        "startLine": 99,
        "startChar": 33,
        "endLine": 99,
        "endChar": 34
      },
      "revId": "52f027729e681363f8cfd8e1f8eedd728072ef14",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}