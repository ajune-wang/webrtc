{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5feb72b7_6c1a6cc8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-03-10T11:58:53Z",
      "side": 1,
      "message": "This is NOT intended for submission as-is, but review is an easy way to show the use of the\nmax_udp_payload interface in order to verify behavior when we have UDP issues.\n\nIt did show an edge case (see description) that may merit further investigation.\n\n",
      "revId": "ad726fc4fa25d176b659336f47395876228a9886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92378287_1a66d7ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-03-10T22:27:44Z",
      "side": 1,
      "message": "If you\u0027re talking about how towards the end of the test, messages still end up received but after a longer and longer delay, that\u0027s because usrsctp is sending combined SACK+DATA packets that just barely exceed the MTU. When retransmitted, the SACK and DATA chunks are in separate packets, so they get through. But each time this happens, the retransmission timer doubles until it exceeds the test timeout. So in short, this is expected behavior.",
      "parentUuid": "5feb72b7_6c1a6cc8",
      "revId": "ad726fc4fa25d176b659336f47395876228a9886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e0867c9_14b405aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-03-11T08:31:31Z",
      "side": 1,
      "message": "Nice - as we move towards a more dynamic way of solving this, I\u0027m wondering if it makes sense for us to tackle this specifically for ipv6 right now?",
      "revId": "ad726fc4fa25d176b659336f47395876228a9886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76b86d7d_80968a54",
        "filename": "pc/data_channel_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-03-11T08:31:31Z",
      "side": 1,
      "message": "since the mtu problem was IPv6 specific, I wonder if we should have two separate \u0027safe maximum\u0027 values as an interim solution as to not regress too much for ipv4. If so, we should also have separate tests for each. Wdyt?",
      "revId": "ad726fc4fa25d176b659336f47395876228a9886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce9150e3_3706c8da",
        "filename": "pc/data_channel_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 458,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-03-11T17:41:54Z",
      "side": 1,
      "message": "The \"safe maximum\" is compiled in as a constant in usrsctp, and is global. If we want to make it dynamic, we should implement PLPMTUD (path MTU discovery using packet loss, not ICMP reports, as the prober).",
      "parentUuid": "76b86d7d_80968a54",
      "revId": "ad726fc4fa25d176b659336f47395876228a9886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}