{
  "comments": [
    {
      "key": {
        "uuid": "520f9246_986c2216",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 18
      },
      "lineNbr": 124,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-23T14:46:32Z",
      "side": 1,
      "message": "can this method be called during destruction? Do we need any synchronization primitives here?\n\nI.e. SetReceiveAudioSink(nullptr) can be called while this method is being executed. While on the interface level, SetReceiveAudioSink guarantees that no further processing will occur, one might already be in progress.\n\n\nAnd on the other note: in the real downstream implemenetation today, we are invoking this method under the lock (so that SetReceiveAudioSink(nullptr) blocks until OnData()  finishes).\n\nis audio_coding-\u003eIncomingPacket asynchronous?",
      "range": {
        "startLine": 124,
        "startChar": 21,
        "endLine": 124,
        "endChar": 27
      },
      "revId": "e6b94681a825e824775f6a2dd155f34a611a658b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "560d311e_3d96051b",
        "filename": "audio/test/media_transport_test.cc",
        "patchSetId": 18
      },
      "lineNbr": 36,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-24T03:13:26Z",
      "side": 1,
      "message": "just to check: you are saying that when you changed it to 1, opus wasn\u0027t working?",
      "range": {
        "startLine": 36,
        "startChar": 14,
        "endLine": 36,
        "endChar": 26
      },
      "revId": "e6b94681a825e824775f6a2dd155f34a611a658b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}