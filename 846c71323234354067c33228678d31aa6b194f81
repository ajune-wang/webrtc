{
  "comments": [
    {
      "key": {
        "uuid": "48077475_0cfe9707",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp.h",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-25T11:44:15Z",
      "side": 1,
      "message": "Can you also describe the return value\n(or change it to void - it seems it is not used.\nchanging to bool is another reasonable option, though that one still need a comment)",
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e335a0a7_03a7f42e",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp.h",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-02-25T12:01:25Z",
      "side": 1,
      "message": "Done.\nI\u0027m keeping it int32_t, although I prefer bool, because I want it to be similar to RequestKeyFrame.",
      "parentUuid": "48077475_0cfe9707",
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7995364_04d54cee",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-25T11:44:15Z",
      "side": 1,
      "message": "prefer to document with the comment:\n, /*is_volatile\u003d*/true);\nSince (unlike variable name) that format can be validated with clang-tidy:\nhttps://clang.llvm.org/extra/clang-tidy/checks/bugprone-argument-comment.html",
      "range": {
        "startLine": 227,
        "startChar": 33,
        "endLine": 227,
        "endChar": 44
      },
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77e5cb56_fa6b4a6b",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-02-25T12:01:25Z",
      "side": 1,
      "message": "I did not know about this validation. Cool. Changed.\nI don\u0027t think it\u0027s currently used by us as part of the presubmit checks, though?",
      "parentUuid": "d7995364_04d54cee",
      "range": {
        "startLine": 227,
        "startChar": 33,
        "endLine": 227,
        "endChar": 44
      },
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d288373_fc47a02f",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 227,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-25T12:22:53Z",
      "side": 1,
      "message": "no, it is not enabled on presubmit (it might be in the future).\nIt is likely possible to setup local environment to give you such warnings.\n\nThere is also a different light reason: let\u0027t say you need to pass false as value, how would you do it with a constant?\nconstexpr bool is_volatile \u003d false;\nSetFlag(kRtcpLossNotification, is_volatile);\n\nconstexpr bool is_not_volatile \u003d false;\nSetFlag(kRtcpLossNotification, is_not_volatile);\n\nmay be clearest is \nconstexpr bool is_volatile \u003d true;\nSetFlag(kRtcpLossNotification, !is_volatile);\n\nBut with comment documentation, it is obvious:\nSetFlag(kRtcpLossNotification, /*is_volatile\u003d*/false);",
      "parentUuid": "77e5cb56_fa6b4a6b",
      "range": {
        "startLine": 227,
        "startChar": 33,
        "endLine": 227,
        "endChar": 44
      },
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6bb8be7c_fe4e6968",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-25T11:44:15Z",
      "side": 1,
      "message": "prefer to put the nested type at the beginning of the (private) section.\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "range": {
        "startLine": 226,
        "startChar": 9,
        "endLine": 226,
        "endChar": 30
      },
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0668f942_b82b4d6c",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-02-25T12:01:25Z",
      "side": 1,
      "message": "1. My compiler does not complain about an unused private struct. By moving this struct definition somewhere else in the file, we increase the risk of leaving behind a relic if |loss_notification_state_| is refactored.\n2. Moving this struct would not be consistent with the rest of this file. See for instance ReportFlag below.",
      "parentUuid": "6bb8be7c_fe4e6968",
      "range": {
        "startLine": 226,
        "startChar": 9,
        "endLine": 226,
        "endChar": 30
      },
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa74fbcf_dde732c7",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 226,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-25T12:22:53Z",
      "side": 1,
      "message": "Yep, this class is too large and already breaks the style guide.\nWon\u0027t insist on making it cleaner.",
      "parentUuid": "0668f942_b82b4d6c",
      "range": {
        "startLine": 226,
        "startChar": 9,
        "endLine": 226,
        "endChar": 30
      },
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "508bb68f_27f6089f",
        "filename": "modules/rtp_rtcp/source/rtcp_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 400,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-25T11:44:15Z",
      "side": 1,
      "message": "I do not understand what is special about SendLossNotification to test it both in ReducedSize and Compound modes. I\u0027m ok with just one mode (any will do, may be ReducedSize is a bit better since it is more popular)",
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d597057c_a6a217c0",
        "filename": "modules/rtp_rtcp/source/rtcp_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 400,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-02-25T12:01:25Z",
      "side": 1,
      "message": "Removed SendLossNotificationCompound, then.",
      "parentUuid": "508bb68f_27f6089f",
      "revId": "846c71323234354067c33228678d31aa6b194f81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}