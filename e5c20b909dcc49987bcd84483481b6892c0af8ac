{
  "comments": [
    {
      "key": {
        "uuid": "2c32a352_206be7cb",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-20T08:21:55Z",
      "side": 1,
      "message": "Note that this is different from the local variable num_temporal_layers, since the latter may hold number of simulcast streams.\n\nCan we write any unit tests for this logic?",
      "range": {
        "startLine": 445,
        "startChar": 7,
        "endLine": 445,
        "endChar": 41
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f148f9f_bf3499e5",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 445,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-04-25T07:29:35Z",
      "side": 1,
      "message": "It would be better to use num_temporal_layers which holds the actual number of temporal layers encoder will produce.",
      "parentUuid": "2c32a352_206be7cb",
      "range": {
        "startLine": 445,
        "startChar": 7,
        "endLine": 445,
        "endChar": 41
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "671655d1_eb7a519e",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-20T08:21:55Z",
      "side": 1,
      "message": "It looks like this is called at the end of InitEncode, so configurations_[0] should be reliable here?",
      "range": {
        "startLine": 671,
        "startChar": 25,
        "endLine": 671,
        "endChar": 43
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8141171_1c1b1ff9",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-04-25T07:29:35Z",
      "side": 1,
      "message": "this looks ok.",
      "parentUuid": "671655d1_eb7a519e",
      "range": {
        "startLine": 671,
        "startChar": 25,
        "endLine": 671,
        "endChar": 43
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7a95620_719be63e",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-20T08:21:55Z",
      "side": 1,
      "message": "It looks like we allow numberOfTemporalLAyers \u003d\u003d 0 below, but are less forgiving for numberOfSpatialLayers.",
      "range": {
        "startLine": 268,
        "startChar": 2,
        "endLine": 268,
        "endChar": 40
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bcf443e_3eb91e34",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 268,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-04-25T07:29:35Z",
      "side": 1,
      "message": "I don\u0027t think enc can handle num_spatial_layers_\u003d0. I guess it is always \u003e\u003d0 in WebRTC which sets it to 1 by default (https://cs.chromium.org/chromium/src/third_party/webrtc/api/video_codecs/video_encoder.cc?l\u003d41).",
      "parentUuid": "d7a95620_719be63e",
      "range": {
        "startLine": 268,
        "startChar": 2,
        "endLine": 268,
        "endChar": 40
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d2118a9_0f2a18fd",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-20T08:21:55Z",
      "side": 1,
      "message": "Likewise, can we write any unit test for this? Or detect errors is some higher-level test?",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 68
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb6b3c8d_4180f685",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-04-25T07:29:35Z",
      "side": 1,
      "message": "The simple test would be to encode in two temporal layers, extract base layer, decode base layer (1), decode both layers (2), check that decoded base layers match in 1 and 2.",
      "parentUuid": "8d2118a9_0f2a18fd",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 68
      },
      "revId": "e5c20b909dcc49987bcd84483481b6892c0af8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}