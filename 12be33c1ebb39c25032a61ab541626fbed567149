{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76100360_183658b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2024-02-01T12:41:01Z",
      "side": 1,
      "message": "+Harald and Erik, if you\u0027re interested",
      "revId": "12be33c1ebb39c25032a61ab541626fbed567149",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48b21740_53632803",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2024-02-01T16:01:29Z",
      "side": 1,
      "message": "+Philip in case I\u0027ve missed anything important in these structures.",
      "revId": "12be33c1ebb39c25032a61ab541626fbed567149",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1f0a0cf_fb88d82f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-02-08T09:20:14Z",
      "side": 1,
      "message": "Has there been any discussion, or is there are design doc about how to solve this issue?\n\nSome things I don\u0027t like about this:\n - AFAICT the template structure would be copied for every frame sent.\n - We are cementing a bunch of mostly arbitrary implementation details.\n - (the big one) Why should the DD get special handling?\n \n My spontaneous feeling is that this CL incur a pretty big chunk of tech debt.\n \n Danil, could you PTAL and see what you think?",
      "revId": "12be33c1ebb39c25032a61ab541626fbed567149",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d4d4bc3_45f2b37a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-02-08T13:41:17Z",
      "side": 1,
      "message": "I agree with these concerns:\n- FrameDependencyStructure is not cheap to copy, so making a copy of it on each frame would likely make transform api cpu expensive\n- FrameDependencyStructure is very DD specific, it would be better to make it less visible in the api\n\nSome idea how to address these concerns:\n- try to put FrameDependencyStructure inside existent Frame/RTPVideoHeader object, thus make it less visible.\n- make it cheap to copy by passing it using shared ownship instead of unique ownership (such refactoring would require first to refactor `struct FrameDependencyStructure` and how it is currently passed)\n- alternatively to shared ownership ensure FrameDependencyStructure is passed/copied only with key frame/first packet of a key frame. (Is there a scenario where frame need to be transformed without/before its associated key frame?)",
      "parentUuid": "a1f0a0cf_fb88d82f",
      "revId": "12be33c1ebb39c25032a61ab541626fbed567149",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9feb4848_75c8c7b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2024-04-30T09:44:26Z",
      "side": 1,
      "message": "Thanks for putting so much thought into this!\n- I\u0027ve removed FrameDependencyStructure from the TransformableVideoFrameInterface API interface by adding an extra internal interface shared by the receiver and sender implementations\n- Danil is right, we only need the full FDS on keyframes (as senders will only attach it on keyframes anyway, and serializing is all I care about right now). Changed to only copy \u0026 set for keyframes\n\nWhat do you both think?",
      "parentUuid": "3d4d4bc3_45f2b37a",
      "revId": "12be33c1ebb39c25032a61ab541626fbed567149",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f80dd87a_390e6e85",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2024-05-27T07:16:36Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "9feb4848_75c8c7b7",
      "revId": "12be33c1ebb39c25032a61ab541626fbed567149",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}