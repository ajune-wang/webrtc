{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4d0a3832_7737a490",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-03T21:46:15Z",
      "side": 1,
      "message": "Hi Sam, I\u0027ve fixed the portrait oriented monitor screen capture bug you reported, PTAL.\n\nJoe@ as the OWNER can you PTAL as well?\n\nThanks!",
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f522778d_ae2580dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 15369
      },
      "writtenOn": "2021-03-03T23:47:25Z",
      "side": 1,
      "message": "Some questions.",
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e00a3be_12d22c14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13849
      },
      "writtenOn": "2021-03-08T21:25:17Z",
      "side": 1,
      "message": "I was AFK last week so sorry for the slow reply.",
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58bcebdf_faad4895",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 13849
      },
      "writtenOn": "2021-03-08T21:25:17Z",
      "side": 1,
      "message": "nit: Since this is used for both resize and same-size scenarios, maybe drop the \u0027smaller_\u0027 prefix or replace it with content_height / content_width?  You could use min_{height|width} but while reading through the code later on, the \u0027smaller_\u0027 bit didn\u0027t improve readability, at least for me.",
      "range": {
        "startLine": 192,
        "startChar": 6,
        "endLine": 192,
        "endChar": 20
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22c2a9be_722ef818",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-11T19:52:43Z",
      "side": 1,
      "message": "Sure, I will change it to image_width and image_height, since we use image_data as well.",
      "parentUuid": "58bcebdf_faad4895",
      "range": {
        "startLine": 192,
        "startChar": 6,
        "endLine": 192,
        "endChar": 20
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "699ff441_5135aad5",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 15369
      },
      "writtenOn": "2021-03-03T23:47:25Z",
      "side": 1,
      "message": "Do we still need to do this when the size has not changed i.e the new size is equal to the previous size ?",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 195,
        "endChar": 0
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10464fc7_2fc516c6",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 13004
      },
      "writtenOn": "2021-03-04T06:33:46Z",
      "side": 1,
      "message": "I\u0027m probably missing something, but can we create a desktop frame using the new size of the currently captured frame?  To do this, can we recreate the frame pool immediately with the new size?  It looks like we\u0027d maybe drop some frames, but is this worse than potentially showing cropped frames depending on how the size change?",
      "parentUuid": "699ff441_5135aad5",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 195,
        "endChar": 0
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8002e1d8_0f3f0580",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-04T20:25:38Z",
      "side": 1,
      "message": "Yash, we don\u0027t need to do this when the size is the same, but I think it helps simplify the code. We could check if the size has changed first, and not assign to smaller_height/width, but then we need to repeat that check later to determine if we should use smaller_height/width or previous_size_. Unless you had another design in mind that I am not seeing?\n\nSteve, we could drop frames that have grown instead of cropping them (frames that have shrunk we can handle normally). I guess this is just personal preference, I find the black frames from dropped frames to be more annoying than a cropped frame when resizing. Do you think dropping the frames would improve the experience?",
      "parentUuid": "10464fc7_2fc516c6",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 195,
        "endChar": 0
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f15586b9_687160d2",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 13849
      },
      "writtenOn": "2021-03-08T21:25:17Z",
      "side": 1,
      "message": "My preference would also be to crop the image while resizing rather than drop a frame (assuming the dropped frame experience is a \u0027flash\u0027 of the buffer init color).  IIRC the cropping effect is pretty common when resizing.",
      "parentUuid": "8002e1d8_0f3f0580",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 195,
        "endChar": 0
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5d80fdd_f4ae876f",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-11T19:52:43Z",
      "side": 1,
      "message": "Sounds good, I\u0027ll leave it as is then.",
      "parentUuid": "f15586b9_687160d2",
      "range": {
        "startLine": 189,
        "startChar": 0,
        "endLine": 195,
        "endChar": 0
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e99d0f72_6d96597e",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 15369
      },
      "writtenOn": "2021-03-03T23:47:25Z",
      "side": 1,
      "message": "nit. Should we use \"int\" here since the datatype is not complex ?",
      "range": {
        "startLine": 202,
        "startChar": 7,
        "endLine": 202,
        "endChar": 12
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0fe7863_9c17bb00",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-04T20:25:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e99d0f72_6d96597e",
      "range": {
        "startLine": 202,
        "startChar": 7,
        "endLine": 202,
        "endChar": 12
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25364679_9e280e25",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 15369
      },
      "writtenOn": "2021-03-03T23:47:25Z",
      "side": 1,
      "message": "Can map_info.RowPitch be less than row_data_length ? If so, we can end up copying some part of the same data in the next iteration.\nSame when map_info.RowPitch \u003e row_data_length, we can end up not copying some data from src_data.",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 35
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f00e1024_893539d1",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-04T20:25:38Z",
      "side": 1,
      "message": "No, RowPitch is the width of the texture in bytes, and row_data_length is the size in pixels * kBytesPerPixel. Since we have agreed on an image format that has 4 bytes per pixel, they will be at least be equal or RowPitch will be larger due to padding. And often there is significant amounts of padding at the end of each row after the image data has ended, IIUC it is used in the GPU to align the memory to a certain size. We intentionally leave that data out as we don\u0027t need it, and we are left with contiguous image data.",
      "parentUuid": "25364679_9e280e25",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 35
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59a29be6_332887d5",
        "filename": "modules/desktop_capture/win/wgc_capturer_win_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 13849
      },
      "writtenOn": "2021-03-08T21:25:17Z",
      "side": 1,
      "message": "Is there already a test for landscape/portrait?  If not it seems like a good idea to add explicit tests for them.",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 40,
        "endChar": 35
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ce1f19d_bd180481",
        "filename": "modules/desktop_capture/win/wgc_capturer_win_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-11T19:52:43Z",
      "side": 1,
      "message": "No, I was wary of changing the orientation in case it would disrupt other tests running in parallel. I think this would be a good test case for a Mock API. I\u0027ve filed this bug to write up some mock tests to cover this scenario: \nhttps://bugs.chromium.org/p/webrtc/issues/detail?id\u003d12572",
      "parentUuid": "59a29be6_332887d5",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 40,
        "endChar": 35
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "581fa7d7_5d4ee556",
        "filename": "modules/desktop_capture/win/wgc_capturer_win_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 13849
      },
      "writtenOn": "2021-03-08T21:25:17Z",
      "side": 1,
      "message": "Were you going to validate something using end_data or are you relying on this crashing if the buffer isn\u0027t large enough?",
      "range": {
        "startLine": 192,
        "startChar": 4,
        "endLine": 192,
        "endChar": 43
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a26b423_905e3407",
        "filename": "modules/desktop_capture/win/wgc_capturer_win_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 13849
      },
      "writtenOn": "2021-03-08T21:25:17Z",
      "side": 1,
      "message": "Can you combine these two lines?\nuint8_t end_data \u003d frame_-\u003edata()[data_length];",
      "range": {
        "startLine": 191,
        "startChar": 4,
        "endLine": 192,
        "endChar": 43
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af2b17d6_f9cb8664",
        "filename": "modules/desktop_capture/win/wgc_capturer_win_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-11T19:52:43Z",
      "side": 1,
      "message": "I was relying on the crash, but I think it\u0027s worthwhile to validate the pixels so I\u0027ve updated the TestWindow to paint itself and now we can validate the actual data.",
      "parentUuid": "581fa7d7_5d4ee556",
      "range": {
        "startLine": 192,
        "startChar": 4,
        "endLine": 192,
        "endChar": 43
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d43770a1_a563cb48",
        "filename": "modules/desktop_capture/win/wgc_capturer_win_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 192,
      "author": {
        "id": 12416
      },
      "writtenOn": "2021-03-11T19:52:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a26b423_905e3407",
      "range": {
        "startLine": 191,
        "startChar": 4,
        "endLine": 192,
        "endChar": 43
      },
      "revId": "6c80cc0eefa55f6f12faf20e8bc518a998726793",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}