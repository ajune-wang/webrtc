{
  "comments": [
    {
      "key": {
        "uuid": "f42ebdf0_67b2d24a",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-05-02T10:49:40Z",
      "side": 1,
      "message": "Instead of doing this, make it so that EmulatedEndpoint::OnPacketReceived drops the packet before even forwarding it to the socket.",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52df006c_0b42494c",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-05-02T12:59:33Z",
      "side": 1,
      "message": "I did it here, because endpoint_-\u003eEnabled() have to invoked on network thread and socket is run on this thread. I can move it to endpoint (I agree, it makes sense), but it will require to replace simple thread checker with mutex lock, so it is why I put it here originally.\n\nWDYT?",
      "parentUuid": "f42ebdf0_67b2d24a",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e16060_de83302f",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-05-02T13:44:09Z",
      "side": 1,
      "message": "I\u0027d say, go the other way, make sure that the enabled state is always accessed on the network task queue. This seems achievable by making UpdateNetworksOnce run on the task queue and post a task with the resulting std::vector\u003crtc::Network*\u003e to the network thread to run MergeNetworkList and MaybeSignalNetworksChanged.",
      "parentUuid": "52df006c_0b42494c",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b9802a_424c7dbc",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-05-15T09:44:16Z",
      "side": 1,
      "message": "The problem there will be on the send side. When we send packet to the socket we need to check is network enabled or not. It is happening on the network thread and to return status to the socket (to produce correct return code) we will be required to make sync call to the task queue to check is endpoint enabled or not. It looks not good for me.\n\nWDYT?",
      "parentUuid": "39e16060_de83302f",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f44ffbe_43d9b8d0",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-05-16T12:33:21Z",
      "side": 1,
      "message": "Ok, so basically, what we\u0027re saying is that the endpoint state should be owned by the network thread? Would it make sense to remove EmulatedEndpoint::task_queue_ and instead use the network thread for everything that runs on that?",
      "parentUuid": "57b9802a_424c7dbc",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83c7d1ea_3930397a",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-05-16T14:52:14Z",
      "side": 1,
      "message": "If we want to run that staff on network_thread - we need to propagate network thread into endpoint and make switch from task queue to the network thread inside. Right now we use task queue for receiving data from network and then switch to network thread is done inside socket factory/socket. To make this switch inside endpoint we have to pass network thread into endpoint, but we decided not to do it during initial review.",
      "parentUuid": "5f44ffbe_43d9b8d0",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8f1620d_8a91c2a3",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-05-16T15:54:26Z",
      "side": 1,
      "message": "Maybe we should revisit that. But either way, we don\u0027t want to do that in this CL, so this is fine for now.",
      "parentUuid": "83c7d1ea_3930397a",
      "range": {
        "startLine": 59,
        "startChar": 0,
        "endLine": 63,
        "endChar": 3
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8e6f7bf_743eda9a",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-05-02T10:49:40Z",
      "side": 1,
      "message": "Why not ENETDOWN?",
      "range": {
        "startLine": 120,
        "startChar": 13,
        "endLine": 120,
        "endChar": 24
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b4f9395_d785749a",
        "filename": "test/scenario/network/fake_network_socket.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-05-16T14:52:14Z",
      "side": 1,
      "message": "Yep, this one is better.",
      "parentUuid": "b8e6f7bf_743eda9a",
      "range": {
        "startLine": 120,
        "startChar": 13,
        "endLine": 120,
        "endChar": 24
      },
      "revId": "83bf01b5ad1bdc99f78566f04f2742879610b070",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}