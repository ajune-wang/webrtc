{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "106ebbb3_cbb05549",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 7036
      },
      "writtenOn": "2020-10-15T13:00:19Z",
      "side": 1,
      "message": "We already have the spatialLayers struct above to represent the SVC configuration. It doesn\u0027t work with simulcast + scalability (for example to specify the temporal layers) but it would be better than having 2 possibly conflicting data members.\n\nI think the scalability_mode should live higher in the stack and be transformed into the right values for the VideoCodec struct.",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d37885d_fd25e04e",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-15T13:19:15Z",
      "side": 1,
      "message": "That is opposite of my idea:\nI would like to deprecated spatialLayers together with number_of_spatial_layers and number_of_temporal_layers in favor of single scalability_mode member. (or a scalability_mode per simulcast stream?)\n\nDown the stack I need to convert VideoCodec back to scalability mode name, in particular to support scalability modes that currently can\u0027t be expressed with the VideoCodec struct (e.g. key svc with shift structures). Even KSvc vs FullSVc is not communicated in the spatialLayers (other than with VP9 specific settings)\n\nWhile configuring av1 encoder I know how to configure it using scalability_mode, but configuring it with various members of the VideoCodec is far from trivial.\n\nAs a intermediate solution I can modify SetScalabilityMode to not just set this member, but also to configure spatialLayer and other fields. Would that be better from your point of view?",
      "parentUuid": "106ebbb3_cbb05549",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "174d2f4c_090468b1",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 5963
      },
      "writtenOn": "2020-10-15T14:39:48Z",
      "side": 1,
      "message": "I think that this change would also allow to make the implementation of the w3c svc API extension much more easier:\n\nhttps://bugs.chromium.org/p/chromium/issues/detail?id\u003d986069",
      "parentUuid": "5d37885d_fd25e04e",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c15440a8_a04f1846",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 7036
      },
      "writtenOn": "2020-10-15T15:09:39Z",
      "side": 1,
      "message": "The reason is that the VideoCodec structure is supposed to be the low level representation of the encoder\u0027s configuration, so the scalability mode should be expanded there.\n\nFor modes that can\u0027t currently be expressed with the current structure, we should just fix that and rework the VideoCodec struct.\n\nI don\u0027t think that having setScalabilityMode populate the spatialLayer struct is a good way to do this, though we need something similar elsewhere. There\u0027s already enough complexity in the codebase that we don\u0027t want 2 ways to populate this member.\n\nYes, it would make the implementation of the SVC spec easier for some part, but general maintenance of the WebRTC library would be more complex because of having 2 different ways to configure encoders (through spatialLayers and through this new member). Who takes precedence and when needs to be properly written and implemented in all codecs first.",
      "parentUuid": "5d37885d_fd25e04e",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b553d14c_09cc065a",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-10-15T16:24:55Z",
      "side": 1,
      "message": "I agree with Florent, scalability mode would be better at a higher abstraction level. At a lower level we need more flexibility than what that w3c standard can provide.\n\nIf this is how the libaom wrapper currently needs the signals, perhaps you can add it to a codec-specific section instead?\n\nI\u0027m fine with shoehorning the scalability mode somewhere in VideoCodec for now (regardless of if it\u0027s translated or not), but longer term the entire current VideoEncoder interface needs to die anyway and be replaced with a more low-level variant, so I wouldn\u0027t plan any larger refactoring of how SpatialLayers etc is used right now.",
      "parentUuid": "c15440a8_a04f1846",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "427ce657_1bf9cfb6",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-16T15:54:19Z",
      "side": 1,
      "message": "I can change libaom wrapper to take signal differentely, but I don\u0027t want that signal to be be codec specific, to be in the codec-specific section.\n\nscalability_mode is not av1 specific (in particular I would like to reuse it for vp9 and vp8 wrappers too. sure vp8 and vp9 would not support all the modes).\n\nSame time I would prefer to make step towards that better VideoEncoder interface ,even if it is a very small step.\n\nDo you think that new VideoEncoder interface would pass scalability_mode together with other fields that adds flexibility webrtc-svc doesn\u0027t provide?\n\nIf not, then how you think different modes would be described? in particular what whould differentiate modes S3T3, L3T3, L3T3_KEY, L3T3_KEY_SHIFT (each has 3 spatial and 3 temporal layers) Would it help to move InterLayerPredMode and number of spatial/temporal layers from the codec specific sections?\n\nI\u0027m also not comfortable refactoring spatial layers or considering scalability_mode * simulcast scenario as these are the problems I do not really understand plans for.",
      "parentUuid": "b553d14c_09cc065a",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29ce160b_0e293a19",
        "filename": "api/video_codecs/video_codec.h",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-10-19T09:07:48Z",
      "side": 1,
      "message": "Alright, I think this is workable approach for now - the work needed to put it somewhere else is probably not worth it at the moment.\n\nI understand that scalability mode isn\u0027t av1-specific. The vision for a future interface would see the current VideoEncoder being split into several parts where the logic to realize a scalability would essentially be a separate building block. So I hope we can re-use some of the current av1 code there. I doubt we can really get started with that in the very near future though.",
      "parentUuid": "427ce657_1bf9cfb6",
      "range": {
        "startLine": 178,
        "startChar": 14,
        "endLine": 178,
        "endChar": 31
      },
      "revId": "03565d7439448fefe9028075009fa2bf2387ed1f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}