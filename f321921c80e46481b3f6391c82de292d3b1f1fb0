{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5e95140e_8d486a46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-03-11T08:52:34Z",
      "side": 1,
      "message": "Hi, do you think it\u0027s reasonable to delete this method? As far as I\u0027ve found, only use is in tests for SetOption. If you like the change, we\u0027d need to leave a default dummy implementation on the interface, and update downstream subclasses in a few places, before deleting it completely.",
      "revId": "f321921c80e46481b3f6391c82de292d3b1f1fb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efd9bc1c_a4c17351",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-03-11T21:13:39Z",
      "side": 1,
      "message": "We lose a tiny bit of test coverage from removing this. And it feels like a pretty elementary feature of a socket wrapper, which I wouldn\u0027t be surprised if third party applications are using. So I\u0027m not 100% sure if this is the right thing to do. hta, WDYT?",
      "revId": "f321921c80e46481b3f6391c82de292d3b1f1fb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5918d4a_2e5f9aaa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-03-12T08:01:54Z",
      "side": 1,
      "message": "My impression is that I get acutely nervous if we delete this method.\n\nIf we do anything with options, one of the basic tasks is to figure out the OS default value, add tests to set the value, and verify that we got the result back.\nAs you can see from the GetOption code, this is more complex than just calling ::getsockopt, and as you can see from the tests, removing it reduces test coverage.\n\nI think that 1) we\u0027ll need it whenever we test a new socket option type or value, and 2) we\u0027re likely to need it in production too.\n\nIf this doesn\u0027t cause a problem, I would leave it in place.\n\n(Halfway proposition: Rename it to GetOptionForTesting.)\n",
      "revId": "f321921c80e46481b3f6391c82de292d3b1f1fb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef971f80_8788e3eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-03-12T08:24:12Z",
      "side": 1,
      "message": "I understand. My gut feeling is that the socket abstractions are a bit too complex for their own good, but this is perhaps not a good step now.\n\nAs for renaming, if we do GetOptionsForTesting, we\u0027d need to either provide a default implementation, or somehow avoid adding it to the interface. Since it\u0027s no good to require downstream implementations of the interface (the same code, e.g, chromium, that breaks from this cl) to provide that method.\n\nAlso not sure if the same considerations apply for the socket api and the port api.",
      "parentUuid": "c5918d4a_2e5f9aaa",
      "revId": "f321921c80e46481b3f6391c82de292d3b1f1fb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73727b19_57f71bd4",
        "filename": "rtc_base/virtual_socket_server.cc",
        "patchSetId": 2
      },
      "lineNbr": 1198,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-03-11T21:13:39Z",
      "side": 1,
      "message": "I think it\u0027s fine to assume this, it doesn\u0027t look like OPT_IPV6_V6ONLY is implemented anywhere. But this comment doesn\u0027t completely make sense without context, maybe just say \"Assume socket is dual stack if IPIsAny is true.\"",
      "revId": "f321921c80e46481b3f6391c82de292d3b1f1fb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}