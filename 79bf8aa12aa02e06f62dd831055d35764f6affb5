{
  "comments": [
    {
      "key": {
        "uuid": "19419411_38d8b45b",
        "filename": "api/rtp_headers.h",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T08:01:30Z",
      "side": 1,
      "message": "How about:\nint32_t delta \u003d (static_cast\u003cint32_t\u003e((absoluteSendTime-previous_sendtime)\u003c\u003c8))\u003e\u003e8;\n\nOr without relying on wraparound behavior:\nint32_t delta \u003d static_cast\u003cint32_t\u003e(absoluteSendTime-previous_sendtime);\nif (delta \u003e (1 \u003c\u003c 23)) {\n  delta -\u003d 1 \u003c\u003c 24;\n}",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 117,
        "endChar": 5
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aa37086_8352a1f2",
        "filename": "api/rtp_headers.h",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T10:59:31Z",
      "side": 1,
      "message": "(Ignore option 2)",
      "parentUuid": "19419411_38d8b45b",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 117,
        "endChar": 5
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85794d38_6efbc8b8",
        "filename": "api/rtp_headers.h",
        "patchSetId": 5
      },
      "lineNbr": 117,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-09-10T15:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5aa37086_8352a1f2",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 117,
        "endChar": 5
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bcdbebd4_bdf68e58",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.cc",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T08:17:42Z",
      "side": 1,
      "message": "We need to ensure that we don\u0027t get negative wraparounds causing negative timestamps. In particular, it\u0027s 50% chance that the first delta would be negative. \n\nProtection can be done in a few ways. One is to use an initial value large enough that it\u0027s unfeasible that we\u0027d go negative. Another is to check for that particular case when adding the delta to the timestamp.\n\nWe can also to a bit of both, that is, starting at a value so that it\u0027s unlikely that correct data would cause a negative timestamp, but check so that incorrect data can\u0027t cause it.",
      "range": {
        "startLine": 47,
        "startChar": 26,
        "endLine": 47,
        "endChar": 42
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "387eeda9_0c24abe2",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.cc",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-09-10T15:14:28Z",
      "side": 1,
      "message": "Used local time as base. Ensure that each delta is positive as discussed.",
      "parentUuid": "bcdbebd4_bdf68e58",
      "range": {
        "startLine": 47,
        "startChar": 26,
        "endLine": 47,
        "endChar": 42
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba98dd8d_17d66eee",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.cc",
        "patchSetId": 5
      },
      "lineNbr": 47,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T16:05:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "387eeda9_0c24abe2",
      "range": {
        "startLine": 47,
        "startChar": 26,
        "endLine": 47,
        "endChar": 42
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36621552_d4b79cba",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.cc",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T08:23:51Z",
      "side": 1,
      "message": "It wold be good if we could include transport and other overhead here as it can be quite significant at low packet sizes.",
      "range": {
        "startLine": 122,
        "startChar": 24,
        "endLine": 122,
        "endChar": 58
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fb60e0d_337f1c80",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.cc",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-09-10T15:14:28Z",
      "side": 1,
      "message": "that is not available here and not something we currently use. That might be a future project though.",
      "parentUuid": "36621552_d4b79cba",
      "range": {
        "startLine": 122,
        "startChar": 24,
        "endLine": 122,
        "endChar": 58
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "309141ec_d7870c25",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.cc",
        "patchSetId": 5
      },
      "lineNbr": 122,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T16:05:52Z",
      "side": 1,
      "message": "Can we add a TODO to highlight this?",
      "parentUuid": "6fb60e0d_337f1c80",
      "range": {
        "startLine": 122,
        "startChar": 24,
        "endLine": 122,
        "endChar": 58
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed94ba35_5ee5091b",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 522,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-10T08:17:42Z",
      "side": 1,
      "message": "The motivation behind these values aren\u0027t really obvious from context. It looks a bit like you are trying to test the wraparound behavior as well? If so, I suggest making a separate test for that. Either way, explain the reasoning behind the 1\u003c\u003c24.\n\nDon\u0027t use the l suffix as we just learned, it does different things on different platforms. numerals are guaranteed to be at least 32 bit on all supported platforms.",
      "range": {
        "startLine": 519,
        "startChar": 0,
        "endLine": 522,
        "endChar": 64
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6c5e4f2_2bbc5c32",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 522,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-09-10T15:14:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ed94ba35_5ee5091b",
      "range": {
        "startLine": 519,
        "startChar": 0,
        "endLine": 522,
        "endChar": 64
      },
      "revId": "79bf8aa12aa02e06f62dd831055d35764f6affb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}