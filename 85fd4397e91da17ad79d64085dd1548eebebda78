{
  "comments": [
    {
      "key": {
        "uuid": "93b6d8fb_4d440183",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-11-15T13:23:44Z",
      "side": 1,
      "message": "string.h is for memcpy and strcat. std::string is in \u003cstring\u003e. I think you need both.",
      "range": {
        "startLine": 16,
        "startChar": 10,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8b75fed_3f02efe2",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 5122
      },
      "writtenOn": "2018-11-15T14:03:56Z",
      "side": 1,
      "message": "I need it for strncpy (see https://en.cppreference.com/w/c/string/byte/strncpy)",
      "parentUuid": "93b6d8fb_4d440183",
      "range": {
        "startLine": 16,
        "startChar": 10,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a85fa077_4225c7bf",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5125
      },
      "writtenOn": "2018-11-15T15:22:55Z",
      "side": 1,
      "message": "I think it would be prefferaable to move this to be a private member of the ApmDataDumper instead.\n\nThat will prevent it to be picked up by any other code, and will also ensure that there can be no name-clash in the internal:: name space",
      "range": {
        "startLine": 38,
        "startChar": 17,
        "endLine": 38,
        "endChar": 36
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d0b7f79_b3bed5d8",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5122
      },
      "writtenOn": "2018-11-16T09:56:15Z",
      "side": 1,
      "message": "I suggest to rename the namespace to sth more specific (e.g., apm_data_dumper_internal) because we need this constant defined here to declare the size of output_dir_.",
      "parentUuid": "a85fa077_4225c7bf",
      "range": {
        "startLine": 38,
        "startChar": 17,
        "endLine": 38,
        "endChar": 36
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f3d680e_3d3dca48",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5125
      },
      "writtenOn": "2018-11-16T11:33:12Z",
      "side": 1,
      "message": "It should still be possible to place it as a member of the class. \n\nWhat about\nclass ApmDataDumper {\n public:\n...\n\n#if WEBRTC_APM_DEBUG_DUMP \u003d\u003d 1\n  constexpr size_t kOutputDirMaxLength \u003d 1024;\n#endif\n...\n};\n\nThat requires\n-less code lines\n-no extra namespace\n-ties the constant to the class\n-Does not increase the size of the binary when WEBRTC_APM_DEBUG_DUMP \u003d\u003d 0",
      "parentUuid": "8d0b7f79_b3bed5d8",
      "range": {
        "startLine": 38,
        "startChar": 17,
        "endLine": 38,
        "endChar": 36
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10c98147_8889af38",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 5125
      },
      "writtenOn": "2018-11-15T15:22:55Z",
      "side": 1,
      "message": "Please pass a std::string instead of an optional here. This code does not in any way benefit from receiving an optional, and there is no point in calling the method if it is unknown whether the output dir should be passed.",
      "range": {
        "startLine": 68,
        "startChar": 32,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "154d4f53_1778a29b",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 5122
      },
      "writtenOn": "2018-11-16T09:56:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10c98147_8889af38",
      "range": {
        "startLine": 68,
        "startChar": 32,
        "endLine": 68,
        "endChar": 38
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f1bbe99_2cba2fb5",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 265,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-11-15T13:23:44Z",
      "side": 1,
      "message": "Why static? Should all debug dumps dump to a single directory?",
      "range": {
        "startLine": 265,
        "startChar": 2,
        "endLine": 265,
        "endChar": 25
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e4ed247_10f12700",
        "filename": "modules/audio_processing/logging/apm_data_dumper.h",
        "patchSetId": 5
      },
      "lineNbr": 265,
      "author": {
        "id": 5122
      },
      "writtenOn": "2018-11-15T14:03:56Z",
      "side": 1,
      "message": "The goal of this CL is adding a common optional output directory for the data dump files. Currently, all files are written to the same directory (the current one). Plus, at this moment there\u0027s no need for different directories - and it would also required multiple audioproc_f flags and passing each flag to each distinct APM sub-module.",
      "parentUuid": "1f1bbe99_2cba2fb5",
      "range": {
        "startLine": 265,
        "startChar": 2,
        "endLine": 265,
        "endChar": 25
      },
      "revId": "85fd4397e91da17ad79d64085dd1548eebebda78",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}