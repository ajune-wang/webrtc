{
  "comments": [
    {
      "key": {
        "uuid": "ccd0dc30_edea90a2",
        "filename": "modules/rtp_rtcp/source/rtp_header_extension_map.cc",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "nit: Add comment about why length \u003d\u003d 0 is included here",
      "range": {
        "startLine": 97,
        "startChar": 54,
        "endLine": 97,
        "endChar": 60
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95fa64b7_e0efe068",
        "filename": "modules/rtp_rtcp/source/rtp_header_extension_map.cc",
        "patchSetId": 7
      },
      "lineNbr": 97,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccd0dc30_edea90a2",
      "range": {
        "startLine": 97,
        "startChar": 54,
        "endLine": 97,
        "endChar": 60
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdbe3ecf_689f6689",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 229,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "Shouldn\u0027t the existing ExtensionManager::kOneByteHeaderSize be subtracted as well?",
      "range": {
        "startLine": 229,
        "startChar": 56,
        "endLine": 229,
        "endChar": 0
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "521c15d1_d0855e59",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 229,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "It\u0027s included in the number_of_allocated_extensions, which actually means number_of_allocated_extensions * (kTwoByteHeaderSize - kOneByteHeaderSize).\nSo kTwoByteHeaderSize + length is for the extension that is about to be allocated.",
      "parentUuid": "bdbe3ecf_689f6689",
      "range": {
        "startLine": 229,
        "startChar": 56,
        "endLine": 229,
        "endChar": 0
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "946f13f8_a29f518d",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 294,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "is this a todo?",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 294,
        "endChar": 31
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d6c5dbe_b074dda0",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 294,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "Yes, fixed!",
      "parentUuid": "946f13f8_a29f518d",
      "range": {
        "startLine": 294,
        "startChar": 2,
        "endLine": 294,
        "endChar": 31
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f70d7203_56f2d2fa",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 300,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "Maybe use can just do\nrtc::Buffer temp_buffer(WriteAt(extensions_offset), extensions_size_);\nThen no need to worry about delete or memcpy explicitly.",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 300,
        "endChar": 68
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3284605_23fe929c",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 300,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "Thanks, that\u0027s much nicer!",
      "parentUuid": "f70d7203_56f2d2fa",
      "range": {
        "startLine": 298,
        "startChar": 0,
        "endLine": 300,
        "endChar": 68
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "367f9407_7689ec22",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 302,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "nit: Here and elsewhere, end comments with period.",
      "range": {
        "startLine": 302,
        "startChar": 17,
        "endLine": 302,
        "endChar": 0
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09c1189b_99ec5819",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 302,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "367f9407_7689ec22",
      "range": {
        "startLine": 302,
        "startChar": 17,
        "endLine": 302,
        "endChar": 0
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bd4d9e9_014e2667",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 315,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "Nit: Not strictly necessary with ByteWriter for single-byte type.",
      "range": {
        "startLine": 315,
        "startChar": 62,
        "endLine": 315,
        "endChar": 0
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38ed6d1f_62245f88",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 315,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "Now I get it :)",
      "parentUuid": "3bd4d9e9_014e2667",
      "range": {
        "startLine": 315,
        "startChar": 62,
        "endLine": 315,
        "endChar": 0
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1305877a_76624080",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 336,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "SetExtensionLengthMaybeAddZeroPAdding?",
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5472da15_cc41c1fd",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 336,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1305877a_76624080",
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b2c7095_c677243b",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 7
      },
      "lineNbr": 508,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-09-01T06:46:24Z",
      "side": 1,
      "message": "will that break for 1st padding byte when one-byte extension is used?",
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3230f788_fd59ff35",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 7
      },
      "lineNbr": 144,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-08-30T13:59:12Z",
      "side": 1,
      "message": "not new code, but would it be possible to rename this? maybe DataPointer(offset)? I dunno.\nI just found that foo \u003d read(WriteAt(X)) is getting more and more common and quite confusing at first glance",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 18
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "427112d5_61ce196f",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 7
      },
      "lineNbr": 144,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-08-31T13:25:57Z",
      "side": 1,
      "message": "I agree. Should I make the change in this CL or a new one?",
      "parentUuid": "3230f788_fd59ff35",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 18
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d15714d6_91194886",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 7
      },
      "lineNbr": 144,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-09-01T06:46:24Z",
      "side": 1,
      "message": "function suggest it shouldn\u0027t be used for reading.\nwhere read(WriteAt() was used before this cl?\nfor reading you can use \"data() + offset\" (that transforms into buffer_.cdata() + offset)",
      "parentUuid": "427112d5_61ce196f",
      "range": {
        "startLine": 144,
        "startChar": 11,
        "endLine": 144,
        "endChar": 18
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5b69055_168f6c8f",
        "filename": "modules/rtp_rtcp/source/rtp_packet_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 510,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-09-01T06:46:24Z",
      "side": 1,
      "message": "what does this test validates? reading 2-byte extension? writing? forcing because of id, forcing because of length?\nhttps://testing.googleblog.com/2014/10/testing-on-toilet-writing-descriptive.html",
      "range": {
        "startLine": 510,
        "startChar": 43,
        "endLine": 510,
        "endChar": 48
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f358c5c_67b1b8eb",
        "filename": "modules/rtp_rtcp/source/rtp_packet_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 510,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-09-01T06:46:24Z",
      "side": 1,
      "message": "https://github.com/google/googletest/blob/master/googletest/docs/faq.md#why-should-test-case-names-and-test-names-not-contain-underscore",
      "range": {
        "startLine": 510,
        "startChar": 42,
        "endLine": 510,
        "endChar": 43
      },
      "revId": "bc2b9a9e6c9e339b1c18fd78f5f4452cd8d0f7c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}