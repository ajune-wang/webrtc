{
  "comments": [
    {
      "key": {
        "uuid": "8ca06092_6054041b",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-02T09:19:12Z",
      "side": 1,
      "message": "This says \"simulated\", but the file name uses \"emulation\".",
      "range": {
        "startLine": 324,
        "startChar": 16,
        "endLine": 324,
        "endChar": 25
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00c52570_1f791ed3",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 324,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-02T09:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ca06092_6054041b",
      "range": {
        "startLine": 324,
        "startChar": 16,
        "endLine": 324,
        "endChar": 25
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a861d4c1_f1e2735e",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-02T14:46:28Z",
      "side": 1,
      "message": "nit: I don\u0027t know what\u0027s the practice, but this list of deps doesn\u0027t look like it\u0027s sorted lexically.",
      "range": {
        "startLine": 335,
        "startChar": 4,
        "endLine": 335,
        "endChar": 17
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59501835_fe440a71",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 335,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-08T12:57:39Z",
      "side": 1,
      "message": "git cl format keeps the right order",
      "parentUuid": "a861d4c1_f1e2735e",
      "range": {
        "startLine": 335,
        "startChar": 4,
        "endLine": 335,
        "endChar": 17
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7bf87d48_19621f3d",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 340,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-02T14:46:28Z",
      "side": 1,
      "message": "nit: in one place you call it \"simulated network manager\" and in another \"network emulation manager\" -- could we stick to one name?",
      "range": {
        "startLine": 340,
        "startChar": 23,
        "endLine": 340,
        "endChar": 40
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e64f3cd0_4889313a",
        "filename": "api/BUILD.gn",
        "patchSetId": 5
      },
      "lineNbr": 340,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-08T12:57:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7bf87d48_19621f3d",
      "range": {
        "startLine": 340,
        "startChar": 23,
        "endLine": 340,
        "endChar": 40
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "878842b8_ac560aa7",
        "filename": "api/test/create_network_emulation_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-02T09:19:12Z",
      "side": 1,
      "message": "Note that we have two clock implementations rtc::Get... and webrtc::Clock, overriding one doesn\u0027t guarantee consistency with the other.",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "096fed64_bdf8c85f",
        "filename": "api/test/create_network_emulation_manager.h",
        "patchSetId": 5
      },
      "lineNbr": 23,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-02T09:54:13Z",
      "side": 1,
      "message": "Clock are required not to override clock, but for time measurements inside network pipeline, so client can provide right one for pipeline, if he will decide to override clock in webrtc.",
      "parentUuid": "878842b8_ac560aa7",
      "range": {
        "startLine": 23,
        "startChar": 4,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fc55486_3a95fd56",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-02T09:19:12Z",
      "side": 1,
      "message": "Is this a representation of an IP packet? Might be good to be explicit on the abstraction level here.",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 28
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d100c24_2d5761c0",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-02T09:54:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9fc55486_3a95fd56",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 28
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c419fca_739777c5",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-02T09:19:12Z",
      "side": 1,
      "message": "This constructor takes a bit too many arguments, which is hard to maintain. I suggest using brace initialisation if it\u0027s only created internally to this target or explicit field assignment if created externally.",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 33,
        "endChar": 23
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0ce81ff_dc65c1db",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-02T09:54:13Z",
      "side": 1,
      "message": "I put them in constructor to show, that all of them are required. If you field setters, some of them can be missed and it will lead to unexpected behavior somewhere in the pipeline. With brace initialization also some arguments can be missed.",
      "parentUuid": "5c419fca_739777c5",
      "range": {
        "startLine": 33,
        "startChar": 2,
        "endLine": 33,
        "endChar": 23
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94c47331_fc584ed9",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-01-02T09:19:12Z",
      "side": 1,
      "message": "Suggestion, use |this| instead of maintaining a separate id, as long as NetworkNodes are not destroyed during a session it will be unique.",
      "range": {
        "startLine": 61,
        "startChar": 28,
        "endLine": 61,
        "endChar": 31
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7c86e71_eefdb7b1",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-02T09:54:13Z",
      "side": 1,
      "message": "I think small ids will be easier to read during debugging, and main purpose of ids is to make it more traceable and debugable, it is why I think id is better. Also they will be equal between different runs (usually), which also will make it easier to debug.",
      "parentUuid": "94c47331_fc584ed9",
      "range": {
        "startLine": 61,
        "startChar": 28,
        "endLine": 61,
        "endChar": 31
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20240c6e_3e5609d9",
        "filename": "api/test/network.h",
        "patchSetId": 5
      },
      "lineNbr": 73,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-02T14:46:28Z",
      "side": 1,
      "message": "nit: isn\u0027t it typically \"const int\" and not \"int const\"?",
      "range": {
        "startLine": 73,
        "startChar": 2,
        "endLine": 73,
        "endChar": 12
      },
      "revId": "389c67805fe95203f8213e220a6ee227a32a56d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}