{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ff439cb9_af2fe69a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-06T07:45:32Z",
      "side": 1,
      "message": "One question, but code change itself looks good.",
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a887f300_68733900",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-06T10:57:10Z",
      "side": 1,
      "message": "Danil, I think you\u0027re more familiar with the current RTCP path.",
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c45c74b_40cf4080",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 849,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-06T07:45:32Z",
      "side": 1,
      "message": "If we have separated RTP and RTCP packets earlier, it seems a bit brittle to pass them the same path and leave for the receiver to infer protocol from the packet contents.\n\nWhen using rtp mux (common case?), I think we take some extra steps to ensure that no rtp packet can look like an rtcp packet, but is that true if separate ports are used for rtp and rtcp?",
      "range": {
        "startLine": 849,
        "startChar": 2,
        "endLine": 849,
        "endChar": 34
      },
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f87893e_46065568",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 849,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-06T08:51:47Z",
      "side": 1,
      "message": "As is (without this CL), the code paths do already merge here:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/call/call.cc;drc\u003deb9c3f237b110a5e5a06c3a0f20c4523dc645264;l\u003d1493\n\nSo it looks like the PacketReceiver implementation is already expected to infer the protocol from the packet. Following the Call layer btw, there is additional muxing that happens for rtp packets.\n\nOne functional difference that this change introduces is this:\n\nBefore: All rtcp packets are delivered to Call::DeliverRtcp() with MediaType::ANY.\nAfter: rtcp packets are delivered to Call::DeliverRtcp() with MediaType::VIDEO or MediaType::AUDIO.\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/call/call.cc;drc\u003dc3fe176a27dcad95b576fa233c63d7238b138af4;l\u003d1362\n\nAs far as I\u0027ve been able to confirm, this is \"more correct\" and before there was overhead involved with attempting to deliver all rtcp packets to all streams.",
      "parentUuid": "8c45c74b_40cf4080",
      "range": {
        "startLine": 849,
        "startChar": 2,
        "endLine": 849,
        "endChar": 34
      },
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6fa1269_eb43ec1c",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 849,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-06T09:04:17Z",
      "side": 1,
      "message": "I find it a bit confusing, but unrelated to this cl.\n\nFor one, as far as I\u0027m aware, for RTP the early split into AUDIO or VIDEO is based on mid, or for lack of mid, on payload type. Doesn\u0027t seem applicable for RTCP.\n\nSecond, shouldn\u0027t sender and receiver reports in RTCP be able to carry information about any mix of streams in the same RTP session, including both audio and video? Then classifying all RTCP as either audio or video seems a bit strange.\n\nI seem to recall that the audio/video split makes RTCP be processed twice in some parts of the code. Do we get RTCP messages delivered twice to Call? If so, the change is from twice, always MediaType::ANY to twice, once as MediaType::AUDIO, once as MediaType::VIDEO.",
      "parentUuid": "7f87893e_46065568",
      "range": {
        "startLine": 849,
        "startChar": 2,
        "endLine": 849,
        "endChar": 34
      },
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "060fe59e_5b2bcfe1",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 849,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-06T10:05:18Z",
      "side": 1,
      "message": "I don\u0027t _think_ rtcp packets are delivered twice to Call... unless they somehow get delivered via more than one transport instance?\n\nWith MediaType::ANY, each rtcp packet does get delivered to both audio and video streams, all send and receive. Downstream from there, that goes into potentially multiple instances of RTCPReceiver (IncomingPacket()) and RtpVideoSender (DeliverRtcp()).\n\nIn both of those cases (send/receive), the packets flow through ModuleRtpRtcpImpl2::IncomingRtcpPacket. So if you put a breakpoint on that function, you will likely see it hit twice for the same packet, same bidirectional channel. Could that be it?\n\nI am confused by this too. I get the feeling that this isn\u0027t by design. There\u0027s a lot of duplicate work going on and a lot of locks being taken for every received packet, so there\u0027s room for improvement.\n\nHowever, as to make this change less risky, I\u0027m wondering if I should change DeliverRtcp to not check the media type at all and essentially proceed as if it was MediaType::ANY. Wdyt?",
      "parentUuid": "b6fa1269_eb43ec1c",
      "range": {
        "startLine": 849,
        "startChar": 2,
        "endLine": 849,
        "endChar": 34
      },
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9a30b73_207288ef",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 849,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-06T10:57:10Z",
      "side": 1,
      "message": "To me, tt seems safest to keep letting DeliverRtcp deliver all rtcp to all streams. And make a separate cl, if it makes sense to change that.",
      "parentUuid": "060fe59e_5b2bcfe1",
      "range": {
        "startLine": 849,
        "startChar": 2,
        "endLine": 849,
        "endChar": 34
      },
      "revId": "5181a78cf318c4d673fa2b14b156ba6354081096",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}