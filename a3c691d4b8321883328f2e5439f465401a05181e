{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c759901f_32b468d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-25T02:21:24Z",
      "side": 1,
      "message": "Hi Mirko, could you review this CL? This CL aligns the video encoder tool with some features from Chromium\u0027s video_encode_accelerator_tests. This alignment will make it easier to compare the quality of HW and SW encoding outputs between the two tools.",
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "170d9b9a_c2abb375",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-06-26T09:49:41Z",
      "side": 1,
      "message": "Can these be merged into 1 parameter, input_file, and select reader based on extension (absl::EndsWith(...))?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 62,
        "endChar": 62
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f24277fa_6dc2eb19",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-27T02:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "170d9b9a_c2abb375",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 62,
        "endChar": 62
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "933531f4_fc2cce23",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-06-25T07:50:46Z",
      "side": 1,
      "message": "This new default means that there are no key frames by default (--frames defaults to 300).\n\nI think this is OK, and it also looks like a good default. I just want to check this is by design.",
      "range": {
        "startLine": 68,
        "startChar": 10,
        "endLine": 68,
        "endChar": 14
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2985634_c749bfd2",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-25T08:24:41Z",
      "side": 1,
      "message": "Yes, Both SW and HW encoder set the key frame interval as 3000 currently.",
      "parentUuid": "933531f4_fc2cce23",
      "range": {
        "startLine": 68,
        "startChar": 10,
        "endLine": 68,
        "endChar": 14
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b29d4667_30f97f50",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-06-25T07:50:46Z",
      "side": 1,
      "message": "I think an RTC_CHECK that the area is not 0 is good to have and prevents issues later on when kBitrateTable[index - 1] is used.",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 34
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "de4bd1c9_64a88b91",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 192,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-25T08:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b29d4667_30f97f50",
      "range": {
        "startLine": 192,
        "startChar": 0,
        "endLine": 192,
        "endChar": 34
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3613cfe2_881844c9",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-06-25T07:50:46Z",
      "side": 1,
      "message": "Sergey, can you take a look at this part?",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 213,
        "endChar": 64
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0b04e203_39ff2df9",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 213,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-06-27T08:46:19Z",
      "side": 1,
      "message": "I do no completely understand what\u0027s happening here. But, given that this is a test tool we do not rely on in prod, i\u0027m fine having this logic.",
      "parentUuid": "3613cfe2_881844c9",
      "range": {
        "startLine": 193,
        "startChar": 0,
        "endLine": 213,
        "endChar": 64
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3692b378_332505c1",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-06-25T07:50:46Z",
      "side": 1,
      "message": "This function is doing 2 things:\n\n1. Calculate/Accumulate PSNR.\n2. Print the results at the end.\n\nI suggest to only do 1, and have another function to invoke to get the average PSNR when needed.",
      "range": {
        "startLine": 249,
        "startChar": 0,
        "endLine": 275,
        "endChar": 3
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29cb9c10_a8ff88f6",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-25T08:24:41Z",
      "side": 1,
      "message": "Thanks Mirko, please take another look.",
      "parentUuid": "3692b378_332505c1",
      "range": {
        "startLine": 249,
        "startChar": 0,
        "endLine": 275,
        "endChar": 3
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97800eb8_fd50f86a",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 275,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-27T02:54:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "29cb9c10_a8ff88f6",
      "range": {
        "startLine": 249,
        "startChar": 0,
        "endLine": 275,
        "endChar": 3
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd2b2011_e7bd3eb7",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 321,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-06-25T07:50:46Z",
      "side": 1,
      "message": "Why not using a std::vector and have the index of the element as implicit frame ID?",
      "range": {
        "startLine": 321,
        "startChar": 2,
        "endLine": 321,
        "endChar": 33
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e68296eb_5b239a24",
        "filename": "rtc_tools/video_encoder/video_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 321,
      "author": {
        "id": 9741
      },
      "writtenOn": "2024-06-25T08:24:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd2b2011_e7bd3eb7",
      "range": {
        "startLine": 321,
        "startChar": 2,
        "endLine": 321,
        "endChar": 33
      },
      "revId": "a3c691d4b8321883328f2e5439f465401a05181e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}