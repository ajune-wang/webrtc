{
  "comments": [
    {
      "key": {
        "uuid": "b7566dab_e7c628e1",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T07:34:17Z",
      "side": 1,
      "message": "Where does the number 48 come from? Document with a comment?",
      "range": {
        "startLine": 668,
        "startChar": 25,
        "endLine": 668,
        "endChar": 27
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1965ce5e_54c176ed",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-07-01T10:10:29Z",
      "side": 1,
      "message": "Yes please. Or a function-local named constant.",
      "parentUuid": "b7566dab_e7c628e1",
      "range": {
        "startLine": 668,
        "startChar": 25,
        "endLine": 668,
        "endChar": 27
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df04aa16_efad12db",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-01T12:18:30Z",
      "side": 1,
      "message": "opus_packet_parse is defined that way.\n\nhttps://cs.chromium.org/chromium/src/third_party/opus/src/include/opus.h?type\u003dcs\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d527\n\nI thought compiler would complain if it is not 48, but it seems not.\n\nAdding a named constant now.",
      "parentUuid": "1965ce5e_54c176ed",
      "range": {
        "startLine": 668,
        "startChar": 25,
        "endLine": 668,
        "endChar": 27
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34cd5328_8fb5338b",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T07:34:17Z",
      "side": 1,
      "message": "Nit: cares -\u003e care",
      "range": {
        "startLine": 671,
        "startChar": 49,
        "endLine": 671,
        "endChar": 54
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47f4a472_4a99fbaf",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-01T12:18:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34cd5328_8fb5338b",
      "range": {
        "startLine": 671,
        "startChar": 49,
        "endLine": 671,
        "endChar": 54
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09481bb9_3ea95bca",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 686,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-07-01T10:10:29Z",
      "side": 1,
      "message": "Nit: payload_length_ms \u003c 10 would be easier on at least my eyes...",
      "range": {
        "startLine": 686,
        "startChar": 6,
        "endLine": 686,
        "endChar": 28
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94f2be93_6580c16e",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 686,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-01T12:18:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "09481bb9_3ea95bca",
      "range": {
        "startLine": 686,
        "startChar": 6,
        "endLine": 686,
        "endChar": 28
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4442e53_6724b0a4",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-07-01T10:10:29Z",
      "side": 1,
      "message": "Don\u0027t initialize; we always set the variable below, and if we didn\u0027t, we\u0027d want UBSan to notice.",
      "range": {
        "startLine": 689,
        "startChar": 18,
        "endLine": 689,
        "endChar": 21
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afadaef2_fb02428a",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-01T12:18:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d4442e53_6724b0a4",
      "range": {
        "startLine": 689,
        "startChar": 18,
        "endLine": 689,
        "endChar": 21
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e84c1d70_25ea1745",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T07:34:17Z",
      "side": 1,
      "message": "Why (D)CHECK this? Should we not handle multi-channel packets?",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29dd8bd1_d9c75f33",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-01T07:57:18Z",
      "side": 1,
      "message": "AFAIK, this function can only return 1 or 2. \n\nhttps://cs.chromium.org/chromium/src/third_party/opus/src/src/opus_decoder.c?type\u003dcs\u0026q\u003dopus_packet_get_nb_channels\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d959\n\nBut yes, how about multi-channel?\n\nWe need to use multistream APIs\nhttps://mf4.xiph.org/jenkins/view/opus/job/opus/ws/doc/html/group__opus__multistream.html\n\nBasically, a multichannel Opus payload should have many frames, each can be mono/stereo and should be mapped to multichannel. The payload itself has no mapping information, and therefore \"the encoder and decoder must negotiate the channel configuration before the decoder can successfully interpret the data in the packets produced by the encoder.\"\n\nHow FEC should work in multichannel case is unclear. We should avoid multichannel payload to be parsed by this method actually.",
      "parentUuid": "e84c1d70_25ea1745",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc82b1a7_f493c0b5",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T14:33:57Z",
      "side": 1,
      "message": "OK. So what will happen currently if you give this code a multi-channel packet? Will it consistently return 0 or 1?",
      "parentUuid": "29dd8bd1_d9c75f33",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e181e94_7933d9d0",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-02T12:22:42Z",
      "side": 1,
      "message": "I notice that the method is used in multichannel decoding\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/audio_coding/codecs/opus/audio_decoder_multi_channel_opus_impl.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d126\n\nI don\u0027t know how well it is tested.\n\nThis method takes the first frame and returns 1 if it has LBRR in it. I don\u0027t know if it tells FEC correctly or not in multichannel case.\n\nI will make an attempt to avoid it being used in multichannel case.",
      "parentUuid": "bc82b1a7_f493c0b5",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87c12bfc_d6cce166",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-03T08:10:50Z",
      "side": 1,
      "message": "I took another look at the Opus spec. A multistream packet can be seen as a simple concatenation of a number of elementary packet, each of which correspond to a channel. So what we are doing here is to parse the first elementary packet, and tell if it has FEC or not. It may not be same for all channels, but can be a good guess.",
      "parentUuid": "4e181e94_7933d9d0",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}