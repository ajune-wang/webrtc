{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e50bd6aa_d7b847c2",
        "filename": "logging/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 338,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "I think this comment primarily refers to the blob_encoding.h and delta_encoding.h files, which contain both encoding and decoding even though the event log implementation only wants the encoding and the event log parser only wants the decoding part.\n\nThat said, I\u0027m not sure this is important enough that we\u0027ll get back to it.",
      "range": {
        "startLine": 337,
        "startChar": 0,
        "endLine": 338,
        "endChar": 71
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4d68166_be3d6e00",
        "filename": "logging/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "I don\u0027t think it needs to be included here. What\u0027s the error?",
      "range": {
        "startLine": 409,
        "startChar": 0,
        "endLine": 409,
        "endChar": 72
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e58684b_c78f3048",
        "filename": "logging/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 427,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "nit: remove",
      "range": {
        "startLine": 427,
        "startChar": 0,
        "endLine": 427,
        "endChar": 87
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50efce96_a88f09a5",
        "filename": "logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "Is this needed?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 31
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "329937f5_fa48aef6",
        "filename": "logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "Can this happen? Doesn\u0027t EncodeDeltas() always produce a valid encoding?",
      "range": {
        "startLine": 59,
        "startChar": 10,
        "endLine": 59,
        "endChar": 24
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89902fe4_ff4879ce",
        "filename": "logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "Malformed logs shouldn\u0027t crash. The event log parser uses a ParseStatus object  https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/logging/rtc_event_log/events/rtc_event_field_encoding_parser.h;l\u003d27;drc\u003de94294450e2ac29ad5ce1f3c2be745abe71d7d88\nand convenience macros\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/logging/rtc_event_log/rtc_event_log_parser.cc;l\u003d52;drc\u003d6c032cb8356b0d3f717c4fcf50796241f2bba6c2\nto propagate errors.\n\nMaybe these should be broken out to a separate file?",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 160,
        "endChar": 46
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a15e408a_20f870c9",
        "filename": "logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "Maybe string_view?\n\nI assume an extended into of size 0 isn\u0027t valid, so an empty string view could signal that the value doesn\u0027t exist?",
      "range": {
        "startLine": 183,
        "startChar": 36,
        "endLine": 183,
        "endChar": 48
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72be4367_c19ddcf0",
        "filename": "logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 185,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "If we can\u0027t use string_view, could we make this a bit clearer? :)",
      "range": {
        "startLine": 185,
        "startChar": 13,
        "endLine": 185,
        "endChar": 32
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "363d99ba_980a1ef9",
        "filename": "logging/rtc_event_log/dependency_descriptor_encoder_decoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "It looks like `i` only is used in the expression `res[i]`. Maybe pass `res[i]` instead and avoid the implicit reference capture?\n\nAlternatively, call or inline `get_extended(i)` here to make the usage of `recreate_raw_dd` easier below?",
      "range": {
        "startLine": 191,
        "startChar": 10,
        "endLine": 191,
        "endChar": 15
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd842559_17719f56",
        "filename": "logging/rtc_event_log/rtc_event_log2.proto",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "nit: optional - set if any DD contains extended information.\n\nImo, this is optional in the same sense as header extensions; see line 164 below. The annotation is meant to signal whether the parser should treat a missing value as an error.",
      "range": {
        "startLine": 122,
        "startChar": 0,
        "endLine": 123,
        "endChar": 49
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a04d2852_a360aa3d",
        "filename": "logging/rtc_event_log/rtc_event_log2.proto",
        "patchSetId": 3
      },
      "lineNbr": 172,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-07T17:04:53Z",
      "side": 1,
      "message": "Maybe add a comment that this encodes the dependency descriptors for all packets in the batch rather than just the base element.",
      "range": {
        "startLine": 172,
        "startChar": 11,
        "endLine": 172,
        "endChar": 40
      },
      "revId": "810291f0cff6275863800cf42fa8360dc89eaa6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}