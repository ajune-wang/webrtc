{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b9c45a42_2b8b7ea4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-02-28T07:51:55Z",
      "side": 1,
      "message": "I would have loved to see some way of unittesting this as it appears like we there are some errors in the code.",
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4d0a10a_c40c4afe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-02-28T10:47:31Z",
      "side": 1,
      "message": "Would it be possible to load and set up vivid on the test machines? Then we\u0027d have an independent source generating frames.\n\nIf we write the code generating frames as part of the test, we\u0027d be at risk of just testing the test.",
      "parentUuid": "b9c45a42_2b8b7ea4",
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fcf10e4_4e635048",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-02-28T07:51:55Z",
      "side": 1,
      "message": "What are these, and why are they needed?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5bf70286_87f9f776",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-02-28T10:47:31Z",
      "side": 1,
      "message": "These are here because the headers the Firefox build machines were old enough to not have these. Do you have a minimum linux kernel version that you support?",
      "parentUuid": "1fcf10e4_4e635048",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb7f5c6e_15f4dd46",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-03-07T09:16:02Z",
      "side": 1,
      "message": "Mirko, not sure you\u0027re right for this, but could you perhaps comment on the recommended way of dealing with issues like this?",
      "parentUuid": "5bf70286_87f9f776",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49eb4c91_4cd5f806",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-05-03T06:23:40Z",
      "side": 1,
      "message": "I see these defined in the NDK sysroot header (https://source.chromium.org/chromium/chromium/src/+/main:third_party/android_ndk/toolchains/llvm/prebuilt/linux-x86_64/sysroot/usr/include/linux/videodev2.h)\n\nI don\u0027t think we have a process or a recommended way to handle this. In general I would at least add a comment explaining why they are here and maybe associate a bug to remove this after some time.\n\nHow old is the kernel on the machine on which you build?",
      "parentUuid": "bb7f5c6e_15f4dd46",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2203c802_2f1e7be8",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-05-03T09:00:14Z",
      "side": 1,
      "message": "So we use debian 11 to build, but the sysroot is from debian 8.11, which has kernel 3.16.\n\nIf you prefer I can lift these defines out and patch them in on our end.",
      "parentUuid": "49eb4c91_4cd5f806",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b11bea5_37733d10",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-05-03T11:09:35Z",
      "side": 1,
      "message": "\u003e So we use debian 11 to build, but the sysroot is from debian 8.11, which has kernel 3.16.\n\u003e \n\u003e If you prefer I can lift these defines out and patch them in on our end.\n\nIf that is easy it can be a way forward.\n\nBut I am also OK keeping them here (as long as v4l2_fourcc is available, having some backwards compat macros is not that bad). But if we keep them here, let\u0027s add a comment and a TODO that these are here only to support 3.16.",
      "parentUuid": "2203c802_2f1e7be8",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 27
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25796ba5_0d850bba",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-02-28T07:51:55Z",
      "side": 1,
      "message": "Looks wrong, should this be kBGR24?",
      "range": {
        "startLine": 287,
        "startChar": 39,
        "endLine": 287,
        "endChar": 45
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77b22959_cb816c48",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 287,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-04-24T13:47:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "25796ba5_0d850bba",
      "range": {
        "startLine": 287,
        "startChar": 39,
        "endLine": 287,
        "endChar": 45
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12a6e438_e62002b8",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-02-28T07:51:55Z",
      "side": 1,
      "message": "RGB24?",
      "range": {
        "startLine": 289,
        "startChar": 39,
        "endLine": 289,
        "endChar": 45
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1db473a6_e2bc84e7",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-04-24T13:47:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12a6e438_e62002b8",
      "range": {
        "startLine": 289,
        "startChar": 39,
        "endLine": 289,
        "endChar": 45
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b19b2224_4b02c250",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-02-28T07:51:55Z",
      "side": 1,
      "message": "This looks wrong from a quick glance, not knowing details it seems like it matches V4L2_PIX_FMT_ABGR32?\n\nSame for some of the others. It could be that I\u0027m just not understanding the mapping, but there will in that case likely also be others not understanding this...",
      "range": {
        "startLine": 301,
        "startChar": 39,
        "endLine": 301,
        "endChar": 44
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d610750_9009aad1",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-02-28T10:47:31Z",
      "side": 1,
      "message": "The naming discrepancy is because `VideoType` maps to libyuv\u0027s naming scheme, whereas V4L2 does it differently.\n\nlibyuv format docs are here: https://chromium.googlesource.com/libyuv/libyuv/+show/master/docs/formats.md\nThey say as an example on ARGB:\n```\nThe fourcc describes the order of channels in a ***register***.\nA fourcc provided by capturer, can be thought of string, e.g. \"ARGB\".\nOn little endian machines, as an int, this would have \u0027A\u0027 in the lowest byte.  The FOURCC macro reverses the order:\n    #define FOURCC(a, b, c, d) (((uint32)(a)) | ((uint32)(b) \u003c\u003c 8) | ((uint32)(c) \u003c\u003c 16) | ((uint32)(d) \u003c\u003c 24))\nSo the \"ARGB\" string, read as an uint32, is\n    FOURCC_ARGB \u003d FOURCC(\u0027A\u0027, \u0027R\u0027, \u0027G\u0027, \u0027B\u0027)\nIf you were to read ARGB pixels as uint32\u0027s, the alpha would be in the high byte, and the blue in the lowest byte.  In memory, these are stored little endian, so \u0027B\u0027 is first, then \u0027G\u0027, \u0027R\u0027 and \u0027A\u0027 last.\n```\n \n\nV4L2 documents its (rgb) formats here: https://www.kernel.org/doc/html/v6.2/userspace-api/media/v4l/pixfmt-rgb.html In 2.5.2 on 8-bits-per-component it says:\n```\nThey are named based on the order of the RGB components as stored in memory, and on the total number of bits per pixel.\n```\n\nI.e., libyuv ARGB is stored in memory as BGRA whereas V4L2 ARGB is stored in memory as ARGB.",
      "parentUuid": "b19b2224_4b02c250",
      "range": {
        "startLine": 301,
        "startChar": 39,
        "endLine": 301,
        "endChar": 44
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "480ff108_258ea9f2",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 5525
      },
      "writtenOn": "2023-03-07T09:16:02Z",
      "side": 1,
      "message": "I suspected something like that. Perhaps add a comment about this so others don\u0027t get confused.",
      "parentUuid": "3d610750_9009aad1",
      "range": {
        "startLine": 301,
        "startChar": 39,
        "endLine": 301,
        "endChar": 44
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd07e3e8_835ddf6e",
        "filename": "modules/video_capture/linux/device_info_v4l2.cc",
        "patchSetId": 1
      },
      "lineNbr": 301,
      "author": {
        "id": 8178
      },
      "writtenOn": "2023-04-24T13:47:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "480ff108_258ea9f2",
      "range": {
        "startLine": 301,
        "startChar": 39,
        "endLine": 301,
        "endChar": 44
      },
      "revId": "826530fa699826fb8c1f4e5a690d4ed77c506391",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}