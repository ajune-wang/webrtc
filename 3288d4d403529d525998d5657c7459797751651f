{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60b2a1e7_b7ec9520",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "Nice work!",
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "645b77fb_50584dfb",
        "filename": "test/pc/e2e/analyzer/video/default_video_quality_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 12234
      },
      "writtenOn": "2023-03-18T20:38:43Z",
      "side": 1,
      "message": "Would it make sense to have captured_frames_in_flight_ part of the FramesStorage ?\nIt feels like it would help to centralize some logic.",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 182,
        "endChar": 29
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1088b98b_0cfd2078",
        "filename": "test/pc/e2e/analyzer/video/dvqa/frames_storage.cc",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "I think it is better to DCHECK on this condition instead of returning.\n\nWhile calling HeapifyUp(0) is OK, calling it with index \u003e\u003d the size of the heap sounds like an error.",
      "range": {
        "startLine": 60,
        "startChar": 17,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55ccd316_81f9ffaf",
        "filename": "test/pc/e2e/analyzer/video/dvqa/frames_storage.cc",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "Same on this one, let\u0027s DCHECK in case this is beyond the underlying vector.",
      "range": {
        "startLine": 77,
        "startChar": 39,
        "endLine": 77,
        "endChar": 44
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "712a587f_869ef18e",
        "filename": "test/pc/e2e/analyzer/video/dvqa/frames_storage.h",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "\"Frames are cleaned up when the time elapsed from their capture time exceeds `max_storage_duration`\".",
      "range": {
        "startLine": 26,
        "startChar": 56,
        "endLine": 27,
        "endChar": 22
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "500ee697_feef56eb",
        "filename": "test/pc/e2e/analyzer/video/dvqa/frames_storage.h",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "\"Removes the frame identified by `frame_id` from the storage. No error happens in case there isn\u0027t a frame identified by `frame_id`.\".",
      "range": {
        "startLine": 46,
        "startChar": 5,
        "endLine": 46,
        "endChar": 55
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18dd8440_5108ff99",
        "filename": "test/pc/e2e/analyzer/video/dvqa/frames_storage.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "Let\u0027s add a comment about this being a min-heap based on HeapNode::captured_time.",
      "range": {
        "startLine": 68,
        "startChar": 2,
        "endLine": 68,
        "endChar": 30
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7dfc5b6_11fe8d84",
        "filename": "test/pc/e2e/analyzer/video/dvqa/frames_storage_test.cc",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-03-18T20:16:46Z",
      "side": 1,
      "message": "s/Left/Remaining",
      "range": {
        "startLine": 89,
        "startChar": 32,
        "endLine": 89,
        "endChar": 36
      },
      "revId": "3288d4d403529d525998d5657c7459797751651f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}