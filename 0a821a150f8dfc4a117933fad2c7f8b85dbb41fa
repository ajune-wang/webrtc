{
  "comments": [
    {
      "key": {
        "uuid": "42c5314a_a4f5f2ac",
        "filename": "modules/rtp_rtcp/source/forward_error_correction.cc",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-07-09T11:51:56Z",
      "side": 1,
      "message": "Untrivial change: order of check and length setting is switched.",
      "revId": "0a821a150f8dfc4a117933fad2c7f8b85dbb41fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bb6d502_421c8d72",
        "filename": "modules/rtp_rtcp/source/forward_error_correction.cc",
        "patchSetId": 2
      },
      "lineNbr": 546,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-07-10T08:27:04Z",
      "side": 1,
      "message": "lgtm.",
      "parentUuid": "42c5314a_a4f5f2ac",
      "revId": "0a821a150f8dfc4a117933fad2c7f8b85dbb41fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5eb1629_de6e8675",
        "filename": "modules/rtp_rtcp/source/forward_error_correction.cc",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-07-09T11:51:56Z",
      "side": 1,
      "message": "Untrivial change: correct payload length passed here now.",
      "revId": "0a821a150f8dfc4a117933fad2c7f8b85dbb41fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a263b870_1c7e87d5",
        "filename": "modules/rtp_rtcp/source/forward_error_correction.cc",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-07-10T08:27:04Z",
      "side": 1,
      "message": "lgtm.",
      "parentUuid": "e5eb1629_de6e8675",
      "revId": "0a821a150f8dfc4a117933fad2c7f8b85dbb41fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e19336a_248ef61a",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-07-10T08:27:04Z",
      "side": 1,
      "message": "Side question: Could we infer |payload_length| from data_buffer.size() and |rtp_header_length|? That would simplify the callers.",
      "range": {
        "startLine": 137,
        "startChar": 11,
        "endLine": 137,
        "endChar": 25
      },
      "revId": "0a821a150f8dfc4a117933fad2c7f8b85dbb41fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4702fb26_e6648556",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator.cc",
        "patchSetId": 2
      },
      "lineNbr": 137,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-07-10T09:10:29Z",
      "side": 1,
      "message": "Done. I though that sometimes payload_length+rtp_header_length may be larger that data_buffer.size() due to padding, but it was a test artifact. Fixed this and an offending test.\n\nBasically, payload_size isn\u0027t needed at all. Only total packet length and header size are needed.",
      "parentUuid": "7e19336a_248ef61a",
      "range": {
        "startLine": 137,
        "startChar": 11,
        "endLine": 137,
        "endChar": 25
      },
      "revId": "0a821a150f8dfc4a117933fad2c7f8b85dbb41fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}