{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60540131_2dbe5f27",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-09-04T13:56:06Z",
      "side": 1,
      "message": "Almost happy.",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5265fb12_50066074",
        "filename": "p2p/base/tcp_port.cc",
        "patchSetId": 6
      },
      "lineNbr": 575,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-09-04T13:56:06Z",
      "side": 1,
      "message": "The fact that this is untested is somewhat weird.",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0fcade7_0b5936f6",
        "filename": "p2p/base/tcp_port.cc",
        "patchSetId": 6
      },
      "lineNbr": 635,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-09-04T13:56:06Z",
      "side": 1,
      "message": "This function doesn\u0027t do only what it says on the label (it does more).\nSuggest calling it DisconnectAndClose.",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e55c075_11ac8cf4",
        "filename": "p2p/base/tcp_port.cc",
        "patchSetId": 6
      },
      "lineNbr": 635,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-09-04T17:37:06Z",
      "side": 1,
      "message": "It does only disconnect the signals actually - it calls UnsubscribeClose() (and not Close()).",
      "parentUuid": "c0fcade7_0b5936f6",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eda79b0b_89fdeb50",
        "filename": "p2p/base/tcp_port.cc",
        "patchSetId": 6
      },
      "lineNbr": 635,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-09-04T19:30:03Z",
      "side": 1,
      "message": "So DisconnectAndUnsubscribeClose? (UnsubscribeClose is a weird name too....)",
      "parentUuid": "3e55c075_11ac8cf4",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3925366b_2a75da8a",
        "filename": "p2p/base/tcp_port.cc",
        "patchSetId": 6
      },
      "lineNbr": 635,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-09-04T20:00:05Z",
      "side": 1,
      "message": "That makes it more confusing imho. I don\u0027t see a need to echo the names of all the implementations behind the callbacks, or to call out the Close event specifically and not the others. Doing so just raises questions. The method just disconnects callbacks from the socket, the rest is implementation detail.\n\nIn case the UnsubscribeClose() method is confusing - it\u0027s there instead of what used to be a sigslot signal. Instead of `SignalEventClose.connect()` and `SignalEventClose.disconnect()`, we have `SubscribeClose()` and `UnsubscribeClose`.  Using the words subscribe/unsubscribe to connect to event sources, is fairly common practice, so weird or not - it\u0027s not unusual.\n\nBtw, [Un]SubscribeClose() methods use `CallbackList\u003c\u003e`, which uses yet another set of names for these callback subscription operations.",
      "parentUuid": "eda79b0b_89fdeb50",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e206d93_effffd2f",
        "filename": "p2p/base/tcp_port.cc",
        "patchSetId": 6
      },
      "lineNbr": 635,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-09-04T20:05:38Z",
      "side": 1,
      "message": "Yes, in this case the problem is that Close is used as both an event name and as a verb. If it had been CloseEvent in all cases, it would have been obvious.\n\ngo/sigslot-to-callback-list recommends SubscribeSomeEvent and UnsubscribeSomeEvent for what used to be SignalSomeEvent. If the event was \"Close\", this is the result.",
      "parentUuid": "3925366b_2a75da8a",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33863472_6456e9a8",
        "filename": "p2p/base/tcp_port.h",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-09-04T13:56:06Z",
      "side": 1,
      "message": "Why does this have to move to the \"protected\" section?\n\nI don\u0027t think this makes sense given that \"friend\" is section-agnostic.",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efdc1183_4f35b646",
        "filename": "p2p/base/tcp_port.h",
        "patchSetId": 6
      },
      "lineNbr": 159,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-09-04T17:37:06Z",
      "side": 1,
      "message": "oops, I meant to move the friend declaration to where MaybeReconnect() is. I must have unintentionally moved the private section to below MaybeReconnect when editing something else\n\nFixed now and moved the friend declaration to immediately before MaybeReconnect.",
      "parentUuid": "33863472_6456e9a8",
      "revId": "c8899554151d09d4aa80174c9f526e61ccfc4b44",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}