{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ddd38d7_141ed03e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-12T12:00:23Z",
      "side": 1,
      "message": "Is it an acceptable way to inject file generic_frame_info for vp9?\nWould you want be to rethink test suit (rather than copy-past some tests)\n",
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae1f0641_84ae7c6c",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-14T11:38:34Z",
      "side": 1,
      "message": "I don\u0027t see why this is necessary? Preparation for exotic encoding structures?",
      "range": {
        "startLine": 348,
        "startChar": 10,
        "endLine": 348,
        "endChar": 52
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed0dd578_549c4c36",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-14T15:44:16Z",
      "side": 1,
      "message": "that is for L3T1 structure.\nAfter reading through VP9 test cases and full-svc structure in particular, I noticed that VP9 sets video_header.frame_type \u003d kVideoFrameKey for all layer frames in the first picture/temporal unit.\n\nthus added this condition to avoid sending attached_structure on all but lowest active spatial layer.\n\nlet me add a comment here.",
      "parentUuid": "ae1f0641_84ae7c6c",
      "range": {
        "startLine": 348,
        "startChar": 10,
        "endLine": 348,
        "endChar": 52
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3179f351_7d9620bf",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 3
      },
      "lineNbr": 348,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-15T13:38:19Z",
      "side": 1,
      "message": "Ah, I see",
      "parentUuid": "ed0dd578_549c4c36",
      "range": {
        "startLine": 348,
        "startChar": 10,
        "endLine": 348,
        "endChar": 52
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23c46296_8a7cdddc",
        "filename": "modules/video_coding/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-14T11:38:34Z",
      "side": 1,
      "message": "We should move the scalability logic outside of AV1. I would prefer if we started with that.",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 569,
        "endChar": 43
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83597414_a41540f8",
        "filename": "modules/video_coding/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-14T15:44:16Z",
      "side": 1,
      "message": "make sense.\nWhat would be appropriate place for it?\n/modules/video_coding/codecs/scalability_structures/\n/modules/video_coding/scalability_structures/\n/modules/video_coding/svc/",
      "parentUuid": "23c46296_8a7cdddc",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 569,
        "endChar": 43
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cbecc81_b60dc274",
        "filename": "modules/video_coding/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-15T13:38:19Z",
      "side": 1,
      "message": "/modules/video_coding/svc/ SGTM",
      "parentUuid": "83597414_a41540f8",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 569,
        "endChar": 43
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ccbfc25_9438ead1",
        "filename": "modules/video_coding/BUILD.gn",
        "patchSetId": 3
      },
      "lineNbr": 569,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-15T16:51:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5cbecc81_b60dc274",
      "range": {
        "startLine": 568,
        "startChar": 0,
        "endLine": 569,
        "endChar": 43
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f361960_ae96761e",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 223,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-14T11:38:34Z",
      "side": 1,
      "message": "nit: |vp9_settings|, |settings| or something like that",
      "range": {
        "startLine": 223,
        "startChar": 23,
        "endLine": 223,
        "endChar": 26
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a582172c_884c08c2",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 223,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-14T15:44:16Z",
      "side": 1,
      "message": "confusing name is a hint the alias is not needed.\nExcept for the num_spatial_layers there is only single usage of it.",
      "parentUuid": "9f361960_ae96761e",
      "range": {
        "startLine": 223,
        "startChar": 23,
        "endLine": 223,
        "endChar": 26
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "392d270d_7abcacea",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-14T11:38:34Z",
      "side": 1,
      "message": "Not important, but something I think would be more straight forward:\n\nStart with an \n  absl::optional\u003cstd::pair\u003cint,int\u003e\u003e scaling_factor;\n\nThen loop through all the layers-1 and check that scaling_factor is either empty (and then assign it), or that the scaling factor between these two layers are the same as scaling_factor.",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 241,
        "endChar": 38
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f188f6b_1b8c3344",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 241,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-14T15:44:16Z",
      "side": 1,
      "message": "I do not like \"assign when empty\" pattern when that happens exactly once - on the first iteration.\nAlso, right now only two factors are supported: \"2:1\" and \"1.5:1\", same as in webrtc-svc spec.\nI\u0027ve added few comments. do they improve this ratio validation?",
      "parentUuid": "392d270d_7abcacea",
      "range": {
        "startLine": 241,
        "startChar": 2,
        "endLine": 241,
        "endChar": 38
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b669242f_78ac7177",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1414,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-14T11:38:34Z",
      "side": 1,
      "message": "Not for this CL, but shouldn\u0027t we change\n  absl::optional\u003cGenericFrameInfo\u003e OnEncodeDone(LayerFrameConfig config)\n\nto\n  GenericFrameInfo OnEncodeDone(const LayerFrameConfig\u0026 config)\n\n(or something like that)",
      "range": {
        "startLine": 1414,
        "startChar": 38,
        "endLine": 1414,
        "endChar": 52
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2d6c060_a2e5ec16",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1414,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-14T15:44:16Z",
      "side": 1,
      "message": "I guess you are right.\nI had some ideas for current signature. but looking at them now, they seems likes a hasty optimization. and probably not optimization at all.\n\nalso returning optional allows to auto-disable DD when there is an error.\nthough may be that should be catched with a DCHECK instead.\nI\u0027ll try to change that signature.",
      "parentUuid": "b669242f_78ac7177",
      "range": {
        "startLine": 1414,
        "startChar": 38,
        "endLine": 1414,
        "endChar": 52
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4beda2d_64724d54",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-14T11:38:34Z",
      "side": 1,
      "message": "Not having the generic_frame_info at this point is an error right?",
      "range": {
        "startLine": 1415,
        "startChar": 24,
        "endLine": 1415,
        "endChar": 58
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e2101bf_650fd603",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-14T15:44:16Z",
      "side": 1,
      "message": "yep, no generic_frame_info at that point indicate there was some error.\nhere I try to recover/avoid DD in such a case. thought that might not be the right way to respond to an error. what would be better way? CHECK?",
      "parentUuid": "d4beda2d_64724d54",
      "range": {
        "startLine": 1415,
        "startChar": 24,
        "endLine": 1415,
        "endChar": 58
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51e84a3c_18e8dd45",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-10-15T13:38:19Z",
      "side": 1,
      "message": "Given that OnEncodeDone will return a value I now think a CHECK might be unnecessary. Maybe a DCHECK-as-documentation, but I don\u0027t think that\u0027s necessary either?",
      "parentUuid": "2e2101bf_650fd603",
      "range": {
        "startLine": 1415,
        "startChar": 24,
        "endLine": 1415,
        "endChar": 58
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3cd3cf3f_c0b7173d",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 1415,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-10-15T16:51:36Z",
      "side": 1,
      "message": "with change of the OnEncodeDone value I also do not think any (D)CHECKing is needed here.",
      "parentUuid": "51e84a3c_18e8dd45",
      "range": {
        "startLine": 1415,
        "startChar": 24,
        "endLine": 1415,
        "endChar": 58
      },
      "revId": "d32b92d6e69d4ae3a774c1a3f6d88cac58285765",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}