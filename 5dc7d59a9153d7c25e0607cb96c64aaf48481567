{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "da0f64f8_b6e24e53",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-02T11:51:45Z",
      "side": 1,
      "message": "Too many logic changes for comfort. Usually this will cause things to happen that were previously bailing out early. If these are idempotent and fast, there is no issue; if they are not idempotent or slow, we need to be careful.\n",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8b67403_4c48b7f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-02T14:58:20Z",
      "side": 1,
      "message": "Yes this is tricky. Believe it or not, I broke this change out from an upcoming change, in order to make the review not overwhelming ðŸ˜Š",
      "parentUuid": "da0f64f8_b6e24e53",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a2870e8_a1943e06",
        "filename": "pc/audio_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-02T11:51:45Z",
      "side": 1,
      "message": "This is a logic change; the previous code would prevent SetState(kEnded) from being called more than once.",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5b30df6_17fb3b7f",
        "filename": "pc/audio_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-02T14:58:20Z",
      "side": 1,
      "message": "The check is already done in the source object itself (and an instance of AudioRtpReceiver will always use this source type):\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/pc/remote_audio_source.cc;drc\u003d4ccdf932e1706caee26b3faa33753d27f93d79ad;l\u003d96",
      "parentUuid": "4a2870e8_a1943e06",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63010c07_b9301d18",
        "filename": "pc/audio_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 163,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-03T10:04:54Z",
      "side": 1,
      "message": "OK, so SetState(kEnded) is idempotent. Ack.",
      "parentUuid": "d5b30df6_17fb3b7f",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08186e1b_45e11bbb",
        "filename": "pc/audio_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 323,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-02T11:51:45Z",
      "side": 1,
      "message": "Logic change: SetMediaChannel_w will now be called twice if calling SetMediaChanne(nullptr) twice.",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7568b88_dd2438fb",
        "filename": "pc/audio_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 323,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-02T14:58:20Z",
      "side": 1,
      "message": "which is ok. Optimizing around that case, which is not a common case, is what was in place, but isn\u0027t necessary (or justification for an additional state).\n\nIn an upcoming change, SetMediaChannel will only be called on the worker thread, so SetMediaChannel and SetMediaChannel_w will merge and the Invoke will go away.",
      "parentUuid": "08186e1b_45e11bbb",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84683592_799bad4f",
        "filename": "pc/audio_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 323,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-03T10:04:54Z",
      "side": 1,
      "message": "Seems to be idempotent, so OK.",
      "parentUuid": "d7568b88_dd2438fb",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "778fa082_128467c2",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-02T11:51:45Z",
      "side": 1,
      "message": "Logic change: we will now disconnect from the previous sink if we get RestartMediaChannel(32); RestartMediaChannel(32). Previously, that would return true without touching anything.",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c92e1d5_162f0f6e",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-02T14:58:20Z",
      "side": 1,
      "message": "The sink is set up from the same source, so that\u0027s alright. If there was a way to know if a sink is already assigned for an ssrc, we could check that from the media channel.\n\nThere are \"optimizations\" in this code, that don\u0027t necessarily make sense anymore. E.g. caching an enabled() state on the same thread that the state is stored, or checking that state from a different thread (triggering an invoke) to guard against doing an invoke to that thread.\n\nSo some of these checks may give the appearance that they\u0027re speeding things up, but they don\u0027t necessarily do that. In an upcoming change I\u0027ll be changing where we construct a proxy to the video source object. As is, we go through the proxy from the worker, which causes us to have to do a few thread hops, but it\u0027s not obvious from the code that we\u0027re doing that.",
      "parentUuid": "778fa082_128467c2",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69429dc3_81ac01b3",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-03T10:04:54Z",
      "side": 1,
      "message": "I\u0027m not so worried about speed - I assume you will catch that when you measure change results.\n\nWhat I\u0027m more worried about is things like signals being fired twice, which could damage assumptions on ordering elsewhere.\n\nI do wonder if a simple \"if (media_channel_ \u0026\u0026 ssrc_ \u003d\u003d ssrc) return\" would be worthwhile and equivalent - was_stopped is, as you say, ~equivalent to media_channel \u003d\u003d nullptr.",
      "parentUuid": "2c92e1d5_162f0f6e",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7718d9cf_61c5395b",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-03T11:11:10Z",
      "side": 1,
      "message": "Especially after recent adventures in Connection land, I\u0027m concerned about those sort of things too. Here, they\u0027ll go away soon, but I\u0027ll take another stab at the particular corner case that made stop_ \"useful\"  - which was the in-between state *after* construction (signaling thread) but *before* initialization.\n\nIn that case stop_ would be true, then SetMediaChannel would be called (goes to worker, does partial initialization by setting the media_channel_ ptr) and _then_  . However, once initialized (which happens on two threads, signaling and worker), then if media_channel_ was nullptr, *then* we get here to RestartMediaChannel, but via either of the Setup* methods. That\u0027s when we intialize the ssrc_ member variable, which has a particular meaning if unset (unsignaled) but that\u0027s the same value as it has when not initialized.\n\nSo, the only thing available as the code is constructed currently, to know if ssrc_ has not been initialized before, but media_channel_ is valid - but we should not disconnect the sink, is the `stopped_` variable.\n\nSo the crux is really construction. I\u0027m going to see if we can\u0027t make construction more atomic, avoid this in-between step and possibly get rid of one of the two invokes (SetMediaChannel, Setup*) at the same time.",
      "parentUuid": "69429dc3_81ac01b3",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c038cef_2134fc12",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-03T16:10:23Z",
      "side": 1,
      "message": "Turns out that the two initialization paths are quite different and pleasing them both is a bit tricky. The receiver factory method as triggered via OnRemoteSenderAdded (plan b) is rather simple, but initialization steps as part of UP are in three separate places that are rather far apart.",
      "parentUuid": "7718d9cf_61c5395b",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15bf5843_438fb5e0",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 266,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-02T11:51:45Z",
      "side": 1,
      "message": "Logic change here too.",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ecda509_e1f11cc5",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 266,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-02-02T14:58:20Z",
      "side": 1,
      "message": "not actually a logic change since media_channel_ and stopped_ represent the same thing as far as this check goes and the first check that\u0027s done inside of SetMediaChannel_w().",
      "parentUuid": "15bf5843_438fb5e0",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d2a3c2d_e8617506",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 266,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-03T10:04:54Z",
      "side": 1,
      "message": "Since SetMediaChannel_w is idempotent for this case, this is OK, then.",
      "parentUuid": "5ecda509_e1f11cc5",
      "revId": "5dc7d59a9153d7c25e0607cb96c64aaf48481567",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}