{
  "comments": [
    {
      "key": {
        "uuid": "7c623a01_004e7ef3",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "Would it be extremely inconvenient to not have this suppression?",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afa8141a_c1cb1a20",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "Not needed, removed.",
      "parentUuid": "7c623a01_004e7ef3",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82ef6571_cc0397d9",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-16T12:52:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "afa8141a_c1cb1a20",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7526e644_e65e7445",
        "filename": "api/video/video_stream_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "Unless you have a specific reason to do otherwise, use plain int to represent small integers [https://google.github.io/styleguide/cppguide.html#Integer_Types].",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9138d7d_7f43e9f2",
        "filename": "api/video/video_stream_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "This is pretty much a convenience struct to make the |decoded_callback_| type cleaner, and we pretty much forward the result from DecodedImageCallback::Decoded. Using ints sounds better though.",
      "parentUuid": "7526e644_e65e7445",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75720f6b_d643c97f",
        "filename": "api/video/video_stream_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "Does creating a video stream decoder really consume a factory?",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca8b6a93_92a65252",
        "filename": "api/video/video_stream_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "Yeah... There has been a misunderstanding during the design phase regarding this. This should not be a unique_ptr, changed.",
      "parentUuid": "75720f6b_d643c97f",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78bc9993_2d409739",
        "filename": "api/video/video_stream_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "std::function is disallowed [https://chromium-cpp.appspot.com/#library-blacklist]. And even if it weren\u0027t, wouldn\u0027t it still be better to have an interface for this? Especially as there are not one but three callback functions?",
      "range": {
        "startLine": 40,
        "startChar": 6,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c92ac82c_e0ed28aa",
        "filename": "api/video/video_stream_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "I know std::function is on the banned list, but I wanted to use them anyway with the explicit intent of avoiding using callbacks defined by interfaces. I think it\u0027s easier if we talk about why offline :)",
      "parentUuid": "78bc9993_2d409739",
      "range": {
        "startLine": 40,
        "startChar": 6,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80064fc3_d2b95ca1",
        "filename": "video/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "Again, do you *really* need this?",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dbd555f_175d38dc",
        "filename": "video/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 397,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "Yes, in this case I need it for some of the dependencies.",
      "parentUuid": "80064fc3_d2b95ca1",
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bc27ae5_c998e518",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "Wait---webrtc::Create()? That sounds a bit too generic... I assume you mean webrtc::VideoStreamDecoder::Create()? Did you compile this?",
      "range": {
        "startLine": 17,
        "startChar": 36,
        "endLine": 17,
        "endChar": 42
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7740d7e0_587461ad",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "It compiles, but yes, it should be webrtc::VideoStreamDecoder::Create().",
      "parentUuid": "1bc27ae5_c998e518",
      "range": {
        "startLine": 17,
        "startChar": 36,
        "endLine": 17,
        "endChar": 42
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1188b1fc_22ac8f2a",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-16T12:52:53Z",
      "side": 1,
      "message": "OK. Then the next problem :-) is that it should be in \napi/video/video_stream_decoder.cc. [https://chromium.googlesource.com/external/webrtc/+/HEAD/style-guide.md#h-cc-pairs]",
      "parentUuid": "7740d7e0_587461ad",
      "range": {
        "startLine": 17,
        "startChar": 36,
        "endLine": 17,
        "endChar": 42
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a7dbca5_fc1f7a79",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-16T13:05:15Z",
      "side": 1,
      "message": "Not really possible in this case I think. The problem is that we get a dependency cycle since //api:video_stream_decoder would have to depend on //video:video_stream_decoder_impl to be able to #include \"video/video_stream_decoder_impl.h\" in the .cc file.",
      "parentUuid": "1188b1fc_22ac8f2a",
      "range": {
        "startLine": 17,
        "startChar": 36,
        "endLine": 17,
        "endChar": 42
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0120836c_cc3fe891",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-16T13:47:22Z",
      "side": 1,
      "message": "It\u0027s always possible to break these cycles. In this case, I guess you need the interface and the create function to be in separate api build targets?\n\nIf the declaration and the definition aren\u0027t in the same target, each of the two targets need to depend on the other---the definition needs to #include the declaration and GN forces you to have a dependency to go with that, and the declaration needs to depend on the definition since otherwise GN cannot prevent linker errors for users that forget to manually depend on the definition as well as the declaration.",
      "parentUuid": "6a7dbca5_fc1f7a79",
      "range": {
        "startLine": 17,
        "startChar": 36,
        "endLine": 17,
        "endChar": 42
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78b37cc5_34b78ce6",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-15T15:10:50Z",
      "side": 1,
      "message": "std::move these three as well? (Although it\u0027s a moot point if you follow my advice and use an interface class instead.)",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "871faad9_40c4c87b",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T16:52:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78b37cc5_34b78ce6",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "de1c2945099351ef6dd4ac024288b905dad3c100",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}