{
  "comments": [
    {
      "key": {
        "uuid": "d83fa1ee_bece33c9",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-18T10:36:04Z",
      "side": 1,
      "message": "TransportSequenceNumber and TransportSequenceNumberV2 are mutually exclusive.\nSharing the same RTPExtensionType adds some complexity to the code but has the advantage that only a single call to GetExtension\u003cTransportSequenceNumberV2\u003e() is needed in rtp_packet_received.cc. Instead of a call to also GetExtension\u003cTransportSequenceNumber\u003e() with some logic to select one of the parsed values.",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 59,
        "endChar": 70
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ca8819c_47b1973a",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-18T11:02:37Z",
      "side": 1,
      "message": "what would be the value of the ok_qm in this code:\n\nrtp_header_extension_map.Register\u003cTransportSequenceNumber\u003e(/*id*/\u003d5);\nRtpPacket rtp_packet(\u0026rtp_header_extension_map);\nbool ok_qm \u003d rtp_packet.SetExtension\u003cTransportSequenceNumberV2\u003e(values...);\n/*qm \u003d question mark*/",
      "parentUuid": "d83fa1ee_bece33c9",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 59,
        "endChar": 70
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c6fd16_6877d588",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-18T11:21:23Z",
      "side": 1,
      "message": "I see your point, the value would be true according to the current implementation.",
      "parentUuid": "0ca8819c_47b1973a",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 59,
        "endChar": 70
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb2873d1_292bb63d",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-19T10:25:06Z",
      "side": 1,
      "message": "I have changed to a unique RTPExtensionType per extension.",
      "parentUuid": "f8c6fd16_6877d588",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 59,
        "endChar": 70
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97d9e8cb_34dd6589",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-18T11:02:37Z",
      "side": 1,
      "message": "that is misleading:\nit doesn\u0027t have to be zero padding, often these bytes will be occupied by next extension.\n\nJust remove this field keeping it unaligned (like is drawn with other large unaligned extensions, e.g. color-space)",
      "range": {
        "startLine": 167,
        "startChar": 38,
        "endLine": 167,
        "endChar": 50
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd4487f2_4dc60ad9",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 4
      },
      "lineNbr": 167,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-19T10:25:06Z",
      "side": 1,
      "message": "Copy and paste error...\nI\u0027ll update the source document as well.",
      "parentUuid": "97d9e8cb_34dd6589",
      "range": {
        "startLine": 167,
        "startChar": 38,
        "endLine": 167,
        "endChar": 50
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8660952e_f30d027a",
        "filename": "modules/rtp_rtcp/source/rtp_packet_received.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-02-18T11:02:37Z",
      "side": 1,
      "message": "this one doesn\u0027t have to be complicated with different enum types:\n\nheader-\u003eextension.hasTransportSequenceNumber \u003d\n    GetExtension\u003cTransportSequenceNumberV2\u003e(\n        \u0026header-\u003eextension.transportSequenceNumber,\n        \u0026header-\u003eextension.feedback_request) ||\n    GetExtension\u003cTransportSequenceNumberV1\u003e(\n        \u0026header-\u003eextension.transportSequenceNumber);",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db3f6839_7e2f46f3",
        "filename": "modules/rtp_rtcp/source/rtp_packet_received.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-18T11:21:23Z",
      "side": 1,
      "message": "I never said it would be complicated, just that it would be two calls :-)\nI agree, this is better since you get rid of the potential problem of sending V2 when V1 was negotiated.",
      "parentUuid": "8660952e_f30d027a",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d5f692_4136d3b6",
        "filename": "modules/rtp_rtcp/source/rtp_packet_received.cc",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-19T10:25:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db3f6839_7e2f46f3",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "586c4882bee5e476a3448c6ea8eb4da2e14642d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}