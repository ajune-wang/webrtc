{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7f4a884b_406a092e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-04-11T13:10:58Z",
      "side": 1,
      "message": "Seems like a good change.\nSome nits and comments, but I\u0027m slow in reviewing while Easter, so approving now.",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ace177f_8770dfc9",
        "filename": "p2p/base/stun_port.h",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-04-11T13:10:58Z",
      "side": 1,
      "message": "This makes it clear that the manager field has an extremely odd internal name.\nCan we rename the internal member from requests_ to request_manager_?",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b77c892_5e6579dd",
        "filename": "p2p/base/stun_port.h",
        "patchSetId": 9
      },
      "lineNbr": 121,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-04-12T07:43:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ace177f_8770dfc9",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d998a217_f170cc50",
        "filename": "p2p/base/stun_request.cc",
        "patchSetId": 9
      },
      "lineNbr": 207,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-04-11T13:10:58Z",
      "side": 1,
      "message": "as a matter of principle, if manager_ is not allowed to be null, should we pass a reference rather than a pointer?\n\nI still feel uncomfortable about reference member variables, but if I think of them purely as \"pointers where null is not allowed\", it seems to make sense - but passing a reference as an argument may make sense even if not changing the type of the member.",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbdcbff3_79d731a1",
        "filename": "p2p/base/stun_request.cc",
        "patchSetId": 9
      },
      "lineNbr": 207,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-04-12T07:43:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d998a217_f170cc50",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "176eed67_1001c596",
        "filename": "p2p/base/turn_port.cc",
        "patchSetId": 9
      },
      "lineNbr": 1635,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-04-11T13:10:58Z",
      "side": 1,
      "message": "Not for this CL, but does the large number of \"new\" arguments to StunRequest indicate that the TurnMessage argument should be a scoped_refptr?",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d28aff2_7a940ceb",
        "filename": "p2p/base/turn_port.cc",
        "patchSetId": 9
      },
      "lineNbr": 1635,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-04-12T07:43:51Z",
      "side": 1,
      "message": "I don\u0027t think it needs to be reference counted, but I\u0027ve changed it to std::unique_ptr. Btw, confusingly variables of type StunMessage are often named `request` and then passed to StunRequest objects, making what is a request object and what is a message object pretty ambiguous. I\u0027m also wondering about the need for request\u0027s `Construct()+Prepare()` steps that are triggered inside of `Manager::Send()` but seemingly only touch the messages. Wonder if it couldn\u0027t be done when constructing a message. Anyway, another CL.",
      "parentUuid": "176eed67_1001c596",
      "revId": "5e0f99d8ab1159f6b78d1a9cd96e86b1761a8a21",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}