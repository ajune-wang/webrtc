{
  "comments": [
    {
      "key": {
        "uuid": "4520ca3d_6d42e2ab",
        "filename": "modules/video_coding/timing.h",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-02-21T15:24:50Z",
      "side": 1,
      "message": "These functions are duplicates of:\n\n  // Set/get the minimum playout delay from capture to render in ms.\n  void set_min_playout_delay(int min_playout_delay_ms);\n  int min_playout_delay();\n\nSee line 48 in this file.",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 41
      },
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e55c78b_d820480c",
        "filename": "modules/video_coding/timing.h",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:50:24Z",
      "side": 1,
      "message": "Yes, from the implementation they are identical, and do the same thing. But I need to keep them separate so the highest of them takes precedence, in case user provides a value and audiovideo synchronization enabled as well. Otherwise they would be competing for the same variable.",
      "parentUuid": "4520ca3d_6d42e2ab",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 41
      },
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c147e91e_2a14fc77",
        "filename": "modules/video_coding/timing.h",
        "patchSetId": 9
      },
      "lineNbr": 41,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-02-21T16:16:57Z",
      "side": 1,
      "message": "Things regarding playout delay constraints are a bit messy. We have three sources of constraints:\n 1. Javascript land\n 2. A/V Synchronization\n 3. RTP playout delay extension.\n\nHow these should interact is unclear.\n\nThe VCMTiming is a low level class that has a well defined purpose, which is to calculate the render time of each frame. To keep it clean we should not make it aware of high level APIs and their interactions, so I think the actual minimum playout should be calculated at a higher level.\n\nI think VideoReceiveStream is a better place to do this.",
      "parentUuid": "1e55c78b_d820480c",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 41,
        "endChar": 41
      },
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56a536cb_95bb9dd1",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 400,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-02-21T15:24:50Z",
      "side": 1,
      "message": "The |timing_| object lives in the VideoReceiveStream, so you don\u0027t need to implement a VideoReceiver::SetBaseMinimumPlayoutDelayMs function. You can call \n\n  timing_-\u003eset_min_playout_delay(delay_ms);\n\nfrom here.",
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5934d2c6_3055b891",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 400,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:50:24Z",
      "side": 1,
      "message": "You are right, didn\u0027t notice that.",
      "parentUuid": "56a536cb_95bb9dd1",
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3187cbb3_14dc4f89",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-02-21T15:24:50Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 403,
        "endChar": 56
      },
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96bdbda8_c4dcf003",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 403,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:50:24Z",
      "side": 1,
      "message": "You are right, didn\u0027t notice that",
      "parentUuid": "3187cbb3_14dc4f89",
      "range": {
        "startLine": 403,
        "startChar": 2,
        "endLine": 403,
        "endChar": 56
      },
      "revId": "f2d47dcb7e17749a1da760337164f4d6cdd7fa28",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}