{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7c26eee1_f8696198",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-11-03T15:30:56Z",
      "side": 1,
      "message": "see previous comment, somehow the reviewer field got lost",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df9ab6dc_206bf32e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-23T08:04:09Z",
      "side": 1,
      "message": "i had totally missed this, sorry!\nlooking at it today (you can remove poor hta@ from first round)",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0a9be56_b6d89419",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-24T08:06:08Z",
      "side": 1,
      "message": "Hi, sorry for late reply.\nReading the code,\n1) I can\u0027t find that the tie-breaker is surfaced to sdp/JS,\n2) I though that it might be the same if you have several ice transports (i.e not using BUNDLE), but it seems not to be.\n3) It is only using when receiving/sending ice-pings\n\nSummary: I see no reason why it should exist in anywhere except Port and p2p_transport_channel. I therefor suggest letting p2p_transport_channel\ncreating it \"privately\".\n\nOne thing to double check is that there is no scenario in which the tiebreaker changes during the life-time of p2p_transport_channel. I think not, but I suggest double checking.\n\nHow does that sound ? Am I missing something ?",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7b92cb7_a79d10bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-11-24T08:09:39Z",
      "side": 1,
      "message": "Yes, the tiebreaker is exposed, but not in JS or SDP.",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a74f2e7_a106b530",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-11-24T08:09:39Z",
      "side": 1,
      "message": "The tiebreaker is exposed in ICE packets. https://www.rfc-editor.org/rfc/rfc5245#section-7.1.2.2",
      "parentUuid": "a0a9be56_b6d89419",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dbc1300_8b36a279",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-24T08:15:25Z",
      "side": 1,
      "message": "yes ðŸ˜Š\nthis is why I suggest moving it down to layers that do send/recv stun-packets...",
      "parentUuid": "e7b92cb7_a79d10bf",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4282b8ab_6b523777",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-11-24T08:46:54Z",
      "side": 1,
      "message": "I think currently the tie breaker is the same for multiple ice transport which share the same jsep transport controller (i.e. from the same peerconnection). But I don\u0027t think it needs to be from a protocol perspective. Reviving an ICE restart is nice but not required either. Now whether we need the tie breaking in WebRTC even...\n\nAgree on the direction but you are thinking two CLs ahead :-)\n\nThe tie breaker is used in two ways currently which makes it confusing. I think they are separate but the tests will tell (hopefully):\n1/ in PortAllocator for creating the foundation. I plan to rename that to \"port allcoator random\" and internalize it.\n2/ in the ICE Transport as the tie breaker value set over the wire. That can indeed be created by the transport itself and not the controller.\n\nThose changes aren\u0027t complicated but will cause a significant amount of churn in the tests.",
      "parentUuid": "7a74f2e7_a106b530",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b37ea9e_9bc365cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-24T08:53:04Z",
      "side": 1,
      "message": "re churn: My guess/theory is that it\u0027s better to do a big-cleanup\nrather 10 small...but that might be a bad guess...",
      "parentUuid": "4282b8ab_6b523777",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2264d6f6_df877ff2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-05T19:29:17Z",
      "side": 1,
      "message": "atomic change theory:\n1/ this CL changes responsibility without other impact\n2/ future CL changes foundation to depend on PA ice tie breaker. This is externally visible to ICE.\n3/ future CL renames PA ice tie breaker to PA random seed. Not externally visible.\n\nIn Germany we call this Dreisatz... oh wait no, that is something else ;-)",
      "parentUuid": "3b37ea9e_9bc365cc",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ebe3102_4b0338df",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-12-08T14:38:16Z",
      "side": 1,
      "message": "Discussing with Jonas...\n\nI assume that in 2/ you mean that it changes foundation to NOT depend on PA ice tie breaker. Nobody who\u0027s not sniffing the ice tie breaker and trying to guess the foundation from that should notice, but the whole point of the exercise is to tease them apart.\n\nThe other question is where these two randoms should live, which is determined by their lifetimes. Does the foundation random survive an ICE restart? I couldn\u0027t tell from RFC 8445, but aren\u0027t candidates supposed to be associated with a transport? If so, it might live on the transport.\n\nRFC 8445 sounds like the tiebreaker random is a property of the ICE agent. Does that mean that it\u0027s unique (but changed when ICE role changes) for a PC?\n\nAre there other considerations that we\u0027ve missed?",
      "parentUuid": "2264d6f6_df877ff2",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3033cf71_fb005b34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-12T06:53:38Z",
      "side": 1,
      "message": "No, step 2 is to update the code to generate the foundation based on the data available to the port allocator (and only to it).\n\nI don\u0027t think 8445 is clear on that but would argue that foundation only applies to the sorting and elimination of duplicates in a single generation of candidates. So if it changes after an ICE restart that would be ok. See \nhttps://www.rfc-editor.org/rfc/rfc8445#section-5.1.1.3\nfor the rules (unchanged from 5245). I don\u0027t think libwebrtc is doing anything with it on the receive side, it happily accepts an empty string even.\nThe PA survives an ICE restart and so should it\u0027s random. This is assertable with a test that compares foundations after an ICE restart.\nIf you want to go really fancy, think about the example of two unbundled transports. They would get the same foundation when you depend on the ICE tie breaker but different ones when foundation is computed per portallocator.\n\nThe ICE tie breaker currently lives at the JSEP transport level. It does get passed down to the port eventually (via the PA) and gets used in Port::MaybeIceRoleConflict",
      "parentUuid": "9ebe3102_4b0338df",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e858ca27_a49fd34f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-04T07:27:14Z",
      "side": 1,
      "message": "Jonas and Philipp - what do you currently think?",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5217525_45f07b68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-23T12:07:58Z",
      "side": 1,
      "message": "still want to land this but need the RS ;-)",
      "parentUuid": "e858ca27_a49fd34f",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b0c4d4e_9b020ec6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 8527
      },
      "writtenOn": "2023-01-30T08:02:39Z",
      "side": 1,
      "message": "Hi again,\ngot ping:ed by hta@\n\nSorry to say so, but I don\u0027t think this cl/ should be submitted.\nI find it unclear what it does, what problem it trying to solve,\nand how it fits into a bigger picture.\n\nI propose that you split it into even small pieces (2 or 3) that _even I_ can digest, each with a subject describing\n- what it does\n- what problem it trying to solve,\n- how it fits into a bigger picture.\n\nwdyt ?",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}