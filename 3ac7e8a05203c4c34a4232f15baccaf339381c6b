{
  "comments": [
    {
      "key": {
        "uuid": "f1025e18_82a73c77",
        "filename": "tools_webrtc/presubmit_checks_lib/check_third_party_changes.py",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-05-18T06:54:08Z",
      "side": 1,
      "message": "chromium",
      "range": {
        "startLine": 52,
        "startChar": 46,
        "endLine": 52,
        "endChar": 54
      },
      "revId": "3ac7e8a05203c4c34a4232f15baccaf339381c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "769b320d_540c4e0a",
        "filename": "tools_webrtc/presubmit_checks_lib/check_third_party_changes.py",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-05-18T06:54:08Z",
      "side": 1,
      "message": "This is kind of strange use of a for loop. I get it, your filter will select 0 or 1 files. I think you could write this as \n\nmodified_chrome_deps \u003d next (input_api.AffectedFiles..., None)\nif not modified_chrome_deps:\n  return []\nif modified_chrome_deps.Action() !\u003d \u0027M\u0027:\n  return []\n\n...",
      "range": {
        "startLine": 59,
        "startChar": 2,
        "endLine": 69,
        "endChar": 61
      },
      "revId": "3ac7e8a05203c4c34a4232f15baccaf339381c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1601d228_b6233d3b",
        "filename": "tools_webrtc/presubmit_checks_lib/check_third_party_changes.py",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-05-18T06:54:08Z",
      "side": 1,
      "message": "I think \u0027\\n\u0027.join(line_iter) will do the same thing.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 79,
        "endChar": 16
      },
      "revId": "3ac7e8a05203c4c34a4232f15baccaf339381c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77269823_170b41c4",
        "filename": "tools_webrtc/presubmit_checks_lib/check_third_party_changes_test.py",
        "patchSetId": 3
      },
      "lineNbr": 17,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-05-18T06:54:08Z",
      "side": 1,
      "message": "The style guide prohibits this: https://google.github.io/styleguide/pyguide.html#Imports, so you should call as check_third_party_changes.GetChromiumOwnedAddedDeps(...) and so on.\n\nYou probably want to make the module name shorter, like 3pp_dir or something.",
      "range": {
        "startLine": 15,
        "startChar": 0,
        "endLine": 17,
        "endChar": 34
      },
      "revId": "3ac7e8a05203c4c34a4232f15baccaf339381c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b798ea2d_f7a244d3",
        "filename": "tools_webrtc/presubmit_checks_lib/check_third_party_changes_test.py",
        "patchSetId": 3
      },
      "lineNbr": 72,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-05-18T06:54:08Z",
      "side": 1,
      "message": "Nice, it tests what it needs but isn\u0027t too specific.",
      "range": {
        "startLine": 71,
        "startChar": 4,
        "endLine": 72,
        "endChar": 49
      },
      "revId": "3ac7e8a05203c4c34a4232f15baccaf339381c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}