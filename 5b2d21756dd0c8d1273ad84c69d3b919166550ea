{
  "comments": [
    {
      "key": {
        "uuid": "24d6595b_5109fd41",
        "filename": "media/base/riddescription.h",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "enum class?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2306f36b_e3b35276",
        "filename": "media/base/riddescription.h",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Also worth putting direction here?",
      "range": {
        "startLine": 32,
        "startChar": 31,
        "endLine": 32,
        "endChar": 62
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b402c0fa_9f9b98cf",
        "filename": "media/base/riddescription.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Do we need this constructor? Do we ever want to generate a RidDescription without a rid and direction value?",
      "range": {
        "startLine": 42,
        "startChar": 2,
        "endLine": 42,
        "endChar": 19
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d95cfd_d5a0bd47",
        "filename": "media/base/riddescription.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "This can be confusing. What do you think of including some explanation text, similar to what is in the spec?\n\"It is, for example, valid to indicate \"recv\" restrictions on a \"sendonly\" stream; those restrictions would apply if, at a future point in time, the stream were changed to \"sendrecv\" or \"recvonly\".\"",
      "range": {
        "startLine": 59,
        "startChar": 50,
        "endLine": 59,
        "endChar": 64
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ca19d1a_a1a03e32",
        "filename": "media/base/riddescription.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "are these codec payload types?",
      "range": {
        "startLine": 65,
        "startChar": 14,
        "endLine": 65,
        "endChar": 17
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e7c3712_be00de98",
        "filename": "media/base/riddescription.h",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "What do you think of calling this payload_types instead of formats? To me it seems more clear.",
      "parentUuid": "8ca19d1a_a1a03e32",
      "range": {
        "startLine": 65,
        "startChar": 14,
        "endLine": 65,
        "endChar": 17
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b1d9d47_679aabe1",
        "filename": "media/base/streamparams.cc",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Not sure how this got so far away from ToString, but maybe move SsrcsToString and RidsToString down to right above the ToString method?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0f3b628_843dac60",
        "filename": "media/base/streamparams.cc",
        "patchSetId": 1
      },
      "lineNbr": 110,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "could also do:\n\nconst char* delimiter \u003d \"\";\nfor (const RidDescription\u0026 rid : rids) {\n  sb \u003c\u003c delimiter \u003c\u003c rid.rid;\n  delimiter \u003d \",\";\n}",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d4e783c_261dba14",
        "filename": "media/base/streamparams.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "10, 20, 30 ?",
      "range": {
        "startLine": 33,
        "startChar": 38,
        "endLine": 33,
        "endChar": 45
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "106f8dac_8a65e5f5",
        "filename": "media/base/streamparams.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "It could be nice to clarify in this comment as well what happens in the case of alternatives, which can be confusing. As far as I know, StreamParams will include all rids (including alternatives), and then after negotiation StreamParams will only include the rids being used for each layer. Correct?\n\nSide note: Does this mean the first SLD(StreamParams) call will setup all alternative layers as well?",
      "range": {
        "startLine": 34,
        "startChar": 30,
        "endLine": 34,
        "endChar": 73
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dacd382_0de3f3c1",
        "filename": "media/base/streamparams.h",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "track/source/StreamParam object? I like to not use streams in comments when I can avoid it.",
      "range": {
        "startLine": 189,
        "startChar": 12,
        "endLine": 189,
        "endChar": 18
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ca6671_db529369",
        "filename": "media/base/streamparams.h",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Will this ever be true when the StreamParams object does *not* represent simulcast?",
      "range": {
        "startLine": 191,
        "startChar": 7,
        "endLine": 191,
        "endChar": 17
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "904d1ced_130529a1",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 142,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "nit: Since you\u0027re parsing, should this be \"...found in a\u003drid line.\"?",
      "range": {
        "startLine": 142,
        "startChar": 45,
        "endLine": 142,
        "endChar": 60
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1401c0f7_3e8fb181",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 166,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Capitalization \u0026 period.",
      "range": {
        "startLine": 166,
        "startChar": 7,
        "endLine": 166,
        "endChar": 53
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54ab093a_c80d2047",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "nit: according to the RTCError documentation, RTCError::OK() is preferred for readability",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06440549_77973dd8",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "How about:\n\nconst char* delimiter \u003d kDelimiterEqual;\nfor (const auto\u0026 format : formats) {\n  builder \u003c\u003c delimiter \u003c\u003c format;\n  delimeter \u003d kDelimiterComma;\n}",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55098013_f98a24b7",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Unnecessary?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b312b70_edb29486",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 295,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Use for - range loop?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5070c66c_93b99c26",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 328,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "What do you think about adding an overload of rtc::tokenize that takes (and returns?) an absl::string_view ?\n\nActually, maybe we should switch to abls::StrSplit (https://abseil.io/docs/cpp/guides/strings#abslstrsplit-for-splitting-strings). Though that would be a bigger change and should probably be left as a TODO.",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6271e9a1_9aae8633",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "nit: The spec uses \"RID\" instead of \"Rid\" or \"rid\". Our code tries to use ID instead of Id/id. What do you think of using this syntax for RIDs as well (in comments and logs)?",
      "range": {
        "startLine": 358,
        "startChar": 33,
        "endLine": 358,
        "endChar": 36
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "523ed291_5d351484",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Can we use the existing gmock matchers instead?\n\nhttps://github.com/abseil/googletest/blob/master/googlemock/docs/CheatSheet.md#container-matchers",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6725a8a5_d3da379f",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Capitalize",
      "range": {
        "startLine": 60,
        "startChar": 5,
        "endLine": 60,
        "endChar": 9
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7c77136_ab21b02b",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Maybe most this to just above the sequence of RidDescription tests?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e53a130_22bdb17d",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Maybe explicitly set \u003d \"\"",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0c02747_3c729f30",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 451,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Can do\n\nrid_description.formats \u003d {104, 103};",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab03857b_34998737",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 472,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "recv",
      "range": {
        "startLine": 472,
        "startChar": 32,
        "endLine": 472,
        "endChar": 39
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c640df_74ad4eca",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 501,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "How about also:\n\"1 recv ;;\"\n\"1 recv pt\u003d1;;maxwidth\u003d720\"\n?",
      "range": {
        "startLine": 501,
        "startChar": 4,
        "endLine": 501,
        "endChar": 14
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfa6096f_c31f8378",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "Why not just return an absl::optional ?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec041603_a282667a",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 1
      },
      "lineNbr": 241,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Should we change this to send_streams_?",
      "range": {
        "startLine": 241,
        "startChar": 18,
        "endLine": 241,
        "endChar": 26
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86974de5_8f072774",
        "filename": "pc/simulcastdescription.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-12-10T18:10:31Z",
      "side": 1,
      "message": "not named get_all_layers() because this isn\u0027t a simple getter, this method requires traversing all the layers and flattening them into a new vector.",
      "range": {
        "startLine": 75,
        "startChar": 30,
        "endLine": 75,
        "endChar": 42
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7af3bb72_1d536c4b",
        "filename": "pc/simulcastdescription.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "86974de5_8f072774",
      "range": {
        "startLine": 75,
        "startChar": 30,
        "endLine": 75,
        "endChar": 42
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50c486fe_39457299",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 1
      },
      "lineNbr": 657,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "This seems to be an uncommon pattern (git grep \u0027() \u003d\u0027). What do you think about using a setter instead?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7ec07bb_b4aa670d",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 1
      },
      "lineNbr": 2418,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "for range?",
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f4d34c7_e92b8b19",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 1
      },
      "lineNbr": 2452,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-10T21:22:44Z",
      "side": 1,
      "message": "\u0026send_layer",
      "range": {
        "startLine": 2452,
        "startChar": 22,
        "endLine": 2452,
        "endChar": 32
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f4de57b_e9a20e14",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 1
      },
      "lineNbr": 3235,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Right now we allow multiple a\u003drid lines w/o simulcast. Do we want to allow this?",
      "range": {
        "startLine": 3235,
        "startChar": 4,
        "endLine": 3235,
        "endChar": 20
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "713f7b9b_deb40f5a",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1429,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "nit: Since this just compares IDs maybe CompareRidDescriptionIds() would be a better name?",
      "range": {
        "startLine": 1429,
        "startChar": 7,
        "endLine": 1429,
        "endChar": 29
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "761f3a32_f22d25a1",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4168,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "period. Here and below.",
      "range": {
        "startLine": 4168,
        "startChar": 21,
        "endLine": 4168,
        "endChar": 4
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65614e1f_5ca7636b",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4289,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-10T22:55:51Z",
      "side": 1,
      "message": "Do you want to add anything special to these rids, like payload type or restrictions?",
      "range": {
        "startLine": 4289,
        "startChar": 22,
        "endLine": 4289,
        "endChar": 36
      },
      "revId": "5b2d21756dd0c8d1273ad84c69d3b919166550ea",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}