{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2224cd6d_a4185b08",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-01-28T12:23:15Z",
      "side": 1,
      "message": "Not sure it\u0027s the right way to introduce one more rather huge interface in between here. What would an interface look like that is restricted to precisely what SdpOfferAnswerHandler needs to know about the peer connection?\n\nFrom a quick look at sdp_offer_answer.cc, it looks like some of the things it uses pc_ member to access could instead be passed as method arguments. E.g., could pass session_id and options as arguments to SdpOfferAnswerHandler::Initialize.\n\nThe docs for SdpOfferAnswerHandler says that it\u0027s responsible for \"Generating offers and answers based on the current state.\", I suspect it would help clarity to define what that state is, and maybe pass a reference to needed state from PeerConnection to the SdpOfferAnswerHandler methods that need it.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 24
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b332cb86_aa0c35cd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-28T12:32:35Z",
      "side": 1,
      "message": "That\u0027s the goal of the interface. I think PeerConnection (the implementation) confuses several roles, and separating the various required functions into separate interfaces (which can later be backed by separate objects - encapsulation not inheritance) is a good step towards that.\n\nThere are more places that take a PeerConnection (not PeerConnectionInterface) argument. I want to see if these can depend on the same API only.\n\nI was reasonably happy to see that there were only 2 methods from the public PeerConnectionInterface (the two that now have _internal aliases) that were called by SdpOfferAnswer.\n\nSdpOfferAnswer started out as a split of PeerConnection, and it ended up leaving most of its state inside PeerConnection, because other parts of the system also depended on that state. This is a sorting refactoring more than a greenfield design.\n\nI think this change makes the next step towards isolating the state that SdpOfferAnswerHandler depends on easier. It isn\u0027t of much value in itself.",
      "parentUuid": "2224cd6d_a4185b08",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 24
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "505eebb7_01add9d1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-01-28T12:48:27Z",
      "side": 1,
      "message": "\u003e That\u0027s the goal of the interface. I think PeerConnection (the implementation) confuses several roles, and separating the various required functions into separate interfaces (which can later be backed by separate objects - encapsulation not inheritance) is a good step towards that.\n\u003e \n\u003e There are more places that take a PeerConnection (not PeerConnectionInterface) argument. I want to see if these can depend on the same API only.\n\nI\u0027m not sure it\u0027s a good idea to have one monolithic interface for all peerconnection internals. (It may be a good way but that\u0027s not clear now).\n\n\u003e I think this change makes the next step towards isolating the state that SdpOfferAnswerHandler depends on easier. It isn\u0027t of much value in itself.\n\nNow it looks like you\u0027re moving *all* of PeerConnection internal methods into the new interface. Could you try just moving the things that SdpOfferAnswerHandler actually uses, and then it will be easier to discuss if it makes sense that SdpOfferAnswerHandler accesses them this way, or if not, how to change that?",
      "parentUuid": "b332cb86_aa0c35cd",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 24
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ad8688b_0a646078",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-28T13:13:37Z",
      "side": 1,
      "message": "Changed to just cover what SdpOfferAnswer needs.",
      "parentUuid": "505eebb7_01add9d1",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 24
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aea6ff9f_bc598d17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-28T12:32:35Z",
      "side": 1,
      "message": "I think we\u0027re pointing in the same direction, the question is what the first step on the way should be.",
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "242639dc_e57cac03",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-01-28T12:48:27Z",
      "side": 1,
      "message": "Naming nit: Prefer either something more specific on what the interface represents (maybe from point of view of SdpOfferAnswerHandler), or PeerConnectionInternalInterface. \"Methods\" in a class name sounds odd.",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 34,
        "endChar": 36
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ee5649d_cf3fc245",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-28T13:13:37Z",
      "side": 1,
      "message": "Yeah, it\u0027s really a name for a bunch of functions, not a real class. I renamed it to PeerConnectionSdpMethods, but doesn\u0027t really make me happy.",
      "parentUuid": "242639dc_e57cac03",
      "range": {
        "startLine": 34,
        "startChar": 7,
        "endLine": 34,
        "endChar": 36
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d250913d_ad200d5a",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-01-28T12:48:27Z",
      "side": 1,
      "message": "I wonder if it could work to use the same name, and add a using declaration in the inheriting class to make compiler happy.",
      "range": {
        "startLine": 41,
        "startChar": 23,
        "endLine": 41,
        "endChar": 51
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b2df1cb_0f6e5a2c",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-28T13:13:37Z",
      "side": 1,
      "message": "Don\u0027t know - what would that syntax look like? Such a change would make me happy.\nTried googling and found a stackoverflow thread, and it did not mention \"using\".",
      "parentUuid": "d250913d_ad200d5a",
      "range": {
        "startLine": 41,
        "startChar": 23,
        "endLine": 41,
        "endChar": 51
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "313ba17c_ebe45dac",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-01-28T13:45:26Z",
      "side": 1,
      "message": "Not sure, this is a rather obscure corner of C++. One potential way: Move implementation of the method (and corresponding member variable) to this class, and add \n\nusing PeerConnectionSdpMethods::signaling_thread();\n\nto the inheriting class, \n\nunder the theory that it might qualify as an implementation also of the PeerConnectionInterface method of the same name.\n\nI see no obvious way to do that and keep the implementation in the PeerConnection class. Or leave as is, at least that makes it rathe clear what\u0027s going on.",
      "parentUuid": "7b2df1cb_0f6e5a2c",
      "range": {
        "startLine": 41,
        "startChar": 23,
        "endLine": 41,
        "endChar": 51
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd837572_adb7b38e",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-28T14:50:59Z",
      "side": 1,
      "message": "Leaving it as is. Once PeerConnectionSdpMethods becomes its own object, it can own the signaling thread pointer (or it may go further down in the object hierarchy).",
      "parentUuid": "313ba17c_ebe45dac",
      "range": {
        "startLine": 41,
        "startChar": 23,
        "endLine": 41,
        "endChar": 51
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80a64ad1_b7787b0a",
        "filename": "pc/peer_connection_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 172,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-01-28T12:25:26Z",
      "side": 1,
      "message": "I suspect the binary size increase might be caused by the new (big) vtable that is getting introduced by this CL.\n\nMaybe by following nisse@\u0027s advice we can reduce this as well and get to the same result?\n\n(splitting the target, and reducing circular deps that are hidden by big targets is always a good thing, thanks for doing this!)",
      "range": {
        "startLine": 171,
        "startChar": 0,
        "endLine": 172,
        "endChar": 71
      },
      "revId": "79091b089556436571b694ba97558a0034c5b5c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}