{
  "comments": [
    {
      "key": {
        "uuid": "679e629b_f99193d9",
        "filename": "rtc_base/numerics/running_statistics.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-04-23T10:05:35Z",
      "side": 1,
      "message": "Undefined behavior is bad behavior. Can we RTC_DCHECK on this?",
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0a0f8a3_46834265",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-04-16T08:17:35Z",
      "side": 1,
      "message": "Should we also add a test to ensure GetMin and GetMax are not affected by RemoveSample?",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b5b382_2690fe01",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-04-16T10:46:45Z",
      "side": 1,
      "message": "I don\u0027t think so, it would be over-specification.\nFor now the only client of RemoveSample is RollingAccumulator which handle min/max itself.",
      "parentUuid": "f0a0f8a3_46834265",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "914c3f88_7f9cc8b6",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-04-16T12:21:24Z",
      "side": 1,
      "message": "I am not sure, checking that RemoveSample doesn\u0027t affect min/max is an invariant and if someone will change that in the future, having a test that breaks is a good thing to have (you can add an assertion in this test if creating a new one sounds too much).",
      "parentUuid": "57b5b382_2690fe01",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa76b810_d8846b7b",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-04-23T10:05:35Z",
      "side": 1,
      "message": "If it\u0027s in the .h file (even as a comment), it\u0027s part of the class interface, and we should have a test for it.\nIf users don\u0027t need to know if min/max is affected, we don\u0027t need a test. But that seems wrong.\n(I\u0027d also be happy with something that RTC_DCHECK()s on max() and min() if RemoveSample has been called, and a class comment that max() and min() can only be called when RemoveSample hasn\u0027t been. In that case, we don\u0027t need a test (or could use a death test)).",
      "parentUuid": "914c3f88_7f9cc8b6",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "418f1596_4369e5ca",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-04-25T13:42:37Z",
      "side": 1,
      "message": "Another option would be to make RemoveSample private, and add RollingAccumulator as a friend.\nThe latter has the proper behavior regarding windowed min/max.",
      "parentUuid": "aa76b810_d8846b7b",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ef8611c_83e8f637",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-04-29T15:28:01Z",
      "side": 1,
      "message": "Making RemoveSample private seems a stretch that could be tricky to maintain in the future (e.g. maintainers of RollingAccumulator will have to read a comment about this friendship).\n\nI like Harald\u0027s idea of making it DCHECK if someone tries to rely on min/max after removing samples.",
      "parentUuid": "418f1596_4369e5ca",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bec3a6ba_f92bf026",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-05-06T12:47:58Z",
      "side": 1,
      "message": "I\u0027d rather follow the first suggestion (adding unit tests). I don\u0027t want to artificially forbid what might be a legit, even if unlikely, use-case.",
      "parentUuid": "0ef8611c_83e8f637",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83f0982a_159d3deb",
        "filename": "rtc_base/numerics/running_statistics_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-05-06T14:09:09Z",
      "side": 1,
      "message": "Yes, it could be legit because these will be the min and max seen by the RunningStatistics object.\n\nOk, let\u0027s find common ground and add unit tests. On the other hand, since this could lead to subtle bugs, I suggest you mention this also in the class description at the top of the header.",
      "parentUuid": "bec3a6ba_f92bf026",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "160b4ea17f9cdd6a0c20acb958b2be92acf0f376",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}