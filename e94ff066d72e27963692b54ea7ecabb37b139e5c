{
  "comments": [
    {
      "key": {
        "uuid": "f7509543_d1398b97",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 651,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-08-20T18:02:06Z",
      "side": 1,
      "message": "Can logging ids be empty? If not, can reduce the optional to just a std::string and use empty string as an absence indicator.",
      "range": {
        "startLine": 651,
        "startChar": 4,
        "endLine": 651,
        "endChar": 32
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4474560c_26644a7f",
        "filename": "p2p/base/turn_port.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-20T18:19:56Z",
      "side": 1,
      "message": "Question on the design: could we reuse the ICE credential for this instead of inject a new ID from the top? We can have an offline discussion.",
      "range": {
        "startLine": 40,
        "startChar": 17,
        "endLine": 40,
        "endChar": 42
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be114047_ca35e382",
        "filename": "p2p/base/turn_port_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 821,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-08-20T18:02:06Z",
      "side": 1,
      "message": "Can we move the constant into a header file so that the source \u0026 test can share it?",
      "range": {
        "startLine": 821,
        "startChar": 63,
        "endLine": 821,
        "endChar": 69
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa916f2b_78384e1f",
        "filename": "p2p/base/turn_port_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 821,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-20T18:19:56Z",
      "side": 1,
      "message": "We have p2p_constants.h for this.",
      "parentUuid": "be114047_ca35e382",
      "range": {
        "startLine": 821,
        "startChar": 63,
        "endLine": 821,
        "endChar": 69
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4959fb64_a2df5118",
        "filename": "p2p/base/turn_port_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 824,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-20T18:19:56Z",
      "side": 1,
      "message": "Could be an EXPECT, and \"KESO\" could be a parameter to the validator, since you will set it later in the test. It would be clearer in the test the same ID is expected from what is set.",
      "range": {
        "startLine": 824,
        "startChar": 8,
        "endLine": 824,
        "endChar": 14
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7f6fae2_269bb17a",
        "filename": "p2p/base/turn_port_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 841,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-20T18:19:56Z",
      "side": 1,
      "message": "Maybe a /**/ commented name for this argument.",
      "range": {
        "startLine": 841,
        "startChar": 62,
        "endLine": 841,
        "endChar": 71
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25a2b0cd_e83247c4",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 4
      },
      "lineNbr": 305,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-08-20T18:02:06Z",
      "side": 1,
      "message": "Let\u0027s move this to the calling code so that the ParseIceServers signature stays simple and focused (i.e., not adding the turn_logging_id parameter).\n\nAlternatively, maybe the logging ID could be carried in the URL? Unfortunately it doesn\u0027t look like the RFC\u0027s grammar allows extensions... so maybe that\u0027s out of the question.",
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "996f1069_06eab620",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 884,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-08-20T18:02:06Z",
      "side": 1,
      "message": "extra comment",
      "range": {
        "startLine": 884,
        "startChar": 66,
        "endLine": 884,
        "endChar": 70
      },
      "revId": "e94ff066d72e27963692b54ea7ecabb37b139e5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}