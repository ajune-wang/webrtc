{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "603c18ec_8de3f21f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-01T10:45:04Z",
      "side": 1,
      "message": "PTAL. Related to https://webrtc-review.googlesource.com/c/src/+/261951, but these changes go a bit further.",
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f48cc5cf_aa8a507e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-01T11:03:30Z",
      "side": 1,
      "message": "I think this can be done more simply / more readable.\nParsing stuff is security sensitive (those are external values), so the more obvious we can make it, the better.\n",
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b137f0fb_d732e94a",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-01T11:03:30Z",
      "side": 1,
      "message": "I think you can use std::tuple\u003cServiceType, absl::string_view\u003e with no reduction in readability. These are throwaway structs.",
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d41641d4_ad3f8f90",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-03T11:52:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b137f0fb_d732e94a",
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98c4ca5d_0a22fd3d",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-01T11:03:30Z",
      "side": 1,
      "message": "I feel queasy every time I see split used when the syntax only allows for a single separator. But it\u0027s all through this file; feel free to ignore my queasiness.",
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1cc3911e_c7222df6",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 194,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-03T11:52:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "98c4ca5d_0a22fd3d",
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f237dbe_6e5c1fa1",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-01T10:47:28Z",
      "side": 1,
      "message": "I don\u0027t quite like these return value structs, is there some nicer way to either return a couple of values or fail? Is there some nice and concise way to assign to separate local variables service_type/host on success?",
      "range": {
        "startLine": 219,
        "startChar": 43,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58e36b4e_9de11e4a",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-01T11:03:30Z",
      "side": 1,
      "message": "std::tie seems to be the C++ 17 standard\u0027s way of assigning multiple variables.\nOr structured binding:\n\nauto [service_type, host, error] \u003d GetServiceTypeAndHostnameFromUri()\n\nwhere GetServiceTypeAndHostnameFromUri returns a std::tuple.\nBut neither plays well with failures; all outputs will be written to.",
      "parentUuid": "4f237dbe_6e5c1fa1",
      "range": {
        "startLine": 219,
        "startChar": 43,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70b1e6c_b633a2d6",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-01T11:08:55Z",
      "side": 1,
      "message": "I can change to std::tuple and\n\nauto [success, service_type, host] \u003d ...;\n\nif you think that is good enough? Probably usable also in an if statement,\n\n  if (auto [success, ...] \u003d ...; success) { ... }",
      "parentUuid": "58e36b4e_9de11e4a",
      "range": {
        "startLine": 219,
        "startChar": 43,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbc99794_0b45b921",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-01T11:15:11Z",
      "side": 1,
      "message": "Seems worth trying. Would you then access the variables only inside the if?\n\nIf not, auto [success, .... ]; if (success) { ... would be needed, and probably more readable.\n\n(A limitation of structured binding seems to be that you can\u0027t point to previously declared variables)",
      "parentUuid": "c70b1e6c_b633a2d6",
      "range": {
        "startLine": 219,
        "startChar": 43,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbde4398_86662778",
        "filename": "pc/ice_server_parsing.cc",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-03T11:52:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbc99794_0b45b921",
      "range": {
        "startLine": 219,
        "startChar": 43,
        "endLine": 219,
        "endChar": 64
      },
      "revId": "1b248e4867fd97bfdab622bb8f698fb201f6c238",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}