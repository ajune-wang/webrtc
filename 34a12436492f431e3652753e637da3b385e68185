{
  "comments": [
    {
      "key": {
        "uuid": "d2ed411f_85901784",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 349,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-31T09:47:59Z",
      "side": 1,
      "message": "maybe dcheck that crop size is within desktop size?",
      "range": {
        "startLine": 348,
        "startChar": 4,
        "endLine": 349,
        "endChar": 62
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c20c735b_f649fe86",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 349,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2ed411f_85901784",
      "range": {
        "startLine": 348,
        "startChar": 4,
        "endLine": 349,
        "endChar": 62
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "661d0f62_ac9ac102",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 459,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-31T09:47:59Z",
      "side": 1,
      "message": "nit: style guide usually prefers std::make_unique to explicit new\n(here and elsewhere)",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 73
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bd3e86a_5d68ba24",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 459,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "I can use it for some, but I cannot use it for DesktopFrame as it uses RTC_DISALLOW_COPY_AND_ASSIGN.",
      "parentUuid": "661d0f62_ac9ac102",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 73
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea25fd00_21c95e84",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 459,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-03T09:06:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7bd3e86a_5d68ba24",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 73
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5de24f98_d7a83a3d",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 459,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-04T10:05:32Z",
      "side": 1,
      "message": "Cycling back to this, sure you use the constructor correctly? I.e. does this work?\n\nauto result \u003d std::make_unique\u003cDesktopFrame\u003e(frameSize);",
      "parentUuid": "ea25fd00_21c95e84",
      "range": {
        "startLine": 459,
        "startChar": 2,
        "endLine": 459,
        "endChar": 73
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75960ba7_4b37cdf8",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-31T09:47:59Z",
      "side": 1,
      "message": "style nit: end comments with period.\n(here and elsewhere)",
      "range": {
        "startLine": 44,
        "startChar": 65,
        "endLine": 44,
        "endChar": 66
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3638c7b9_13d4ca8d",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75960ba7_4b37cdf8",
      "range": {
        "startLine": 44,
        "startChar": 65,
        "endLine": 44,
        "endChar": 66
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eb7bf14d_f71324ab",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-31T09:47:59Z",
      "side": 1,
      "message": "alternatively, use rtc::Optional\u003cDesktopSize\u003e video_crop_size_; below",
      "range": {
        "startLine": 75,
        "startChar": 7,
        "endLine": 75,
        "endChar": 22
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6a91970_cd3b2fd0",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "I don\u0027t seem to be able to find it. Do you mean std::optional? I see Chromium has their own base::optional, but I don\u0027t see WebRTC equivalent.",
      "parentUuid": "eb7bf14d_f71324ab",
      "range": {
        "startLine": 75,
        "startChar": 7,
        "endLine": 75,
        "endChar": 22
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "486eee45_6954ce0d",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-03T09:06:50Z",
      "side": 1,
      "message": "Ah, sorry - rtc::Optional was replaced by absl::optional",
      "parentUuid": "c6a91970_cd3b2fd0",
      "range": {
        "startLine": 75,
        "startChar": 7,
        "endLine": 75,
        "endChar": 22
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3a9fb5a_1a454c61",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T16:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "486eee45_6954ce0d",
      "range": {
        "startLine": 75,
        "startChar": 7,
        "endLine": 75,
        "endChar": 22
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "654329c3_e84d7016",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 75,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-04T10:05:32Z",
      "side": 1,
      "message": "The point of the optional was to remove |use_video_crop_|. Instead set value of |video_crop_size_| only when it\u0027s defined, use video_crop_size_.has_value() to check if it\u0027s set, .reset() to unset it when no longer needed etc",
      "parentUuid": "c3a9fb5a_1a454c61",
      "range": {
        "startLine": 75,
        "startChar": 7,
        "endLine": 75,
        "endChar": 22
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "065fb18b_d1a938b0",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-31T09:47:59Z",
      "side": 1,
      "message": "suggest using std::unique_ptr\u003cuint8_t[]\u003e instead",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5105f07_50bc0518",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Can this be used with malloc and realloc? Because the size of frame change change so it needs to be reallocated. This can happen for example when you are sharing a window which changes its size.",
      "parentUuid": "065fb18b_d1a938b0",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d8de5ff_7e5d04d5",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-03T09:06:50Z",
      "side": 1,
      "message": "No, that won\u0027t work with realloc but I think avoiding manual memory management as much as possible trumps any performance benefits here. The biggest benefit of realloc afaik is that you can re-use the contents already stored in that memory - and we are not interested in that here.\n\nAnd as you say this will be a rare event and happens mostly when a user resizes a window, I don\u0027t think it\u0027s worth over-optimizing for it.",
      "parentUuid": "d5105f07_50bc0518",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1efdd787_32ba5e05",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T16:09:57Z",
      "side": 1,
      "message": "I\u0027m not sure I can use it. If I define it this way, it fails to build:\nIn file included from ../../buildtools/third_party/libc++/trunk/include/algorithm:643:\n../../buildtools/third_party/libc++/trunk/include/memory:3043:32: error: call to implicitly-deleted copy constructor of \u0027webrtc::BaseCapturerPipeWire\u0027\n    return unique_ptr\u003c_Tp\u003e(new _Tp(_VSTD::forward\u003c_Args\u003e(__args)...));\n                               ^   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../third_party/webrtc/modules/desktop_capture/linux/base_capturer_pipewire.cc:497:12: note: in instantiation of function template specialization \u0027std::__Cr::make_unique\u003cwebrtc::BaseCapturerPipeWire, webrtc::BaseCapturerPipeWire\u003e\u0027 requested here\n      std::make_unique\u003cBaseCapturerPipeWire\u003e(BaseCapturerPipeWire());\n           ^\n../../third_party/webrtc/modules/desktop_capture/linux/base_capturer_pipewire.h:83:30: note: copy constructor of \u0027BaseCapturerPipeWire\u0027 is implicitly deleted because field \u0027current_frame_\u0027 has a deleted copy constructor\n  std::unique_ptr\u003cuint8_t[]\u003e current_frame_;\n                             ^\n../../buildtools/third_party/libc++/trunk/include/memory:2771:3: note: copy constructor is implicitly deleted because \u0027unique_ptr\u003cunsigned char [], std::__Cr::default_delete\u003cunsigned char []\u003e \u003e\u0027 has a user-declared move constructor\n  unique_ptr(unique_ptr\u0026\u0026 __u) _NOEXCEPT",
      "parentUuid": "6d8de5ff_7e5d04d5",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "571ae077_2b329e79",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-03T16:31:03Z",
      "side": 1,
      "message": "make_unique takes the constructor arguments of the templetized class directly, in this case void, so use:\n\n  std::make_unique\u003cBaseCapturerPipeWire\u003e();\n\notherwise you try to call the copy constructor",
      "parentUuid": "1efdd787_32ba5e05",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caf4e869_a4147294",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.h",
        "patchSetId": 11
      },
      "lineNbr": 82,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T17:49:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "571ae077_2b329e79",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 25
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b1f1dab_30541f69",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "nice to see this",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4a7d0f1_aa701ee7",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 29,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b1f1dab_30541f69",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2381ced6_5cb089fe",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "seeing this implementation is a bit surprising until you see the explicit implementations below. Perhaps add a comment here and explain in what cases this will actually be used and why it\u0027s ok to do nothing. If it\u0027s never used, you could add RTC_NOTREACHED and that\u0027d also suffice as documentation.",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8670d5d_f5f77163",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 33,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2381ced6_5cb089fe",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f638986_3874fd53",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "if this is only meant for assignment, add a DCHECK to make sure we\u0027re not leaking anyting (i.e. that |ptr| is nullptr.",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30bcbc9f_fc4ebc5e",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 35,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f638986_3874fd53",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7cef748_a631f841",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "skip \u0027this-\u003e\u0027",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a44aa37f_4c8c4967",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 44,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7cef748_a631f841",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6ee22d8_59a0c65f",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "ptr_",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d00b773_ee9a02e0",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6ee22d8_59a0c65f",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5daa5c43_eb31e644",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 131,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "nit: keep |proxy_ \u003d nullptr| here so that we keep the freeing and \u0027hands off\u0027 steps together (minimize the scope of which we have a bad pointer)",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9408b604_9c7a7613",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 131,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5daa5c43_eb31e644",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97be5d12_a13d33a2",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 135,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "same for these, I\u0027d prefer to keep the freeing and nulling together",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7f2bc21_3eef3f54",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 135,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97be5d12_a13d33a2",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5515a9d7_5404383c",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 240,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-31T09:47:59Z",
      "side": 1,
      "message": "nit: \"that\" is not a very descriptive name :)",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 12
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52323b5b_9408eaba",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 11
      },
      "lineNbr": 240,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T16:09:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5515a9d7_5404383c",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 12
      },
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fbabbb0_b3c1fa90",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-31T10:32:33Z",
      "side": 1,
      "message": "document why we need this?",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2379ca3_e1523cd8",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 11
      },
      "lineNbr": 15,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-02-03T08:51:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fbabbb0_b3c1fa90",
      "revId": "34a12436492f431e3652753e637da3b385e68185",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}