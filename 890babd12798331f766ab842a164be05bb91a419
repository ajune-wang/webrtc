{
  "comments": [
    {
      "key": {
        "uuid": "d22d7ce1_26d8c959",
        "filename": "api/test/peerconnection_quality_test_fixture.h",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-30T10:36:30Z",
      "side": 1,
      "message": "Default values for function arguments are often OK, but not for virtual methods. https://google.github.io/styleguide/cppguide.html#Default_Arguments",
      "range": {
        "startLine": 425,
        "startChar": 62,
        "endLine": 425,
        "endChar": 71
      },
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9033e23_9706111d",
        "filename": "api/test/peerconnection_quality_test_fixture.h",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 11540
      },
      "writtenOn": "2020-06-30T10:58:44Z",
      "side": 1,
      "message": "I\u0027ve added default parameter temporarily, to update upstream project without breaking it. Should I add clarifying comment and go for it or is there a better way to do it? The other way I see is adding two versions of Start method with default implementations.",
      "parentUuid": "d22d7ce1_26d8c959",
      "range": {
        "startLine": 425,
        "startChar": 62,
        "endLine": 425,
        "endChar": 71
      },
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa5ff425_39e256e9",
        "filename": "api/test/peerconnection_quality_test_fixture.h",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-30T11:59:31Z",
      "side": 1,
      "message": "I would add a new Start method that has the extra argument, and keep the old one around (as a non-virtual method of the base class) until callers have been updated. https://godbolt.org/z/_k-RRe\n\nIf you also had to be compatible with out-of-tree implementations of the interface it would be slightly harder, but if that was a concern the present solution would also fail, right?",
      "parentUuid": "b9033e23_9706111d",
      "range": {
        "startLine": 425,
        "startChar": 62,
        "endLine": 425,
        "endChar": 71
      },
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6f034a9_1555bb54",
        "filename": "api/test/peerconnection_quality_test_fixture.h",
        "patchSetId": 4
      },
      "lineNbr": 425,
      "author": {
        "id": 11540
      },
      "writtenOn": "2020-06-30T12:39:26Z",
      "side": 1,
      "message": "Yes. Thank you for the suggestion! Done.",
      "parentUuid": "aa5ff425_39e256e9",
      "range": {
        "startLine": 425,
        "startChar": 62,
        "endLine": 425,
        "endChar": 71
      },
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da4d6ab8_203bd6ef",
        "filename": "test/pc/e2e/analyzer/video/video_quality_metrics_reporter.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-30T10:36:30Z",
      "side": 1,
      "message": "If a function definition doesn\u0027t use an argument, it\u0027s usually better to comment it out than to omit it, since callers may often want to know exactly what the function is ignoring.",
      "range": {
        "startLine": 23,
        "startChar": 40,
        "endLine": 23,
        "endChar": 68
      },
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "194a450a_fdb11151",
        "filename": "test/pc/e2e/analyzer/video/video_quality_metrics_reporter.cc",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 11540
      },
      "writtenOn": "2020-06-30T10:58:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "da4d6ab8_203bd6ef",
      "range": {
        "startLine": 23,
        "startChar": 40,
        "endLine": 23,
        "endChar": 68
      },
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9531c17_9bf622e5",
        "filename": "test/pc/e2e/analyzer/video/video_quality_metrics_reporter.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-30T10:36:30Z",
      "side": 1,
      "message": "Almost never omit the name of a function argument---it\u0027s important documentation.",
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84c9e741_e727c05f",
        "filename": "test/pc/e2e/analyzer/video/video_quality_metrics_reporter.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 11540
      },
      "writtenOn": "2020-06-30T10:58:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9531c17_9bf622e5",
      "revId": "890babd12798331f766ab842a164be05bb91a419",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}