{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45c6dfc7_e99ff993",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-22T21:11:40Z",
      "side": 1,
      "message": "Maybe rephrase as:\n\nReturns a valid pointer if the capturer requires the user to make a source selection from a source list provided by the capturer.\n\nSince it\u0027s not clear if the selection is required or not?",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "989dabed_9fcde50f",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 117,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T21:51:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45c6dfc7_e99ff993",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "879855d2_34dd8c13",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-22T21:11:40Z",
      "side": 1,
      "message": "Nit: add blank line for paragraph break",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40d24e3a_8fc6d876",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T21:51:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "879855d2_34dd8c13",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ac2a5af_2d59f936",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-22T21:11:40Z",
      "side": 1,
      "message": "if this returns a value.",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb37afda_9e5c1a7d",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T21:51:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ac2a5af_2d59f936",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da3f5b31_1696d90f",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-22T21:11:40Z",
      "side": 1,
      "message": "It looks like OnDelegatedSourceListSelection has been dropped from the API.  Does the caller still need it?",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c45e7eb_2ac278cd",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 159,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T21:51:48Z",
      "side": 1,
      "message": "It\u0027s been moved to the follow-up CL; but I\u0027ve re-worked this comment to not reference the method anymore.",
      "parentUuid": "da3f5b31_1696d90f",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12b69566_f714d9f0",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-22T21:11:40Z",
      "side": 1,
      "message": "The DelegatedSourceListController could be used to return this sentinel value so that callers don\u0027t have to know this implementation detail.\n\nEg.\n\nSourceID GetPlaceholderSourceID();\n\nThat way the caller can determine for certain that the delegated source list is returning the placeholder value.",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab233765_9f2255eb",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 161,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T21:51:48Z",
      "side": 1,
      "message": "I\u0027ll re-work the sentence. This was more just me trying to say that certain states may be true. I\u0027d like to avoid forking more of the behavior than necessary when we\u0027re using a delegated source list.",
      "parentUuid": "12b69566_f714d9f0",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfde89fd_87736e80",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-22T21:11:40Z",
      "side": 1,
      "message": "It would be better if the DelegatedSourceListController exposed an API to make this explicit, e.g.\n\nabsl::optional\u003cSourceId\u003e GetSourceListRestoreToken()\n\nso the caller knows exactly if/when a restore token is available to pass into SelectSource().",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53092e04_268253db",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 169,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T21:51:48Z",
      "side": 1,
      "message": "I was trying to not expose that logic fully to the embedder. I was mainly calling out that for capturers with a delegated source list, it is valid to pass a SourceId that is not in the SourceList from GetSourceList.\n\nThe fact that there is a DelegatedSourceList doesn\u0027t really get used beyond the picker code right now; if you want to take a look at the modifications I\u0027ve currently had to make, or if you want to chat about ways to make the consumption cleaner:\nhttps://chromium-review.googlesource.com/c/chromium/src/+/3846372\n\nI took a quick look, and I think plugging something like this into the existing picker code is going to be more complicated than it\u0027s worth.\n\nI\u0027ll note that this is technically the existing behavior we have right now (allowing you to select a source that isn\u0027t necessarily in the source list as a form of restore token).",
      "parentUuid": "cfde89fd_87736e80",
      "revId": "3356ee6050a324b486f0e4c86ca8061c709034be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}