{
  "comments": [
    {
      "key": {
        "uuid": "35c3edde_b563b8ef",
        "filename": "modules/video_coding/codecs/vp9/svc_rate_allocator.cc",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T13:25:05Z",
      "side": 1,
      "message": "Is |num_active_layers| the number of layers that are enabled by the API? That is, we will not report being limited if the application explicitly disabled a layer?",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf05fe29_13ac365a",
        "filename": "modules/video_coding/codecs/vp9/svc_rate_allocator.cc",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-10-08T09:14:31Z",
      "side": 1,
      "message": "num_active_layers are layers enabled by the API. If the application disables some streams/layers we will not report that as a bw limited.",
      "parentUuid": "35c3edde_b563b8ef",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56b59f15_b3d82426",
        "filename": "modules/video_coding/codecs/vp9/svc_rate_allocator.cc",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T12:30:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bf05fe29_13ac365a",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9b1273e_38302e68",
        "filename": "modules/video_coding/utility/simulcast_rate_allocator_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T13:25:05Z",
      "side": 1,
      "message": "What\u0027s 100000?",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05013bc_2f6db288",
        "filename": "modules/video_coding/utility/simulcast_rate_allocator_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-10-08T09:14:31Z",
      "side": 1,
      "message": "Some very big bitrate to ensure everything is enabled. In vp9 case, the minimum bitrate to enable all layers is something like 860531 or some other terrible number, which is computed on the fly based on the resolution. I\u0027ve renamed the constant to something more self-explanatory.",
      "parentUuid": "b9b1273e_38302e68",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a208921_43bc6b45",
        "filename": "modules/video_coding/utility/simulcast_rate_allocator_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 240,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-10-08T09:15:19Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "f05013bc_2f6db288",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e91b16cc_cbc1731a",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1081,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T13:25:05Z",
      "side": 1,
      "message": "Does bw_limited_layers_ affect these booleans?\nIf not your change does not get propagated to the standard getStats()\u0027s qualityLimitationReason.\nIf you only want to fix the goog-metric, can you add a comment somewhere documenting that, otherwise update the quality_limitation_reason_tracker_ as well.\n\nCan we add tests to send_statistics_proxy_unittest.cc verifying which which metrics, old and/or new, we are affecting.",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a3b02f1_b72bc41a",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1081,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-10-08T09:14:31Z",
      "side": 1,
      "message": "Oh, I missed that. It also should be fixed!",
      "parentUuid": "e91b16cc_cbc1731a",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f16ec8a_11125532",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1101,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T13:25:05Z",
      "side": 1,
      "message": "Why are we no longer invoking UpdateAdaptationStats()? The OnAdaptationChanged() callback suggests something changed. Prior to this CL, if a callback caused a change, the stats_ would be updated accordingly. So the stats_ value could always be trusted to be up-to-date.\n\nWith this CL we have two callbacks that trigger a change, the first being OnAdaptationChanged() and the second one being OnBitrateAllocationUpdated(). Now neither updates stats_, you have to invoke GetStats() for it to update stats_.\n\nAnd if OnBitrateAllocationUpdated() triggers being limited, this is not reported in quality_limitation_reason_tracker_.\n\nCan you make stats_ update when something changes or argue for changing this pattern?",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12c9bfb4_77a827c0",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1101,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-10-08T09:14:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f16ec8a_11125532",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0195519c_72d8d0e6",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1112,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-07T13:25:05Z",
      "side": 1,
      "message": "What does content type have to do with whether or not we are limited? If we\u0027re limited we should report we\u0027re limited?",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "009b9224_f26aa1af",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1112,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-10-08T09:14:31Z",
      "side": 1,
      "message": "It dictates what is limited: framerate or resolution.\n\nRegardless of degradation preference, what gets limited because of disabled simulcast streams/layers depends only on content type. The structures are hardcoded for content type.\n\nSo, we get limited framerate if content_type is screenshare and we have limited layers. We get limited resolution if the content type is realtime and we have limited layers.\n\nWould it be clearer if I have instead:\n\nstats_.bw_limited_resolution \u003d ...;\nstats_.bw_limited_framerate \u003d ...;\nif (bw_limited_layers_) {\n if (content_type \u003d\u003d VideoEncoderConfig::ContentType::kRealtimeVideo) {\n   stats_.bw_limited_resolution \u003d true;\n } else {\n   stats_.bw_limited_framerate \u003d true;\n }\n}",
      "parentUuid": "0195519c_72d8d0e6",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a236b5bd_a56e2b8e",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 1
      },
      "lineNbr": 1112,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T12:30:38Z",
      "side": 1,
      "message": "OK. So this is the case when num_resolution_reductions to be equal to zero because we\u0027re not limiting the resolution, but we\u0027re still limited because we dropped a layer?\n\nI think the clearest thing to do is to add a comment explaining this or replace bw_limited_layers_ with an enum (see other comment).",
      "parentUuid": "009b9224_f26aa1af",
      "revId": "4f8bb1b20ee36794378779f68883e559b05ef948",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}