{
  "comments": [
    {
      "key": {
        "uuid": "49207238_f3ba8b05",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1243,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T09:42:58Z",
      "side": 1,
      "message": "Nit: With these recent CLs, there will only ever be at most one non-null of these three:\n\nprivate_submodules_-\u003eecho_controller\nprivate_submodules_-\u003eecho_cancellation\nprivate_submodules_-\u003eecho_control_mobile\n\nSo I think this check can be moved to the end of the APM initialization, and work something like this:\n\n// Ensure that at most one echo canceler is active.\nRTC_DCHECK_LE(!!private_submodules_-\u003eecho_controller\n                  + !!private_submodules_-\u003eecho_cancellation\n                  + !!private_submodules_-\u003eecho_control_mobile,\n              1);\n\nWhat do you think?",
      "range": {
        "startLine": 1237,
        "startChar": 0,
        "endLine": 1243,
        "endChar": 74
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9da668c_0404cc8d",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1243,
      "author": {
        "id": 5125
      },
      "writtenOn": "2019-04-26T12:34:31Z",
      "side": 1,
      "message": "Nice :-)\nDone.",
      "parentUuid": "49207238_f3ba8b05",
      "range": {
        "startLine": 1237,
        "startChar": 0,
        "endLine": 1243,
        "endChar": 74
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b45663d5_acf74661",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1367,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T09:42:58Z",
      "side": 1,
      "message": "With these AEC2/AECM CLs you\u0027ve made, there will only ever be at most one non-null of these three:\n\nprivate_submodules_-\u003eecho_controller\nprivate_submodules_-\u003eecho_cancellation\nprivate_submodules_-\u003eecho_control_mobile\n\nHence this can be simplified to just the check on AECM:\n\nif(private_submodules_-\u003eecho_control_mobile \u0026\u0026\n   private_submodules_-\u003eecho_control_mobile-\u003eis_enabled()) { ... }",
      "range": {
        "startLine": 1363,
        "startChar": 6,
        "endLine": 1367,
        "endChar": 60
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "767f9ab4_1df224ab",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1367,
      "author": {
        "id": 5125
      },
      "writtenOn": "2019-04-26T12:34:31Z",
      "side": 1,
      "message": "I agree that with that the code work like that now, but I would want to go to lengths to avoid that AECM is running in cascade with the echo controller. For instance, without that check, a bug that causes AECM to remain activate when the echo controller is activated would silently start applying AEC is cascade, and we don\u0027t have good tests to catch that.\n\nMy suggestion is therefore to as far as possible make it impossible to run the AECM in cascade with the echo controller. Unfortunately, as the order of NS and AECM is different from how it for the echo controller a bit more code changes are needed to achieve that.\n\nI\u0027d suggest that we make a follow-up CL to make this more clean.",
      "parentUuid": "b45663d5_acf74661",
      "range": {
        "startLine": 1363,
        "startChar": 6,
        "endLine": 1367,
        "endChar": 60
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d840a456_f1c67d60",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1367,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T13:21:59Z",
      "side": 1,
      "message": "I agree with the concerns you raise, but I am hesitant to have the code cover for that case since it (as of your latest PS) already explicitly DCHECKs for it on line 1240.\n\nStyle guide, about DCHECKs:\n`A DCHECK() means “this condition must always be true”, not “this condition is normally true, but perhaps not in exceptional cases.”`\nhttps://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md#check_dcheck_and-notreached",
      "parentUuid": "767f9ab4_1df224ab",
      "range": {
        "startLine": 1363,
        "startChar": 6,
        "endLine": 1367,
        "endChar": 60
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a29e96da_6cafa91a",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1827,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T09:42:58Z",
      "side": 1,
      "message": "This is now a synonym for use_echo_controller, right? If so, then we can do at least one of these:\n1) use_echo_controller can be replaced by setting capture_nonlocked_.echo_controller_enabled\n2) all usage of capture_nonlocked_.echo_controller_enabled can be replaced by checking whether private_submodules_-\u003eecho_controller is non-null.",
      "range": {
        "startLine": 1827,
        "startChar": 0,
        "endLine": 1827,
        "endChar": 53
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2213037_704f6313",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1827,
      "author": {
        "id": 5125
      },
      "writtenOn": "2019-04-26T12:34:31Z",
      "side": 1,
      "message": "Good find!\nI\u0027d suggest that we go for 2 (but in a separate CL). WDYT?",
      "parentUuid": "a29e96da_6cafa91a",
      "range": {
        "startLine": 1827,
        "startChar": 0,
        "endLine": 1827,
        "endChar": 53
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2746767f_b3d21784",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1827,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T13:21:59Z",
      "side": 1,
      "message": "sgtm!",
      "parentUuid": "d2213037_704f6313",
      "range": {
        "startLine": 1827,
        "startChar": 0,
        "endLine": 1827,
        "endChar": 53
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4301241d_0605a3ea",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1880,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T09:42:58Z",
      "side": 1,
      "message": "Why the appended \u0027_\u0027?",
      "range": {
        "startLine": 1880,
        "startChar": 9,
        "endLine": 1880,
        "endChar": 43
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7209b598_2a4385c8",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1880,
      "author": {
        "id": 5125
      },
      "writtenOn": "2019-04-26T12:34:31Z",
      "side": 1,
      "message": "It is a state variable, but that is no longer needed. I\u0027ll remove.",
      "parentUuid": "4301241d_0605a3ea",
      "range": {
        "startLine": 1880,
        "startChar": 9,
        "endLine": 1880,
        "endChar": 43
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa3fd9fe_401597f8",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1880,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-04-26T13:21:59Z",
      "side": 1,
      "message": "Ah, I see. Great!\n\nI think the `size_t` typing in this patch set means that this line declares a new variable within this scope, whose name hides the AudioProcessingImpl member variable aec_render_queue_element_max_size_.",
      "parentUuid": "7209b598_2a4385c8",
      "range": {
        "startLine": 1880,
        "startChar": 9,
        "endLine": 1880,
        "endChar": 43
      },
      "revId": "15a1895a96c58584f90e5e33e9961e1dc7379864",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}