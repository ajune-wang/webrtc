{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "33e09783_554be15a",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5531
      },
      "writtenOn": "2021-09-01T09:33:00Z",
      "side": 1,
      "message": "std::vector\u003cuint8_t\u003e?",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "543eaed6_b01f6248",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-09-10T08:59:14Z",
      "side": 1,
      "message": "That would be much nicer, but the existing API eventually needs to output a string. To me, it seems cleaner to have this slightly uglier implementation here, than creating a vector of bytes and then have an ugly and/or inefficient conversion to a string elsewhere.",
      "parentUuid": "33e09783_554be15a",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcb54c2d_d4ec6fa5",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5531
      },
      "writtenOn": "2021-09-13T07:54:08Z",
      "side": 1,
      "message": "My argument would be that if we make an ugly conversion close to the API surface, it\u0027s very clear why we\u0027re doing it (assuming we also add a comment), compensating for the ugliness and inefficiency of it. Fundamentally, using a string to represent a byte array seems like the wrong choice, so cleaning up the API would in itself be worthwhile. In the future, someone might fix the API, and can then remove the ugly code. Vs if we let the API choice surface throughout the codebase, we get ugliness spread out and cleaning it up becomes a rather large task.",
      "parentUuid": "543eaed6_b01f6248",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecdf3c45_3084ae9b",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-09-17T13:23:15Z",
      "side": 1,
      "message": "I looked into it a bit more. If we change type here, we also need to change the return type from other functions, e.g. EncodeOptionalValuesPositions and EncodeDeltasV3. Those functions in turn use the BitWriter class to store bits in a string. That class could also be changed to use a byte vector without too much difficulty. However, the class is shared with the old format encoder, so to avoid a potential performance change in the old encoding, we\u0027d need to fork that class.\n\nIt feels a bit like a yagni violation to start forking code now, in anticipation of a refactoring in the future. It will also be easier to do these changes after we have deprecated and removed the old format.",
      "parentUuid": "bcb54c2d_d4ec6fa5",
      "range": {
        "startLine": 35,
        "startChar": 7,
        "endLine": 35,
        "endChar": 13
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc5cf70e_e4844e7f",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 5531
      },
      "writtenOn": "2021-09-01T10:20:04Z",
      "side": 1,
      "message": "Could this be made a bool and avoid the repetition below?",
      "range": {
        "startLine": 384,
        "startChar": 2,
        "endLine": 385,
        "endChar": 66
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00072a0b_ab49fbbc",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 385,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-09-10T08:59:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc5cf70e_e4844e7f",
      "range": {
        "startLine": 384,
        "startChar": 2,
        "endLine": 385,
        "endChar": 66
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a38ca8c5_4b6a7406",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 5531
      },
      "writtenOn": "2021-09-01T10:20:04Z",
      "side": 1,
      "message": "Maybe split into two fileds per your suggestion, the latter as pointer that\u0027s maybe null",
      "range": {
        "startLine": 409,
        "startChar": 31,
        "endLine": 409,
        "endChar": 60
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "199981cb_62a888af",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.cc",
        "patchSetId": 1
      },
      "lineNbr": 409,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-09-10T08:59:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a38ca8c5_4b6a7406",
      "range": {
        "startLine": 409,
        "startChar": 31,
        "endLine": 409,
        "endChar": 60
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10d23289_3e8926e1",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 5531
      },
      "writtenOn": "2021-09-01T10:20:04Z",
      "side": 1,
      "message": "use brace initialization",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 72,
        "endChar": 62
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16076b25_0ba738a7",
        "filename": "logging/rtc_event_log/events/rtc_event_field_encoding.h",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-09-10T08:59:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10d23289_3e8926e1",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 72,
        "endChar": 62
      },
      "revId": "386b544fe951a81c66b33dd5b22c2744564c9f38",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}