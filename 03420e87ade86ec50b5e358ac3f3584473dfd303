{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b9e45bab_9c7cd8bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-10-12T07:13:20Z",
      "side": 1,
      "message": "quick 1st look",
      "revId": "03420e87ade86ec50b5e358ac3f3584473dfd303",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1acc08c_48a38685",
        "filename": "api/test/peerconnection_quality_test_fixture.h",
        "patchSetId": 5
      },
      "lineNbr": 272,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-10-12T07:02:58Z",
      "side": 1,
      "message": "This part should belong to the previous ctor documentation since it is that ctor that will use Y4M by default.\n\nThis one will use the one provided by this function.",
      "range": {
        "startLine": 271,
        "startChar": 48,
        "endLine": 272,
        "endChar": 18
      },
      "revId": "03420e87ade86ec50b5e358ac3f3584473dfd303",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dd939c1_53c16f3b",
        "filename": "api/test/peerconnection_quality_test_fixture.h",
        "patchSetId": 5
      },
      "lineNbr": 273,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-10-12T07:13:20Z",
      "side": 1,
      "message": "may be extend existent constructor instead of adding new one (usually less constructors is easier to maintain/read):\npublic:\nVideoDumpOptions(out_dir, int sampling \u003d kDefault, bool export \u003d false, std::function\u003c...\u003e factory \u003d Y4MVideoWriter);\n\nprivate:\n static std::unique_ptr\u003c...\u003e Y4MVideoWriter(factory_params);\n \n.cc\nVideoDumpOptions::Y4MVideoWriter() { return std::make_unique\u003c...\u003e(...); }",
      "range": {
        "startLine": 273,
        "startChar": 4,
        "endLine": 273,
        "endChar": 20
      },
      "revId": "03420e87ade86ec50b5e358ac3f3584473dfd303",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8e57337_96de12a0",
        "filename": "api/test/video/video_frame_writer.h",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-10-12T07:13:20Z",
      "side": 1,
      "message": "looks unused\n(\u003cmemory\u003e looks unused too)",
      "revId": "03420e87ade86ec50b5e358ac3f3584473dfd303",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c9f3e02_bcc6fdde",
        "filename": "api/test/video/video_frame_writer.h",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-10-12T07:02:58Z",
      "side": 1,
      "message": "Nit: Calling WriteFrame after Close is not allowed.\n\nOr something along these lines (more direct).",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 50
      },
      "revId": "03420e87ade86ec50b5e358ac3f3584473dfd303",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}