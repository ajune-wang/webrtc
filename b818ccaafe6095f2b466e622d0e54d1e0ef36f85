{
  "comments": [
    {
      "key": {
        "uuid": "f5705a5d_6abb6369",
        "filename": "rtc_base/httpcommon.cc",
        "patchSetId": 22
      },
      "lineNbr": 51,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T10:46:31Z",
      "side": 1,
      "message": "This just decays to a pointer. If you passed it as a reference to an array instead, you could get rid of the sentinel, I think:\n\n  template \u003csize_t N\u003e\n  const char* LookupLabel(int value, const ConstantToLabel (\u0026entries)[N]) {\n    for (size_t i \u003d 0; i \u003c N; ++i) {\n\nBut passing it as an ArrayView is probably even better:\n\n  const char* LookupLabel(int value,\n                          rtc::ArrayView\u003cconst ConstantToLabel\u003e table) {\n    for (const auto\u0026 entry : table) {",
      "range": {
        "startLine": 51,
        "startChar": 35,
        "endLine": 51,
        "endChar": 66
      },
      "revId": "b818ccaafe6095f2b466e622d0e54d1e0ef36f85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a98f09b_ed8feb3c",
        "filename": "rtc_base/httpcommon.cc",
        "patchSetId": 22
      },
      "lineNbr": 51,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T11:20:43Z",
      "side": 1,
      "message": "I just copied the code from the header and just left it unchanged except for renaming the functions to avoid hitting a conflict with Chrome\u0027s logging.h that\u0027s in webrtc_overrides. I\u0027ll delete the code from there too.\n\nI think this code is actually dead code in practice. It\u0027s Windows only and I\u0027m not aware of any users of it. Possibly cast utilities in chromium? (not chromium itself)\nIn any case, I don\u0027t think it\u0027s worth it spending time on rewriting it so I\u0027ll take you up on the offer of leaving it as is :)",
      "parentUuid": "f5705a5d_6abb6369",
      "range": {
        "startLine": 51,
        "startChar": 35,
        "endLine": 51,
        "endChar": 66
      },
      "revId": "b818ccaafe6095f2b466e622d0e54d1e0ef36f85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bceedd_5eac4be0",
        "filename": "rtc_base/httpcommon.cc",
        "patchSetId": 22
      },
      "lineNbr": 75,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T10:46:31Z",
      "side": 1,
      "message": "Better give these an RTC_ prefix. A lot of foreign headers have been #included at this point.",
      "revId": "b818ccaafe6095f2b466e622d0e54d1e0ef36f85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5567627d_50fe1682",
        "filename": "rtc_base/httpcommon.cc",
        "patchSetId": 22
      },
      "lineNbr": 75,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T11:20:43Z",
      "side": 1,
      "message": "Same here, I\u0027d like to just keep this as is, it\u0027s much smaller in scope now than it was at least. Eventually I expect that we\u0027ll delete this.",
      "parentUuid": "36bceedd_5eac4be0",
      "revId": "b818ccaafe6095f2b466e622d0e54d1e0ef36f85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "595cced0_5743cc29",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 22
      },
      "lineNbr": 127,
      "author": {
        "id": 6547
      },
      "writtenOn": "2018-02-26T09:36:55Z",
      "side": 1,
      "message": "What\u0027s happening here?",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 127,
        "endChar": 79
      },
      "revId": "b818ccaafe6095f2b466e622d0e54d1e0ef36f85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d839150_bef0b9d3",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 22
      },
      "lineNbr": 127,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T09:56:16Z",
      "side": 1,
      "message": "There are two fundamental changes:\n\n#1 |hmod| has been removed and replaced by nullptr.\n\nThe previous implementation had these problems:\n* |module| was always NULL, so |hmod| GetModuleHandleA returned the module handle for the executable.\n* Since |hmod| represented the executable, FORMAT_MESSAGE_FROM_HMODULE was set.\n* FormatMessage would then try to find the message table from the current executable.\n* Since none of our executables have a message table, this would fail with ERROR_RESOURCE_TYPE_NOT_FOUND\n\nBecause of this, I think that this code has been broken for a long time.\n\n\n#2 I\u0027m setting the FORMAT_MESSAGE_IGNORE_INSERTS flag.\nPreviously, this flag was not raised and that can be dangerous. If a message had been looked up (but because of the previous bug, that was not actually likely to happen), and that message required injecting \u0027inserts\u0027 (a feature of FormatMessage), then we could have hit problems because we always pass nullptr for the inserts parameter.\n\nSetting the \u0027ignore inserts\u0027 flag, essentially tells FormatMessage to not bother with inserts.\n\nFor easier reference, I found an implementation in Chrome, that does a similar thing (I suspect these two might be derived from a similar source code example due to the \u0027msgbuf\u0027 variable). Regardless, the Chrome implementation does the right thing:\nhttps://cs.chromium.org/chromium/src/base/logging.cc?type\u003dcs\u0026q\u003dFormatMessageA\u0026sq\u003dpackage:chromium\u0026l\u003d928\n\nAlthough I guess it too could be made a little more flexible by using FORMAT_MESSAGE_ALLOCATE_BUFFER, but we can ignore that for now.",
      "parentUuid": "595cced0_5743cc29",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 127,
        "endChar": 79
      },
      "revId": "b818ccaafe6095f2b466e622d0e54d1e0ef36f85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}