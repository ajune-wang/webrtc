{
  "comments": [
    {
      "key": {
        "uuid": "e22fa61a_3e20cbeb",
        "filename": "rtc_base/memory/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-10-01T11:55:20Z",
      "side": 1,
      "message": "Is it possible to replace the comment with `testonly \u003d true`, which says the same thing in a machine readable way?",
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851a5d49_77de4745",
        "filename": "rtc_base/memory/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-10-01T12:39:36Z",
      "side": 1,
      "message": "I would like to do that but it proved more complicated since other targets are not consistently marked correctly and some are mixed test and production. So I opted for at least leaving this comment in there for future visitors.",
      "parentUuid": "e22fa61a_3e20cbeb",
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c4b9f11_3d2f9eb5",
        "filename": "rtc_base/memory/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-10-01T13:35:00Z",
      "side": 1,
      "message": "OK. Add something like\n\n  // TODO: Tag with `testonly \u003d true` once all users are correctly tagged.\n\n?",
      "parentUuid": "851a5d49_77de4745",
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86dd7473_398d8927",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 814,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-10-01T11:55:20Z",
      "side": 1,
      "message": "This seems inadvisable to check in. You should only ever DCHECK conditions that always hold. So you need to decide if the delay is always \u003e0 (in which case the DCHECK is fine but the comment should go away) or if it can be 0, in which case the code must handle it.",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 814,
        "endChar": 29
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb7f4773_36894bf8",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 814,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-10-01T12:39:36Z",
      "side": 1,
      "message": "I think you may have misread the comment and the dcheck. Can you look again?",
      "parentUuid": "86dd7473_398d8927",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 814,
        "endChar": 29
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71e5d7f1_2c437736",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 814,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-10-01T13:35:00Z",
      "side": 1,
      "message": "Hmm. I see the same thing that I saw the first time. Namely:\n\n  * The comment doesn\u0027t say so, but the one call site of this function gets `delay_ms` from the return value of DTLSv1_get_timeout. So I interpreted the comment as meaning roughly that `delay_ms` is often 0, and that you are unhappy about this.\n\n  * The DCHECK unambiguously states that `delay_ms` is greater than 0.\n\nWhere is my mistake?",
      "parentUuid": "cb7f4773_36894bf8",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 814,
        "endChar": 29
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be22f43f_5befe0f0",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 814,
      "author": {
        "id": 6720
      },
      "writtenOn": "2020-10-01T14:05:06Z",
      "side": 1,
      "message": "the dcheck states greater or equal.\n\nThe return value from DTLSv1_get_timeout being 0 isn\u0027t ideal since it implies callback now, which has a bit of overhead, especially if it occurs multiple times back to back. I think that this is being discussed upstream but I don\u0027t expect it to change anytime soon. If the comment is confusing, I can remove it.",
      "parentUuid": "71e5d7f1_2c437736",
      "range": {
        "startLine": 813,
        "startChar": 1,
        "endLine": 814,
        "endChar": 29
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d64dfbae_167199a7",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 828,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-10-01T11:55:20Z",
      "side": 1,
      "message": "Why have a repeating task if it won\u0027t repeat?",
      "range": {
        "startLine": 828,
        "startChar": 8,
        "endLine": 828,
        "endChar": 49
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6939c5fc_5a7faa87",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 828,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-10-01T12:39:36Z",
      "side": 1,
      "message": "It\u0027s what we have to cancel delayed tasks. Despite the name, the class is actually designed to handle this case. Furthermore the callback returns an ms value indicating the delta until next execution (i.e. the ms value supplied to DelayedStart only applies to the first occurance).",
      "parentUuid": "d64dfbae_167199a7",
      "range": {
        "startLine": 828,
        "startChar": 8,
        "endLine": 828,
        "endChar": 49
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ae6425b_59d4a2a0",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 11
      },
      "lineNbr": 828,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-10-01T13:35:00Z",
      "side": 1,
      "message": "OK. I would have assumed that a plain PostDelayedTask would be convenient, especially since you already have task_safety_ here to support cancellation.",
      "parentUuid": "6939c5fc_5a7faa87",
      "range": {
        "startLine": 828,
        "startChar": 8,
        "endLine": 828,
        "endChar": 49
      },
      "revId": "25b8ec41c76f1e7ddcfaebc182b8ea14313fe349",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}