{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bb09b6e6_e4ac175c",
        "filename": "modules/audio_mixer/frame_combiner.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-06-26T09:52:15Z",
      "side": 1,
      "message": "I do not really understand this check,\nI\u0027ll trust it is helpful.",
      "revId": "8a2dc282f5caeb1eebaf2bfc663c26a5061cd6a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec5fcc49_6e04547d",
        "filename": "modules/audio_mixer/frame_combiner.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5508
      },
      "writtenOn": "2024-06-26T09:59:21Z",
      "side": 1,
      "message": "Thanks - yes, it\u0027s meant to catch issues with code outside of webrtc where AudioFrame is being used, but the properties that describe the dimensions of the `data_view()` buffer, have not been set. As we\u0027re swapping out use of raw pointers in favour of views, we\u0027re catching more of those sort of issues.\n\nThe recent change to this code, replaced a call to `data()`, which returns a raw pointer, with `data_view()` which returns a view of the buffer as dictated by `num_channels() * samples_per_channel()`. However, if either of those two properties are 0 (uninitialized), then the returned view will be empty.",
      "parentUuid": "bb09b6e6_e4ac175c",
      "revId": "8a2dc282f5caeb1eebaf2bfc663c26a5061cd6a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "8a2dc282f5caeb1eebaf2bfc663c26a5061cd6a3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "8a2dc282f5caeb1eebaf2bfc663c26a5061cd6a3",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}