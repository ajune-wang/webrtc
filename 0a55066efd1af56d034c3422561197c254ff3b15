{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec3e8392_acafd660",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 110,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "Without updating the capacity queue (removing packets that should have exited) before checking the queue size, we\u0027re more likely to drop packets.",
      "range": {
        "startLine": 110,
        "startChar": 0,
        "endLine": 110,
        "endChar": 67
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee0976a7_f6392bbe",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "nit: previous",
      "range": {
        "startLine": 117,
        "startChar": 39,
        "endLine": 117,
        "endChar": 48
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7efaf1dc_fdd4769d",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 124,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "If we always recalculate the actual_transmission_time and arrival_time, do we need to set them at all here? Maybe remove the actual_transmission_time completely and leave arrival_time_us uninitialized? (See comment in UpdateCapacityQueue.)",
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1aff293b_391c8ebc",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 131,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "I assume this should be set if and only if there is a packet in the queue?",
      "range": {
        "startLine": 131,
        "startChar": 7,
        "endLine": 131,
        "endChar": 28
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b6eb3d0_3ff9b739",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 144,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "I think this function could be simplified if the SimulatedNetwork had a last_capacity_link_exit_time_ instead of the actual_transmission_time_us member in the PacketInfo. Comments below assume this change.",
      "range": {
        "startLine": 144,
        "startChar": 23,
        "endLine": 144,
        "endChar": 42
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "851cb48d_5760f177",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "Maybe std::max(capacity_link_.front().packet.send_time, last_capacity_link_exit_time_) if we don\u0027t have actual transmission time?",
      "range": {
        "startLine": 151,
        "startChar": 31,
        "endLine": 151,
        "endChar": 58
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46a1cfe6_28802294",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 178,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "Maybe make this a member last_capacity_link_exit_time_us_ ?",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 178,
        "endChar": 66
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8d363a8_6e56ad61",
        "filename": "call/simulated_network.cc",
        "patchSetId": 4
      },
      "lineNbr": 220,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "This is already taking the max, so maybe just a renaming: std::max(last_capacity_link_exit_time_, ...)",
      "range": {
        "startLine": 220,
        "startChar": 12,
        "endLine": 220,
        "endChar": 22
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cb97b7e_b6f64eca",
        "filename": "call/simulated_network.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "This is a behavior change. Please mention in CL description.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 78
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78975560_400afb30",
        "filename": "call/simulated_network_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "Maybe QueueLength, since capacity often refers to the link capacity in the implementation?",
      "range": {
        "startLine": 80,
        "startChar": 27,
        "endLine": 80,
        "endChar": 37
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63060eb7_d276dd53",
        "filename": "call/simulated_network_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 259,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "Should we check the NextDeliveryTime() here?",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 259,
        "endChar": 0
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45fea110_97b6d900",
        "filename": "call/simulated_network_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-10-10T17:56:39Z",
      "side": 1,
      "message": "This isn\u0027t exactly representable in a base2, is it? Guessing the rounding is correct, but maybe use Milliseconds(1100) to avoid the rounding altogether?",
      "range": {
        "startLine": 270,
        "startChar": 61,
        "endLine": 270,
        "endChar": 64
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f07d52c_3ceced16",
        "filename": "call/simulated_network_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 270,
      "author": {
        "id": 6337
      },
      "writtenOn": "2022-10-11T07:58:35Z",
      "side": 1,
      "message": "I think Milliseconds(1100) is better here too",
      "parentUuid": "45fea110_97b6d900",
      "range": {
        "startLine": 270,
        "startChar": 61,
        "endLine": 270,
        "endChar": 64
      },
      "revId": "0a55066efd1af56d034c3422561197c254ff3b15",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}