{
  "comments": [
    {
      "key": {
        "uuid": "c0987199_13d2e6b4",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "How about passing in the ParsedRtcEventLogs instead of passing in vector\u003cLoggedIceCandidatePairEvent\u003e? That way one could update the implementation to take RTP packets into account without having to update the calling code.\n\nAlso, maybe pass in the logs in the constructor instead?",
      "range": {
        "startLine": 22,
        "startChar": 28,
        "endLine": 22,
        "endChar": 39
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10f0212_191fa5b9",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "This takes vectors instead of ParsedRtcEventLogs because ParsedRtcEventLog::ice_candidate_pair_events() is not virtual so it can\u0027t be mocked for testing. I don\u0027t think changing this in the future would be a big deal. Do you have another preferred approach this is testable?",
      "parentUuid": "c0987199_13d2e6b4",
      "range": {
        "startLine": 22,
        "startChar": 28,
        "endLine": 22,
        "endChar": 39
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "027078c0_84da18cb",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "This function seems to compute to essentially the same thing as BuildIceTransactions. If that function wasn\u0027t part of the MultiLogAnalyzer class, we could just reuse it here.",
      "range": {
        "startLine": 68,
        "startChar": 28,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a117495_da20377f",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "I think it might be better to leave this more generic in case we want to use other kinds of event sequences in the future (RTP packets?).\nUsing computed IceTransaction objects would remove an iteration over the events, but I would rather not make decisions based on that until we know it is a performance issue.",
      "parentUuid": "027078c0_84da18cb",
      "range": {
        "startLine": 68,
        "startChar": 28,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3b945ed_c22d7dc9",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a117495_da20377f",
      "range": {
        "startLine": 68,
        "startChar": 28,
        "endLine": 68,
        "endChar": 37
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "33132ff5_18856a13",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "abs(a - b)",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "986e2869_868b452e",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "What\u0027s the reason for not computing std::abs(a - b)? (Possibly even inlined where it is used.)\n\nOr was your comment a suggestion that this should be changed?",
      "parentUuid": "33132ff5_18856a13",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b4523e4_9cf3f425",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "My comment was that it should be changed, but I am just removing it for now.",
      "parentUuid": "986e2869_868b452e",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c81c6bb7_91adaa2d",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "The idea here is to find the min/max offsets that put the events in the right order, but I don\u0027t have it working for both events out of order in both directions yet.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30037def_2d6a5901",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Removed for now.",
      "parentUuid": "c81c6bb7_91adaa2d",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7867e999_a587c76b",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "Make sure there is a test for this.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f8a5272_7341367d",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.cc",
        "patchSetId": 3
      },
      "lineNbr": 121,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7867e999_a587c76b",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38ffb946_397ede86",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.h",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "If this isn\u0027t critical, maybe it could be postponed for a separate CL? It seems it would also eliminate some other code like the AbsDiff function.",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 60
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb1db22a_3bf6f9c5",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.h",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38ffb946_397ede86",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 60
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "173466bb_a4b8b848",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "It\u0027s generally unclear what the units are. One common option is to use a suffix like _ms or _us. Another is to use the Timestamp class where the accessors specify which unit it is measured in.",
      "range": {
        "startLine": 56,
        "startChar": 43,
        "endLine": 56,
        "endChar": 53
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e70e55d3_e562256e",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "173466bb_a4b8b848",
      "range": {
        "startLine": 56,
        "startChar": 43,
        "endLine": 56,
        "endChar": 53
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81467a6c_42510b35",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "Is this equivalent to offsets_.size()?",
      "range": {
        "startLine": 68,
        "startChar": 10,
        "endLine": 68,
        "endChar": 30
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfbb2b1b_208a9e44",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator.h",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Yes, I will use that instead.",
      "parentUuid": "81467a6c_42510b35",
      "range": {
        "startLine": 68,
        "startChar": 10,
        "endLine": 68,
        "endChar": 30
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d781394_f5dbd4dd",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "I think this comment is obsolete.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9469b89_66b66cd5",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 124,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d781394_f5dbd4dd",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a68c969_6a442fc6",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "nit: even",
      "range": {
        "startLine": 179,
        "startChar": 57,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95c59291_5d19ee85",
        "filename": "rtc_tools/event_log_visualizer/clock_offset_calculator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a68c969_6a442fc6",
      "range": {
        "startLine": 179,
        "startChar": 57,
        "endLine": 179,
        "endChar": 58
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20f5b268_9f2c2fe0",
        "filename": "rtc_tools/event_log_visualizer/main.cc",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "These changes subsume https://webrtc-review.googlesource.com/c/src/+/117461.\nI can pull them back in to that CL if necessary.\nI think this approach is better in retrospect.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70fe3265_aa5899d4",
        "filename": "rtc_tools/event_log_visualizer/main.cc",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "I agree; I prefer this approach.",
      "parentUuid": "20f5b268_9f2c2fe0",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5254d83e_6230112d",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "These are intended to be used for the SuggestedXAxis, and graphs are currently all in the first log\u0027s timeline.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5c5d11a_362c7ec0",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5254d83e_6230112d",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96724095_54040756",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "Doesn\u0027t BuildIceTransactions give you all the information you need, i.e. the check send, check receive, response send and response receive times? Maybe I miss something?",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 281,
        "endChar": 68
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e04eeb_cc721268",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 281,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "This is a historical artifact at this point - I\u0027ll switch everything to use the IceTransactions (which used to store less data).",
      "parentUuid": "96724095_54040756",
      "range": {
        "startLine": 281,
        "startChar": 0,
        "endLine": 281,
        "endChar": 68
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b91dbb3d_775c97ee",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "The margin sizes could be part of a CommonConfigs struct.",
      "range": {
        "startLine": 334,
        "startChar": 28,
        "endLine": 334,
        "endChar": 32
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f50b98fb_28e2e98b",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b91dbb3d_775c97ee",
      "range": {
        "startLine": 334,
        "startChar": 28,
        "endLine": 334,
        "endChar": 32
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92973858_919c9261",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 355,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "The SetSuggested functions sets the axis limits based on the data in the time_series objects. Hence, it\u0027s meant to be called after all points and time series have been added.",
      "range": {
        "startLine": 355,
        "startChar": 8,
        "endLine": 355,
        "endChar": 25
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dc65dc9_876c813f",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.cc",
        "patchSetId": 3
      },
      "lineNbr": 355,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "92973858_919c9261",
      "range": {
        "startLine": 355,
        "startChar": 8,
        "endLine": 355,
        "endChar": 25
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7d71193_3d2e38ef",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "Microsecond resolution is deprecated. Please use log_time_ms instead.",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df457681_b4f74905",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Will do.",
      "parentUuid": "b7d71193_3d2e38ef",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a528129d_88c6e081",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df457681_b4f74905",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73afae06_3ad4821e",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "SourcedIceEvent? IceEventWithSourceId?",
      "range": {
        "startLine": 66,
        "startChar": 7,
        "endLine": 66,
        "endChar": 19
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcdc862c_253b1356",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 66,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "73afae06_3ad4821e",
      "range": {
        "startLine": 66,
        "startChar": 7,
        "endLine": 66,
        "endChar": 19
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4741e67a_f707d885",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "Doesn\u0027t SetSuggestedXAxis() already do the same thing?",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 16
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1fb59ff6_eb31d2c7",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "It iterates through all of the points in all of the series each time it is called.\nI need to add a TODO to use the x limits from the config instead of the computed ones, which I will do separately. I\u0027m worried some of the graphs will become too zoomed out with that approach, but I acknowledge that using the same x axis makes intergraph comparison easier.",
      "parentUuid": "4741e67a_f707d885",
      "range": {
        "startLine": 76,
        "startChar": 6,
        "endLine": 76,
        "endChar": 16
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5594245a_4f435a41",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "I think it would be cleaner if the struct didn\u0027t do any magic in the constructor, but rather let the user set individual fields. This would support parameters that can\u0027t be computed from the logs, such as window sizes for moving averages.\n\nE.g\nCommonConfig config;\nconfig.first_timestamp \u003d log1.first_timestamp();\nconfig.clock_offset \u003d ClockOffsetCalculator(log1, log2).CalculateMean();\netc.",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe16b5f2_43d50af1",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "The downside I see is that the consumer of the config will have to verify that fields are set (first_log_last_timestamp), but I will try the refactoring.",
      "parentUuid": "5594245a_4f435a41",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b9e7909_32f022a4",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "I think this is closer to what you were thinking.",
      "parentUuid": "fe16b5f2_43d50af1",
      "range": {
        "startLine": 88,
        "startChar": 7,
        "endLine": 88,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07f21932_45434e4b",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "I first tried using some mocks instead, but some of the methods I needed are not virtual.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8132dbe2_a5fcd2c6",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07f21932_45434e4b",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9b01da2_db92e346",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "This name is not very good, but I\u0027m not sure what is better. Maybe IceTransactionAnalyzer for the methods that use the IceTransaction object and CombinedEventLogAnalyzer for the other two?",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81dde614_7e8e4f4f",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "I agree. The problem we have with the current EventLogAnalyzer is that the very broad name has accumulated a bunch of mostly independent functions. Since the analyzer a class, all member functions should be in the same file, which makes it hard to navigate. Breaking up the MultiEventLogAnalyzer into more narrow components will avoid getting the same problem here.\n\nYou might want to consider whether a class is useful in the first place, or whether separate functions with a common Config object would be cleaner.",
      "parentUuid": "a9b01da2_db92e346",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa44fd57_a93e68b0",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Right now the class shares the ice_transactions_/events_by_transaction_id_ intermediate objects and makes timestamp translation easier. I will look in to refactoring.",
      "parentUuid": "81dde614_7e8e4f4f",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69d7bacf_3c612fe0",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-31T04:35:46Z",
      "side": 1,
      "message": "Ended up using ice_transactions_ everywhere, so it doesn\u0027t make as much sense to break this up in to two parts any more. I will still consider using functions without a class.",
      "parentUuid": "fa44fd57_a93e68b0",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69d2d1e9_766aa96f",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "nit: We generally use size_t over std::size_t.",
      "range": {
        "startLine": 145,
        "startChar": 23,
        "endLine": 145,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d99d2d9_c5b264ec",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer.h",
        "patchSetId": 3
      },
      "lineNbr": 145,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69d2d1e9_766aa96f",
      "range": {
        "startLine": 145,
        "startChar": 23,
        "endLine": 145,
        "endChar": 34
      },
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9be8c902_2b783dd5",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T08:46:59Z",
      "side": 1,
      "message": "This gives really spammy output but I\u0027m not sure of a built-in way to do approximate comparison on a vector of floats.\nIt might be worth it to give the class a way to output int timestamps to get around the float comparison issue here.",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1caad936_0005ea48",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5150
      },
      "writtenOn": "2019-01-30T17:17:04Z",
      "side": 1,
      "message": "It\u0027s only spammy if there is a bug, right? I\u0027m ok with this code.",
      "parentUuid": "9be8c902_2b783dd5",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55e7655f_73a61ff0",
        "filename": "rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 5281
      },
      "writtenOn": "2019-01-30T21:43:31Z",
      "side": 1,
      "message": "It is spammy in a really hard to parse way. I added 1 to all of the expected values in this test and the output is:\n\n[ RUN      ] MultiEventLogAnalyzerTest.TestTimestampTranslation3\n../../rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc:25: Failure\nThe difference between actual[i] and expected[i] is 1.0000000223517418, which exceeds 0.00001, where\nactual[i] evaluates to 0.10000000149011612,\nexpected[i] evaluates to 1.1000000238418579, and\n0.00001 evaluates to 1.0000000000000001e-05.\nStack trace:\n  0x55d94b8164fd: webrtc::(anonymous namespace)::ExpectFloatVecEq()\n  0x55d94b818370: webrtc::MultiEventLogAnalyzerTest_TestTimestampTranslation3_Test::TestBody()\n  0x55d94bb7944e: testing::internal::HandleSehExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb6c572: testing::internal::HandleExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb4a983: testing::Test::Run()\n  0x55d94bb4b622: testing::TestInfo::Run()\n... Google Test internal frames ...\n\n../../rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc:25: Failure\nThe difference between actual[i] and expected[i] is 1.0000020414590836, which exceeds 0.00001, where\nactual[i] evaluates to 0.10009799897670746,\nexpected[i] evaluates to 1.100100040435791, and\n0.00001 evaluates to 1.0000000000000001e-05.\nStack trace:\n  0x55d94b8164fd: webrtc::(anonymous namespace)::ExpectFloatVecEq()\n  0x55d94b818370: webrtc::MultiEventLogAnalyzerTest_TestTimestampTranslation3_Test::TestBody()\n  0x55d94bb7944e: testing::internal::HandleSehExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb6c572: testing::internal::HandleExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb4a983: testing::Test::Run()\n  0x55d94bb4b622: testing::TestInfo::Run()\n... Google Test internal frames ...\n\n../../rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc:25: Failure\nThe difference between actual[i] and expected[i] is 1.0000060573220253, which exceeds 0.00001, where\nactual[i] evaluates to 0.10019399970769882,\nexpected[i] evaluates to 1.1002000570297241, and\n0.00001 evaluates to 1.0000000000000001e-05.\nStack trace:\n  0x55d94b8164fd: webrtc::(anonymous namespace)::ExpectFloatVecEq()\n  0x55d94b818370: webrtc::MultiEventLogAnalyzerTest_TestTimestampTranslation3_Test::TestBody()\n  0x55d94bb7944e: testing::internal::HandleSehExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb6c572: testing::internal::HandleExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb4a983: testing::Test::Run()\n  0x55d94bb4b622: testing::TestInfo::Run()\n... Google Test internal frames ...\n\n../../rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc:25: Failure\nThe difference between actual[i] and expected[i] is 0.99999595433473587, which exceeds 0.00001, where\nactual[i] evaluates to 0.10030400007963181,\nexpected[i] evaluates to 1.1002999544143677, and\n0.00001 evaluates to 1.0000000000000001e-05.\nStack trace:\n  0x55d94b8164fd: webrtc::(anonymous namespace)::ExpectFloatVecEq()\n  0x55d94b818370: webrtc::MultiEventLogAnalyzerTest_TestTimestampTranslation3_Test::TestBody()\n  0x55d94bb7944e: testing::internal::HandleSehExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb6c572: testing::internal::HandleExceptionsInMethodIfSupported\u003c\u003e()\n  0x55d94bb4a983: testing::Test::Run()\n  0x55d94bb4b622: testing::TestInfo::Run()\n... Google Test internal frames ...\n\n[  FAILED  ] MultiEventLogAnalyzerTest.TestTimestampTranslation3 (7 ms)\n\nWith EXPECT_EQ it is:\n\n[ RUN      ] MultiEventLogAnalyzerTest.TestTimestampTranslation3\n../../rtc_tools/event_log_visualizer/multilog_analyzer_unittest.cc:21: Failure\nExpected equality of these values:\n  actual\n    Which is: { 0.1, 0.100098, 0.100194, 0.100304 }\n  expected\n    Which is: { 1.1, 1.1001, 1.1002, 1.1003 }\nStack trace:\n  0x55754d07f39c: webrtc::(anonymous namespace)::ExpectFloatVecEq()\n  0x55754d0811f0: webrtc::MultiEventLogAnalyzerTest_TestTimestampTranslation3_Test::TestBody()\n  0x55754d3e290e: testing::internal::HandleSehExceptionsInMethodIfSupported\u003c\u003e()\n  0x55754d3d5a32: testing::internal::HandleExceptionsInMethodIfSupported\u003c\u003e()\n  0x55754d3b3e43: testing::Test::Run()\n  0x55754d3b4ae2: testing::TestInfo::Run()\n... Google Test internal frames ...\n\n[  FAILED  ] MultiEventLogAnalyzerTest.TestTimestampTranslation3 (1 ms)\n\nI will add a comment suggesting the use EXPECT_EQ for debugging.",
      "parentUuid": "1caad936_0005ea48",
      "revId": "be115cf47567c04e4cd6f80abfa856e55c2677c2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}