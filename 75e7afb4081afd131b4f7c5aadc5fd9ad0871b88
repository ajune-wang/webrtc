{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "21bfdea1_2bd8703f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 5602
      },
      "writtenOn": "2024-09-27T15:53:15Z",
      "side": 1,
      "message": "Removing CR+1 for now as there are still some issues that are unresolved.",
      "revId": "75e7afb4081afd131b4f7c5aadc5fd9ad0871b88",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a335f4a4_78f71794",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 17
      },
      "lineNbr": 343,
      "author": {
        "id": 5602
      },
      "writtenOn": "2024-09-26T20:21:24Z",
      "side": 1,
      "message": "Oh! I didn\u0027t realize you were already doing `static_cast\u003cuint16_t\u003e`. That means this API already simply returns the IANA ID and not the OpenSSL ID. (The OpenSSL ID would be without the cast.)\n\nOpenSSL apparently did not promise that is the relation between the two, but it is and I can\u0027t imagine them ever changing that. More importantly, `static_cast\u003cuint16_\u003e` is already incompatible with heeding OpenSSL\u0027s lack-of-promise here.\n\nSo I think you can just revert the advice to \"Prefer GetTlsCipherSuiteName where possible. This will return the OpenSSL cipher id, not the IANA one returned by SSL_CIPHER_get_protocol_id.\" because this actually does return the IANA ID. Both APIs are fine. One gives you the string and one gives you the ID.\n\n(If you wanted to make it more obvious it\u0027s the IANA ID, you can use `SSL_CIPHER_get_protocol_id`, which it sounded like you were looking to do in a follow-up.)",
      "revId": "75e7afb4081afd131b4f7c5aadc5fd9ad0871b88",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "806ac6b1_d6dcaf8b",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 17
      },
      "lineNbr": 343,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-09-27T15:06:57Z",
      "side": 1,
      "message": "It worked but things working \"by cast\" and not because they documentation says they should work is scary!",
      "parentUuid": "a335f4a4_78f71794",
      "revId": "75e7afb4081afd131b4f7c5aadc5fd9ad0871b88",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70a4d781_428db1f6",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 17
      },
      "lineNbr": 343,
      "author": {
        "id": 5602
      },
      "writtenOn": "2024-09-27T15:59:07Z",
      "side": 1,
      "message": "Please address all comments before landing CLs. Specifically, please remove the following additions from ssl_stream_adapter.h as they are not accurate. I\u0027ll wait until this is done to restore CR+1.\n\n```\n   // Prefer GetTlsCipherSuiteName where possible. This will return the OpenSSL\n   // cipher id, not the IANA one returned by SSL_CIPHER_get_protocol_id.\n```\n\nThe reason is what I said above. This comment is false. Because of the `static_cast\u003cuint16_t\u003e`, it *does not return the OpenSSL cipher ID*. The OpenSSL cipher ID is the full 32-bit integer, in both OpenSSL and BoringSSL. By casting away the upper half, *you are not returning the OpenSSL cipher ID and should not claim that you are*.\n\nIn BoringSSL, we document that the casting away the upper half gives you the IANA ID. This is because, until fairly recently, `SSL_CIPHER_get_protocol_id` did not exist at all, and the cast *WAS* how you did it in BoringSSL or OpenSSL.\n\nOpenSSL seems not to document this. That is unfortunate, but it doesn\u0027t make your added comment true because this function still does not return the OpenSSL cipher ID. It returns either the IANA ID (if you believe BoringSSL\u0027s documentation) or an arbitrary undefined value (if you believe OpenSSL\u0027s lack of documentation).\n\nObviously the latter interpretation would be unhelpful and bad. But the way to fix that is to switch this to `SSL_CIPHER_get_protocol_id`. Leaving it as-is and documenting something not true doesn\u0027t improve things. It is clear that this API, in both intent and de facto behavior, returns the IANA ID *today*.",
      "parentUuid": "806ac6b1_d6dcaf8b",
      "revId": "75e7afb4081afd131b4f7c5aadc5fd9ad0871b88",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "111490dc_9b68c0d7",
        "filename": "rtc_base/openssl_stream_adapter.cc",
        "patchSetId": 17
      },
      "lineNbr": 343,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-09-27T18:42:11Z",
      "side": 1,
      "message": "True, updated the comment and will try getting rid of all but the UMA usage next while switching to the more clear API.",
      "parentUuid": "70a4d781_428db1f6",
      "revId": "75e7afb4081afd131b4f7c5aadc5fd9ad0871b88",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}