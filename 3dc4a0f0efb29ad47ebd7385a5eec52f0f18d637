{
  "comments": [
    {
      "key": {
        "uuid": "92aba9f6_8415f819",
        "filename": "common_video/incoming_video_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-09-16T16:36:51Z",
      "side": 1,
      "message": "Arguably,\n\n  [this, video_frame \u003d std::move(video_frame)]() mutable {\n\nwould be easier to read on account of being more common and having fewer parentheses. (This point applies to more cases below.)\n\nHmm. std::move is a no-op for both the new and old code, since video_frame is a const ref. You always copy. So in order to not be confusing, you should probably write\n\n  [this, video_frame]() mutable {\n\nand add a TODO about avoiding the copy.",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 48
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "620f5038_0fe257a0",
        "filename": "common_video/incoming_video_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-16T16:54:36Z",
      "side": 1,
      "message": "Without the new capture, the type will be const, but I can do video_frame\u003dvideo_frame, to make a copy that\u0027s not const. I added a TODO on avoiding the interface induced copy.",
      "parentUuid": "92aba9f6_8415f819",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 48
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c7de0a8_94680100",
        "filename": "common_video/incoming_video_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-09-17T08:57:29Z",
      "side": 1,
      "message": "Ah, because saying just [this, video_frame] will in fact capture a const reference, not a value! We need to learn to watch out for that sort of bug...\n\nhttps://godbolt.org/z/NQmfDL demonstrates the problem.",
      "parentUuid": "620f5038_0fe257a0",
      "range": {
        "startLine": 42,
        "startChar": 13,
        "endLine": 42,
        "endChar": 48
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb22f45c_fcb15b21",
        "filename": "rtc_base/task_utils/repeating_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-16T16:54:36Z",
      "side": 1,
      "message": "I\u0027d like to keep the braces for the lines identical to this, since the one character line length reduction mean that it\u0027s a one-liner rather than a two-liner.",
      "range": {
        "startLine": 83,
        "startChar": 29,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1993830a_a7ac305b",
        "filename": "rtc_base/task_utils/repeating_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-09-17T08:57:29Z",
      "side": 1,
      "message": "If you insist. But shorter code isn\u0027t necessarily easier to read. If fitting this statement on one line is a priority, I\u0027d rather have `task_queue` shortened to `tq` or something.",
      "parentUuid": "fb22f45c_fcb15b21",
      "range": {
        "startLine": 83,
        "startChar": 29,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e643fe6e_06166208",
        "filename": "rtc_base/task_utils/repeating_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-09-17T09:18:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1993830a_a7ac305b",
      "range": {
        "startLine": 83,
        "startChar": 29,
        "endLine": 83,
        "endChar": 30
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f62185a_b7fbd735",
        "filename": "test/peer_scenario/scenario_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-09-16T16:36:51Z",
      "side": 1,
      "message": "Instead of\n\n  if (x \u003d\u003d nullptr)\n    return;\n  x-\u003eFoo();\n\nconsider\n\n  if (x !\u003d nullptr)\n    x-\u003eFoo();\n\nsince you\u0027re touching these lines anyway...",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 145,
        "endChar": 17
      },
      "revId": "3dc4a0f0efb29ad47ebd7385a5eec52f0f18d637",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}