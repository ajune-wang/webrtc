{
  "comments": [
    {
      "key": {
        "uuid": "7c027bad_6ff1ae68",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 263,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-04-03T09:19:02Z",
      "side": 1,
      "message": "VideoReceiveStream",
      "range": {
        "startLine": 263,
        "startChar": 49,
        "endLine": 263,
        "endChar": 68
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e480865_2ddddab7",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 263,
      "author": {
        "id": 6930
      },
      "writtenOn": "2019-04-03T17:44:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c027bad_6ff1ae68",
      "range": {
        "startLine": 263,
        "startChar": 49,
        "endLine": 263,
        "endChar": 68
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e609877_f3a8b618",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-04-03T09:19:02Z",
      "side": 1,
      "message": "Could you comment on why this is a scoped_refptr? Can\u0027t we ensure that frame_decryptor outlives PeerConnection? I understand that this wasn\u0027t introduced in this cl, but ownership right now is very unclear to me, so maybe this is something we can look into improving in a follow-up at least?",
      "range": {
        "startLine": 266,
        "startChar": 11,
        "endLine": 266,
        "endChar": 24
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff12216d_2c6b657a",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 6930
      },
      "writtenOn": "2019-04-03T17:44:12Z",
      "side": 1,
      "message": "A FrameDecryptor may be attached to multiple VideoReceiveStreams at the same time. A FrameDecryptor can also be swapped at any point during a receiver stream. This combined with the complications of the lifetime of the stream_ member which can be recreated at anytime taking only the configuration complicates the lifetime management.\n\nIdeally some of these lower level layers could take a raw pointer as long as we can actually make strong guarantees about the lifetimes.",
      "parentUuid": "3e609877_f3a8b618",
      "range": {
        "startLine": 266,
        "startChar": 11,
        "endLine": 266,
        "endChar": 24
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a7f87fe_33549e83",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 5
      },
      "lineNbr": 266,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-04-05T07:55:44Z",
      "side": 1,
      "message": "Yeah, I would have expected that the one creating the FrameDecryptor would own it until the PeerConnection is destroyed. Anyway, now something we should fix here and now.",
      "parentUuid": "ff12216d_2c6b657a",
      "range": {
        "startLine": 266,
        "startChar": 11,
        "endLine": 266,
        "endChar": 24
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5221255d_4a1a2f85",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 2526,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-03T11:44:31Z",
      "side": 1,
      "message": "Is this experiment still useful after this fix? It\u0027s for the case that signalling races with media delivery?",
      "range": {
        "startLine": 2525,
        "startChar": 0,
        "endLine": 2526,
        "endChar": 57
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c73fa84_7a52cc04",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 2526,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-04-03T11:48:03Z",
      "side": 1,
      "message": "Yes, exactly. Before this CL, the higher-level buffer was handling both cases. After this CL, we have separate buffering for the two different problems:\n\n* WebRTC-Video-BufferPacketsWithUnknownSsrc -\u003e buffering for \"early media\"/\"late signaling\"\n* BufferedFrameDecryptor -\u003e buffering for \"late encryption key\"",
      "parentUuid": "5221255d_4a1a2f85",
      "range": {
        "startLine": 2525,
        "startChar": 0,
        "endLine": 2526,
        "endChar": 57
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bba83937_6368b886",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 2526,
      "author": {
        "id": 6930
      },
      "writtenOn": "2019-04-03T17:44:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c73fa84_7a52cc04",
      "range": {
        "startLine": 2525,
        "startChar": 0,
        "endLine": 2526,
        "endChar": 57
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71b8f487_da733010",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 2583,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-04-03T09:19:02Z",
      "side": 1,
      "message": "Unused?",
      "range": {
        "startLine": 2583,
        "startChar": 10,
        "endLine": 2583,
        "endChar": 25
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3161c469_c0f8d9a6",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 2583,
      "author": {
        "id": 6930
      },
      "writtenOn": "2019-04-03T17:44:12Z",
      "side": 1,
      "message": "You may want to set the frame decryptor before the stream exists. Also if for another reason the stream is recreated by not setting it in the configuration we would lose the decryptor.",
      "parentUuid": "71b8f487_da733010",
      "range": {
        "startLine": 2583,
        "startChar": 10,
        "endLine": 2583,
        "endChar": 25
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b482b58_647da03c",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 2583,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-04T06:49:45Z",
      "side": 1,
      "message": "It looks like a write-only member in this file, but I guess it\u0027s used after it\u0027s passed to  \n\ncall_-\u003eCreateVideoReceiveStream\n\nin WebRtcVideoChannel::WebRtcVideoReceiveStream::RecreateWebRtcVideoStream, line 2517 above.\n\nIt would make the code simpler if there were only one way to set the frame decryptor: either on construction, or using the setter method. But I guess that\u0027s for some other cl.",
      "parentUuid": "3161c469_c0f8d9a6",
      "range": {
        "startLine": 2583,
        "startChar": 10,
        "endLine": 2583,
        "endChar": 25
      },
      "revId": "b8b47325d9f83ba77b65348fb2dbc6b4e8730145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}