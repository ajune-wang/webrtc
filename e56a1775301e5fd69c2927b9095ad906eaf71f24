{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d7a4e60_1d4cc09a",
        "filename": "test/testsupport/file_utils_override.cc",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-02-18T13:24:10Z",
      "side": 1,
      "message": "$TMPDIR doesn\u0027t necessarily end with a \u0027/\u0027, so if you want to always have a trailing \u0027/\u0027, you must arrange that here.\n\nIt might make sense to first check some webrtc specific environment variable, say $WEBRTC_TEST_TMPDIR.\n\nBut I\u0027d prefer to not enforce trailing \u0027/\u0027, and instead use JoinFilename where appropriate.",
      "range": {
        "startLine": 160,
        "startChar": 11,
        "endLine": 160,
        "endChar": 19
      },
      "revId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c6ee3d9_aacb6389",
        "filename": "test/testsupport/scoped_temp_dir.cc",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-02-18T13:24:10Z",
      "side": 1,
      "message": "CreateDir should probably be split into two functions, with different behavior if the directory already exists. Unless there\u0027s nothing that actually depends on the current behavior?\n\nAnd it would make sense to me to generate a random name or a random suffix here, and retry with a different random name if it collides.",
      "range": {
        "startLine": 33,
        "startChar": 25,
        "endLine": 33,
        "endChar": 34
      },
      "revId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "689ed68b_cfdba4c5",
        "filename": "test/testsupport/scoped_temp_dir.cc",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-03-15T08:07:32Z",
      "side": 1,
      "message": "Checking related man pages, I noticed that on posix there\u0027s the mkdtemp function (similar to mkstemp, but creating a directory rather than a file).",
      "parentUuid": "6c6ee3d9_aacb6389",
      "range": {
        "startLine": 33,
        "startChar": 25,
        "endLine": 33,
        "endChar": 34
      },
      "revId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b403af2f_814bb182",
        "filename": "test/testsupport/scoped_temp_dir.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-02-18T10:27:39Z",
      "side": 1,
      "message": "As a design choice we can decide to randomly generate the name and expose the path through a getter. This is probably a better choice to avoid flakiness in case the deletion fails for some reason. WDYT?",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 29
      },
      "revId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba56118e_5291c3b6",
        "filename": "test/testsupport/scoped_temp_dir.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-02-18T12:29:20Z",
      "side": 1,
      "message": "Yes please---either a random name, or use some OS facility that makes up a guaranteed-unique name. The caller can\u0027t be expected to provide a collision-free name.",
      "parentUuid": "b403af2f_814bb182",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 29
      },
      "revId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9513794_ffa7cea7",
        "filename": "test/testsupport/scoped_temp_dir_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-02-18T13:24:10Z",
      "side": 1,
      "message": "file_utils.h declares kPathDelimiter.",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 70,
        "endChar": 54
      },
      "revId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e56a1775301e5fd69c2927b9095ad906eaf71f24",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}