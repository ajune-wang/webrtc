{
  "comments": [
    {
      "key": {
        "uuid": "2dcf6a7b_ab275b47",
        "filename": "modules/rtp_rtcp/source/rtp_format.cc",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T11:59:01Z",
      "side": 1,
      "message": "why this change?\nisn\u0027t it safer to log an error in case of unknown video header instead of treating it as generic codec?",
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36d2c184_c04d7d9d",
        "filename": "modules/rtp_rtcp/source/rtp_format.cc",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-07T12:43:00Z",
      "side": 1,
      "message": "Without this changes, tests involving kVideoCodecMultiplex fail. The logic with a default clause corresponds to \n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/source/rtp_payload_registry.cc?sq\u003dpackage:chromium\u0026q\u003dConvertToRtpVideoCodecType\u0026g\u003d0\u0026l\u003d50\n\nI can change to explicitly list kVideoCodecMultiplex, if you prefer.",
      "parentUuid": "2dcf6a7b_ab275b47",
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c56df881_6b9bd785",
        "filename": "modules/rtp_rtcp/source/rtp_format.cc",
        "patchSetId": 6
      },
      "lineNbr": 57,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T13:04:27Z",
      "side": 1,
      "message": "oh, it is already reduced without a warning to just those cases, Yep, I agree keeping the current behavior is better then.",
      "parentUuid": "36d2c184_c04d7d9d",
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16cd9a0d_4367bc7b",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 248,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T11:59:01Z",
      "side": 1,
      "message": "may be warning instead of error since it might be triggered by incoming [malformed] packet.",
      "range": {
        "startLine": 248,
        "startChar": 12,
        "endLine": 248,
        "endChar": 20
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cc2ab6e_3b71e74f",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 248,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-07T12:43:00Z",
      "side": 1,
      "message": "Makes sense. Changing below \n\n    RTC_LOG(LS_ERROR) \u003c\u003c \"Failed parsing payload.\";\n\ntoo.",
      "parentUuid": "16cd9a0d_4367bc7b",
      "range": {
        "startLine": 248,
        "startChar": 12,
        "endLine": 248,
        "endChar": 20
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a192d503_3b31f574",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 412,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T11:59:01Z",
      "side": 1,
      "message": "may be use WrapUnique for interacting with legacy api",
      "range": {
        "startLine": 411,
        "startChar": 54,
        "endLine": 412,
        "endChar": 0
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3d18ee_3344422e",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 412,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-07T12:43:00Z",
      "side": 1,
      "message": "Ok. Can I change explicit type to auto then?",
      "parentUuid": "a192d503_3b31f574",
      "range": {
        "startLine": 411,
        "startChar": 54,
        "endLine": 412,
        "endChar": 0
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4983c04_e0f0bccd",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 412,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T13:04:27Z",
      "side": 1,
      "message": "yep, I understand using auto for return type of WrapUnique is reasonable.\n(https://abseil.io/tips/126 doesn\u0027t give an example, but memory header has an example where result of WrapUnique uses auto type)",
      "parentUuid": "da3d18ee_3344422e",
      "range": {
        "startLine": 411,
        "startChar": 54,
        "endLine": 412,
        "endChar": 0
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6ab85854_8c87abe2",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T11:59:01Z",
      "side": 1,
      "message": "since WebRtcRTPHeader doesn\u0027t have explicit default constructor, it might be safer to force value initialization here:\nWebRtcRTPHeader webrtc_rtp_header \u003d {};",
      "range": {
        "startLine": 424,
        "startChar": 36,
        "endLine": 424,
        "endChar": 0
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fe569cd_1ba4d9a9",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-07T12:43:00Z",
      "side": 1,
      "message": "Good catch. Other location, in RtpReceiverImpl::IncomingRtpPacket, uses\n\n  WebRtcRTPHeader webrtc_rtp_header{};\n\nYou prefer \"\u003d {}\" ?",
      "parentUuid": "6ab85854_8c87abe2",
      "range": {
        "startLine": 424,
        "startChar": 36,
        "endLine": 424,
        "endChar": 0
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e4085d6_72c3d27c",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 424,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-08-07T13:04:27Z",
      "side": 1,
      "message": "I do: https://abseil.io/tips/88\n\"Use {} initialization without the \u003d only if the above options donâ€™t compile\"",
      "parentUuid": "5fe569cd_1ba4d9a9",
      "range": {
        "startLine": 424,
        "startChar": 36,
        "endLine": 424,
        "endChar": 0
      },
      "revId": "beeab0768b00aa03587d5cde615e8c93c8e536bd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}