{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dc9c7b05_a89d5c59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 21
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-08T12:27:30Z",
      "side": 1,
      "message": "The goal is to land this as prototype code, meaning it doesn\u0027t quite need to be production quality, PTAL.",
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3247685_3a22bd35",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 170,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "I wonder if this is something we want to make tuneable for CBR too?",
      "range": {
        "startLine": 170,
        "startChar": 22,
        "endLine": 170,
        "endChar": 57
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3b9b507_24633f5b",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 170,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Is this a common parameters in different CBR implementations?",
      "parentUuid": "e3247685_3a22bd35",
      "range": {
        "startLine": 170,
        "startChar": 22,
        "endLine": 170,
        "endChar": 57
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb4f29dd_2b6fa8b8",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 170,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-04-03T12:18:58Z",
      "side": 1,
      "message": "Not sure. Let\u0027s keep it in the wrapper for now.",
      "parentUuid": "a3b9b507_24633f5b",
      "range": {
        "startLine": 170,
        "startChar": 22,
        "endLine": 170,
        "endChar": 57
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "408250d7_5b90f314",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 242,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "nit: I guess you\u0027re using warning logging level pretty much everywhere just for debugging purposes?",
      "range": {
        "startLine": 242,
        "startChar": 10,
        "endLine": 242,
        "endChar": 20
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "758fc946_c9397117",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 242,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Yes, given that this will be used for prototyping I think these log messages can be useful for a while.",
      "parentUuid": "408250d7_5b90f314",
      "range": {
        "startLine": 242,
        "startChar": 10,
        "endLine": 242,
        "endChar": 20
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fb5b1e2_a73fcc86",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 277,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "nit: typo here and below",
      "range": {
        "startLine": 277,
        "startChar": 28,
        "endLine": 277,
        "endChar": 36
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fb216c2_31ec32a4",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 277,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fb5b1e2_a73fcc86",
      "range": {
        "startLine": 277,
        "startChar": 28,
        "endLine": 277,
        "endChar": 36
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23df3544_128150fa",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 295,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "As discussed offline, we can skip this whole check. Should also make that clear in the interface.",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 295,
        "endChar": 7
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd2b1a7f_b1149081",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 295,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Updated the check to not check the top layer.",
      "parentUuid": "23df3544_128150fa",
      "range": {
        "startLine": 287,
        "startChar": 0,
        "endLine": 295,
        "endChar": 7
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5e9500d_f8022350",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 316,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "nit: `buffer_id`",
      "range": {
        "startLine": 316,
        "startChar": 16,
        "endLine": 316,
        "endChar": 17
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9cc54ed_21f57de4",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 316,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d5e9500d_f8022350",
      "range": {
        "startLine": 316,
        "startChar": 16,
        "endLine": 316,
        "endChar": 17
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd8ba318_e452f6d2",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 326,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "An alternative that might be slightly easier to read is to use set of use buffers and check if it exists already when trying to add.",
      "range": {
        "startLine": 321,
        "startChar": 6,
        "endLine": 326,
        "endChar": 7
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb1238dd_91127b49",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 326,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "cd8ba318_e452f6d2",
      "range": {
        "startLine": 321,
        "startChar": 6,
        "endLine": 326,
        "endChar": 7
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f98195ee_3e129294",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 437,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "As discussed offline, we might want to redo this to automatically assign last/golden/altref based on the timestamp and resolutions of the frames contained within the existing reference buffers.\n\nMaybe not in this cl, but at least we should add a todo about it here.",
      "range": {
        "startLine": 433,
        "startChar": 0,
        "endLine": 437,
        "endChar": 0
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe89eb71_b55bc4eb",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 437,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Added a TODO.",
      "parentUuid": "f98195ee_3e129294",
      "range": {
        "startLine": 433,
        "startChar": 0,
        "endLine": 437,
        "endChar": 0
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3021f91a_ff73e630",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 517,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "I guess in production code we want to avoid crashes for parameters that can be passed by a higher layer.\nHow should we handle this: `absl::StatusOr\u003caom_svc_params_t\u003e` return value perhaps so we can call the error callback?",
      "range": {
        "startLine": 517,
        "startChar": 4,
        "endLine": 517,
        "endChar": 30
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea9966a5_2427666b",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 517,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "This is an RTC_CHECK since we validated that the scaling factor are supported earlier.",
      "parentUuid": "3021f91a_ff73e630",
      "range": {
        "startLine": 517,
        "startChar": 4,
        "endLine": 517,
        "endChar": 30
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdf5d938_ef6cdbb6",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 536,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "some serious code mojo here...",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 536,
        "endChar": 49
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75124564_9b230323",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 540,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "Interesting. Is it just the last - not up to and including the last?",
      "range": {
        "startLine": 537,
        "startChar": 0,
        "endLine": 540,
        "endChar": 78
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "77fb824f_55d0e74e",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 540,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "No, just the last layer\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/libaom/source/libaom/av1/av1_cx_iface.c;l\u003d3692-3694;drc\u003d353683321da2061bb47d7655d4b3fc04c1540ed3",
      "parentUuid": "75124564_9b230323",
      "range": {
        "startLine": 537,
        "startChar": 0,
        "endLine": 540,
        "endChar": 78
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93c197ff_28dabeec",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 566,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "setting both sounds good to me, then there\u0027s no question what the desired qp is 😊",
      "range": {
        "startLine": 565,
        "startChar": 12,
        "endLine": 566,
        "endChar": 32
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90cc3795_f18bd75b",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 566,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "93c197ff_28dabeec",
      "range": {
        "startLine": 565,
        "startChar": 12,
        "endLine": 566,
        "endChar": 32
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8ce945ea_78bc6e8b",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 596,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-03-18T10:38:06Z",
      "side": 1,
      "message": "Shouldn\u0027t we call the callback with an error result specifying that it was due to invalid parameters?",
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "763bb985_f5d7f3a4",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 21
      },
      "lineNbr": 596,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Some form of error information is probably good to have, but given that this is for prototyping I think we can do that in a followup CL.",
      "parentUuid": "8ce945ea_78bc6e8b",
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c240f70_50c2eae7",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 38,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "how is it different from keyframe?",
      "range": {
        "startLine": 38,
        "startChar": 36,
        "endLine": 38,
        "endChar": 47
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0e73766_d65e9175",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 38,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "A keyframe completely resets the decoder state, a startframe does not. Both can be decoded without any prior information.",
      "parentUuid": "2c240f70_50c2eae7",
      "range": {
        "startLine": 38,
        "startChar": 36,
        "endLine": 38,
        "endChar": 47
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c87311fb_3f95dd99",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 38,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b0e73766_d65e9175",
      "range": {
        "startLine": 38,
        "startChar": 36,
        "endLine": 38,
        "endChar": 47
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8317d6bf_52474c15",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 42,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "what does it mean?",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 20
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bd67a9c_a5bf11c8",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 42,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "The `effort_level` maps to the speed setting of the encoder. Higher effort level means slower speed, meaning longer encode speeds but better compression.",
      "parentUuid": "8317d6bf_52474c15",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 20
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6b72c57_7ee879fd",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 42,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bd67a9c_a5bf11c8",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 20
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dca6da39_4f83eb49",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "I think this struct needs to also provide external QP",
      "range": {
        "startLine": 45,
        "startChar": 9,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd810876_820d37bb",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "What is external QP?",
      "parentUuid": "dca6da39_4f83eb49",
      "range": {
        "startLine": 45,
        "startChar": 9,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebb030fa_d2d8ad06",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-25T20:54:42Z",
      "side": 1,
      "message": "A way for video encoder API users to run their own rate control by setting QP directly for each frame.\n\nhttps://www.w3.org/TR/webcodecs-avc-codec-registration/#avc-encode-options",
      "parentUuid": "fd810876_820d37bb",
      "range": {
        "startLine": 45,
        "startChar": 9,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cec0b7e2_4756c156",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 45,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-26T08:44:40Z",
      "side": 1,
      "message": "There is a `Cqp` struct that goes into the `rate_options` variant for this purpose.",
      "parentUuid": "ebb030fa_d2d8ad06",
      "range": {
        "startLine": 45,
        "startChar": 9,
        "endLine": 45,
        "endChar": 28
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30ec0f6e_a98167dd",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "does bitrate really belong on the frame level?\n\nhow can the encoder plan any kind of rate control if it changes on every frame?",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 41
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d9be887_d5c176aa",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "Frame target size is basically `duration * target_bitrate`. The reason it\u0027s expressed this way is because the rate control buffers inside an encoder measure overuse/underuse in time and not bytes.",
      "parentUuid": "30ec0f6e_a98167dd",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 41
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7d135ac_46083b97",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d9be887_d5c176aa",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 41
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6116b64a_c432a5d1",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-25T20:54:42Z",
      "side": 1,
      "message": "sorry, I am not sure that I understood what you mean hear. can a rate control algorithms be efficient if we adjust buffer size 60 times a second?",
      "parentUuid": "b7d135ac_46083b97",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 41
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8773a158_c8c3f02f",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 55,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-26T08:44:40Z",
      "side": 1,
      "message": "Yes, most rate control algorithms work just fine with frequent moderate updates.\n\nIf there is a large jump in the target rate then rate controllers typically have some form of reset logic, and if you have frequent large jumps then that might cause some issues, but large jumps don\u0027t happen very often.",
      "parentUuid": "6116b64a_c432a5d1",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 41
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0d9b890_b81d5777",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 58,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "I thought that encoders don\u0027t bother with temporal_id now, and it\u0027s fully determined by reference_buffers/update_buffer pattern.",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 19
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7df425e8_427e4985",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 58,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "The only reason we need `temporal_id` is because of how CBR rate controller work in actual implementations (every {sid,tid} has its own buffer levels).",
      "parentUuid": "a0d9b890_b81d5777",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 19
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82edef46_93fe2488",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 58,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7df425e8_427e4985",
      "range": {
        "startLine": 58,
        "startChar": 8,
        "endLine": 58,
        "endChar": 19
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a70cdaf_8c8c1eee",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "how can a frame have a spatial_id? \neach frame exists in all spatial layers",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 18
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe74c771_df470dcf",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "No, a frame may be encoded for some layer(s) only, for example:\n\n    [ ]\u003c--[ ]\u003c--[ ]\u003c--[ ]\u003c--[ ]\n     |           |           |\n     v           v           v\n    [ ]\u003c--------[ ]\u003c--------[ ]",
      "parentUuid": "4a70cdaf_8c8c1eee",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 18
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cf0ca170_d269e576",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 59,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe74c771_df470dcf",
      "range": {
        "startLine": 59,
        "startChar": 8,
        "endLine": 59,
        "endChar": 18
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1264d73_48696eee",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 61,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "in this case unordered_set will do nothing good except for heap fragmentation",
      "range": {
        "startLine": 61,
        "startChar": 3,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d31fb25c_6365891f",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 61,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "Probably, it was more to reflect that reference order does not matter, it\u0027s just a set of references.",
      "parentUuid": "b1264d73_48696eee",
      "range": {
        "startLine": 61,
        "startChar": 3,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cc4eebf_27fed616",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 61,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d31fb25c_6365891f",
      "range": {
        "startLine": 61,
        "startChar": 3,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd6d9a60_d5e38248",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "why vector and not simply one instance?",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 60
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b0dde17_617c6205",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "Lets use this example again:\n\n     0     1     2     3     4\n    [B]\u003c--[C]\u003c--[E]\u003c--[F]\u003c--[H]\n     |           |           |\n     v           v           v\n    [A]\u003c--------[D]\u003c--------[G]\n    \nIn this case we have 5 temporal units:\nTU0: Encode frame {A,B}\nTU1: {C}\nTU2: {D,E}\nTU3: {F}\nTU4: {G,H}\n... and so on.",
      "parentUuid": "fd6d9a60_d5e38248",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 60
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f10789d_6b926744",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 86,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b0dde17_617c6205",
      "range": {
        "startLine": 86,
        "startChar": 28,
        "endLine": 86,
        "endChar": 60
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c080b965_7cf8d2fe",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 87,
      "author": {
        "id": 18209
      },
      "writtenOn": "2024-03-14T09:28:08Z",
      "side": 1,
      "message": "how many times does the encoder supposed to call this callback?",
      "range": {
        "startLine": 87,
        "startChar": 43,
        "endLine": 87,
        "endChar": 65
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad5b9dc9_bcdbc729",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 87,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-14T13:40:35Z",
      "side": 1,
      "message": "It\u0027s not set in stone yet, but the idea right now is for the callback to be called once for every element in `frame_settings`.\n\nIf something goes wrong you get one error callback and then the encoder needs to be discarded.",
      "parentUuid": "c080b965_7cf8d2fe",
      "range": {
        "startLine": 87,
        "startChar": 43,
        "endLine": 87,
        "endChar": 65
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "216d23a9_dbcc252f",
        "filename": "api/video_codecs/video_encoder_interface.h",
        "patchSetId": 21
      },
      "lineNbr": 87,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-03-18T15:28:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad5b9dc9_bcdbc729",
      "range": {
        "startLine": 87,
        "startChar": 43,
        "endLine": 87,
        "endChar": 65
      },
      "revId": "af53886ff1fbd7a223f59476399175b3db5e7588",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}