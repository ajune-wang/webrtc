{
  "comments": [
    {
      "key": {
        "uuid": "b12e4375_a48515e0",
        "filename": "rtc_base/thread_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-02-12T16:30:34Z",
      "side": 1,
      "message": "Can you say \u003ddefault here instead? So that the compiler will consider the type trivially default constructible.",
      "range": {
        "startLine": 35,
        "startChar": 27,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "98570e313804597c75ecad5487cc3892a2431df1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00a149f8_abe35729",
        "filename": "rtc_base/thread_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5748
      },
      "writtenOn": "2019-02-12T16:39:36Z",
      "side": 1,
      "message": "That was in my original version. If I do this, I also need to either disable the assignment/copy operator (which doesn\u0027t work due to sdk/android/native_api/jni/java_types.cc using std::move with a ThreadChecker), or add a \u003ddefault version of the copy constructor. Is it OK to do the latter?",
      "parentUuid": "b12e4375_a48515e0",
      "range": {
        "startLine": 35,
        "startChar": 27,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "98570e313804597c75ecad5487cc3892a2431df1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4d0fd01_f326135e",
        "filename": "rtc_base/thread_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-02-12T16:56:09Z",
      "side": 1,
      "message": "Rather than \"fix\" this class, you can add a default member initializer to the class that has a `const ThreadCheckerDoNothing` member. IMO that\u0027s somewhat less ugly, since it puts the workaround closer to the actual problem. https://godbolt.org/z/cOFt_n",
      "parentUuid": "00a149f8_abe35729",
      "range": {
        "startLine": 35,
        "startChar": 27,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "98570e313804597c75ecad5487cc3892a2431df1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cf79611_980e56de",
        "filename": "rtc_base/thread_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5748
      },
      "writtenOn": "2019-02-12T17:47:57Z",
      "side": 1,
      "message": "I also considered doing that, but feared it\u0027d lead to the bug showing up again when someone creates another const ThreadChecker. I\u0027ll switch to that solution tomorrow if that\u0027s preferred then.",
      "parentUuid": "d4d0fd01_f326135e",
      "range": {
        "startLine": 35,
        "startChar": 27,
        "endLine": 35,
        "endChar": 29
      },
      "revId": "98570e313804597c75ecad5487cc3892a2431df1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}