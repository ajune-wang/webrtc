{
  "comments": [
    {
      "key": {
        "uuid": "dbf2847b_0b60ea05",
        "filename": "rtc_base/network.cc",
        "patchSetId": 7
      },
      "lineNbr": 130,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "This will cause VPNs to get kNetworkCostUnknown instead of kNetworkCostLow. Which seems reasonable, but probably worth mentioning in the CL description.",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee37cadf_da14ab79",
        "filename": "rtc_base/network.cc",
        "patchSetId": 7
      },
      "lineNbr": 511,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "nit: I think it would be slightly more readable as:\n\n    if (adapter_type \u003d\u003d ADAPTER_TYPE_VPN \u0026\u0026 network_monitor_) {\n      vpn_underlying_adapter_type \u003d\n          network_monitor_-\u003eGetVpnUnderlyingAdapterType(cursor-\u003eifa_name)\n    }",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7439fd4f_b99c3346",
        "filename": "rtc_base/network.h",
        "patchSetId": 7
      },
      "lineNbr": 296,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "Can you add a comment mentioning that this is fired whenever type() changes (which I think is expected to occur only in strange corner cases) or underlying_type_for_vpn() changes?",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a7440de_358e3fdc",
        "filename": "rtc_base/network.h",
        "patchSetId": 7
      },
      "lineNbr": 370,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "A comment would be helpful, such as:\n\n\"If type() is ADAPTER_TYPE_VPN, this returns the best guess for the type of the underlying network interface the VPN is using. If not known, returns ADAPTER_TYPE_UNKNOWN.\"",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cceed409_690a3f5e",
        "filename": "rtc_base/network.h",
        "patchSetId": 7
      },
      "lineNbr": 377,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "May want to do:\n\nif (type !\u003d ADAPTER_TYPE_VPN) {\n  underlying_type_for_vpn_ \u003d ADAPTER_TYPE_UNKNOWN;\n}",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cc81e7d_102fd70a",
        "filename": "rtc_base/network.h",
        "patchSetId": 7
      },
      "lineNbr": 424,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "\u003d ADAPTER_TYPE_UNKNOWN",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f76b0bb_b65c8241",
        "filename": "sdk/android/api/org/webrtc/NetworkMonitorAutoDetect.java",
        "patchSetId": 7
      },
      "lineNbr": 260,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "I\u0027m still confused about this. In the cases where we need to call getNetworkCapabilities, isn\u0027t networkState already the underlying network state?\n\nI expected the code to look something like this:\n\n  NetworkInfo networkInfo \u003d connectivityManager.getNetworkInfo(network);\n\n  // Sometimes, when getNetworkInfo is called for a VPN, it returns the info from\n  // the underlying network, and we need to call getNetworkCapabilities to tell if it\u0027s a VPN.\n  if (networkInfo.getType() !\u003d TYPE_VPN \u0026\u0026 \n      connectivityManager.getNetworkCapabilities(network).hasTransport(\n          NetworkCapabilities.TRANSPORT_VPN)) {\n    return new NetworkState(networkInfo.isConnected(), ConnectivityManager.TYPE_VPN, -1, \n                            networkInfo.getType(), networkInfo.getSubtype());\n  }\n\n  // When getNetworkInfo does return TYPE_VPN, we can try calling getActiveNetworkInfo\n  // to get information from the underlying network (if the VPN in question is active).\n  // For some reason, getActiveNetworkInfo() and getNetworkInfo(getActiveNetwork()) can\n  // behave differently.\n  if (networkInfo.getType \u003d\u003d TYPE_VPN \u0026\u0026 network \u003d\u003d connectivityManager.getActiveNetwork()) {\n    NetworkInfo underlyingNetworkInfo \u003d connectivityManager.getActiveNetworkInfo();\n    return new NetworkState(networkInfo.isConnected(), ConnectivityManager.TYPE_VPN, -1, \n                            underlyingNetworkInfo.getType(),\n                            underlyingNetworkInfo.getSubtype());\n  }\n\n  return getNetworkState(networkInfo);",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e3f1af_1969dc9f",
        "filename": "sdk/android/api/org/webrtc/NetworkMonitorAutoDetect.java",
        "patchSetId": 7
      },
      "lineNbr": 386,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "Remove this log before landing?",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95b535e9_64a3b334",
        "filename": "sdk/android/api/org/webrtc/NetworkMonitorAutoDetect.java",
        "patchSetId": 7
      },
      "lineNbr": 778,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "nit: Instead of making an error, could rely on this behavior. Then instead of doing:\n\n  ConnectionType underlyingConnectionTypeForVpn \u003d ConnectionType.CONNECTION_NONE;\n  if (connectionType \u003d\u003d ConnectionType.CONNECTION_VPN) {\n    underlyingConnectionTypeForVpn \u003d getUnderlyingConnectionTypeForVpn(networkState);\n  }\n\nCould just do:\n\n  ConnectionType underlyingConnectionTypeForVpn \u003d getUnderlyingConnectionTypeForVpn(networkState);\n\nAlternatively, could just get rid of these helper methods, and call the overload that takes \"isConnected, networkType, networkSubtype\" directly. These methods are only called in one place, and we already have a lot of helper methods in this file to keep track of.",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c7219c5_c236db75",
        "filename": "sdk/android/src/jni/androidnetworkmonitor.cc",
        "patchSetId": 7
      },
      "lineNbr": 390,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-27T01:15:07Z",
      "side": 1,
      "message": "Will this log be too spammy? If I understand correctly, this is expected to occur unless the VPN calls setUnderlyingNetworks, or the VPN is the \"active\" network.",
      "revId": "29b9ac0211dccb9e69acce91fe47102d6a34b321",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}