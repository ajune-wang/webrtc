{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b4412ab6_18799055",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-12-18T11:56:54Z",
      "side": 1,
      "message": "More unified-plan default",
      "revId": "ecf414f6e5f0364754128fa42d85fb54cafa007b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a934e0de_747ee1c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-12-18T11:56:54Z",
      "side": 1,
      "message": "More unified-plan defaults",
      "revId": "ecf414f6e5f0364754128fa42d85fb54cafa007b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ad2fc59_d6acc1e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-18T12:42:59Z",
      "side": 1,
      "message": "+1 with caveat that I don\u0027t have much context regarding MSID signaling",
      "revId": "ecf414f6e5f0364754128fa42d85fb54cafa007b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61448666_3bd111d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-12-20T12:17:56Z",
      "side": 1,
      "message": "hrm... the failure is quite interesting. The test itself is *not* including msid-semantic but the adapter.js session part boilerplate.\nhttps://chromium-review.googlesource.com/c/chromium/src/+/5139143 fixes that.\n\nBut why would that make a difference and just in the case of this particular test?",
      "revId": "ecf414f6e5f0364754128fa42d85fb54cafa007b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3932a0af_c6e3fc2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-12-20T13:07:45Z",
      "side": 1,
      "message": "Ok, this is interesting. The chromium CL fixes it because msid lines behave sanely now.\nThe test negotiates simulcast in the first round and then the remote end offers without a\u003dmsid-semantic. This leads to the local answer not including msid lines because of the new O/A logic in this test. That leads to the error in ways I have not fully understood yet. parameters.encodings looks the same in both cases but calling sender.getParameters() after aTask has been queued shows an empty list of encodings (yet the m-line is not rejected).\n\nRemoving setParameters and waiting in the test does not show any RTP being sent so I do not think this test had the right result in passing.\n\nMeta question is if this suggests we need a session-level \"msid-semantic\" attribute...",
      "parentUuid": "61448666_3bd111d5",
      "revId": "ecf414f6e5f0364754128fa42d85fb54cafa007b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}