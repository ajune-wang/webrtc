{
  "comments": [
    {
      "key": {
        "uuid": "69440932_345b9928",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 741,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-12-14T15:41:14Z",
      "side": 1,
      "message": "New test. Naming?",
      "range": {
        "startLine": 741,
        "startChar": 34,
        "endLine": 741,
        "endChar": 49
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a721fbc_54e43949",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 741,
      "author": {
        "id": 5524
      },
      "writtenOn": "2017-12-14T16:00:32Z",
      "side": 1,
      "message": "Maybe RobustToNoise or something along those lines?\nI think one of things the original test was intended to capture was that the initial key-frame is heavier to encode, and we don\u0027t want trigger over-use on the very first frame (especially if other call setup things are happening in the background).\n\nMaybe change the test to first add a very large sample and then converge to the lower load?",
      "parentUuid": "69440932_345b9928",
      "range": {
        "startLine": 741,
        "startChar": 34,
        "endLine": 741,
        "endChar": 49
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2d46a29_e4c9b925",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 741,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-12-14T16:19:30Z",
      "side": 1,
      "message": "The very first frame is totally ignored (which might be a god thing, then?), because the filter wants both the encode time and the time since previous frame, and the latter info is unavailable. That\u0027s why the initial expectation is an EXPECT_EQ.\n\nThe intention with the test is to check that we stay close to the initial value, which we do because we have seen data for only a fraction of the filter time constant. There\u0027s no noise in this testcase. (A few cases of noise are tested by the RandomFrameInterlval tests below).",
      "parentUuid": "2a721fbc_54e43949",
      "range": {
        "startLine": 741,
        "startChar": 34,
        "endLine": 741,
        "endChar": 49
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99ab45cc_caeead7a",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 741,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-01-09T15:34:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c2d46a29_e4c9b925",
      "range": {
        "startLine": 741,
        "startChar": 34,
        "endLine": 741,
        "endChar": 49
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3771bc57_2fd2751f",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 754,
      "author": {
        "id": 5524
      },
      "writtenOn": "2017-12-14T16:00:32Z",
      "side": 1,
      "message": "InitialUsage() * 0.75 + 3.75? That seems a little arbitrary, but ok :)",
      "range": {
        "startLine": 754,
        "startChar": 29,
        "endLine": 754,
        "endChar": 43
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c9573dd_409f8933",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 754,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-12-14T16:19:30Z",
      "side": 1,
      "message": "It\u0027s a weighted average of the initial value and the true cpu usage of appr 15%, with the somewhat arbitrary weight of 0.75 for the initial value. \n\nWould 0.75 * InitialUsage() + 0.25 * 15 be clearer? Or some symbolic name for 15?",
      "parentUuid": "3771bc57_2fd2751f",
      "range": {
        "startLine": 754,
        "startChar": 29,
        "endLine": 754,
        "endChar": 43
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2762a368_b19be6af",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 754,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-01-09T15:34:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9c9573dd_409f8933",
      "range": {
        "startLine": 754,
        "startChar": 29,
        "endLine": 754,
        "endChar": 43
      },
      "revId": "84a7179702d1e376480d2f844f1acc01e6813503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}