{
  "comments": [
    {
      "key": {
        "uuid": "6c172ada_a63ecb40",
        "filename": "test/single_threaded_task_queue.cc",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "s/first/next_delayed_task ?",
      "range": {
        "startLine": 145,
        "startChar": 13,
        "endLine": 145,
        "endChar": 18
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a0d5cb0_ba488fe5",
        "filename": "test/single_threaded_task_queue.cc",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "Calling this before calling Stop() would be catastrophic, would it not? How about we Stop() from here?",
      "range": {
        "startLine": 168,
        "startChar": 2,
        "endLine": 168,
        "endChar": 14
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1cbca20_7b80ac72",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-09-25T11:06:16Z",
      "side": 1,
      "message": "+ override",
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f3c69dd_f3c7bba4",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:10:27Z",
      "side": 1,
      "message": "it doesn\u0027t override anything",
      "parentUuid": "e1cbca20_7b80ac72",
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d0b70a_08ef88c2",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-09-25T11:49:38Z",
      "side": 1,
      "message": "It overrides the pure virtual method!\n\nAnyway, it\u0027s useful to indicate it\u0027s part of the interface.\nAnd the same rationale holds: it helps detecting mistake (e.g. future refactoring). \n\nI would be fine with \"final\" as well :)",
      "parentUuid": "9f3c69dd_f3c7bba4",
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0d5ada4_29873b7e",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:58:04Z",
      "side": 1,
      "message": "where that pure virtual method is declared?\n\nTaskQueueBase::PostTask has different signature and overriden below.",
      "parentUuid": "24d0b70a_08ef88c2",
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d53f90a_8e8b9fde",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-09-25T11:06:16Z",
      "side": 1,
      "message": "+ override",
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e8f2526_17f9f603",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:10:27Z",
      "side": 1,
      "message": "ditto",
      "parentUuid": "3d53f90a_8e8b9fde",
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddfe56d5_8149029f",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "Does the style guide mandate grouping all methods under \"Implement X\" close together, without empty lines in between?",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 28
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7493006d_b94273f0",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:54:11Z",
      "side": 1,
      "message": "no it doesn\u0027t. why?\n\nhere is the topic: https://google.github.io/styleguide/cppguide.html#Function_Comments\namong other guidances it state:\n\"When documenting function overrides, focus on the specifics of the override itself, rather than repeating the comment from the overridden function. In many of these cases, the override needs no additional documentation and thus no comment is required.\"\n\nthere is also this guidance which is remotely related: https://google.github.io/styleguide/cppguide.html#Vertical_Whitespace\n\"Minimize use of vertical whitespace.\"",
      "parentUuid": "ddfe56d5_8149029f",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 28
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1825a682_dcf2f7ff",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "Can we move the logic from here into PostDelayedTask?",
      "range": {
        "startLine": 100,
        "startChar": 9,
        "endLine": 100,
        "endChar": 20
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0437b94_520162a7",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:54:11Z",
      "side": 1,
      "message": "I tried, but wasn\u0027t able to.\n\nwhich one btw?\nown PostDelayedTask takes std::function as 1st parameter (and std::function can\u0027t own a std::unique_ptr)\nTaskQueueBase::PostDelayedTaks returns void.\n\nThus added this extra private function that supports everything.",
      "parentUuid": "1825a682_dcf2f7ff",
      "range": {
        "startLine": 100,
        "startChar": 9,
        "endLine": 100,
        "endChar": 20
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cde636a_eed2a654",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "1. \"earliest_execution_time\" is no longer an entity that exists elsewhere in this file.\n2. nit: Capitalization and punctuation.",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 37
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f37d6ab9_e6e7a5fd",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 107,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:54:11Z",
      "side": 1,
      "message": "Done?",
      "parentUuid": "6cde636a_eed2a654",
      "range": {
        "startLine": 107,
        "startChar": 0,
        "endLine": 107,
        "endChar": 37
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0537138b_ad9b0889",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "How about using multiset and moving the int64_t into QueuedTask? Things will look a bit better without -\u003efirst and -\u003esecond.",
      "range": {
        "startLine": 108,
        "startChar": 7,
        "endLine": 108,
        "endChar": 15
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b410cd8c_d4841676",
        "filename": "test/single_threaded_task_queue.h",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-09-25T11:54:11Z",
      "side": 1,
      "message": "I tried (for exactly that reason), but multiset doesn\u0027t have non-const accessor to its members (until c++17 extract function)\nwhich makes it hard to steal 1st task to run.\n\nrenamed few variables to avoid weird \u0027first-\u003efirst\u0027 expression.",
      "parentUuid": "0537138b_ad9b0889",
      "range": {
        "startLine": 108,
        "startChar": 7,
        "endLine": 108,
        "endChar": 15
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "caedb1c0_e26c0b32",
        "filename": "test/single_threaded_task_queue_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 366,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-09-25T11:16:52Z",
      "side": 1,
      "message": "Where are the tests of this suite?",
      "range": {
        "startLine": 366,
        "startChar": 0,
        "endLine": 366,
        "endChar": 24
      },
      "revId": "27357de8103fc687a182ca779ed45022931908bb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}