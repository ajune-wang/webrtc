{
  "comments": [
    {
      "key": {
        "uuid": "b2768562_d280c0f6",
        "filename": "api/video_codecs/video_encoder_software_fallback_wrapper.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-27T11:47:26Z",
      "side": 1,
      "message": "This is done here:\nhttps://webrtc-review.googlesource.com/c/src/+/144030\n\nSame for the two other instances of this TODO in this CL.",
      "range": {
        "startLine": 95,
        "startChar": 0,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67801000_c7a91d81",
        "filename": "call/rtp_transport_controller_send_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-28T09:43:25Z",
      "side": 1,
      "message": "It\u0027s unfortunate to have this dependency. We\u0027ve tried hard to disentangle encoding from transport.",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99706e7_d690094c",
        "filename": "call/rtp_transport_controller_send_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-28T09:54:32Z",
      "side": 1,
      "message": "Could you suggest a work-around?",
      "parentUuid": "67801000_c7a91d81",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9588bd0_c7b0e628",
        "filename": "call/rtp_transport_controller_send_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-28T10:12:29Z",
      "side": 1,
      "message": "Some alternatives:\n\n  1. Either move the call to SetFecControllerOverride() to the caller (will be natural if you\n     also move the implementation of the interface),\n\n  2. Variant of above: Implement a RtpVideoSender::GetFecControllerOverride method, so \n     inheriting FecControllerOverride need not be part of the interface. Still leave to caller \n     to connect encoder and transport.\n\n  3. (Don\u0027t really like this one) create yet another interface with only the \n     SetFecControllerOverride method in it, and pass that.",
      "parentUuid": "b99706e7_d690094c",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "102b8ad9_9a5154f9",
        "filename": "call/rtp_transport_controller_send_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-28T10:50:24Z",
      "side": 1,
      "message": "I would highly prefer approach #3, and then cleaning up the technical debt in a later, smaller CL, and when we have the time for it. Right now, this is blocking me from making progress towards my OKR. Wdys?",
      "parentUuid": "b9588bd0_c7b0e628",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 117,
        "endChar": 56
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c92822df_129213c3",
        "filename": "call/rtp_video_sender.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-28T09:43:25Z",
      "side": 1,
      "message": "I wonder if this really is the right place to implement this interface. As I understand it (without having all context), the idea is that the encoder should be able to temporarily disable fec?\n\nWould it be possible to instead let the FecController itself implement the override interface, and pass that down to encoders? Then the transport need not be aware of the details, it has one FecController, and delegates all decisions related to FEC to that object. It\u0027s not so nice to have a \"controller\" object that\u0027s not really in control.\n\nAnother alternative (maybe this was discussed and rejected earlier) would be to add a flag or priority to the encoded frame, saying whether or not the encoder thinks it\u0027s worth while to give it additional protection.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 52
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25ee0f3c_71db6004",
        "filename": "call/rtp_video_sender.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-28T09:54:32Z",
      "side": 1,
      "message": "1. We can pass FecController down, but then we risk whoever gets it using more of its API than was intended. This is a way to expose only part of it. Wdyt?\n2. The decision to avoid FEC is not done per-frame, but rather for bandwidth allocation, so I am afraid that approach would not work.",
      "parentUuid": "c92822df_129213c3",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 52
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0472e0be_7c4d113d",
        "filename": "call/rtp_video_sender.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-28T10:12:29Z",
      "side": 1,
      "message": "\u003e 1. We can pass FecController down, but then we risk whoever gets it using more of its API than was intended. This is a way to expose only part of it. Wdyt?\n\nYou can make FecController implement the FecControllerOverride interface (a bit awkwardly named, maybe), and pass only a FecControllerOverride* down to the encoders. Alternatively, let FecController have a method to return a FecControllerOverride* that can then be passed down to whoever needs to override it. I agree the FecController shouldn\u0027t be exposed wholesale to the encoders, but should be straight-forward to give access only via the limited FecControllerOverride interface.\n\nWho owns and has access to the FecController now?\n\n\u003e 2. The decision to avoid FEC is not done per-frame, but rather for bandwidth allocation, so I am afraid that approach would not work.\n\nAck.",
      "parentUuid": "25ee0f3c_71db6004",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 52
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6014bd8e_ab989aa1",
        "filename": "call/rtp_video_sender.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-28T10:50:24Z",
      "side": 1,
      "message": "Please note that in the current design, FecController is NOT the one implementing the FecControllerOverride interface. One nice thing about it - no need to update downstream projects that inject their own FecController. FecController is kept blissfully unaware that it can be overridden. Please see the comment here (separate CL):\nhttps://webrtc-review.googlesource.com/c/src/+/143966/3/call/rtp_video_sender.cc\n\nI think this is a good thing.",
      "parentUuid": "0472e0be_7c4d113d",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 52
      },
      "revId": "08d98cce2395e5c127f73e95f233a4d9ef140427",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}