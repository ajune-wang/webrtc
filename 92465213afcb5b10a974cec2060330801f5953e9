{
  "comments": [
    {
      "key": {
        "uuid": "15f8e809_e589b1d5",
        "filename": "api/rtp_packet_info.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-14T06:29:38Z",
      "side": 1,
      "message": "This may be a good place to also say explicitly that it\u0027s for implementing GetContributingSources. Probably obvious to you, who know the SourceTracker, but not to a casual reader.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 48
      },
      "revId": "92465213afcb5b10a974cec2060330801f5953e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6fe3ba3_fbaba767",
        "filename": "api/rtp_packet_info.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 8392
      },
      "writtenOn": "2019-06-14T07:09:26Z",
      "side": 1,
      "message": "That seems to be too much knowledge for the casual reader in this part of the code, who most likely doesn\u0027t know what `getContributingSources()` or `getSynchronizationSources()` are either (especially because the naming of those methods aren\u0027t that great - nothing hints at them returning dictionaries).\n\nFor example: What if the same information is also used to power some of the stats in `getStats()`? There\u0027s a high likelihood of that happening for `receive_time_ms` and other similar timing-related fields. It would be unrealistic to expect that the person making those changes would remember to also update the comments here.\n\nI believe that it\u0027s important to uphold the principle of separation of concerns. `RtpPacketInfo`\u0027s purpose is to carry per-packet information. It shouldn\u0027t have too much knowledge of what the carried information is used for in other parts of the code. The updated comment should give a curious reader enough of a suggestion that they should look at `SourceTracker` next. That class has urls in its comments that link directly to the specs that explain things further.",
      "parentUuid": "15f8e809_e589b1d5",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 48
      },
      "revId": "92465213afcb5b10a974cec2060330801f5953e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "748dadc6_7bec3fb2",
        "filename": "api/rtp_packet_info.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-14T07:31:04Z",
      "side": 1,
      "message": "The thing is, the developer who works with the EncodedImage or VideoFrame classes and sees the RtpPacketInfos member will ask herself \"Why on earth does this class need to know stuff about RTP packetization?\". The answer to that question is that it is needed to implement getContributingSources properly, and I think there should be comments somewhere nearby in the code to make that answer easily discoverable.\n\nI think it would make some sense to mention both the name of the method in webrtc w3c spec, and the class name |SourceTracker|, which is a piece of the current implementation thereof.\n\nAs for getStats, I would really hope that can be supported without attaching data to every frame passing through the pipeline. We\u0027ll find out later.",
      "parentUuid": "e6fe3ba3_fbaba767",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 48
      },
      "revId": "92465213afcb5b10a974cec2060330801f5953e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "641c6d88_d81c99cd",
        "filename": "api/rtp_packet_info.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 8392
      },
      "writtenOn": "2019-06-14T07:39:40Z",
      "side": 1,
      "message": "Would it perhaps make sense to put that comment in `EncodedImage` and `VideoFrame` instead? `RtpPacketInfo` itself isn\u0027t all that strange. The surprise is, as you say, that there\u0027s a `RtpPacketInfos` member in the classes that deal with output frames. I can update the other audio and video CLs that are in review.",
      "parentUuid": "748dadc6_7bec3fb2",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 26,
        "endChar": 48
      },
      "revId": "92465213afcb5b10a974cec2060330801f5953e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}