{
  "comments": [
    {
      "key": {
        "uuid": "6327bcc0_554c6153",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T13:20:12Z",
      "side": 1,
      "message": "Should probably be either set_capture_post_processing or SetCapturePostProcessing.\nhttps://google.github.io/styleguide/cppguide.html#Function_Names",
      "range": {
        "startLine": 314,
        "startChar": 29,
        "endLine": 314,
        "endChar": 30
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e23fe3c3_82c5a878",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T14:49:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6327bcc0_554c6153",
      "range": {
        "startLine": 314,
        "startChar": 29,
        "endLine": 314,
        "endChar": 30
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "311ed626_18286193",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T13:20:12Z",
      "side": 1,
      "message": "To avoid code duplication and confusion, the static Create can delegate its work to this function.",
      "range": {
        "startLine": 334,
        "startChar": 17,
        "endLine": 334,
        "endChar": 47
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7012610_fdab55f0",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T14:49:09Z",
      "side": 1,
      "message": "Since we\u0027re going to remove those functions soon, I\u0027m not sure if it\u0027s worth the effort to reimplement them. wdyt?",
      "parentUuid": "311ed626_18286193",
      "range": {
        "startLine": 334,
        "startChar": 17,
        "endLine": 334,
        "endChar": 47
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a16639a_ef882015",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T15:59:32Z",
      "side": 1,
      "message": "That\u0027s fine too, the code lgtm as is.\n\nI wouldn\u0027t consider it reimplementing though, the reasoning goes either way. This function body could simply be:\n\nreturn AudioProcessing::Create(config, std::move(capture_post_processing_), std::move(echo_control_factory_), nonlinear_beamformer_.release());\n\nThen it\u0027s clear to anyone considering constructing APM this way that every APM creation delegates to a single function and it\u0027s obvious that it\u0027s safe to swap out a AudioProcessing::Create call. This decreases the work for whoever makes and reviews those changes.",
      "parentUuid": "d7012610_fdab55f0",
      "range": {
        "startLine": 334,
        "startChar": 17,
        "endLine": 334,
        "endChar": 47
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03b5cf1a_b4e6c92b",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T16:31:26Z",
      "side": 1,
      "message": "Ah, sorry, I think I misunderstood your first comment. I thought you meant I should reimplement the Create method to use this one, but you meant it the other way around. I guess that makes sense, done.",
      "parentUuid": "6a16639a_ef882015",
      "range": {
        "startLine": 334,
        "startChar": 17,
        "endLine": 334,
        "endChar": 47
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "398fcb5c_52e72375",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T13:20:12Z",
      "side": 1,
      "message": "This is a nice opportunity to use the fancy TODO(bugs.webrtc.org/1337) todo-style, pointing to a tracking bug for this refactoring.",
      "range": {
        "startLine": 319,
        "startChar": 5,
        "endLine": 319,
        "endChar": 15
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "212c780c_34dfa5ca",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 319,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T14:49:09Z",
      "side": 1,
      "message": "Good idea, very fancy.",
      "parentUuid": "398fcb5c_52e72375",
      "range": {
        "startLine": 319,
        "startChar": 5,
        "endLine": 319,
        "endChar": 15
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dec3ed20_d4b60d32",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T13:20:12Z",
      "side": 1,
      "message": "What is the state of the AudioProcessingBuilder after calling Create? Might be worth documenting. Do we allow multiple Create calls? Do we want to guard (flip a bool and (D)CHECK) against it?",
      "range": {
        "startLine": 638,
        "startChar": 0,
        "endLine": 638,
        "endChar": 28
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74830b74_b4232862",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 638,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T14:49:09Z",
      "side": 1,
      "message": "The private unique_ptrs will be set to nullptr after a call to Create (due to the std::move), so it\u0027s safe to call it again (but it won\u0027t use the same submodules that were set before the first call to Create). I\u0027ll try to make that more clear in the documentation below at the Create functions.",
      "parentUuid": "dec3ed20_d4b60d32",
      "range": {
        "startLine": 638,
        "startChar": 0,
        "endLine": 638,
        "endChar": 28
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37febba3_169eca83",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 641,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T13:20:12Z",
      "side": 1,
      "message": "The class should explicitly disable copy semantics, maybe also move.\nhttps://google.github.io/styleguide/cppguide.html#Copyable_Movable_Types\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/rtc_base/constructormagic.h",
      "range": {
        "startLine": 640,
        "startChar": 0,
        "endLine": 641,
        "endChar": 28
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "488feb52_e55d54ab",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 641,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T14:49:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "37febba3_169eca83",
      "range": {
        "startLine": 640,
        "startChar": 0,
        "endLine": 641,
        "endChar": 28
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75f3b19a_2071b722",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 653,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-12-19T13:20:12Z",
      "side": 1,
      "message": "While we\u0027re changing code anyway, aren\u0027t these meant to return scoped_refptr\u003cAudioProcessing\u003e at some point? Can we do that now? peah@?",
      "range": {
        "startLine": 653,
        "startChar": 2,
        "endLine": 653,
        "endChar": 18
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f93f93a_d0497a7d",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 653,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T14:49:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "75f3b19a_2071b722",
      "range": {
        "startLine": 653,
        "startChar": 2,
        "endLine": 653,
        "endChar": 18
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8ee05ac_bb1693eb",
        "filename": "modules/audio_processing/include/audio_processing.h",
        "patchSetId": 1
      },
      "lineNbr": 654,
      "author": {
        "id": 5607
      },
      "writtenOn": "2017-12-19T12:18:33Z",
      "side": 1,
      "message": "We could add a setter for the config struct as well, but then we would have to make a copy, which is less efficient than the current approach (not sure how important that is).",
      "range": {
        "startLine": 654,
        "startChar": 26,
        "endLine": 654,
        "endChar": 54
      },
      "revId": "8dcedf936b84213c8266e7354ac77c4b9e0b0242",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}