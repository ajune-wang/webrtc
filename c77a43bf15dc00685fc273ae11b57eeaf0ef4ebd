{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d3f0dbc5_93713e34",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2121,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "```\nif (PeriodicProcess()) {\n  GTEST_SKIP() \u003c\u003c \"This test checks behavior when not using interval budget.\";\n}\n```",
      "range": {
        "startLine": 2118,
        "startChar": 0,
        "endLine": 2121,
        "endChar": 3
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8827b9d6_8b5481e1",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2124,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "You aren\u0027t verifying these in `EXPECT_CALL` below so remove and just call `Send` like so:\n\n```\nSend(RtpPacketMediaType::kVideo, /*ssrc\u003d*/12345, /*sequence_number\u003d*/i,\n     clock_.TimeInMilliseconds(), kPackeSize.bytes());\n```",
      "range": {
        "startLine": 2122,
        "startChar": 0,
        "endLine": 2124,
        "endChar": 34
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "afc0210f_730a623a",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2126,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "Nit: static constexpr",
      "range": {
        "startLine": 2125,
        "startChar": 0,
        "endLine": 2126,
        "endChar": 57
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6afc39e3_7f349f3e",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2129,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "/*pacing_rate\u003d*/",
      "range": {
        "startLine": 2129,
        "startChar": 25,
        "endLine": 2129,
        "endChar": 26
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16d866e0_4a7d28fa",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2138,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "You must set expectations before any actions are performed on the mock. Ideally, all expectations should be set before `callback_` is handed to `pacer_`, but that\u0027s cumbersome to fix since it happens in `SetUp`...\n\nAlso, you could use `EXPECT_CALL` and sequence number to spell out what packets should be sent instead of doing that in a comment.",
      "range": {
        "startLine": 2138,
        "startChar": 2,
        "endLine": 2138,
        "endChar": 46
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f399252d_cffd6937",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2153,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "Ditto",
      "range": {
        "startLine": 2145,
        "startChar": 0,
        "endLine": 2153,
        "endChar": 57
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f895a49f_ce1f118e",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2156,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "Add parameters comments: pacing_rate and padding_rate",
      "range": {
        "startLine": 2156,
        "startChar": 25,
        "endLine": 2156,
        "endChar": 26
      },
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f85115d_fe607649",
        "filename": "modules/pacing/pacing_controller_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 2163,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-04-21T15:08:35Z",
      "side": 1,
      "message": "SendPadding shouldn\u0027t also have been called in this case?",
      "revId": "c77a43bf15dc00685fc273ae11b57eeaf0ef4ebd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}