{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4ed64aa0_44488f15",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "Mostly nits! Good work!",
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "561d9f37_4ae4ad18",
        "filename": "DEPS",
        "patchSetId": 3
      },
      "lineNbr": 2603,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-05-03T10:43:51Z",
      "side": 1,
      "message": "Nit: if we think this is something we only need in //media, maybe add to //media/DEPS?\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/media/DEPS",
      "range": {
        "startLine": 2603,
        "startChar": 3,
        "endLine": 2603,
        "endChar": 9
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4fbe89a_4327c8fd",
        "filename": "DEPS",
        "patchSetId": 3
      },
      "lineNbr": 2603,
      "author": {
        "id": 7036
      },
      "writtenOn": "2021-05-03T13:09:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "561d9f37_4ae4ad18",
      "range": {
        "startLine": 2603,
        "startChar": 3,
        "endLine": 2603,
        "endChar": 9
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "248f4e4a_1add939c",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "Just FYI: I\u0027m working on a more efficient TaskQueue based Timeout implementation. This works, but I hope that we can get both Chrome and Media Router to use that one (and that one will not do any timer wheel shenanigans).",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 86,
        "endChar": 19
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "213ce173_bb9034d8",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "You don\u0027t need to recreate this on each Start/Stop. The library will handle calling socket-\u003eHandleTimeout(old_timeout);",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 100,
        "endChar": 42
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0dd2a928_e68f3f1d",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 7036
      },
      "writtenOn": "2021-05-03T10:34:24Z",
      "side": 1,
      "message": "The socket can, but a nullptr can\u0027t. It\u0027s possible to have a task queued while the socket and transport have both been destroyed already.\n\nWhen the transport is destroyed, so is the socket and its internal timer manager, calling the Timeout destructor and thus Stop(), marking it as not alive, and then, we don\u0027t run into a situation where we try to call operations on a destroyed socket object.",
      "parentUuid": "213ce173_bb9034d8",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 100,
        "endChar": 42
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c459914_a9958904",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 100,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T14:19:23Z",
      "side": 1,
      "message": "But shouldn\u0027t it be enough to have it created in the constructor and call SetNotAlive() in the destructor? It doesn\u0027t matter that much as I have a slightly more optimized version at https://webrtc-review.googlesource.com/c/src/+/217223 that you (and I) should use when it has landed.",
      "parentUuid": "0dd2a928_e68f3f1d",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 100,
        "endChar": 42
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c31d84f_b99cab9a",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 187,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "This is the default, so you don\u0027t need to set it (again).",
      "range": {
        "startLine": 187,
        "startChar": 17,
        "endLine": 187,
        "endChar": 57
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "621c447d_035fd6a9",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 187,
      "author": {
        "id": 7036
      },
      "writtenOn": "2021-05-03T10:34:24Z",
      "side": 1,
      "message": "Ah yes, that\u0027s something that remained from our earlier MTU debugging.",
      "parentUuid": "2c31d84f_b99cab9a",
      "range": {
        "startLine": 187,
        "startChar": 17,
        "endLine": 187,
        "endChar": 57
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad219bd6_42a12ab7",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "should this really return false?",
      "range": {
        "startLine": 210,
        "startChar": 9,
        "endLine": 210,
        "endChar": 14
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c58f760_59d20072",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 210,
      "author": {
        "id": 7036
      },
      "writtenOn": "2021-05-03T10:34:24Z",
      "side": 1,
      "message": "An old remnant of \"if I return something absurd, something will probably fail somewhere and I\u0027ll need to fix it\".\nExcept that caller doesn\u0027t care at all about the return value. It\u0027s an asynchronous operation anyway, so it doesn\u0027t make much sense.",
      "parentUuid": "ad219bd6_42a12ab7",
      "range": {
        "startLine": 210,
        "startChar": 9,
        "endLine": 210,
        "endChar": 14
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47ac4685_0f3e82e4",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "This is a bit of a weird comparison. The max_message_size is expected to be quite large. But if you would set it to be quite small, say 100 bytes, and send a 100 byte message, then 12 (SCTP header) + 16 (DATA header) + 100 bytes (payload) \u003d 126 bytes would get sent, and this would trigger.",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 304,
        "endChar": 3
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40fab0f1_219e6fe3",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 304,
      "author": {
        "id": 7036
      },
      "writtenOn": "2021-05-03T10:34:24Z",
      "side": 1,
      "message": "This was meant for SendData, not SendPacket, can\u0027t compare the MTU and the message size obviously!",
      "parentUuid": "47ac4685_0f3e82e4",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 304,
        "endChar": 3
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dcf7eee_62137146",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-05-03T09:55:31Z",
      "side": 1,
      "message": "I don\u0027t think having this as a member adds much value. It certainly does in usrsctp, with its EOR, but I think it can be skipped here.",
      "range": {
        "startLine": 363,
        "startChar": 2,
        "endLine": 363,
        "endChar": 17
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63c9afed_f182bbcc",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 363,
      "author": {
        "id": 7036
      },
      "writtenOn": "2021-05-03T10:34:24Z",
      "side": 1,
      "message": "This should prevent reallocating the buffer for each message received. It\u0027s possible there are still references to the buffer if the OnMessage DataChannel callback wasn\u0027t redelivered yet between 2 packets though.",
      "parentUuid": "4dcf7eee_62137146",
      "range": {
        "startLine": 363,
        "startChar": 2,
        "endLine": 363,
        "endChar": 17
      },
      "revId": "39df641cec283c1dddb7b4ccdae6aaca29eb779a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}