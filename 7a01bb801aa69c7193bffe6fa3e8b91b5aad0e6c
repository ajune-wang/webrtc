{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fad77f69_36336261",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-29T08:13:07Z",
      "side": 1,
      "message": "API seems about right (minimal is good!)\nWhat\u0027s missing in this CL:\n\n- Tests\n- Documentation\n",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d0755ea_a7d05a48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-03-29T08:19:16Z",
      "side": 1,
      "message": "Can we also add tests fir this library in this CL?",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca0bc09d_5285ec93",
        "filename": "api/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 1235,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-29T08:13:07Z",
      "side": 1,
      "message": "Please refer to the target - libjingle_peerconnectoin_api - or drop the comment, I don\u0027t think it\u0027s needed.\n\nAlso, anyone who needs the .h file needs to depend directly on this target anyway.",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72b66706_d2692e47",
        "filename": "api/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 1235,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-03-29T08:19:16Z",
      "side": 1,
      "message": "I am not sure I fully understand the comment, shouldn\u0027t we just say \"library to access field trials, even outside of PeerConnection\"?",
      "parentUuid": "ca0bc09d_5285ec93",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1057f36_3ac537ce",
        "filename": "api/field_trials.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-29T08:13:07Z",
      "side": 1,
      "message": "If you can manage to call InsertIntoMap() in the initializer list, you can make key_value_map_ const, which is great for documenting that it\u0027s intentional that you can\u0027t change it.\n\nOTOH, that will make it impossible to build this object iteratively - but that\u0027s perhaps the job of a Builder class anyway?",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6788c650_43a755e5",
        "filename": "api/field_trials.cc",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-29T08:13:07Z",
      "side": 1,
      "message": "TODO for moving the field_trial:: code into this class and not constructing a string?",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11da5969_a4a91747",
        "filename": "api/field_trials.h",
        "patchSetId": 1
      },
      "lineNbr": 2,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-03-29T08:19:16Z",
      "side": 1,
      "message": "nit: 2022",
      "range": {
        "startLine": 2,
        "startChar": 18,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "912bfe4c_5763cae8",
        "filename": "api/field_trials.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-29T08:13:07Z",
      "side": 1,
      "message": "Class comment missing: What is this class, and how do you use it?",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06c4e9af_2d10f43b",
        "filename": "api/field_trials.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-29T08:13:07Z",
      "side": 1,
      "message": "Query: Is std::map the right type for a write-once, read-many map?\nShould it instead be a hashmap of some type?",
      "revId": "7a01bb801aa69c7193bffe6fa3e8b91b5aad0e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}