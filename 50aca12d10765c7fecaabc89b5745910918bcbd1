{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3d1b79c2_fa836da1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-22T13:32:18Z",
      "side": 1,
      "message": "Fix looks good, a bit of commentary on the test.\n",
      "revId": "50aca12d10765c7fecaabc89b5745910918bcbd1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b906f9f7_0ee24571",
        "filename": "pc/audio_rtp_receiver_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-22T13:32:18Z",
      "side": 1,
      "message": "This will fail if the code that calls SetDefaultOutputVolume() notices that it\u0027s already at the desired value. I take it this is expected to be triggered by setting the media channel to null?\n\nThis is a bit weird in a GMock context, this will also be satisfied if the SetDefaultOutputVolume() is called twice from the destructor, .Times(2) would give exactly the same test result.",
      "revId": "50aca12d10765c7fecaabc89b5745910918bcbd1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ebfddbb_380fd184",
        "filename": "pc/audio_rtp_receiver_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 123,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-03-22T13:53:13Z",
      "side": 1,
      "message": "Yes, that\u0027s the correct understanding.\n\nThe reason I chose to go with the 2x Times(1) approach instead of Times(2) is to decouple the call that happens as a result of clearing the media channel object from the action that happens as a result of disabling the track. I figured that would make the goals of the tests easier to parse.",
      "parentUuid": "b906f9f7_0ee24571",
      "revId": "50aca12d10765c7fecaabc89b5745910918bcbd1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "50aca12d10765c7fecaabc89b5745910918bcbd1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two googlers using a trusted device must approve the change, see http://go/change-management-policy"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "50aca12d10765c7fecaabc89b5745910918bcbd1",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}