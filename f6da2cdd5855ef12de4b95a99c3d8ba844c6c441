{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2de85d2a_43d60b23",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-06-03T01:09:34Z",
      "side": 1,
      "message": "Hello Harald and Niels. This CL is another cleanup for `rtc::Thread::socketserver()`. Since FakePortAllocator is not expected to be used outside of the WebRTC project, I expect this patch to be safe. If not, please tell me.",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dce68123_fba73079",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-03T09:55:58Z",
      "side": 1,
      "message": "I\u0027m afraid it is used in a few places in internal projects, so will need a bit of cleanup before this can be submitted.\n\nI also wonder why this \"fake\" class needs a network thread and a socket factory? I looks like the thread is needed for TestUDPPort, which looks like inherits the production UDPPort class and just adds a static Create method. It\u0027s very unclear to what\u0027s really needed.",
      "parentUuid": "2de85d2a_43d60b23",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2ac282b_b04a161c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-03T13:09:36Z",
      "side": 1,
      "message": "I think it could be simpler and support more cases...\n\n",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86849f71_65ae4cab",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-03T14:28:09Z",
      "side": 1,
      "message": "Adding Jonas as CC to discuss about whether AlwaysValidPointer is movable.\n",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb4a01e8_72f232b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-06-09T20:10:13Z",
      "side": 1,
      "message": "Niels, is it safe to land this CL, or should I wait for internal cleanups?",
      "parentUuid": "dce68123_fba73079",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "236bdb94_33c66b37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-10T07:56:21Z",
      "side": 1,
      "message": "It\u0027s not landable now, unfortunately.",
      "parentUuid": "eb4a01e8_72f232b7",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6195e6e7_864f58c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-23T10:00:43Z",
      "side": 1,
      "message": "I\u0027m now trying to delete all downstream usage of FakePortAllocator. If I succeed, maybe you can delete the visibility\u003d[\"*\"] line on the fake_port_allocator build target.\n\n(Still not at all clear to me what\u0027s the purpose of the FakePortAllocator class. As far as I understand, it provides a single port, without any attempt to enumerate available networks. I\u0027m thinking that\u0027s unlikely to be the right level of abstraction for configuring or replacing the networking used in a test).",
      "parentUuid": "236bdb94_33c66b37",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7df43505_ab049840",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-27T07:15:53Z",
      "side": 1,
      "message": "All downstream usage of FakePortAllocator I\u0027ve been able to find is now deleted.\n\nCan you rebase/merge to resolve conflicts?",
      "parentUuid": "6195e6e7_864f58c6",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e769919_9289efa1",
        "filename": "p2p/base/fake_port_allocator.h",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-03T13:09:36Z",
      "side": 1,
      "message": "Since an AlwaysValidPointer is movable, you can write the hidden constructor to take an AlwaysValidPointerNoDefault argument and do the initialization here. I think that\u0027s slightly more readable, and will cause the CHECK to happen one layer further up the stack.",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e426879e_8630dd17",
        "filename": "p2p/base/fake_port_allocator.h",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-06-03T14:20:24Z",
      "side": 1,
      "message": "I don\u0027t think they are movable because there is no move ctor / assignment operator. Also, being a movable object means that the class must allow an empty state, which I think goes against the purpose of this class.\nI agree that current constructor calls are a bit confusing. I\u0027ll add the function parameter names along with the comments.",
      "parentUuid": "4e769919_9289efa1",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ef9d00e_6906ac3e",
        "filename": "p2p/base/fake_port_allocator.h",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-03T14:28:09Z",
      "side": 1,
      "message": "I think it\u0027s movable because the move ctor has not been deleted, and all its components are movable. See https://en.cppreference.com/w/cpp/language/move_constructor\n\nJonas, does it make sense to explicitly delete the move constructor, given the concerns about the result being an invalid AlwaysValidPointer?",
      "parentUuid": "e426879e_8630dd17",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b11ac7ab_2ac6c37f",
        "filename": "p2p/base/fake_port_allocator.h",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-06-03T14:41:47Z",
      "side": 1,
      "message": "Note that we\u0027re using `const std::unique_ptr` for `own_instance_`, so we are preventing creating a default move constructor.",
      "parentUuid": "6ef9d00e_6906ac3e",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c71ac549_a65bf81a",
        "filename": "p2p/base/fake_port_allocator.h",
        "patchSetId": 7
      },
      "lineNbr": 219,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-08T18:48:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b11ac7ab_2ac6c37f",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63712087_0c674e14",
        "filename": "p2p/base/fake_port_allocator.h",
        "patchSetId": 7
      },
      "lineNbr": 252,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-03T13:09:36Z",
      "side": 1,
      "message": "This will cause a CHECK if there is no factory. I take it that\u0027s intentional.",
      "revId": "f6da2cdd5855ef12de4b95a99c3d8ba844c6c441",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}