{
  "comments": [
    {
      "key": {
        "uuid": "b423edbc_fd4fb9be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-17T16:28:43Z",
      "side": 1,
      "message": "Could you rephrase this, I can\u0027t really follow.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 73
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbaaba75_53da759e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-18T11:47:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b423edbc_fd4fb9be",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 73
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9902a796_6768322d",
        "filename": "test/call_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-17T16:28:43Z",
      "side": 1,
      "message": "This can be simplified somewhat:\nvideo_sources_.push_back(make_unique...)\nframe_generator_capturer_ \u003d video_sources_.back().get()",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 466,
        "endChar": 64
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98cac749_f9e46b84",
        "filename": "test/call_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-17T17:01:06Z",
      "side": 1,
      "message": "video_sources_ is container of\nstd::unique_ptr\u003crtc::VideoSourceInterface\u003cVideoFrame\u003e\u003e\nand there one place where something other than test::FrameGeneratorCapturer is stored\n\nframe_generator_capturer_ is exactly \ntest::FrameGeneratorCapturer*\n\ni.e. it is not as simple as you suggested.\nSo I would prefer to leave this kind of improvement out of my change as not relevant for what I\u0027m trying to do.",
      "parentUuid": "9902a796_6768322d",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 466,
        "endChar": 64
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6e4ddac_755babaf",
        "filename": "test/call_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 466,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-17T17:35:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "98cac749_f9e46b84",
      "range": {
        "startLine": 461,
        "startChar": 0,
        "endLine": 466,
        "endChar": 64
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56d9b8fe_22585202",
        "filename": "test/call_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-17T16:28:43Z",
      "side": 1,
      "message": "As above.",
      "range": {
        "startLine": 478,
        "startChar": 1,
        "endLine": 479,
        "endChar": 64
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b03ea0ca_9828c5df",
        "filename": "test/call_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 479,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-17T17:01:06Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "56d9b8fe_22585202",
      "range": {
        "startLine": 478,
        "startChar": 1,
        "endLine": 479,
        "endChar": 64
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f20d82fe_014091d0",
        "filename": "test/frame_generator_capturer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-17T16:28:43Z",
      "side": 1,
      "message": "AFAICT this never happens, could we skip the ::Create function and do   absl::make_unique\u003cFrameGeneratorCapturer\u003e at the call site instead?",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83fb6316_468fa3b9",
        "filename": "test/frame_generator_capturer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-17T17:01:06Z",
      "side": 1,
      "message": "you mean Init always returns true in practice and can be merged into constructor?\nYep, I guess I can incorporate that change.\n\nThough to avoid breaking existent code that explicitly calls Init after construction I would need to add new constructor.",
      "parentUuid": "f20d82fe_014091d0",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab1ec5e5_31eeed35",
        "filename": "test/frame_generator_capturer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-17T17:35:55Z",
      "side": 1,
      "message": "Or you can explicitly add Init calls where needed. This would prepare for a fix that should be added in the future to not start the capturer until it has been connected to the corresponding video sink.\n\nIf you\u0027d rather have the extra constructor, do it by adding a bool start_initialized that defaults to false. (Now the difference is just the order of arguments, that\u0027s a bit subtle)",
      "parentUuid": "83fb6316_468fa3b9",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfc22e6e_1405bf36",
        "filename": "test/frame_generator_capturer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-18T08:57:41Z",
      "side": 1,
      "message": "switch to calling Init where needed.\n(though I check all places where Init is used - it is always called right after construction)",
      "parentUuid": "ab1ec5e5_31eeed35",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c2ec599_0ce600a9",
        "filename": "test/frame_generator_capturer.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-04-18T11:47:57Z",
      "side": 1,
      "message": "Yes it is now, but there\u0027s actually a hidden potential race there. Init start a repeating task with an initial delay. There is test code that assumes that this repeated task will not run before later code is executed. In practice, this works fine as the delay is long enough, but theoretically it could trigger a race under rare circumstances, in particular, it means that we must keep that initial delay, while it would actually sometimes make sense to start producing frames immediately.\n\nSo by doing this explicitly in two steps it will be easier to fix this in the future if needed. :)",
      "parentUuid": "dfc22e6e_1405bf36",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "1e8cea9ecfc46ef9755b02fca2e861f9f153440d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}