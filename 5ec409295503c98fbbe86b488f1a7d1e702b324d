{
  "comments": [
    {
      "key": {
        "uuid": "77628fcc_33cb91f0",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 2
      },
      "lineNbr": 624,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-06-11T12:59:30Z",
      "side": 1,
      "message": "is this safe when info.encoded_bytes is equal to 0?",
      "range": {
        "startLine": 624,
        "startChar": 69,
        "endLine": 624,
        "endChar": 83
      },
      "revId": "5ec409295503c98fbbe86b488f1a7d1e702b324d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce926f49_d97412bc",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 2
      },
      "lineNbr": 624,
      "author": {
        "id": 12214
      },
      "writtenOn": "2020-06-11T14:14:37Z",
      "side": 1,
      "message": "yes. Tested on https://webrtc.github.io/samples/src/content/peerconnection/audio/ by setting useDtx \u003d true and then localStream.getAudioTracks()[0].enabled \u003d true which does produce empty packets.\n(speaking of this I am not sure if send_even_if_empty is needed; it seems the empty packets are not sent and the ones that need to be sent every 400ms are not empty)",
      "parentUuid": "77628fcc_33cb91f0",
      "range": {
        "startLine": 624,
        "startChar": 69,
        "endLine": 624,
        "endChar": 83
      },
      "revId": "5ec409295503c98fbbe86b488f1a7d1e702b324d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb4bdaca_37382c8b",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-06-11T12:59:30Z",
      "side": 1,
      "message": "even if that flag was set to true on the past for Celt, I do not think that it is necessarily the right value. An option is to keep the old code and just update the flag when WebRtcOpus_PacketHasVoiceActivity is different from -1 but I would like to hear Minyue\u0027s opinion on this.",
      "range": {
        "startLine": 626,
        "startChar": 4,
        "endLine": 626,
        "endChar": 97
      },
      "revId": "5ec409295503c98fbbe86b488f1a7d1e702b324d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05175b12_c37dd151",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 12214
      },
      "writtenOn": "2020-06-18T17:26:28Z",
      "side": 1,
      "message": "btw, I looked and this gets put into the ssrc-audio-level extension here: https://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/source/rtp_sender_audio.cc?type\u003dcs\u0026g\u003d0\u0026l\u003d270\nit seems unlikely that anyone is relying on the current (wrong) results but if we change it we should do a quick \"posted\" PSA.",
      "parentUuid": "cb4bdaca_37382c8b",
      "range": {
        "startLine": 626,
        "startChar": 4,
        "endLine": 626,
        "endChar": 97
      },
      "revId": "5ec409295503c98fbbe86b488f1a7d1e702b324d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65d97183_a6e40ef4",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-06-23T07:35:20Z",
      "side": 1,
      "message": "No one is using the v-bit AFAIK. But a PSA sounds really good.",
      "parentUuid": "05175b12_c37dd151",
      "range": {
        "startLine": 626,
        "startChar": 4,
        "endLine": 626,
        "endChar": 97
      },
      "revId": "5ec409295503c98fbbe86b488f1a7d1e702b324d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}