{
  "comments": [
    {
      "key": {
        "uuid": "721db0f6_eb719c54",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-12-02T15:48:41Z",
      "side": 1,
      "message": "Avoid public utility aliases. See go/totw/137",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c67dbb7_b5d8b951",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-12-02T15:58:07Z",
      "side": 1,
      "message": "The callback is used in a number of places in the follow-up CL in WebRtcVideoEngine/Channel etc. Do you still think it makes sense to remove the alias?",
      "parentUuid": "721db0f6_eb719c54",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "194cfd02_68f0e4a6",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-12-02T16:10:28Z",
      "side": 1,
      "message": "Never mind. I\u0027ll fix it up.",
      "parentUuid": "4c67dbb7_b5d8b951",
      "range": {
        "startLine": 44,
        "startChar": 8,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1f8623f_36a07063",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-12-02T15:48:41Z",
      "side": 1,
      "message": "Why? In particular, what\u0027s the meaning of the returned |keyframe_generation_requested|?",
      "range": {
        "startLine": 294,
        "startChar": 37,
        "endLine": 294,
        "endChar": 59
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1e3996b_eb87b3c6",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-12-02T15:58:07Z",
      "side": 1,
      "message": "It\u0027s state held in internal::VideoReceiveStream which is needed for transfer in WebRtcVideoEngine\u0027s ReCreateReceiveStream. I need to move it out and back in again because of the recreations that happen.",
      "parentUuid": "e1f8623f_36a07063",
      "range": {
        "startLine": 294,
        "startChar": 37,
        "endLine": 294,
        "endChar": 59
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "427cd553_b9d96596",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-12-03T08:03:01Z",
      "side": 1,
      "message": "And what\u0027s the value and meaning of the returned |keyframe_generation_requested|? Identical to the flag set earlier, or does it somehow reflect current state of affairs?",
      "parentUuid": "c1e3996b_eb87b3c6",
      "range": {
        "startLine": 294,
        "startChar": 37,
        "endLine": 294,
        "endChar": 59
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adc07bb4_e1ffb3cd",
        "filename": "call/video_receive_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-12-03T11:04:51Z",
      "side": 1,
      "message": "As per offline discussion:\nOriginally it\u0027s set to true or false, but it can be modified to false in internal::VideoReceiveStream::HandleKeyFrameGeneration. If we don\u0027t save the state of the boolean we will risk sending a keyframe request twice due to VideoReceiveStream recreations up in WebRtcVideoEngine and their timing.\n\nI\u0027ve added a note describing that the client should not interpret the attributes in the returned class.\n\nI\u0027ve extended the documentation of the attributes.",
      "parentUuid": "427cd553_b9d96596",
      "range": {
        "startLine": 294,
        "startChar": 37,
        "endLine": 294,
        "endChar": 59
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa8fc95c_bcebd8c6",
        "filename": "modules/video_coding/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-12-02T15:48:41Z",
      "side": 1,
      "message": "To follow the old style, you\u0027d keep protected inheritance, and add another using EncodedImage::.. below.\n\nIf philipel@ agrees with changing to public, that\u0027s probably ok, but then the using lines below should be deleted.",
      "range": {
        "startLine": 23,
        "startChar": 24,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72308778_8598aea6",
        "filename": "modules/video_coding/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-12-02T16:28:47Z",
      "side": 1,
      "message": "Public inheritance was required in a prior incarnation of the CL. PTAL on the new iteration, I managed to retain protected inheritance.\n\nI think these classes would really need some well executed refactoring, it seems there are several halted efforts to clean them up.",
      "parentUuid": "aa8fc95c_bcebd8c6",
      "range": {
        "startLine": 23,
        "startChar": 24,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "8cf74e5430d1888bc72ad9eada60c19dc40cfe09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}