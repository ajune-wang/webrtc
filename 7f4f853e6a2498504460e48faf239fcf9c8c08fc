{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "00f9dfe8_80035f60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T21:46:51Z",
      "side": 1,
      "message": "Suggested rephrase:\n\"Make encrypted versions of RTP extension headers be stopped by default\"",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e58916c4_d925ec29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T19:02:59Z",
      "side": 1,
      "message": "AFAIK, the default offer has no encrypted headers, and there\u0027s no code in Chrome that enables encrypted headers.\n\nThe encrypted RTP header mechanism has fallen out of favor - 11 years down the road from RFC 6904, there are no active deployments (AFAIK) that use this feature; the cryptex mechanism (RFC 9335) was developed to define a simpler mechanism that might see deployemnt. It hasn\u0027t seen that yet.\n\nSo I have trouble figuring out what this CL is actually seeking to accomplish.",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba3b2a30_862ed686",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-09-23T21:03:10Z",
      "side": 1,
      "message": "The idea is to enable RFC 6904 to be used, but needs to be enabled via SDP munging. This is a stop-gap solution until RFC 9335 is actually implemented, which appears to be some way off still.",
      "parentUuid": "e58916c4_d925ec29",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a79ba88_2a8445e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T21:46:51Z",
      "side": 1,
      "message": "Some suggestions.",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "025bd556_cf5693a5",
        "filename": "api/rtp_parameters.h",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T21:46:51Z",
      "side": 1,
      "message": "Suggest, rather than introducing the preferred_encrypt flag in the API, to add \"urn:ietf:params:rtp-hdrext:encrypt\" in front of the URI string for each extension we want to negotiate encrypted support for. This makes the rest of the SDP negotiation code able to treat the encrypted extensions exactly the same as other extensions.",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31dc720a_eeb6c85f",
        "filename": "api/rtp_parameters.h",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-09-23T21:56:13Z",
      "side": 1,
      "message": "The flag isn\u0027t new (https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/rtp_parameters.h;l\u003d216), just the ability to set it in the constructor.\n\nI\u0027m not entirely sure what we want here. I feel like the `prefer_encrypt` flag would generalize better so we can reuse this logic when we move to rfc 9335/cryptex - which does not make use of the \"urn:ietf:params:rtp-hdrext:encrypt\" string.\n\nThis isn\u0027t my home turf so I might be missing something though.",
      "parentUuid": "025bd556_cf5693a5",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}