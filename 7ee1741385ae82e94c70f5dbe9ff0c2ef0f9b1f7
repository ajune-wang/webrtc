{
  "comments": [
    {
      "key": {
        "uuid": "541efdd2_e13c6de3",
        "filename": "modules/audio_coding/audio_network_adaptor/controller_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 7102
      },
      "writtenOn": "2018-10-24T09:40:50Z",
      "side": 1,
      "message": "I am not fully convinced by adding this method in ControllerManagerImpl, since there is no clear way to create ANA from field trial(s). For example, the order of controllers are critical to ANA. Therefore it is truly the protobuf that can uniquely define an ANA.\n\nBut I am not against the idea of creating a scoped limited ANA through field trials. I only suggest writing a translator from the field trials to protobuf string and using existing API.",
      "range": {
        "startLine": 276,
        "startChar": 58,
        "endLine": 276,
        "endChar": 74
      },
      "revId": "7ee1741385ae82e94c70f5dbe9ff0c2ef0f9b1f7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bd90f24_03b266e8",
        "filename": "modules/audio_coding/audio_network_adaptor/controller_manager.cc",
        "patchSetId": 1
      },
      "lineNbr": 276,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-10-26T13:44:35Z",
      "side": 1,
      "message": "Not sure if I understand. Why would it be simpler to use the protobuf API internally? Seems to me that it\u0027s simpler to directly configure ANA here.\n\nWhy do we need to use protobuf here at all? Is the config meant to be sent over a dedicated protocol? Seems to med that the design would be much simpler if we could just have a config struct and set parameters with field trials (or equivalent)",
      "parentUuid": "541efdd2_e13c6de3",
      "range": {
        "startLine": 276,
        "startChar": 58,
        "endLine": 276,
        "endChar": 74
      },
      "revId": "7ee1741385ae82e94c70f5dbe9ff0c2ef0f9b1f7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}