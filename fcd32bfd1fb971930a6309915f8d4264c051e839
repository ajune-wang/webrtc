{
  "comments": [
    {
      "key": {
        "uuid": "5230aa51_c4093f0a",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T11:26:44Z",
      "side": 1,
      "message": "At codec switch, I imagine there\u0027s no use switching decoder until we see a keyframe for the new codec (it\u0027s better to keep the old one, to be able to decode any late frames).\n\nWill the caller be responsible for that, or should we have an is_keyframe argument or the like here?",
      "range": {
        "startLine": 70,
        "startChar": 29,
        "endLine": 70,
        "endChar": 49
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d4076be_b1fadd23",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-26T12:35:03Z",
      "side": 1,
      "message": "The decoding loop (will) work like this:\n1. Get the next frame from the |frame_buffer_|.\n2. Call CheckAndSetupDecoder to make sure we have the correct decoder instantiated.\n3. If we have the correct decoder, decode the frame.\n\nAll the timing decisions are made inside the |frame_buffer_|, so when this function is called we have already made the decision to drop or not drop frames.\n\nWe could add an |is_keyframe| parameter, but I don\u0027t think it really matters since a codec switch must happen on a keyframe.",
      "parentUuid": "5230aa51_c4093f0a",
      "range": {
        "startLine": 70,
        "startChar": 29,
        "endLine": 70,
        "endChar": 49
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78026b00_7f92a451",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T12:49:23Z",
      "side": 1,
      "message": "And frame_buffer_ will only return decodable frames, and, e.g., never return a non-keyframe as the first frame for a new payload type?",
      "parentUuid": "3d4076be_b1fadd23",
      "range": {
        "startLine": 70,
        "startChar": 29,
        "endLine": 70,
        "endChar": 49
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa9ee2fe_762f76c0",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-26T13:01:36Z",
      "side": 1,
      "message": "The |frame_buffer_| does not take payload type into consideration, but if the codec switch is done properly (no jumps in picture id, tl0, etc) then it will only return decodable frames.",
      "parentUuid": "78026b00_7f92a451",
      "range": {
        "startLine": 70,
        "startChar": 29,
        "endLine": 70,
        "endChar": 49
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e5e2e15_cb1c3482",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T11:26:44Z",
      "side": 1,
      "message": "Can be shortened to current_payload_type_ \u003d\u003d payload_type.",
      "range": {
        "startLine": 71,
        "startChar": 7,
        "endLine": 71,
        "endChar": 69
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a74633b_c7e3630a",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-26T12:35:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e5e2e15_cb1c3482",
      "range": {
        "startLine": 71,
        "startChar": 7,
        "endLine": 71,
        "endChar": 69
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca2a04d0_accf9ee4",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T11:26:44Z",
      "side": 1,
      "message": "BTW, I dislike the InitEncode and InitDecode functions. It ought to be the responsibility of the factory to produce a decoder that is ready to be used. But not for this cl to change.",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9bb712f_cf9d6020",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-26T12:35:03Z",
      "side": 1,
      "message": "I dislike them to, but I suspect changing the Video{Encoder,Decoder} API is a project in itself.",
      "parentUuid": "ca2a04d0_accf9ee4",
      "range": {
        "startLine": 96,
        "startChar": 0,
        "endLine": 96,
        "endChar": 64
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f77ca9d_14a4b099",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T11:26:44Z",
      "side": 1,
      "message": "Depending on how it\u0027s used, might be clearer to name it GetDecoder and let it return the pointer.",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12419439_03a976e7",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-26T12:35:03Z",
      "side": 1,
      "message": "Somewhat cleaner yes, fixed.",
      "parentUuid": "4f77ca9d_14a4b099",
      "range": {
        "startLine": 42,
        "startChar": 7,
        "endLine": 42,
        "endChar": 27
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c06b6f8_8e717ce3",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T11:26:44Z",
      "side": 1,
      "message": "We will always have at most one instantiated decoder? Might be motivated with a comment explaining when and how this is set.",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 41
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3deb6612_9226d51d",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-26T12:35:03Z",
      "side": 1,
      "message": "Not exactly sure why a comment would be motivated for |decoder_|. Shouldn\u0027t |current_payload_type_| also have a comment then?",
      "parentUuid": "1c06b6f8_8e717ce3",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 41
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e219949_bcff5ba5",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-26T12:49:23Z",
      "side": 1,
      "message": "They should be documented together.",
      "parentUuid": "3deb6612_9226d51d",
      "range": {
        "startLine": 67,
        "startChar": 0,
        "endLine": 67,
        "endChar": 41
      },
      "revId": "fcd32bfd1fb971930a6309915f8d4264c051e839",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}