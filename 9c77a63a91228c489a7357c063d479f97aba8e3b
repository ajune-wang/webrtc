{
  "comments": [
    {
      "key": {
        "uuid": "c00ccca4_e1f0d4e7",
        "filename": "api/test/create_videoprocessor_integrationtest_fixture.h",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "phoglund, solenberg: What are the rules on making changes to files in api/test? I can\u0027t find any guidance in https://webrtc.googlesource.com/src/+/HEAD/native-api.md.\n\nWe will probably not makes to the interface very often, but we do often make changes to TestConfig and Stats. I don\u0027t want to be slowed down by having to send out a PSA for such changes. Can api/test be exempt from any PSA requirements?",
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5681d726_d52782db",
        "filename": "api/test/create_videoprocessor_integrationtest_fixture.h",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-03T17:45:15Z",
      "side": 1,
      "message": "Changes won\u0027t be a problem unless they risk breaking clients, so if you\u0027re just adding a field, a PSA shouldn\u0027t be necessary.\n\nIn this case I think we should leave a comment that this file is WIP and not to be trusted, then go on and land this CL and iterate (TestConfig should be moved into api/ e.g.) and remove the comment once we feel the test framework is complete enough to be properly supported. We\u0027ve done it like that before.\n\nIf the PSA based process to warn downstream clients about breaking changes is too heavy, propose (in a different forum) how it should be changed.",
      "parentUuid": "c00ccca4_e1f0d4e7",
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04851ae1_387a78b7",
        "filename": "api/test/create_videoprocessor_integrationtest_fixture.h",
        "patchSetId": 13
      },
      "lineNbr": 1,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-04T07:56:40Z",
      "side": 1,
      "message": "Ok, that sounds like a good approach to me.",
      "parentUuid": "5681d726_d52782db",
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66a168ce_840d8c14",
        "filename": "api/test/videoprocessor_integrationtest_fixture.h",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "Since this is going into api/, I think we should take the opportunity to clean up the related names. Me and ssilkin@ would like to call this VideoCodecTest, and then the suffixes can be as proposed in this CL.",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 31
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96a26a56_ee868c85",
        "filename": "api/test/videoprocessor_integrationtest_fixture.h",
        "patchSetId": 13
      },
      "lineNbr": 59,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-03T17:45:15Z",
      "side": 1,
      "message": "+1\n\nNote that per the style guide, \"Interface\" is optional too and it is not generally used as a suffix in the WebRTC codebase.",
      "parentUuid": "66a168ce_840d8c14",
      "range": {
        "startLine": 59,
        "startChar": 6,
        "endLine": 59,
        "endChar": 31
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70d47ebe_cb5e06fd",
        "filename": "api/test/videoprocessor_integrationtest_fixture.h",
        "patchSetId": 13
      },
      "lineNbr": 63,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "... and we would like to call this RunTest.",
      "range": {
        "startLine": 63,
        "startChar": 15,
        "endLine": 63,
        "endChar": 42
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84bb3f74_5b0323d5",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_fixture_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 138,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "decoder_factory",
      "range": {
        "startLine": 138,
        "startChar": 45,
        "endLine": 138,
        "endChar": 59
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9a6f358_093df1ac",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_fixture_impl.cc",
        "patchSetId": 13
      },
      "lineNbr": 139,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "encoder_factory",
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "483369d8_e899a8cd",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_libvpx.cc",
        "patchSetId": 13
      },
      "lineNbr": 56,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "Does this function, and the one below, need to be static when they live in an anonymous namespace?",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2876b69_fa0a7cf7",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_libvpx.cc",
        "patchSetId": 13
      },
      "lineNbr": 56,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-03T17:45:15Z",
      "side": 1,
      "message": "no",
      "parentUuid": "483369d8_e899a8cd",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 56,
        "endChar": 6
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3022a4f8_886b7df9",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_videotoolbox.cc",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-03T15:54:22Z",
      "side": 1,
      "message": "We can remove this and rely on the internally instantiated factories instead. This is consistent with the MediaCodec tests.",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 52
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b7a167c_7dc18b28",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_videotoolbox.cc",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-03T17:45:15Z",
      "side": 1,
      "message": "I\u0027d propose that the factories instead go in the test config, to remove as much configuration logic as possible from the test itself.",
      "parentUuid": "3022a4f8_886b7df9",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 52
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "880652d4_3841d253",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest_videotoolbox.cc",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-05-04T07:56:40Z",
      "side": 1,
      "message": "Agree. Relatedly, WDYT about moving the thresholds to the TestConfig as well?\n\nIn order to keep the velocity up, I\u0027m fine with making these changes in followups.",
      "parentUuid": "6b7a167c_7dc18b28",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 38,
        "endChar": 52
      },
      "revId": "9c77a63a91228c489a7357c063d479f97aba8e3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}