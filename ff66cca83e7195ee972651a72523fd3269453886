{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "973464b2_646a186c",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-03-13T21:01:35Z",
      "side": 1,
      "message": "Is this call expensive? I\u0027ve seen other bits of code only check this on debug builds.\n\nAlso would it be beneficial to just create/setup the framebuffer once and then re-bind it here as needed? (e.g. make fbo a member variable).",
      "range": {
        "startLine": 615,
        "startChar": 1,
        "endLine": 615,
        "endChar": 76
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dee4096a_ae1bea68",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T13:18:31Z",
      "side": 1,
      "message": "I don\u0027t expect it\u0027s an expensive call, I believe it\u0027s just a sane check to do everytime to make sure things are working. I can see it used in Chromium here as well for example: https://source.chromium.org/chromium/chromium/src/+/main:gpu/command_buffer/service/framebuffer_manager.cc;l\u003d843.\nI got recommendation to use this code from Jonas Adahl (Mutter and gnome-remote-desktop maintainer). This is used in gnome-remote-desktop same way.\n\nAlso from the official documentation:\n```An FBO that is valid for use is said to be \"framebuffer complete\". To test framebuffer completeness, call this function:\n\nGLenum glCheckFramebufferStatus(GLenum targetâ€‹);\nYou are not required to call this manually. However, using an incomplete FBO is an error, so it\u0027s always a good idea to check.\n```\n\nRegarding the frambuffer. Since I\u0027m not really an expert when it comes to this API I rely on things I ask or see elsewhere. I\u0027ve seen gnome-remote-desktop to create it all the time for each DmaBuf import. Also Jonas told me it doesn\u0027t make sense.",
      "parentUuid": "973464b2_646a186c",
      "range": {
        "startLine": 615,
        "startChar": 1,
        "endLine": 615,
        "endChar": 76
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3033b3c1_6829e653",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-03-16T17:10:13Z",
      "side": 1,
      "message": "Hmm, for some of the WebXR cases I\u0027m familiar with we tend to just create it once and re-use it. The delete helps, but I do worry there may be some performance impact.",
      "parentUuid": "dee4096a_ae1bea68",
      "range": {
        "startLine": 615,
        "startChar": 1,
        "endLine": 615,
        "endChar": 76
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2ae4fd2_72fd3b21",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T19:57:24Z",
      "side": 1,
      "message": "I\u0027m trying to read the documentation to get better oriented in this. I see in the documentation:\n\nOnce created, a named buffer object may be re-bound to any target as often as needed. However, the GL implementation may make choices about how to optimize the storage of a buffer object based on its initial binding target.\n\nSounds like it can be done, but to me it looks like we are on a safer side with creating it for each DmaBuf import since not every DmaBuf is same? I don\u0027t really know. I will try to read more about it tomorrow.\n\nAnyway, I don\u0027t know whether you have seen my updated description, but with this change as it is done now I\u0027m seeing significant drop in CPU usage, like half the CPU usage per process so there is a performance impact, but positive one + fixed screen sharing on Nvidia drivera.",
      "parentUuid": "3033b3c1_6829e653",
      "range": {
        "startLine": 615,
        "startChar": 1,
        "endLine": 615,
        "endChar": 76
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e1cf3bb_9f9e6ec8",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-03-16T20:01:25Z",
      "side": 1,
      "message": "I think we\u0027re always creating the framebuffer and texture the same way; so the biggest issue would be re-using one if we still need it; but I think we just do this and then copy it to the DesktopFrame so the framebuffer and texture are only really in use for this method, so just creating them if they haven\u0027t been set yet should be fine. e.g.\n\n\n```\n// In Header\nGLuint fbo_ \u003d 0;\nGLuint texture_id_ \u003d 0;\n\n// Here:\nif (texture_id_ \u003d\u003d 0) {\n  // create texture, assign texture_id_\n}\n\nif (fbo_ \u003d\u003d 0) {\n// Create framebuffer, assign fbo_\n}\n```",
      "parentUuid": "c2ae4fd2_72fd3b21",
      "range": {
        "startLine": 615,
        "startChar": 1,
        "endLine": 615,
        "endChar": 76
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2184a76_7eaf2fdc",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 3
      },
      "lineNbr": 615,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T20:44:40Z",
      "side": 1,
      "message": "While even the documentation says a texture can be re-bound, I have seen all the other implementations not doing that (KPipeWire, OBS Studio or gnome-remote-desktop) so I\u0027m afraid of possible issues. I will try to ask someone from our team doing graphics what\u0027s the best solution for this and if it actually makes any difference. Not that you might not be right, but I don\u0027t want to rush anything. I want this in for M113 given it fixes the Nvidia issue, but we still have couple days before branching.",
      "parentUuid": "5e1cf3bb_9f9e6ec8",
      "range": {
        "startLine": 615,
        "startChar": 1,
        "endLine": 615,
        "endChar": 76
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa43ddcd_83394d68",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 19629
      },
      "writtenOn": "2023-03-13T20:34:44Z",
      "side": 1,
      "message": "Please document the returned value.",
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fec1fd1b_09c6e97e",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.h",
        "patchSetId": 3
      },
      "lineNbr": 44,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T13:18:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa43ddcd_83394d68",
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4329222d_5f2b1034",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 19629
      },
      "writtenOn": "2023-03-13T20:34:44Z",
      "side": 1,
      "message": "Can use a non-const ref here.",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 36
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38a15560_9be4db0c",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-03-13T21:01:35Z",
      "side": 1,
      "message": "I\u0027m okay with this either way FWIW, since you\u0027re passing this value directly to another API that takes it this way.",
      "parentUuid": "4329222d_5f2b1034",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 36
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba74b677_75cc8ef7",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.h",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T13:18:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38a15560_9be4db0c",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 36
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dff375d3_8905253b",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 19629
      },
      "writtenOn": "2023-03-13T20:34:44Z",
      "side": 1,
      "message": "nit: This seems like a good readability cleanup that can be separated from the rest of the change.",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 165,
        "endChar": 53
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "460645b5_e67843cb",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 165,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T19:57:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dff375d3_8905253b",
      "range": {
        "startLine": 160,
        "startChar": 0,
        "endLine": 165,
        "endChar": 53
      },
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a44a8dd1_d21ea84c",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 844,
      "author": {
        "id": 19629
      },
      "writtenOn": "2023-03-13T20:34:44Z",
      "side": 1,
      "message": "Print the unsupported type here.",
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e135b4a_067e9ddc",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 844,
      "author": {
        "id": 8046
      },
      "writtenOn": "2023-03-16T13:18:31Z",
      "side": 1,
      "message": "Actually, it should never reach this codepath as we only announce two types of buffers so it will never use anything else.",
      "parentUuid": "a44a8dd1_d21ea84c",
      "revId": "ff66cca83e7195ee972651a72523fd3269453886",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}