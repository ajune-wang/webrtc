{
  "comments": [
    {
      "key": {
        "uuid": "993ba3a4_d82d9f0d",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-20T09:27:44Z",
      "side": 1,
      "message": "may be insert it next to AudioLevel rather than at the bottom.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 34
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89c4c2c2_7f72a69f",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-29T15:22:58Z",
      "side": 1,
      "message": "Done, but I hope not bringing any risks.",
      "parentUuid": "993ba3a4_d82d9f0d",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 34
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "705a7f86_e27ed26c",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 3
      },
      "lineNbr": 885,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-20T09:27:44Z",
      "side": 1,
      "message": "with c++14 you can now write in binary:\n0b10000000 (or 0b1000\u00270000)\nto align with format description above.\n\nBut keeping it hex (it much shorter and single bit is obvious enough) is fine too.",
      "range": {
        "startLine": 885,
        "startChar": 22,
        "endLine": 885,
        "endChar": 26
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbf4f800_cf97e63b",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 3
      },
      "lineNbr": 885,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-29T15:22:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "705a7f86_e27ed26c",
      "range": {
        "startLine": 885,
        "startChar": 22,
        "endLine": 885,
        "endChar": 26
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4da906c5_bb368da3",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 3
      },
      "lineNbr": 892,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-20T09:27:44Z",
      "side": 1,
      "message": "I\u0027m not sure this comment belong in the fixture:\nfixture is responsible for the extension payload,\nit\u0027s RtpPacket class responsibility to choose between one-byte or two-byte extension header.",
      "range": {
        "startLine": 892,
        "startChar": 2,
        "endLine": 892,
        "endChar": 65
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e146b0b4_79ebac09",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 3
      },
      "lineNbr": 892,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-29T15:22:58Z",
      "side": 1,
      "message": "I saw that ColorSpaceExtension has different parsing and writing implementation, based on data.size().\n\nBut I agree that it might be misleading to add this comment.",
      "parentUuid": "4da906c5_bb368da3",
      "range": {
        "startLine": 892,
        "startChar": 2,
        "endLine": 892,
        "endChar": 65
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d13dede8_36c57131",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 3
      },
      "lineNbr": 892,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-12-02T09:08:23Z",
      "side": 1,
      "message": "sure, there are also other extensions with dynamic size. but that is size of the extension payload, not the size of the extension header.",
      "parentUuid": "e146b0b4_79ebac09",
      "range": {
        "startLine": 892,
        "startChar": 2,
        "endLine": 892,
        "endChar": 65
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24ff297f_2a4efd09",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.h",
        "patchSetId": 3
      },
      "lineNbr": 307,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-20T09:12:33Z",
      "side": 1,
      "message": "please be advised that this is under view in https://github.com/webrtc/webrtc-org/pull/238,\n\nI may wait for it to get approved before landing this one.",
      "range": {
        "startLine": 307,
        "startChar": 0,
        "endLine": 307,
        "endChar": 63
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8da03e32_c8466885",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-20T09:27:44Z",
      "side": 1,
      "message": "nit: the optional\u003cbyte\u003e type is so small, it would be a bit better to pass it by value",
      "range": {
        "startLine": 311,
        "startChar": 50,
        "endLine": 311,
        "endChar": 67
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56ef61ca_a22ce233",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-29T15:22:58Z",
      "side": 1,
      "message": "if optional\u003cbyte\u003e\u0026 is not any worse, it might be better, since the type is an alias and it is not obvious what actual type is.",
      "parentUuid": "8da03e32_c8466885",
      "range": {
        "startLine": 311,
        "startChar": 50,
        "endLine": 311,
        "endChar": 67
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "120d0995_2fb6998e",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-12-02T09:08:23Z",
      "side": 1,
      "message": "it is a bit worse (e.g would probably cause few bytes larger binary)\nbut why use an alias here? no extensions above does that.\n\nFor reader that would require an extra hop to understand how this function should be used.\n(value_type alias really exists for certain template function, not for human reader)",
      "parentUuid": "56ef61ca_a22ce233",
      "range": {
        "startLine": 311,
        "startChar": 50,
        "endLine": 311,
        "endChar": 67
      },
      "revId": "1cf5ae69e96b7671689e777ae49b8ac1c4cb9b42",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}