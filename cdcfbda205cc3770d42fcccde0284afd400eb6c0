{
  "comments": [
    {
      "key": {
        "uuid": "5e077dec_eba94b8a",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 3
      },
      "lineNbr": 2020,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-01-10T19:54:52Z",
      "side": 1,
      "message": "nit: Shouldn\u0027t this condition be \"transceiver-\u003ecurrent_direction() \u0026\u0026 ...\" as opposed to \"!transceiver-\u003ecurrent_direction() ||\"?\n\nI suppose the code as-is will produce the intended behavior for the issue we discussed (https://github.com/w3c/webrtc-pc/issues/1729), but only for the initial offer, so I think that issue needs to be solved more generally.",
      "revId": "cdcfbda205cc3770d42fcccde0284afd400eb6c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0941898_0196e93c",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 3
      },
      "lineNbr": 2020,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-01-10T23:57:47Z",
      "side": 1,
      "message": "Perhaps this could be clarified in the spec? The current wording is:\n\nIf direction is \"sendonly\" or \"inactive\", and transceiver\u0027s [[CurrentDirection]] slot is neither \"sendonly\" nor \"inactive\", process the removal of a remote track for the media description, given transceiver and muteTracks.\n\nNotably, it defines the condition in terms of what CurrentDirection is not. So I would assume (like in the adding a remote track case) that a null CurrentDirection would be included.\n\nBut yeah it doesn\u0027t make so much sense to process the removal of a remote track if it hasn\u0027t even been negotiated fully in a local/remote answer.\n\nPerhaps the wording should be: ... and transceiver\u0027s [[CurrentDirection]] slot is \"sendrecv\" or \"recvonly\", process ...",
      "parentUuid": "5e077dec_eba94b8a",
      "revId": "cdcfbda205cc3770d42fcccde0284afd400eb6c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "266fe9cd_e644396f",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 992,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-01-10T19:54:52Z",
      "side": 1,
      "message": "Would be good to have a test that verifies that in the \"two track one stream\" case, the first track event is fired after the stream already has both tracks added. That was the motivation for having the \"track event\" list that\u0027s processed at the end, rather than just firing events as each m\u003d section is processed.",
      "revId": "cdcfbda205cc3770d42fcccde0284afd400eb6c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86ffc12c_1150bb16",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 992,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-01-10T23:57:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "266fe9cd_e644396f",
      "revId": "cdcfbda205cc3770d42fcccde0284afd400eb6c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea034add_019a5499",
        "filename": "pc/rtpreceiver.cc",
        "patchSetId": 3
      },
      "lineNbr": 272,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-01-10T19:54:52Z",
      "side": 1,
      "message": "The CL that gets rid of the duplicate code between Audio/VideoRtpReceiver is getting more appealing... And I imagine we\u0027ll only see more duplicate code end up here over time. Should we revisit it? It\u0027s just difficult to draw a line between what the base class and subclass would be responsible for, but with enough comments and maybe some slight changes I\u0027m sure it would be fine.",
      "revId": "cdcfbda205cc3770d42fcccde0284afd400eb6c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9480ad_8d8ee83a",
        "filename": "pc/rtpreceiver.cc",
        "patchSetId": 3
      },
      "lineNbr": 272,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-01-10T23:57:47Z",
      "side": 1,
      "message": "I\u0027m starting to think there needs to be a larger redesign here to really make it work. Otherwise there\u0027s a nasty mix of static_casting and duplicated code that\u0027s just going to be more confusing in my opinion. So perhaps for now it\u0027s OK to leave the code duplicated.\n\nNote that in this case we\u0027re in trouble because the MediaStreamInterface has separate overloads for audio and video. The base class would need to defer to a overwritten method for |existing_stream-\u003eRemoveTrack| and |stream-\u003eAddTrack|. BaseChannel has a lot of code like that and it\u0027s somewhat confusing.",
      "parentUuid": "ea034add_019a5499",
      "revId": "cdcfbda205cc3770d42fcccde0284afd400eb6c0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}