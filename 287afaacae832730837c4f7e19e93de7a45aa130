{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7d562832_4bb83ab7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13849
      },
      "writtenOn": "2023-03-15T15:04:19Z",
      "side": 1,
      "message": "Drive-by Q, did you benchmark this Salman?  I checked this last year and there was no perf difference between memcpy and the libyuv optimized function (I suspect memcpy is heavily optimized for the compiler).\n\nI don\u0027t mind making the change  either way but I\u0027m curious what you saw in your benchmarks.",
      "revId": "287afaacae832730837c4f7e19e93de7a45aa130",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "792fbddd_af9a3119",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 19629
      },
      "writtenOn": "2023-03-15T15:21:52Z",
      "side": 1,
      "message": "Haven\u0027t benchmarked it (yet) but think it wouldn\u0027t hurt given that libyuv will do the right thing (and that it makes code a little shorter and makes it uniform with other places where we are copying pixels).",
      "parentUuid": "7d562832_4bb83ab7",
      "revId": "287afaacae832730837c4f7e19e93de7a45aa130",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8394f95_f1666603",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 13849
      },
      "writtenOn": "2023-03-15T16:49:10Z",
      "side": 1,
      "message": "It\u0027s hard to say w/o any numbers.  rep movs can be faster than AVX, it depends on the application, compiler, and processor.\n\nI don\u0027t think there will be any real-world perf benefits (at least based on my benchmarking last year) but IIRC it isn\u0027t slower so using the libyuv function is OK if Alex thinks it cleans up the code (though this code hasn\u0027t been changed in ages so it\u0027s not really a regression risk).",
      "parentUuid": "792fbddd_af9a3119",
      "revId": "287afaacae832730837c4f7e19e93de7a45aa130",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb2b0fab_714dc038",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-03-15T17:10:47Z",
      "side": 1,
      "message": "Seems like a reasonable cleanup as long as we have no reason to suspect a performance regression and IIRC makes some of the code more uniform across capturers.",
      "parentUuid": "b8394f95_f1666603",
      "revId": "287afaacae832730837c4f7e19e93de7a45aa130",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "287afaacae832730837c4f7e19e93de7a45aa130",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "287afaacae832730837c4f7e19e93de7a45aa130",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}