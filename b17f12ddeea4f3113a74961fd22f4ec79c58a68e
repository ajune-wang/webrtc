{
  "comments": [
    {
      "key": {
        "uuid": "8f5c18ec_67493a13",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-03-16T11:49:44Z",
      "side": 1,
      "message": "I can\u0027t follow the ownership of the delayed tasks. Intuitively, it seems dangerous to repeatedly call WrapUnique on the same object.",
      "range": {
        "startLine": 111,
        "startChar": 52,
        "endLine": 111,
        "endChar": 62
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2b98073_9dc77afd",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-16T12:13:11Z",
      "side": 1,
      "message": "It\u0027s somewhat obscure. Returning false below means we claim ownership, (otherwise, the task queue would destroy us on return). WrapUnique signals that we passes ownership back to the task queue (which happens to be the same, but the pattern works fine also for posting to any other task queue).\n\nConceptually we\u0027d like |this| to be a unique_ptr, but we can\u0027t have that.",
      "parentUuid": "8f5c18ec_67493a13",
      "range": {
        "startLine": 111,
        "startChar": 52,
        "endLine": 111,
        "endChar": 62
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efb6a8c8_041facf5",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-03-16T12:19:35Z",
      "side": 1,
      "message": "Yeah, I suspected it might be something like that. How about writing that in a comment?",
      "parentUuid": "c2b98073_9dc77afd",
      "range": {
        "startLine": 111,
        "startChar": 52,
        "endLine": 111,
        "endChar": 62
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44c87f45_82cb7854",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-16T10:51:42Z",
      "side": 1,
      "message": "Can you explain what this does?\n\nI see it\u0027s also taken from ClosureTask",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 118,
        "endChar": 68
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b97bfdb9_6caced2e",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-03-16T11:05:15Z",
      "side": 1,
      "message": "This removes const \u0026 from the type, so if we try to construct it with a const ref, we\u0027ll still store a copy.\n\nOtherwise we\u0027d get the instantiation (with Closure \u003d\u003d int):\nclass PeriodicTask { const int\u0026 closure_; }\nrather than\nclass PeriodicTask { int closure_; }\n\nThe former would obviously not be what we want, since the const ref would be invalid as soon as we exit the scope where it belongs. This kind of depends on the magic that c++ will make a copy if you assign to a non-ref type.",
      "parentUuid": "44c87f45_82cb7854",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 118,
        "endChar": 68
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc12c691_5fabcdfc",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 118,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-16T11:30:44Z",
      "side": 1,
      "message": "Thanks for the explanation.",
      "parentUuid": "b97bfdb9_6caced2e",
      "range": {
        "startLine": 117,
        "startChar": 0,
        "endLine": 118,
        "endChar": 68
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d5257e7_8e877619",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 539,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-03-16T11:49:44Z",
      "side": 1,
      "message": "I\u0027d prefer to keep the Process name since WebRTC has a long convention of using it for periodic processing. How about StartProcessPeriodicTasks (or StartProcessDelayedTasks, StartProcessTasks)?",
      "range": {
        "startLine": 539,
        "startChar": 35,
        "endLine": 539,
        "endChar": 52
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4869a34d_e460b33d",
        "filename": "modules/congestion_controller/rtp/send_side_congestion_controller.cc",
        "patchSetId": 4
      },
      "lineNbr": 539,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-03-16T12:15:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d5257e7_8e877619",
      "range": {
        "startLine": 539,
        "startChar": 35,
        "endLine": 539,
        "endChar": 52
      },
      "revId": "b17f12ddeea4f3113a74961fd22f4ec79c58a68e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}