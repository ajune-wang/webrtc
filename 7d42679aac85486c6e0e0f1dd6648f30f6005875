{
  "comments": [
    {
      "key": {
        "uuid": "f537c4f9_d525651c",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-12-04T09:28:31Z",
      "side": 1,
      "message": "Maybe RTC_DCHECK that it\u0027s not null?",
      "range": {
        "startLine": 85,
        "startChar": 55,
        "endLine": 85,
        "endChar": 59
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bdd5cee_c5c5d4b0",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 85,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-12-04T09:51:40Z",
      "side": 1,
      "message": "We don\u0027t always DCHECK all pointers everywhere to be !\u003d nullptr and I don\u0027t see that this is a place where it would be likely to be needed. In general, you can\u0027t assume that nullptr is valid input anywhere we take a pointer.",
      "parentUuid": "f537c4f9_d525651c",
      "range": {
        "startLine": 85,
        "startChar": 55,
        "endLine": 85,
        "endChar": 59
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "709fb6f0_1ba2b48d",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-12-04T09:28:31Z",
      "side": 1,
      "message": "Please also add assign operator in such case, otherwise it can have compilation issues on some iOS bots. (That bot is disabled for now from CQ because of set of failures)",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3567c7c_0b311f48",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-12-04T09:51:40Z",
      "side": 1,
      "message": "No assign operator possible since net_ is const.",
      "parentUuid": "709fb6f0_1ba2b48d",
      "range": {
        "startLine": 86,
        "startChar": 6,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6537da53_83245da0",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-12-04T09:28:31Z",
      "side": 1,
      "message": "How will it behave if there will be such call sequence:\nCreateBuilder()\n  .delay_ms(...)\n  .loss(...)\n  .config(...)\n\nAs I see the last call will override all previous changes and kind of invalid. Maybe config should be passed in constructor or documented to be called first or RTC_DCHEKED, that it\u0027s called first...",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 87,
        "endChar": 21
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "875d8dea_6d21380e",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-12-04T09:51:40Z",
      "side": 1,
      "message": "Well, all the setters will override previous values. So to me it seems obvious that this would to as well. Added a comment in case it\u0027s not for everyone.",
      "parentUuid": "6537da53_83245da0",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 87,
        "endChar": 21
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f5d468d_5499f574",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-12-04T11:08:59Z",
      "side": 1,
      "message": "This one a bit special, because it will override all previously set fields.",
      "parentUuid": "875d8dea_6d21380e",
      "range": {
        "startLine": 87,
        "startChar": 15,
        "endLine": 87,
        "endChar": 21
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93b3d8a1_8436fe1c",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-12-04T09:28:31Z",
      "side": 1,
      "message": "How can you specify the size of the message?",
      "range": {
        "startLine": 158,
        "startChar": 5,
        "endLine": 158,
        "endChar": 14
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a899ba6c_c79b8d2d",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-12-04T09:51:40Z",
      "side": 1,
      "message": "Removed that part in favor of reading the documentation for TcpMessageRoute, no need to repeat here.",
      "parentUuid": "93b3d8a1_8436fe1c",
      "range": {
        "startLine": 158,
        "startChar": 5,
        "endLine": 158,
        "endChar": 14
      },
      "revId": "7d42679aac85486c6e0e0f1dd6648f30f6005875",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}