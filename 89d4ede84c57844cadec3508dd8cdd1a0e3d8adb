{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4314379a_58712cff",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 5578
      },
      "writtenOn": "2023-10-31T09:32:36Z",
      "side": 1,
      "message": "This feels very weird and backwards. \nWhy do you want to do that? \n\nloss_based_result_.bandwidth_estimate is the previouse result. \nbounded_bandwidth_estimate \u003d  std::max(GetInstantLowerBound(),\n                 std::min(current_best_estimate_.loss_limited_bandwidth,\n                          GetInstantUpperBound()));\n\nSo it looks like you want to increase BWE in hold state which seems to defeat the purpose?",
      "range": {
        "startLine": 334,
        "startChar": 23,
        "endLine": 334,
        "endChar": 41
      },
      "revId": "89d4ede84c57844cadec3508dd8cdd1a0e3d8adb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5a9e9c2_4943b4fc",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 19004
      },
      "writtenOn": "2023-10-31T09:52:28Z",
      "side": 1,
      "message": "If we are in HOLD for 1 min, then the current version will have the estimate to be min of acked bitrates in that 1min, thus we have 2 problems: 1) the estimate becomes very low, and 2) the estimate sometimes is lower than acked rate.\n\nEven if we take max(acked rate, current estimate), we are not going to increase the bitrate as we just make the estimate to be the acked rate, and the acked rate is not going to have any big jump (because the estimate doesnt change much).",
      "parentUuid": "4314379a_58712cff",
      "range": {
        "startLine": 334,
        "startChar": 23,
        "endLine": 334,
        "endChar": 41
      },
      "revId": "89d4ede84c57844cadec3508dd8cdd1a0e3d8adb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c13779be_610d92fd",
        "filename": "modules/congestion_controller/goog_cc/loss_based_bwe_v2.cc",
        "patchSetId": 3
      },
      "lineNbr": 334,
      "author": {
        "id": 19004
      },
      "writtenOn": "2023-10-31T10:00:24Z",
      "side": 1,
      "message": "...we are not going to increase the bitrate *much*...",
      "parentUuid": "a5a9e9c2_4943b4fc",
      "range": {
        "startLine": 334,
        "startChar": 23,
        "endLine": 334,
        "endChar": 41
      },
      "revId": "89d4ede84c57844cadec3508dd8cdd1a0e3d8adb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "89d4ede84c57844cadec3508dd8cdd1a0e3d8adb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "89d4ede84c57844cadec3508dd8cdd1a0e3d8adb",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}