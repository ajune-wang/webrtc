{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "87f8cea4_6814fb1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-30T16:26:03Z",
      "side": 1,
      "message": "Please, take a look at this CL. Thanks!",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "350e3ad4_40bbb435",
        "filename": "modules/audio_coding/acm2/acm_receiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 8038
      },
      "writtenOn": "2023-01-30T16:49:16Z",
      "side": 1,
      "message": "Remove.",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 21
      },
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5d8feda_9aad082c",
        "filename": "modules/audio_coding/acm2/acm_receiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-30T17:00:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "350e3ad4_40bbb435",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 21
      },
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "235a8b1a_6fab8ae2",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 8038
      },
      "writtenOn": "2023-01-30T16:49:16Z",
      "side": 1,
      "message": "Any reason we have this as an optional parameter in the constructor and not the other config values?",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55907928_80e1397c",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-30T17:00:53Z",
      "side": 1,
      "message": "Nope, I don\u0027t know.",
      "parentUuid": "235a8b1a_6fab8ae2",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 48,
        "endChar": 73
      },
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf1041c3_c151aa68",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-30T17:00:07Z",
      "side": 1,
      "message": "use const for all fields that are initialzed in the constructor and never changes.",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7453850f_b018f321",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-30T17:05:41Z",
      "side": 1,
      "message": "This is a config struct, so it is up to the owner of the struct which values to change post construction. The config is first created, then modified to suit the use case, and then used to create the AcmReceiver object.",
      "parentUuid": "bf1041c3_c151aa68",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6069147_b9717f50",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-30T17:17:05Z",
      "side": 1,
      "message": "Got it. I see the point with that if the parameters have to be collected over time and aren\u0027t available at construction.",
      "parentUuid": "7453850f_b018f321",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd555d0b_d57c41e5",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-30T17:00:07Z",
      "side": 1,
      "message": "The caller and the ACM both have a pointer for Clock and I see that that\u0027s why you use that here. But it\u0027s better to use a reference both here and in the class. And const it if it isn\u0027t changed post construction.",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52a77c8c_2d2deecb",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-30T17:05:41Z",
      "side": 1,
      "message": "But that would be a non-const reference (because of the above). I thought the style guide didn\u0027t like non-const refs. But I may just be out of touch. ðŸ˜Š",
      "parentUuid": "dd555d0b_d57c41e5",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d53aadec_56434daf",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-30T17:17:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "52a77c8c_2d2deecb",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b2d8952_8856d3fb",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-31T07:23:34Z",
      "side": 1,
      "message": "Also, see below about non-const use of the Clock object within AcmReceiver.",
      "parentUuid": "52a77c8c_2d2deecb",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bac38913_aa8c991c",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-31T07:44:10Z",
      "side": 1,
      "message": "Ok, but see below. Would like to undertand this vs Clock\u0026 then, because a reference should still be safer and clearer. Let\u0027s take that offline.",
      "parentUuid": "0b2d8952_8856d3fb",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "352a4f88_24719c60",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-30T17:00:07Z",
      "side": 1,
      "message": "const Clock\u0026 clock_?",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4f94b4fa_12d139bf",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 5100
      },
      "writtenOn": "2023-01-31T07:23:34Z",
      "side": 1,
      "message": "This won\u0027t work. The code invokes non-const member functions on `clock_`, so it cannot be a const ref. (Note that the current code is a const pointer to a (non-const) Clock, not a pointer to a const Clock.)",
      "parentUuid": "352a4f88_24719c60",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e64b640_928de692",
        "filename": "modules/audio_coding/acm2/acm_receiver.h",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-01-31T07:44:10Z",
      "side": 1,
      "message": "Fair enough about the non-const member funcitons. But I hope to learn the resoning for why this is better than Clock\u0026 clock_;",
      "parentUuid": "4f94b4fa_12d139bf",
      "revId": "2c69eaadbf2238e0350591e74bc97d294eac9384",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}