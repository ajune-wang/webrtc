{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "90e0bb68_fac6e78e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3322240
      },
      "writtenOn": "2024-02-28T04:35:42Z",
      "side": 1,
      "message": "Hi, tommi@, \n\nI\u0027ve been uloading my first commit to the webrtc repo to fix the warning of the clang check. I think that the StringBuilder class is a class that does not need to be exposed to the outside. So, I would like to propose preventing headers from being exposed to the outside, like Blink\u0027s INSIDE_BLINK. If I am approaching it incorrectly, please correct me. Thanks.\n\nFYI, Chromium bots for this change will work well with https://chromium-review.googlesource.com/c/chromium/src/+/5329549 but I\u0027m not sure how to make the build with the CL over the repo.",
      "revId": "4d020c8979f23cc0826d1dbb919fe853398a0d63",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86abe4b1_5fb678bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-02-28T08:37:21Z",
      "side": 1,
      "message": "I don\u0027t think this approach (bluntly requiring upstream projects to change their use of namespace-constrained names) is a viable one.\n\nIf I read https://clang.llvm.org/extra/clang-tidy/checks/bugprone/forward-declaration-namespace.html correctly, the correct approach is for Chromium to stop adding forward references to rtc::StringBuilder.",
      "revId": "4d020c8979f23cc0826d1dbb919fe853398a0d63",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1ca9142_9d895975",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3322240
      },
      "writtenOn": "2024-02-29T02:13:59Z",
      "side": 1,
      "message": "Thank you for the review comment. After reading your comment, I had second thoughts and I think fixing it in blink side would be the better direction. I will abandon this CL. Thank you again.",
      "parentUuid": "86abe4b1_5fb678bf",
      "revId": "4d020c8979f23cc0826d1dbb919fe853398a0d63",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "4d020c8979f23cc0826d1dbb919fe853398a0d63",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "4d020c8979f23cc0826d1dbb919fe853398a0d63",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}