{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a27795a3_6378eecb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2024-02-23T08:58:41Z",
      "side": 1,
      "message": "This component is part of the default AudioDeviceModule in WebRTC and we have not seen reports from any major client that the current design is not OK.\n\nThe existing design is to implement mute as a \"soft mute\" and don\u0027t stop recording at the same time since it will lead to audio glitches and delays when unmuting.\n\nIf you prefer this design you are free to implement your own ADM and inject it in [1]. That way you don\u0027t have to go through any reviews but can own and develop your ADM as you like.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/examples/androidapp/src/org/appspot/apprtc/PeerConnectionClient.java;l\u003d451;drc\u003d4e86aa0870e5e34031a320e9ef95e86c897ffa4e",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee3c8857_7f5f2a77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3311177
      },
      "writtenOn": "2024-02-23T13:00:58Z",
      "side": 1,
      "message": "@henrika@webrtc.org Thanks for the update. but \"soft mute\" shows privacy indicator on android 12+ devices even when user had muted or not using microphone giving an impression of audio being recorded.\nIs any other better way to fix it ?",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa64ebe7_cfa4f413",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2024-02-23T14:49:04Z",
      "side": 1,
      "message": "Adding some more details and motivations given that I am blocking this CL.\n\nFor WebRTC on Android, when the microphone is muted, it does not stop the audio recording, all it does is to silence the recorded samples. Most likely, Android 12 sees this as \"microphone is being used\" even if the ADM is muted. It all boils down to how muted is defined.\n\nIn WebRTC, the silent audio stream is still recorded, encoded and transmitted while muted. There are pros and cons with this approach but that is how it has always worked.\n\nIMO, to mute the mic is NOT the same as hanging up the call and the UI should reflect that the input audio is in fact muted.\n\nI would also like to add that even if you call https://developer.android.com/reference/android/media/AudioManager#setMicrophoneMute(boolean) while recording, the UI still indicates that the mic is in use. Hence, the indicator is designed to show that the microphone is in use and not as a mute indicator.",
      "parentUuid": "a27795a3_6378eecb",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5164a2c_e22fff45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2024-02-23T14:49:04Z",
      "side": 1,
      "message": "As I state, the current design in WebRTC is to keep recording alive and replace the recorded signal with zeros with the goal to keep stats alive, avoid echo and glitches at unmute and also reduce latency when unmuting. And the UI correctly reflects that the microphone is active. If you need a \"hard mute\", you can simply follow the example I linked to and instead of injecting the default Java ADM, inject the default ADM with the patch that you have done here. Then you are in full control and can do it your way. This is simply not what most WebRTC clients need at the moment.",
      "parentUuid": "ee3c8857_7f5f2a77",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "684262c7_633d09c8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3311177
      },
      "writtenOn": "2024-02-23T15:54:52Z",
      "side": 1,
      "message": "Got it thanks. want to share that we also attempted using the AudioManager\u0027s setMicrophoneMute(boolean) method during audio recording to prevent the privacy indicator from appearing.\n\n  Enabling AudioManager.setMicrophoneMute to \u0027true\u0027. It works as expected(mic privacy indicator not shown) in our app. \nbut we faced some other issue with the phone application. like., if we are in our app call, and another normal call is received during this process, attending normal call ends up \"muted\" by default. \n \n Also saw that according to the documentation, this method should only be utilized by the telephony app or the primary audio controller app, as it affects the entire android os.",
      "parentUuid": "aa64ebe7_cfa4f413",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c733b753_67a189bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2024-02-23T16:00:22Z",
      "side": 1,
      "message": "Thanks. Judging from the CL and your feedback it is clear that you know this area well. Hope you will manage to inject your own ADM that does exactly what you need but note the potential issues that I mentioned.",
      "parentUuid": "684262c7_633d09c8",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0cc638f_0896fbb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3311177
      },
      "writtenOn": "2024-02-28T16:18:23Z",
      "side": 1,
      "message": "Hey @henrika@webrtc.org I was trying to implement my own ADM. is deriving it from Java audio device is a good approach ?",
      "parentUuid": "c733b753_67a189bb",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c037217_9ac2e538",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3311177
      },
      "writtenOn": "2024-02-29T06:04:09Z",
      "side": 1,
      "message": "actually from this file https://chromium.googlesource.com/external/webrtc/+/HEAD/sdk/android/api/org/webrtc/audio/JavaAudioDeviceModule.java",
      "parentUuid": "f0cc638f_0896fbb1",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1823953a_97bb50a9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2024-02-29T08:07:11Z",
      "side": 1,
      "message": "You can build the WebRTC demo client and follow the example in https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/examples/androidapp/src/org/appspot/apprtc/PeerConnectionClient.java;l\u003d451;drc\u003d4e86aa0870e5e34031a320e9ef95e86c897ffa4e",
      "parentUuid": "1c037217_9ac2e538",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0819685c_85b3ee5b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2024-02-29T08:08:14Z",
      "side": 1,
      "message": "The external ADM is created in https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/examples/androidapp/src/org/appspot/apprtc/PeerConnectionClient.java;l\u003d459?q\u003dcreateJavaAudioDevice\u0026ss\u003dchromium",
      "parentUuid": "1823953a_97bb50a9",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05a2eb75_22187af0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3311177
      },
      "writtenOn": "2024-02-29T08:14:41Z",
      "side": 1,
      "message": "@henrika@webrtc.org Yes, because I only need to make changes in the WebRtcAudioRecord file, I attempted to develop a custom extension of ADM that extends JavaAudioDeviceModule.java and modifying the audioInput for WebRtcAudioRecord. However, I encountered difficulty as JavaAudioDeviceModule.java lacks a public constructor. Is there an alternative approach for accomplishing this?",
      "parentUuid": "0819685c_85b3ee5b",
      "revId": "00aeaf2a9b3e3ccc0504bdc97c6310056da3568d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}