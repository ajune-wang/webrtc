{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0fdd4c75_a3cbaace",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T09:52:54Z",
      "side": 1,
      "message": "I understand benefits in changing OnEncodedFrame\nbut I do not understand benefits of changing expectations of the OnDecodableFrameTimeout.",
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e4392af_5f374927",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-25T10:55:27Z",
      "side": 1,
      "message": "I\u0027m not changing either one actually. I\u0027m just fixing the FrameBuffer3Proxy implementation to behave the same way as FrameBuffer2Proxy and tests do.",
      "parentUuid": "0fdd4c75_a3cbaace",
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eadf91c8_8afc935d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T11:25:30Z",
      "side": 1,
      "message": "I missed that these two methods are from the same interface.",
      "parentUuid": "7e4392af_5f374927",
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "703a0a8a_9d667fe1",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 3
      },
      "lineNbr": 379,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T09:52:54Z",
      "side": 1,
      "message": "why this comment mention `OnEncodedFrame` if it is not called in this function?",
      "range": {
        "startLine": 378,
        "startChar": 4,
        "endLine": 379,
        "endChar": 22
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf5aaccd_e10223d5",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 3
      },
      "lineNbr": 379,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-25T10:55:27Z",
      "side": 1,
      "message": "because these two methods are the virtual methods of the `FrameSchedulingReceiver` interface and they are called from the same thread in tests and from FrameBuffer2Proxy:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/frame_buffer_proxy.cc;l\u003d112\n\nThis CL also updates the implementation in VideoReceiveStream2 to alert developers when the call is being made from a different context (as indicated above in comment at line 364 for the call to `OnEncodedFrame`).",
      "parentUuid": "703a0a8a_9d667fe1",
      "range": {
        "startLine": 378,
        "startChar": 4,
        "endLine": 379,
        "endChar": 22
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e40964d_f6075489",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 3
      },
      "lineNbr": 379,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T11:25:30Z",
      "side": 1,
      "message": "I still do not understand why OnTimeout function is a good place for such comment.\nMay be move it to the FrameSchedulingReceiver interface,\nor annotate `receiver_` variable instead:\n`FrameSchedulingReceiver* const receiver_ RTC_PT_GUARDED_BY(decode_queue_);`",
      "parentUuid": "bf5aaccd_e10223d5",
      "range": {
        "startLine": 378,
        "startChar": 4,
        "endLine": 379,
        "endChar": 22
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "911460d6_7dd17b3a",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 3
      },
      "lineNbr": 379,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-25T11:53:46Z",
      "side": 1,
      "message": "ah, great suggestion. Done and comment removed.",
      "parentUuid": "2e40964d_f6075489",
      "range": {
        "startLine": 378,
        "startChar": 4,
        "endLine": 379,
        "endChar": 22
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6f4aebb_7966e647",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 3
      },
      "lineNbr": 762,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T09:52:54Z",
      "side": 1,
      "message": "why force it to run on decode_queue_ if all it does is post to another queue?",
      "range": {
        "startLine": 762,
        "startChar": 26,
        "endLine": 762,
        "endChar": 49
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00527e72_442d5b2e",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 3
      },
      "lineNbr": 762,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-25T10:55:27Z",
      "side": 1,
      "message": "It\u0027s the currently default behavior, so I didn\u0027t want to change it in this CL. Since this is an exception case, I\u0027m not too worried about inefficiencies. I\u0027d rather fix the consistency first.",
      "parentUuid": "e6f4aebb_7966e647",
      "range": {
        "startLine": 762,
        "startChar": 26,
        "endLine": 762,
        "endChar": 49
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d87e882_faf98ccf",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 3
      },
      "lineNbr": 762,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T11:25:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "00527e72_442d5b2e",
      "range": {
        "startLine": 762,
        "startChar": 26,
        "endLine": 762,
        "endChar": 49
      },
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1edd72f5_b80b2e3e",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 3
      },
      "lineNbr": 778,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-25T09:52:54Z",
      "side": 1,
      "message": "I do not like comments that are not checked by tools, so \ncome up with an idea how to annotate this better:\n\nhttps://webrtc-review.googlesource.com/c/src/+/269381",
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c6f1343_c3b3122d",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 3
      },
      "lineNbr": 778,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-25T10:55:27Z",
      "side": 1,
      "message": "This comment is just a repeat of the compile-time thread annotation in the header (which is checked). The comment that was on line 788 is less clear on the fact that there\u0027s actually something that enforces this expectation.",
      "parentUuid": "1edd72f5_b80b2e3e",
      "revId": "12dbef018b80c50855d14b3825db3543fb73c781",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}