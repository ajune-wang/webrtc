{
  "comments": [
    {
      "key": {
        "uuid": "bb9921bd_8b41f540",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_config.h",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T11:04:11Z",
      "side": 1,
      "message": "I\u0027d like to move away from system_wrappers\u0027 Clock. Since this is new code, could you use the global clock from rtc_base/timeutils.h instead?\n\nOr do you need a fake clock for wallclock/ntp time, rather than just faking the system monotonic clock?",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a872b94b_797a9a80",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_config.h",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-08T13:08:49Z",
      "side": 1,
      "message": "I can\u0027t find function I need in rtc_base/timeutils.\nI\u0027m using Clock interface to take current time in ntp format: Clock::CurrentNtpTime()\nWhat would you recommend as an alternative?\n(faking is not an issue)",
      "parentUuid": "bb9921bd_8b41f540",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc07fda_1ef333cd",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_config.h",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T14:11:57Z",
      "side": 1,
      "message": "Closest to your need is rtc::TimeUTCMicros. You get ntp time from that by adding some magic constant. I would be fine with a helper function to do that, too.",
      "parentUuid": "a872b94b_797a9a80",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1ea2a48_c804e3e9",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_config.h",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-09T13:00:42Z",
      "side": 1,
      "message": "Posponed need of taking absolute NtpTime value, Clock removed.",
      "parentUuid": "8fc07fda_1ef333cd",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2fe18ebc_55db0e9b",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T11:04:11Z",
      "side": 1,
      "message": "At this point in the code, rtcp_block is a bit unexpected, and it\u0027s unobvious how it can know the data. It might be clearer to move this assignment to the end of the loop.\n\nI don\u0027t know if CommonHeader needs to retain any state between blocks, but if not, you could then make it local to the block inside the loop.\n\nSince packet_end is used only for computing remaining_block_size, it might be more readable to write the loop condition in terms of the size,\n\n  for (size_t size_left \u003d packet.size(), const uint8_t *block \u003d packet.data(); size_left \u003e 0;) {\n     ...\n     // Update size_left and block, maybe there\u0027s a nicer way?\n     const uint8_t *next_block \u003d rtcp_block.NextPacket();\n     size_left -\u003d (next_block - block);\n     block \u003d next_block;\n  }",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 88,
        "endChar": 30
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a20be537_ac7b9308",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-08T13:08:49Z",
      "side": 1,
      "message": "since iteration statement is complicated, changed for loop into while loop.\njoined next_block and size_left into single ArrayView to use as iteration variable, seems more natural.\nwonder if you find result function small enough to be ok with mutating input parameter.\n\nalso looks better when functionality for splitting rtcp_packets and parsing/handling single rtcp_packet are split in different functions.",
      "parentUuid": "2fe18ebc_55db0e9b",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 88,
        "endChar": 30
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "439283ae_7041ee09",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 88,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T14:11:57Z",
      "side": 1,
      "message": "Looks much better, thanks!",
      "parentUuid": "a20be537_ac7b9308",
      "range": {
        "startLine": 88,
        "startChar": 20,
        "endLine": 88,
        "endChar": 30
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6668bfd3_c4f418cc",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T11:04:11Z",
      "side": 1,
      "message": "Does it make sense to continue to the next block on parse error here, or is it better to discard all of the packet?\n\nI think I would have expected a return or a continue, rather than a break.",
      "range": {
        "startLine": 98,
        "startChar": 10,
        "endLine": 98,
        "endChar": 15
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03b81368_7060fc3f",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-08T13:08:49Z",
      "side": 1,
      "message": "what does continue mean in a switch?\nSplitted ReceivePacket into loop and inidividual block handler for clarity break here is very different to break few lines above.",
      "parentUuid": "6668bfd3_c4f418cc",
      "range": {
        "startLine": 98,
        "startChar": 10,
        "endLine": 98,
        "endChar": 15
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0b73f8a_b2491622",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 98,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T14:11:57Z",
      "side": 1,
      "message": "continue has no special meaning for a switch, it will apply to the closest containing loop.",
      "parentUuid": "03b81368_7060fc3f",
      "range": {
        "startLine": 98,
        "startChar": 10,
        "endLine": 98,
        "endChar": 15
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7cf4e897_0bdc2696",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 154,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T11:04:11Z",
      "side": 1,
      "message": "Since the check of receive_statistics is here, it would be more natural to also have the use here, e.g.,\n\n  revceiver_report.SetReportBlocks(CreateReportBlocks(config_.receive_statistics-\u003eRtcpReportBlocks(...)));\n\nOr change the CreateReportBlocks interface in some other way so that the check that recieve_statistics is non-null is closer to the use if it.",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 58
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac745163_c32be148",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 154,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-08T13:08:49Z",
      "side": 1,
      "message": "moved the check inside CreateReportBlocks.\n(it is ok to generate and set empty vector)",
      "parentUuid": "7cf4e897_0bdc2696",
      "range": {
        "startLine": 154,
        "startChar": 0,
        "endLine": 154,
        "endChar": 58
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1881c30_c9a99db9",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 181,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T11:04:11Z",
      "side": 1,
      "message": "Does this mean that receiver reports also act as acks for sender reports?",
      "range": {
        "startLine": 181,
        "startChar": 0,
        "endLine": 181,
        "endChar": 76
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "debe0fd0_be060022",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.cc",
        "patchSetId": 8
      },
      "lineNbr": 181,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-08T13:08:49Z",
      "side": 1,
      "message": "Almost, it is not to ack sender reports.\nit is the main mechanic to estimate rtt by sender.",
      "parentUuid": "d1881c30_c9a99db9",
      "range": {
        "startLine": 181,
        "startChar": 0,
        "endLine": 181,
        "endChar": 76
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4640db5f_a138639b",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.h",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-08T11:04:11Z",
      "side": 1,
      "message": "Indicate in name or comment if it\u0027s for sender reports, receiver reports, or both?",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffd89215_5bc778d5",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_impl.h",
        "patchSetId": 8
      },
      "lineNbr": 51,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-08T13:08:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4640db5f_a138639b",
      "range": {
        "startLine": 51,
        "startChar": 33,
        "endLine": 51,
        "endChar": 51
      },
      "revId": "2a4358ecab80e3c2962c495dcb48b80eb0fc06cb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}