{
  "comments": [
    {
      "key": {
        "uuid": "52f39a1c_2406724b",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-05-11T11:03:00Z",
      "side": 1,
      "message": "nit: add comment, that it may be created on X queue but used on Y queue.\nOr at least what it may be used on different queue that the one it\u0027s created at.",
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c9646e3_237a6ce5",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-11T13:51:58Z",
      "side": 1,
      "message": "Done. I added a comment to the class describing what the processor is used for, including the threading assumptions.",
      "parentUuid": "52f39a1c_2406724b",
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "174f8c88_bde11cce",
        "filename": "call/adaptation/resource_adaptation_processor.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-05-11T11:03:00Z",
      "side": 1,
      "message": "nit: name is very similar to processing_in_progress_.\n\nMaybe is_resource_adaptation_enabled_? Or add here a comment, what state does it track.",
      "range": {
        "startLine": 101,
        "startChar": 7,
        "endLine": 101,
        "endChar": 18
      },
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9679a1f_dde2b766",
        "filename": "call/adaptation/resource_adaptation_processor.h",
        "patchSetId": 4
      },
      "lineNbr": 101,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-11T13:51:58Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "174f8c88_bde11cce",
      "range": {
        "startLine": 101,
        "startChar": 7,
        "endLine": 101,
        "endChar": 18
      },
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d9aa81d_be224355",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 313,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-05-11T09:12:51Z",
      "side": 1,
      "message": "If we are delegating to the ResourceAdaptationProcessorInterface why not do that here as well? In fact, why not remove the inheritance altogether and just make this class delegate when needed?",
      "range": {
        "startLine": 313,
        "startChar": 40,
        "endLine": 313,
        "endChar": 65
      },
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66e85379_76eb0db8",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 313,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-11T09:30:44Z",
      "side": 1,
      "message": "The usage of the effective degradation preference by the Resources\u0027 CanApplyAdaptation() can safely delegate and use the ResourceAdaptationProcessor::effective_degradation_preference() directly because this the adaptation logic will run on the same task queue as the Processor.\n\nHowever there is still this ugly usage of degradation preference by the Manager for use in ConfigureQualityScaler() which is old \"runs on the encoder queue\" logic. Thus I wanted a copy of the degradation preference in the Manager so that ConfigureQualityScaler() does not have to block on the adaptation queue to find out whether or not \"IsResolutionScalingEnabled\".\n\nI would be happy to add a TODO for this, perhaps the quality scaler should listen to the Processor which would tell it whether or not \"IsResolutionScalingEnabled\" or perhaps reading the degradation preference should be thread-safe. But as-is, the Manager having a copy of the degradation preference is an existing problem, which this CL reduced slightly by getting rid of effective_degradation_preference_.\n\nIs there something with regards to this that you want me to address in this CL?",
      "parentUuid": "1d9aa81d_be224355",
      "range": {
        "startLine": 313,
        "startChar": 40,
        "endLine": 313,
        "endChar": 65
      },
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f0059e6_194dfa25",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 313,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-05-11T09:34:22Z",
      "side": 1,
      "message": "Ok, then it makes sense to keep it this way. But lets add a TODO or Bug to clean up these ðŸ˜Ž",
      "parentUuid": "66e85379_76eb0db8",
      "range": {
        "startLine": 313,
        "startChar": 40,
        "endLine": 313,
        "endChar": 65
      },
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04cf6813_9fca0adc",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 313,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-11T13:51:58Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "5f0059e6_194dfa25",
      "range": {
        "startLine": 313,
        "startChar": 40,
        "endLine": 313,
        "endChar": 65
      },
      "revId": "895b36e1f6d740c45409644b21997d0028987f89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}