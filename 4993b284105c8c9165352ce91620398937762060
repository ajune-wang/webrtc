{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af36432e_52f30fe1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-06T22:00:26Z",
      "side": 1,
      "message": "Late Saturday night is the wrong time to be reviewing this, so I\u0027m just adding a few comments.\nProper review is a monday-morning thing.\n",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b156ca9_f6578958",
        "filename": "pc/jsep_transport_controller.cc",
        "patchSetId": 14
      },
      "lineNbr": 243,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-06T22:00:26Z",
      "side": 1,
      "message": "Called from peer_connection.cc and sdp_offer_answer.cc.\n\nThe source of this info is ultimately https://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/p2p/base/dtls_transport.h;l\u003d239;drc\u003d2ac64302ae161cd6b5e4b1254497bdf5fd6d3415;bpv\u003d1;bpt\u003d1\n\nThe variable is set based on DTLS negotiation (we start off with \"I can take either role\" and end up with a defined role, which if I recall right is different for ICE-Lite and ICE-full). \n\ncricket::DtlsTransport is a single-thread class; webrtc::DtlsTransport isn\u0027t.\n\nA long way of saying: No, I don\u0027t think we can get rid of it easily.",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6cce2cfa_994c96ba",
        "filename": "pc/jsep_transport_controller.cc",
        "patchSetId": 14
      },
      "lineNbr": 243,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-07T10:05:57Z",
      "side": 1,
      "message": "I\u0027ll update this comment, it was a note to self but I\u0027ll change it to be a TODO. I agree that it\u0027s not easy but I\u0027m sure there\u0027s a way. I think this is an example of where things are slowed down during negotiation in ways that are subtle and make it easy to add more.\n\nFor example, this function is called from the signaling thread, in a loop from  WebRtcSessionDescriptionFactory::InternalCreateAnswer:\n\n    for (cricket::MediaDescriptionOptions\u0026 options :\n         request.options.media_description_options) {\n      // According to http://tools.ietf.org/html/rfc5245#section-9.2.1.1\n      // an answer should also contain new ICE ufrag and password if an offer\n      // has been received with new ufrag and password.\n      options.transport_options.ice_restart \u003d\n          sdp_info_-\u003eIceRestartPending(options.mid);\n      // We should pass the current DTLS role to the transport description\n      // factory, if there is already an existing ongoing session.\n      absl::optional\u003crtc::SSLRole\u003e dtls_role \u003d\n          sdp_info_-\u003eGetDtlsRole(options.mid);  \u003c--- *******\n      if (dtls_role) {\n        options.transport_options.prefer_passive_role \u003d\n            (rtc::SSL_SERVER \u003d\u003d *dtls_role);\n      }\n\nThat\u0027s just one example of where the signaling thread interrupts the network thread and blocks while building the offer. From the code in WebRtcSessionDescriptionFactory, it\u0027s not obvious how costly the loop could end up being. So while it\u0027s not easy, I think it\u0027s still worth doing.",
      "parentUuid": "3b156ca9_f6578958",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03862b40_ce446f50",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 270,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-06T22:00:26Z",
      "side": 1,
      "message": "Can we please not use worker_thread_ ? Any name, including black_magic_thread_ or the_thread_that_must_not_be_named_, would be better than worker_thread_, given just how many places in the code that refers to worker_thread().",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d407b2f_4986e23d",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 270,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-07T10:05:57Z",
      "side": 1,
      "message": "In case the comment is being misunderstood - Which worker_thread_ name specifically do you have in mind and how would you recommend changing it?",
      "parentUuid": "03862b40_ce446f50",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6feb5c81_5ea9df5f",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 270,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-08T11:00:44Z",
      "side": 1,
      "message": "\"Internally, the proxy object has a member variable named |worker_thread_|\"\nThat worker_thread_. I see that api/proxy.h has this name, and has had it for quite some time, so this may be something outside the scope of this CL.\n\nI think it\u0027s a Bad Thing to be using the word \"worker\" for multiple concepts. But not a rant on this particular CL.",
      "parentUuid": "8d407b2f_4986e23d",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66928fdb_1d3641f6",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 270,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-08T12:57:02Z",
      "side": 1,
      "message": "I see. I could make a change to the proxy classes/macros and replace works like \u0027signaling\u0027 and \u0027worker\u0027 with \u0027default\u0027 and \u0027secondary\u0027? wdyt? It might just make things less clear.",
      "parentUuid": "6feb5c81_5ea9df5f",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6944b19a_9727235b",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-06T22:00:26Z",
      "side": 1,
      "message": "s/the factories worker_thread()/the worker_thread() that is passed in from the factory/",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "958e8782_5dd37f32",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-07T10:05:57Z",
      "side": 1,
      "message": "For a couple of reasons, I think that would be misleading:\n- The factory does not pass the worker_thread()\n- The difference between saying \"its worker_thread()\" vs \"the worker_thread() that is passed\", is that the second way indicates that what is passed each time, might not always be the same, so the former is more applicable in this case.\n\nAgain I think that there might be some misunderstanding so I\u0027m happy to explain this and flesh the comment out in more detail on Monday.",
      "parentUuid": "6944b19a_9727235b",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ea32973_f04bce55",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-08T11:00:44Z",
      "side": 1,
      "message": "I\u0027m not sure I understand.\n\nThe worker_thread() is passed to the CreatePeerConnectionFactory() function as part of its configuration, and CreatePeerConnection creates a ConnectionContext object (which I split off from PeerConnectionFactory recently); if there is no worker_thread in the configuration, the ConnectionContext will create one.\n\nThe ConnectionContext is passed to the PeerConnection when PeerConnection is created, and the worker_thread() for a PeerConnection is set from the ConnectionContext. If this isn\u0027t \"passing\" (by reference, ownership is not transferred), I\u0027m not sure what to call it.\n\nMy point was really that \"the factories worker thread\" is a) ungrammatical and b) imprecise, since it doesn\u0027t tell you which factory it is pointing at; I *think* it is the PeerConnectionFactory you are referring to, but I want to be sure (and have the comment be easy to interpret for others).",
      "parentUuid": "958e8782_5dd37f32",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33219370_b43783a3",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-02-08T12:57:02Z",
      "side": 1,
      "message": "Sorry, it should be \"factory\u0027s\", not \"factories\". I\u0027ll fix that. Hopefully that makes it clear which factory is referred to.\n\nAs far as this comment goes, it\u0027s meant to be for the creation of the proxy, not the PeerConnection object. The context is passed to the constructor of PeerConnection as opposed to PeerConnectionProxy.",
      "parentUuid": "4ea32973_f04bce55",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e3ef249_2245167e",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 14
      },
      "lineNbr": 271,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-08T14:08:50Z",
      "side": 1,
      "message": "OK, that is clear enough.\nFWIW, the proxy is also created inside PeerConnectionFactory-\u003eCreatePeerConnection.",
      "parentUuid": "33219370_b43783a3",
      "revId": "4993b284105c8c9165352ce91620398937762060",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}