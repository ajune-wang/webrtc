{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cb6b6dfb_608f6bbd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-05-23T21:57:45Z",
      "side": 1,
      "message": "I wonder why this was a TSAN flake... the race is between\n  webrtc::JsepCandidateCollection::count()\nwhich gets called from SdpSerialize via GetCandidatesByMindex\nand\n  SdpOfferAnswerHandler::AddLocalIceCandidate\n(i.e. candidate gathering) since one thread tries to count the candidates and put them into the SDP while another thread gathers a candidate?\n\nIt seems extra flaky in this test which is good because we have a repro?",
      "revId": "6ba9f9d1c084e071e6d9e02669c9b57f0e79b208",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2188e9ce_0217f6a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-05-23T22:22:28Z",
      "side": 1,
      "message": "Deflaking is good, but root-causing would make me even happier.",
      "revId": "6ba9f9d1c084e071e6d9e02669c9b57f0e79b208",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aed638ea_3105c65a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-05-23T22:54:41Z",
      "side": 1,
      "message": "it is threading so Tommi might be interested :-)",
      "revId": "6ba9f9d1c084e071e6d9e02669c9b57f0e79b208",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79a75b26_2966d193",
        "filename": "pc/sdp_offer_answer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1376,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-05-23T22:22:28Z",
      "side": 1,
      "message": "The difference is that on this line, offer (which is referenced by a std::unique_ptr was being destructed. Now it\u0027s kept alive until the end of the test.\nThis indicates that there are multiple pointers to the object, which is a Bad Thing (ownership contract is not preserved). Are we just repairing a symptom here?",
      "revId": "6ba9f9d1c084e071e6d9e02669c9b57f0e79b208",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50951d04_1dc5816f",
        "filename": "pc/sdp_offer_answer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1376,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-05-23T22:54:41Z",
      "side": 1,
      "message": "I agree this is just fixing a symptom of what issue... previously \"offer\" was kept alive by the remote description but it would have been the SDP deserialized offer which should not get any new candidates added to it. So the race was ToString() and candidates being gathered but the argument to ToString should have been a clone already?!",
      "parentUuid": "79a75b26_2966d193",
      "revId": "6ba9f9d1c084e071e6d9e02669c9b57f0e79b208",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53303cad_56333e7a",
        "filename": "pc/sdp_offer_answer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1376,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-05-24T09:21:15Z",
      "side": 1,
      "message": "It is a clone (I checked). But the clone operation is quite a lot deeper than is comfortable (copy and assign are defaulted at the first level, depending on copy/assign being overridden at deeper levels to do proper deep-copy).\n\nSo at some level down there, there\u0027s a memory release of something that is shared between copies where it shouldn\u0027t have been. The TSAN run should be a possible way to pinpoint exactly what.",
      "parentUuid": "50951d04_1dc5816f",
      "revId": "6ba9f9d1c084e071e6d9e02669c9b57f0e79b208",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}