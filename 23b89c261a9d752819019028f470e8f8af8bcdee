{
  "comments": [
    {
      "key": {
        "uuid": "03c77308_751ab90f",
        "filename": "api/voip/voip_engine_builder.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "We try to avoid setters on structs, but this is the Builder pattern. I think we\u0027re fine with that.",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 46,
        "endChar": 63
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "308559ae_0314b541",
        "filename": "api/voip/voip_engine_builder.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "03c77308_751ab90f",
      "range": {
        "startLine": 37,
        "startChar": 2,
        "endLine": 46,
        "endChar": 63
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93ddab3f_009f886f",
        "filename": "api/voip/voip_engine_builder.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Engine",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 23
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98c4bbd8_dfd285b8",
        "filename": "api/voip/voip_engine_builder.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "93ddab3f_009f886f",
      "range": {
        "startLine": 48,
        "startChar": 18,
        "endLine": 48,
        "endChar": 23
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0bf2c05b_354690a3",
        "filename": "audio/voip/audio_channel.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Ingress",
      "range": {
        "startLine": 58,
        "startChar": 46,
        "endLine": 58,
        "endChar": 52
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1b4d08c_48dd0f42",
        "filename": "audio/voip/audio_channel.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0bf2c05b_354690a3",
      "range": {
        "startLine": 58,
        "startChar": 46,
        "endLine": 58,
        "endChar": 52
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "597511bf_34e145df",
        "filename": "audio/voip/audio_channel.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Nit: punctuation",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 66
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "555ce472_86c882e3",
        "filename": "audio/voip/audio_channel.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "597511bf_34e145df",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 66
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f895f561_f454312b",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Hm, so you both have a worker thread that runs some methods and a task queue that runs others. Maybe consider splitting this class into one worker thread part and one task queue part? It\u0027s real easy to break the thread safety of this class.",
      "range": {
        "startLine": 194,
        "startChar": 2,
        "endLine": 194,
        "endChar": 45
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbe888da_bb3eb7e2",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 194,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "It\u0027s the same in channel_send model.  encoder_queue_ is making sure encoding process is done sequentially by same TaskQueue while worker_thread_checker_ is making sure that same thread is accessing the AudioEgress interfaces.  It works now as channel_send is but I will take second look to see if there can be simpler and better optimization.",
      "parentUuid": "f895f561_f454312b",
      "range": {
        "startLine": 194,
        "startChar": 2,
        "endLine": 194,
        "endChar": 45
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6584395e_243bafbf",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "This should be RTC_GUARDED_BY the worker thread checker, right?",
      "range": {
        "startLine": 225,
        "startChar": 2,
        "endLine": 225,
        "endChar": 13
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da2fa42c_7dab56bb",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "I am trying to prevent race condition on its \u0027set\u0027 operation.  The only case we are worrying about is when there are two threads that are trying to set different values to input_mute_.  Depending on timing we may end up with wrong state due to race condition.  Requiring only single thread to access input_mute_ would be sufficient to remove such condition.\nThe read access is happening by encoder_queue_ thread but I didn\u0027t think strict ordering was necessary as long as we are keeping correct ordering. I can\u0027t mark RTC_GUARDED_BY due to its read access is done with different thread and that isn\u0027t worker thread.",
      "parentUuid": "6584395e_243bafbf",
      "range": {
        "startLine": 225,
        "startChar": 2,
        "endLine": 225,
        "endChar": 13
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d5719d0_f0744367",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Complete this comment",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 9
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d7942d9_365abdf0",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Sorry, it was from channel_send.h variables\u0027 comment.  I think it meant to say not owned but \u0027uses\u0027 them.  I will remove as it is obvious.",
      "parentUuid": "1d5719d0_f0744367",
      "range": {
        "startLine": 79,
        "startChar": 2,
        "endLine": 79,
        "endChar": 9
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1ddf1a2_b7702a90",
        "filename": "audio/voip/audio_ingress.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "inheritable",
      "range": {
        "startLine": 38,
        "startChar": 37,
        "endLine": 38,
        "endChar": 48
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d356295c_3e10b8a4",
        "filename": "audio/voip/audio_ingress.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1ddf1a2_b7702a90",
      "range": {
        "startLine": 38,
        "startChar": 37,
        "endLine": 38,
        "endChar": 48
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e2916b2_614e2d34",
        "filename": "audio/voip/audio_ingress.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Not sure if this comment is necessary. This class clearly uses rtp_rtcp etc, so it\u0027s a no-brainer to pass it in the constructor from this class\u0027 perspective. I suggest removing this comment, or move it to AudioChannel.",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 40,
        "endChar": 35
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d8f05d7_8b63d2b1",
        "filename": "audio/voip/audio_ingress.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e2916b2_614e2d34",
      "range": {
        "startLine": 38,
        "startChar": 1,
        "endLine": 40,
        "endChar": 35
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b46bd2f_83b3eb58",
        "filename": "audio/voip/audio_ingress.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Remove?",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 23
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d667dc1_3fde2ffd",
        "filename": "audio/voip/audio_ingress.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "sorry meant to indicate AudioMixer::Source interface.",
      "parentUuid": "4b46bd2f_83b3eb58",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 66,
        "endChar": 23
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "407a6390_f5e1f880",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Move this into the test; seems like overly specific setup. Isn\u0027t there any other codecs you want to test for instance?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 78,
        "endChar": 68
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4594248_fbdcbb59",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "This is also remnant of removed test cases. I will move it down for now and we can refactor if needed later.  I can test other codecs here as well but since they are tested on their own in audio level, I decided not to.",
      "parentUuid": "407a6390_f5e1f880",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 78,
        "endChar": 68
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "060c2418_d8d0a4eb",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Remove muted, appears unused.",
      "range": {
        "startLine": 82,
        "startChar": 44,
        "endLine": 82,
        "endChar": 62
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b18663a1_b0ba0974",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "sorry, it was remnant from removed test cases I had before.",
      "parentUuid": "060c2418_d8d0a4eb",
      "range": {
        "startLine": 82,
        "startChar": 44,
        "endLine": 82,
        "endChar": 62
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34481420_ba0b0085",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Nit: Advance 10 ms for each frame.",
      "range": {
        "startLine": 102,
        "startChar": 9,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4f62fba_b458ce8f",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 102,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "34481420_ba0b0085",
      "range": {
        "startLine": 102,
        "startChar": 9,
        "endLine": 102,
        "endChar": 37
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "856e84ca_20157bb2",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Inline InsertPackets and just call audio_channel-\u003eSendAudioData + fake_clock directly since you\u0027re only sending one packet anyway. Tests should be as simple as possible and preferably not have any loops, so unrolling loops and inlining functions frequently makes sense.",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 19
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01a4a5df_10cc8102",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "The problem is that I placed AudioSender::SendAudioData() under private section and made AudioChannelTest a friend class to access.  I wanted to place only valid APIs under public and the inherited interface which functions more like call back from other class.  It would be cleaner to inline but I think it\u0027s better to have cleaner API listed.",
      "parentUuid": "856e84ca_20157bb2",
      "range": {
        "startLine": 132,
        "startChar": 2,
        "endLine": 132,
        "endChar": 19
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dd7bd4b_a6aff305",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "You\u0027re not following the arrange-act-assert rule here. You can split this into two cases: one for lines 120-135 and a second with lines 120-145 (but with the ASSERT_TRUE line dropped). You can keep the rtp_done.HasBeenNotified() if it has some other side effect? Does it block? In that case, just remove the ASSERT in the second test. \n\nAlternatively, just keep one test and remove the assert. That assert would appear to test your test code anyway.",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 145,
        "endChar": 50
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "928597ff_4992fe8e",
        "filename": "audio/voip/test/audio_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "ok, I will remove the ASSERT on rtp_done.  If rtp_done is not notified then it\u0027s likely following test case will fail as well.",
      "parentUuid": "0dd7bd4b_a6aff305",
      "range": {
        "startLine": 120,
        "startChar": 1,
        "endLine": 145,
        "endChar": 50
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "646e9aad_bd11407f",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "This is also very complicated for a test. It would read nicer if it read like\n\negress_-\u003eSendAudioData(GetAudioFrame(1));\negress_-\u003eSendAudioData(GetAudioFrame(2));\negress_-\u003eSendAudioData(GetAudioFrame(3));\n...\n\nnot_dtmf \u003d [](RtpPacketReceived p) { ... move dtmf recognizer code here ... }\nstd::vector\u003cRtpPacketReceived\u003e received \u003d WaitForFrames();\nstd::remove_if(received.begin(), received.end, not_dtmf);\n\nASSERT_EQUAL(kExpected, received.size()) \u003c\u003c \"Did not get enough DTMF tones\";\n\nOf course, it\u0027s somewhat tricky to know when all the packets have trickled through, because this is threaded code under test, right? Counting like you\u0027re doing above is perhaps the simplest and best solution that is fast and thread safe. In that case make your rtp_sent function simpler by moving out the DTMF check and just save the received packet. By splitting gathering and analyzing of results, you make the code simpler.",
      "range": {
        "startLine": 190,
        "startChar": 1,
        "endLine": 204,
        "endChar": 4
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de4e02a4_0b3f67f5",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 204,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Thanks, that makes sense.  As you suspected, it\u0027s due to encoder_queue_ thread that\u0027s doing the work that I am doing this way.  I separated the checking logic with more comment.",
      "parentUuid": "646e9aad_bd11407f",
      "range": {
        "startLine": 190,
        "startChar": 1,
        "endLine": 204,
        "endChar": 4
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a74aea4_63ec3454",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Inline this too and only keep the parts you really need (nuke mute, do you need to advance the fake clock?)",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 208,
        "endChar": 27
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d066fc1_2d3a8ca1",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Removed mute but same reason as other test case (SendAudioData under private), we\u0027ll need a access method to access SendAudioData indirectly.",
      "parentUuid": "3a74aea4_63ec3454",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 208,
        "endChar": 27
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85415cc8_db6215a9",
        "filename": "audio/voip/test/audio_ingress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "Nit: punctuation etc",
      "range": {
        "startLine": 115,
        "startChar": 9,
        "endLine": 115,
        "endChar": 37
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4361393_2c9bfc19",
        "filename": "audio/voip/test/audio_ingress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 115,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85415cc8_db6215a9",
      "range": {
        "startLine": 115,
        "startChar": 9,
        "endLine": 115,
        "endChar": 37
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46e96628_abdce875",
        "filename": "audio/voip/test/audio_ingress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "This timeout is way too short. It\u0027s a recipe for flakiness. Increase to at least 1000.",
      "range": {
        "startLine": 118,
        "startChar": 62,
        "endLine": 118,
        "endChar": 65
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30406e96_fd0d6d04",
        "filename": "audio/voip/test/audio_ingress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-02-28T19:30:40Z",
      "side": 1,
      "message": "ok will do.  I had several places in other unit test files. will update them to 1000 as well.",
      "parentUuid": "46e96628_abdce875",
      "range": {
        "startLine": 118,
        "startChar": 62,
        "endLine": 118,
        "endChar": 65
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47753e4b_566f4fd8",
        "filename": "audio/voip/test/audio_ingress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 5027
      },
      "writtenOn": "2020-02-25T10:49:03Z",
      "side": 1,
      "message": "InsertPacket makes more sense here, but it\u0027s way too complex. It\u0027s hard to tell if the test is correct by inspection.\n\nFirst, mute appears unused here too so nuke it.\n\nSecond, you call this once from most test methods and 11 times in another. That would mean 22 calls to SendAudioData and fake clock advance. That\u0027s actually not as unreasonable as you might think. However, do make InsertPackets as short as possible (extract a function to create a frame, etc). Also, try to make the notify mechanism simpler. Don\u0027t check num_packets \u003e 0 for instance; if that ever triggers somebody invoked InsertPackets(0) or InsertPackets(-X), which are programmer errors.",
      "range": {
        "startLine": 88,
        "startChar": 2,
        "endLine": 119,
        "endChar": 3
      },
      "revId": "23b89c261a9d752819019028f470e8f8af8bcdee",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}