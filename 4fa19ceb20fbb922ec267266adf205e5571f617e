{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb9f0119_2c8eba9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-28T13:56:13Z",
      "side": 1,
      "message": "Thanks, added the link.",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0db50e2f_27a83b7e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-28T14:07:30Z",
      "side": 1,
      "message": "I\u0027ve only had a quick look at the bug, and I\u0027m a bit curious as to precisely for which source file(s) the compiler generates mulx instructions?",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f27c29b_3812d31c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-28T14:29:21Z",
      "side": 1,
      "message": "Thanks for the review! Please see the comments below.",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d6e3baf7_05bcfaf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-28T14:29:21Z",
      "side": 1,
      "message": "It\u0027s in this function. But I don\u0027t know from which line of C++.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/audio_processing/aec3/adaptive_fir_filter_avx2.cc;l\u003d43;bpv\u003d1;bpt\u003d1",
      "parentUuid": "0db50e2f_27a83b7e",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d5b8c6c_03dff824",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-04-28T14:33:13Z",
      "side": 1,
      "message": "Thank you!",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bd67a9b_7dcfce94",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-28T14:45:53Z",
      "side": 1,
      "message": "So there are lots of intrinsics, but we don\u0027t explicitly use anything obviously mapping to mulx; it\u0027s the compiler that generates that for some mul operation written without intrinsics?\n\nWill the intrinsics be rejected if we build without /arch:AVX2?",
      "parentUuid": "d6e3baf7_05bcfaf2",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "097c4cb3_4ee52181",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-29T07:11:53Z",
      "side": 1,
      "message": "1. Yes, mulx is generated without intrinsics because of /arch:AVX2.\n2. I _think_ that the intrinsics will not be rejected on MSC without the flag.",
      "parentUuid": "5bd67a9b_7dcfce94",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f570e327_fce29612",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-29T07:20:29Z",
      "side": 1,
      "message": "\u003e 2. I _think_ that the intrinsics will not be rejected on MSC without the flag.\n\nIf we have intrinsics (or separate asm files) for all code where we think avx2 is beneficial, we could consider dropping the /arch flag to the compiler. That\u0027s for later, of course.\n\nmulx is a great instruction btw, but seems rather unrelated to avx2 to me, my understanding is that avx2 is about simd instructions.",
      "parentUuid": "097c4cb3_4ee52181",
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1490a381_6ad37558",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-28T14:45:53Z",
      "side": 1,
      "message": "typo",
      "range": {
        "startLine": 96,
        "startChar": 60,
        "endLine": 96,
        "endChar": 72
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada405cd_769e0d5a",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-28T14:45:53Z",
      "side": 1,
      "message": "If you can be a bit more specific (but brief), I think it would be good to specify which compiler it is and that it\u0027s behavior of /arch:AVX2 that is a bit unexpected.",
      "range": {
        "startLine": 96,
        "startChar": 10,
        "endLine": 96,
        "endChar": 17
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d866b650_91ece5a6",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-29T07:11:53Z",
      "side": 1,
      "message": "Thanks, fixed",
      "parentUuid": "1490a381_6ad37558",
      "range": {
        "startLine": 96,
        "startChar": 60,
        "endLine": 96,
        "endChar": 72
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59b25ee7_5a21dd28",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-29T07:11:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ada405cd_769e0d5a",
      "range": {
        "startLine": 96,
        "startChar": 10,
        "endLine": 96,
        "endChar": 17
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a503c44b_193fabf5",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-28T14:07:30Z",
      "side": 1,
      "message": "I think the BMI2 check here deserves a comment.\n\nIf it\u0027s a quirk particular to a windows compiler (and/or the way we configure that), you could consider having this check only in windows builds, but perhaps not worth the effort if missing BMI2 support is rare.",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 55
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "489012f4_e5ea2e70",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-28T14:29:21Z",
      "side": 1,
      "message": "I thought about it, but the AVX2 without BMI2 is extremely rare. So I thought I should spare the code from an \"ifdef\". WDYT?",
      "parentUuid": "a503c44b_193fabf5",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 55
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca4bbc90_7a1d44a0",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-04-28T14:45:53Z",
      "side": 1,
      "message": "Agree with keeping it simple. Code doesn\u0027t need more ifdefs.",
      "parentUuid": "489012f4_e5ea2e70",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 55
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e3a5205_b2b4b2d5",
        "filename": "system_wrappers/source/cpu_features.cc",
        "patchSetId": 4
      },
      "lineNbr": 103,
      "author": {
        "id": 5116
      },
      "writtenOn": "2022-04-29T07:11:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ca4bbc90_7a1d44a0",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 103,
        "endChar": 55
      },
      "revId": "4fa19ceb20fbb922ec267266adf205e5571f617e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}