{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8ea0c034_a03b0e5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20714
      },
      "writtenOn": "2023-11-16T13:28:36Z",
      "side": 1,
      "message": "Dry run passed. Can this be submitted to the Commit Queue? Thanks!",
      "revId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2b236de_acd8ce4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2023-11-16T15:48:36Z",
      "side": 1,
      "message": "I\u0027m not a domain expert here, but rslgtm\nOne thing - is here a chance there are older clients out there that this will break compatibility with? The units test in webrtc all pass - but there all senders and receivers have been updated in sync ðŸ˜Š",
      "revId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b827f55f_11863204",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20714
      },
      "writtenOn": "2023-11-16T15:56:19Z",
      "side": 1,
      "message": "The Updated RFC is not used at all in WebRTC, There is still some wiring to do to enable it. Once this will be ready, I intend to introduce it as a new protocol which will be published in the SDP, so that the old implementation (draft 03) would still be available.",
      "parentUuid": "e2b236de_acd8ce4d",
      "revId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "530c77db_250e2963",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-11-16T15:58:29Z",
      "side": 1,
      "message": "Erik, do you mind also add rs+1?\n\nold senders are receivers are probably using flexfec_03.\nThis parser is relatively new.",
      "parentUuid": "e2b236de_acd8ce4d",
      "revId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22aede5c_d89b5ec3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2023-11-16T18:28:50Z",
      "side": 1,
      "message": "Ack, thanks.",
      "parentUuid": "530c77db_250e2963",
      "revId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "86b7eed11a5addd498e4b46323cd1b024d2659af",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}