{
  "comments": [
    {
      "key": {
        "uuid": "bd778d73_d49049b9",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 9
      },
      "lineNbr": 138,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "return nullptr;\nmakes it easier to read.\n(current line looks a bit similar to return rtc::MakeUnique\u003cRtpPacketToSend\u003e(); that has completely different effect)",
      "range": {
        "startLine": 137,
        "startChar": 46,
        "endLine": 138,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d1043b_ca91c5fa",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "why fixed-length type instead of size_t or int?",
      "range": {
        "startLine": 46,
        "startChar": 19,
        "endLine": 46,
        "endChar": 27
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08af5d1c_432916b0",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 51,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "prefer to put types before constants\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "range": {
        "startLine": 51,
        "startChar": 26,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b17dd97_f0b175d3",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "Store or keep?",
      "range": {
        "startLine": 53,
        "startChar": 22,
        "endLine": 53,
        "endChar": 32
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a54826f4_a7da5c63",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 64,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "move copy constructor before destructor",
      "range": {
        "startLine": 64,
        "startChar": 36,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d4be2e0_5bd7a0fd",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 83,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "may be fix uint16_t to size_t",
      "range": {
        "startLine": 83,
        "startChar": 47,
        "endLine": 83,
        "endChar": 55
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b11a808_60ecd14a",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 94,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "send_time_ms",
      "range": {
        "startLine": 94,
        "startChar": 43,
        "endLine": 94,
        "endChar": 52
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d822c93_daefa7d9",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 98,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "I do not understand this comment.\nIs there a mistype?",
      "range": {
        "startLine": 98,
        "startChar": 29,
        "endLine": 98,
        "endChar": 56
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05ee32bc_801f5e1b",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 100,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "s/false/nullopt",
      "range": {
        "startLine": 100,
        "startChar": 19,
        "endLine": 100,
        "endChar": 24
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9fa67d51_bee375ff",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 113,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "does this function change history state? if not, make it const",
      "range": {
        "startLine": 113,
        "startChar": 61,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51f1d08a_9ff9d61a",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 115,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "Avoid \"used for\" API comments.\nMay be instead write.\nPrefers packets of size closer to |packet_size|. No guarantees.",
      "range": {
        "startLine": 115,
        "startChar": 36,
        "endLine": 115,
        "endChar": 78
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9660b911_dc1e6cfe",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "may be \"excluding\"",
      "range": {
        "startLine": 146,
        "startChar": 42,
        "endLine": 146,
        "endChar": 55
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acc5664e_b4f9b088",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 157,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "functions are greatly discourages in structs.\nMay be instead add private function to the PacketHistory\nor free function declared (and defined) only in unnamed namespace in the .cc file\n\nPacketState PacketHistory::AsPacketState(const StoredPacket\u0026 stored);",
      "range": {
        "startLine": 156,
        "startChar": 32,
        "endLine": 157,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9822e2ee_7dfe6152",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 159,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "\"do not abbreviate by deleting letters within a word\"\nhttps://google.github.io/styleguide/cppguide.html#General_Naming_Rules",
      "range": {
        "startLine": 159,
        "startChar": 20,
        "endLine": 159,
        "endChar": 23
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9584fdc_1cc496b4",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 163,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "it is common to return .end() iterator when something not found, no need to wrap it into an optional",
      "range": {
        "startLine": 163,
        "startChar": 2,
        "endLine": 163,
        "endChar": 32
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02cafa01_bbb74fac",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 9
      },
      "lineNbr": 181,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "though map seems simpler, I\u0027m not sure it is best container for the history:\nsequence numbers are very ..sequential: new packet will be added in order and most of the time (minus padding) using next sequence number.\nOld packets will be removed mostly in order.\n\nI wonder if better container would be std::vector\u003cStoredPackets\u003e stored_;\nwhere stored_[i] packets has sequence_number start_seqno_ + i, but might be absent (stored_[i].packet \u003d\u003d nullptr).\n\nIt can be searched by sequence number with constant time (just need to be a bit careful of wraparound) and use binary search to find transport sequence number (assuming they are assigned in order too and not caring about few potential cases when transport sequence number ordered slightly differently than rtp sequence number) \n\n\nBut may be safer to do it as separate improvement.",
      "range": {
        "startLine": 181,
        "startChar": 73,
        "endLine": 181,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37b105a9_103b6089",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "prefer using in new code:\nusing StorageMode \u003d RtpPacketHistory::StorageMode;",
      "range": {
        "startLine": 24,
        "startChar": 50,
        "endLine": 24,
        "endChar": 0
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4cdcfcd_2eb21184",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "why this change? (sequence numbers do have a reason to use fixed-size type)",
      "range": {
        "startLine": 36,
        "startChar": 51,
        "endLine": 36,
        "endChar": 57
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "901410ac_d13a3d75",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-03-06T15:38:59Z",
      "side": 1,
      "message": "may be comment the meaning of the true flag, it is not obvious from the context:\n(kStartSeqNum, /*verify_rtt\u003d*/true)",
      "range": {
        "startLine": 204,
        "startChar": 49,
        "endLine": 204,
        "endChar": 53
      },
      "revId": "51fa0daa7ba5f1037198056568416fa06d65bf47",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}