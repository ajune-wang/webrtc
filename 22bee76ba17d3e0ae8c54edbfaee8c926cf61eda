{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7d9225e5_5e2430e2",
        "filename": "api/jsep.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-10-12T14:13:05Z",
      "side": 1,
      "message": "Serialization and deserialization is defined here: https://cs.chromium.org/chromium/src/third_party/webrtc/pc/webrtcsdp.h.\n\nSince pc/webrtcsdp.h doesn\u0027t include anything from non-API directories, I am tempted to move it to api/sdp_serialization.h (or a better name, suggestions are welcome). The .cc file depends on internal stuff but that is not a problem since it will not leak via recursive header inclusion.\n\nCan we consider the following functions part of the API?\n* webrtc::SdpSerialize\n* webrtc::SdpSerializeCandidate\n* webrtc::SdpDeserialize\n* webrtc::SdpDeserializeCandidate",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 114,
        "endChar": 1
      },
      "revId": "22bee76ba17d3e0ae8c54edbfaee8c926cf61eda",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fb9657a_79985af6",
        "filename": "api/jsep.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-10-12T17:57:42Z",
      "side": 1,
      "message": "Yeah, those methods look pretty harmless. +1 to moving webrtcsdp.h to the api/ directory. api/sdp_serialization.h sgtm",
      "parentUuid": "7d9225e5_5e2430e2",
      "range": {
        "startLine": 105,
        "startChar": 0,
        "endLine": 114,
        "endChar": 1
      },
      "revId": "22bee76ba17d3e0ae8c54edbfaee8c926cf61eda",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "22bee76ba17d3e0ae8c54edbfaee8c926cf61eda",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "22bee76ba17d3e0ae8c54edbfaee8c926cf61eda",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}