{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "432f1562_566c8c1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-10T12:49:15Z",
      "side": 1,
      "message": "Preparatory to changing the video assignment....",
      "revId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f54583c_6e260e8d",
        "filename": "call/payload_type_picker_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-12-11T12:16:46Z",
      "side": 1,
      "message": "Constrained PT !\u003d high PT makes sense.\n\nBut what is the difference between high 1f and high 2a?",
      "revId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d997bc9_0733fe75",
        "filename": "call/payload_type_picker_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T14:46:00Z",
      "side": 1,
      "message": "high 1f \u003d level 3.1 (31 decimal) - framesize 3600 macroblocks, max macroblocks per second \u003d 108000 (1280x720@30 will fit)\nhigh 2a \u003d level 4.2 (42 decimal) - framesize 8704 macroblocks, max mbps \u003d 52240 (2048x1024@60 will fit)\n\nWe ignore the level when sending :-(",
      "parentUuid": "8f54583c_6e260e8d",
      "revId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2f73cb2_4ab1356c",
        "filename": "call/payload_type_picker_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-12-11T15:05:00Z",
      "side": 1,
      "message": "Sounds like there is room for improvement, and there is a separate comparison function for \"IgnoreLevels\" that would need to take this into account too, but adding test coverage SGTM for now.\n\nIf you\u0027re up for it you could file a crbug and add a TODO, but +1",
      "parentUuid": "2d997bc9_0733fe75",
      "revId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e06981f_aaea97f9",
        "filename": "call/payload_type_picker_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T16:17:06Z",
      "side": 1,
      "message": "The bug for not honoring profile levels is https://issues.webrtc.org/issues/42224482 - filed in 2022.... still not the top of my priority list...",
      "parentUuid": "f2f73cb2_4ab1356c",
      "revId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a webrtc committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-webrtc-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-webrtc-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-webrtc-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "0b2619ed585d2a78a83167cfbd79d3cc4efb0f52",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}