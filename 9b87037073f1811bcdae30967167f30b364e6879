{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "62ffd370_002e72be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 5064
      },
      "writtenOn": "2020-10-13T16:06:34Z",
      "side": 1,
      "message": "Retrospective not-LGTM (sorry :-/)\n\nAllocation of a unique Id to each request should be possible to arrange directly in the DesktopCaptureOptions, and the start/stop request logic to be removed and instead placed in the ScreenCapturerPipewire.  All you seem to need for that is some way for WebRTC to maintain a process-global XdgDesktopPortal instance to route the calls through, though you could, if you prefer, require that callers maintain that, if WebRTC maintainers prefer that?",
      "revId": "9b87037073f1811bcdae30967167f30b364e6879",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0753da2f_b0a9adc6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-10-13T17:06:40Z",
      "side": 1,
      "message": "Can you help me a bit to implement this properly?\n\nMy idea behind is that Chromium keeps an instance of DesktopCapturerOptions to make XdgDesktopPortalBase persistent, then each call from Chromium is identified with a siteId so we can ask the XdgDesktopPortalBase instance later for the same PipeWire stream. This has been done because Chromium destroyes the DesktopCapturer used for the preview dialog and then creates another one. Without making XdgDesktopPortalBase persistent, we would make another portal call which in result presents another dialog to the user and that\u0027s what we want to avoid.\n\n1) It would be nice to have XdgDesktopPortalBase initialized globally in WebRTC, but I have no idea where this would be possible. If we let the caller to store it, we again end up with some global object on Chromium side, because the capturers are being created from two different places.\n\n2) We will still need to use siteId from Chromium to identify our calls, otherwise you can get a different content than you chose in case you initiate screen sharing from two tabs. If you don\u0027t consider this as a common use-case, we can then use some unique id which will be randomly generated and just use them in the order they were created.",
      "parentUuid": "62ffd370_002e72be",
      "revId": "9b87037073f1811bcdae30967167f30b364e6879",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42589c11_b45479ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 33
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-10-13T17:07:27Z",
      "side": 1,
      "message": "Also, do we want to revert it?\n\nIt was merged in https://webrtc-review.googlesource.com/c/src/+/187492.",
      "parentUuid": "0753da2f_b0a9adc6",
      "revId": "9b87037073f1811bcdae30967167f30b364e6879",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c217fcf_7bee8e2c",
        "filename": "modules/desktop_capture/desktop_capture_options.h",
        "patchSetId": 33
      },
      "lineNbr": 200,
      "author": {
        "id": 5064
      },
      "writtenOn": "2020-10-13T16:06:34Z",
      "side": 1,
      "message": "I\u0027m not sure what you\u0027re trying to do here, but this doesn\u0027t look like it will do what you want.  DesktopCaptureOptions is scoped to a single capture operation, and specifies the options for that operation - you should think of it as a structure of arguments.\n\nThis change seems to actually want to retain a single _process-global_ instance of the XdgDesktopPortalBase, and to associate a request-Id with each DesktopCaptureOptions instance, I think?\n\nThat can be implemented much more simply with a process-global holding the XdgDesktopPortal, and then having an atomic-integer used to uniquely identify each DesktopCaptureOptions, i.e. to unique identify each request.",
      "range": {
        "startLine": 140,
        "startChar": 0,
        "endLine": 200,
        "endChar": 6
      },
      "revId": "9b87037073f1811bcdae30967167f30b364e6879",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}