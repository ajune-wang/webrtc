{
  "comments": [
    {
      "key": {
        "uuid": "71b2c539_11dc6934",
        "filename": "api/video/video_frame.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-06-13T09:10:53Z",
      "side": 1,
      "message": "I think we should avoid leaking RTP information outside the RTP layer. I know there\u0027s already timestamp_rtp, but I think that should be renamed to timestamp_90khz. I suggest you extract the parts of the RtpPacketInfo that makes sense for a VideoFrame and only attach that information to the frame. Most likely there\u0027s no need to attach one instance for each packet that a frame consists of on the RTP layer.",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 34
      },
      "revId": "39aa861986f95324775de26cdd4c8057150ac2a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa1ce030_fa78ebaf",
        "filename": "api/video/video_frame.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 8392
      },
      "writtenOn": "2019-06-13T11:20:43Z",
      "side": 1,
      "message": "I agree that leaking RTP information isn\u0027t ideal.\n\nhttps://w3c.github.io/webrtc-pc/#dom-rtcrtpcontributingsource is specced in a packet-centric fashion and applies to both audio and video streams. So I believe that plumbing a per-packet info, and doing the final assembling of the values very late (i.e. in `SourceTracker` when the output audio or video frame is on its way out from WebRTC), is our safest and most flexible option.",
      "parentUuid": "71b2c539_11dc6934",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 34
      },
      "revId": "39aa861986f95324775de26cdd4c8057150ac2a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "665af454_0f7c1a6f",
        "filename": "api/video/video_frame.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-13T12:03:03Z",
      "side": 1,
      "message": "As far as I understand, CSRC is a per packet thing that is accumulated independently of the assembly of packets into frames. Check the class https://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/source/contributing_sources.h?q\u003dContributingSources\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d26\n\nThis is updated by transport code, audio/channel_receive.cc and video/rtp_video_stream_receiver.cc, and wired up all the way to js. It\u0027s all completely independent of the media decode pipelines.",
      "parentUuid": "fa1ce030_fa78ebaf",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 34
      },
      "revId": "39aa861986f95324775de26cdd4c8057150ac2a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a4afb2_8bd555c9",
        "filename": "api/video/video_frame.cc",
        "patchSetId": 2
      },
      "lineNbr": 133,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-06-19T11:14:10Z",
      "side": 1,
      "message": "There are several use cases for this. One use case that I care about is to use the RTP timestamp to identify which frame that was last sent to \"Chrome\". Even though it\u0027s not optimal to expose RTP information, to me it seems better to reuse an existing and widely spread identifier than to add a new duplicate identifier.",
      "parentUuid": "665af454_0f7c1a6f",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 34
      },
      "revId": "39aa861986f95324775de26cdd4c8057150ac2a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}