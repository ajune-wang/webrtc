{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c8b74509_d4ec816d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-02-10T15:44:55Z",
      "side": 1,
      "message": "nit:\nIt\u0027s not clear from the description, that this arm isn\u0027t up and running yet and a follow up Cl is needed.\n\nPlease add a little comment on that.",
      "range": {
        "startLine": 17,
        "startChar": 21,
        "endLine": 17,
        "endChar": 37
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dbe61450_41b60c52",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 17,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-11T08:37:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8b74509_d4ec816d",
      "range": {
        "startLine": 17,
        "startChar": 21,
        "endLine": 17,
        "endChar": 37
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bbb88fb_3a25eb12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T12:42:34Z",
      "side": 1,
      "message": "Ilya, Stefan, PTAL",
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "827cb5fc_4408696a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "Took a brief first pass, but I think we really need Philip to take a look at this as well",
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9096dd2c_345210cc",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "Is decode time really a timestamp? I\u0027d expect it to be a delta",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 9
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "058ae1a6_c1aac63b",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "It is passed as a decode time is passed around as a Timestamp, based on the VCMTiming timestamp from the time the schedule is created. It is stored as a Timestamp since it is evaluated at multiple points in time. If a TimeDelta was used, it would have to be updated with each tick.\n\nFor example, if the MaxDecodeWait is 100ms, then the MaxDecodeTime timestamp would be now+100ms. If the metronome ticks, at now+15ms, the decode synch would see that the frame would be ready in now+85ms, and is not ready yet. In 5 more ticks, the decode synch would see max decode time is now+10ms and should be decoded now.",
      "parentUuid": "9096dd2c_345210cc",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 9
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4b8c8a7_fdb864df",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-11T08:20:25Z",
      "side": 1,
      "message": "I see, should we rename it to something else? It\u0027s essentially the time when we want this frame to be rendered given the current max decode time, right? In that case, is it simply the preferred render time?\n\nOr is this the latest time when this frame must be decoded for it to be rendered in time?\n\n---\n\nSaw in a later comment that the latter seems to be the case, then I suggest we rename it desired decode time or something similar",
      "parentUuid": "058ae1a6_c1aac63b",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 9
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df18c866_77a983c7",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-11T09:00:33Z",
      "side": 1,
      "message": "The original definition of \"MaxWaitingTime\" is the max time we can wait for a frame to be complete before it is sent to the decoder. [1] The logic here is basing everything around that time. If this metronome project seems to be promising, and goes forward with VSync ticks I think there are some very interesting ideas to be tested - like basing the decoding time around the render times by decoding in the tick before the frame\u0027s render time VSync happens.\n\nRegarding the name MaxDecodeTime I think we can rename it as \"latest decode time\" for now. Preferred decode time makes it sound a bit more flexible than it is because it is not clear how late is reasonable in that case. \n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/timing.h;l\u003d91;drc\u003d2ddc39e2b9ab65357d6a09695982755ae9753882",
      "parentUuid": "a4b8c8a7_fdb864df",
      "range": {
        "startLine": 54,
        "startChar": 0,
        "endLine": 54,
        "endChar": 9
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ab4b517_deef8746",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "I don\u0027t follow this, why do we have to check for size 1?",
      "range": {
        "startLine": 96,
        "startChar": 18,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e2e84f6_74e802eb",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "If this is the first decode scheduler added to the synchronizer, the synchronizer will attach to the metronome. We only need to attach to the metronome once for all streams. \n\nThe alternative solution would be that each frame scheduler would attach to the metronome themselves, but this results in more PostTasks. The cost of the PostTasks may be low however, since they won\u0027t induce wakeups.",
      "parentUuid": "6ab4b517_deef8746",
      "range": {
        "startLine": 96,
        "startChar": 18,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9369cb42_478ca2ee",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-11T08:20:25Z",
      "side": 1,
      "message": "Ack, maybe worth a comment",
      "parentUuid": "8e2e84f6_74e802eb",
      "range": {
        "startLine": 96,
        "startChar": 18,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c4b4f7e_a8c0b73f",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 96,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-11T09:00:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9369cb42_478ca2ee",
      "range": {
        "startLine": 96,
        "startChar": 18,
        "endLine": 96,
        "endChar": 41
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d12d44_16706ec3",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-02-10T15:44:55Z",
      "side": 1,
      "message": "This looks like ScheduledFrame is effectively a callback with a bind state.\nTherefore, it should be just a callback with no parameters and rtp and render_time should be bound internally on creation.\n\nIf only something like base::BindOnce and base::OnceCallback were available in webrtc. It looks like std::bind is also prohibited in webrtc.\n\nAt least, could you make some method in SheduledFrame to call the callback with the stored parameters, so it\u0027s all hidden from the users?",
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "690ac03b_8d8f3680",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 126,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "I can implement something similar to base::BindOnce here such that it has to be moved.",
      "parentUuid": "73d12d44_16706ec3",
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbf7e9a0_f51adf7f",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 153,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "This doesn\u0027t make sense to me, I\u0027m expecting MaxDecodeTime to be in the order of 0-100 ms, and next tick is related to the current time",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84fa058a_568b7e76",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 153,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "MaxDecodeTime is the Timestamp when decoding should happen rather than the max delay. It is derived from that delay.",
      "parentUuid": "fbf7e9a0_f51adf7f",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bb23c7e_5f94f465",
        "filename": "video/decode_synchronizer.cc",
        "patchSetId": 8
      },
      "lineNbr": 153,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-11T08:20:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "84fa058a_568b7e76",
      "range": {
        "startLine": 153,
        "startChar": 8,
        "endLine": 153,
        "endChar": 56
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "664f30bf_e47cfec5",
        "filename": "video/decode_synchronizer.h",
        "patchSetId": 8
      },
      "lineNbr": 33,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "coalescing -- i think?",
      "range": {
        "startLine": 33,
        "startChar": 59,
        "endLine": 33,
        "endChar": 68
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "297c148c_1870a250",
        "filename": "video/decode_synchronizer.h",
        "patchSetId": 8
      },
      "lineNbr": 33,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "664f30bf_e47cfec5",
      "range": {
        "startLine": 33,
        "startChar": 59,
        "endLine": 33,
        "endChar": 68
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd033d11_bc5c13e7",
        "filename": "video/decode_synchronizer.h",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "What does rtp mean here?",
      "range": {
        "startLine": 69,
        "startChar": 28,
        "endLine": 69,
        "endChar": 31
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe98d02d_f9331621",
        "filename": "video/decode_synchronizer.h",
        "patchSetId": 8
      },
      "lineNbr": 69,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "RTP timestamp, that was lazy. I have renamed.",
      "parentUuid": "dd033d11_bc5c13e7",
      "range": {
        "startLine": 69,
        "startChar": 28,
        "endLine": 69,
        "endChar": 31
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94395cfe_c1c5a257",
        "filename": "video/decode_synchronizer.h",
        "patchSetId": 8
      },
      "lineNbr": 91,
      "author": {
        "id": 6549
      },
      "writtenOn": "2022-02-10T15:14:34Z",
      "side": 1,
      "message": "outstanding",
      "range": {
        "startLine": 91,
        "startChar": 20,
        "endLine": 91,
        "endChar": 32
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50cadb68_5fa68d5c",
        "filename": "video/decode_synchronizer.h",
        "patchSetId": 8
      },
      "lineNbr": 91,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-02-10T16:50:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "94395cfe_c1c5a257",
      "range": {
        "startLine": 91,
        "startChar": 20,
        "endLine": 91,
        "endChar": 32
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c7e1838_830e64ef",
        "filename": "video/frame_buffer_proxy.cc",
        "patchSetId": 8
      },
      "lineNbr": 507,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-02-10T15:44:55Z",
      "side": 1,
      "message": "nit: FrameBufferExperimentArm",
      "range": {
        "startLine": 507,
        "startChar": 11,
        "endLine": 507,
        "endChar": 26
      },
      "revId": "d3b7001b70d88a092df7cb89f4c805c250d50237",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}