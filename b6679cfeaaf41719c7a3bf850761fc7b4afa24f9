{
  "comments": [
    {
      "key": {
        "uuid": "6a6e5152_874666b8",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-05-14T13:20:58Z",
      "side": 1,
      "message": "Not sure if annotation with RTC_LOCKS_EXCLUDED is useful. I haven\u0027t seen it elsewhere in the code base, and grepping for it I only see it in two places. Should we adopt it?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d132ddd_0b5f29a9",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-05-14T13:31:33Z",
      "side": 1,
      "message": "From the docs, it looks moderately useful, and it seems useful as documentation for humans. Markus, did you verify that it catches violations?",
      "parentUuid": "6a6e5152_874666b8",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "124a32d0_9082d8cf",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-05-14T13:39:17Z",
      "side": 1,
      "message": "I\u0027ve found it\u0027s quite common in webrtc that class implementation details sloppily call out to public methods. Yes, if the private impl olds a lock and calls out to such a public method, you get compiler errors.\nDoes it hurt?",
      "parentUuid": "6d132ddd_0b5f29a9",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3987b0b_c1dcdbd7",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-05-14T13:59:47Z",
      "side": 1,
      "message": "\u003e Does it hurt?\n\nI don\u0027t think it hurts, but it\u0027s nice with consistency. Do we want to start using it and strive to use it everywhere?",
      "parentUuid": "124a32d0_9082d8cf",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d10dd1d_da646445",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-05-14T14:06:08Z",
      "side": 1,
      "message": "On the contrary, we *want* a compile error if someone calls this method with critical_section_ held. I was just wondering if you had verified that this did indeed happen.",
      "parentUuid": "124a32d0_9082d8cf",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e04cebe_a52a90a1",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-05-15T09:59:57Z",
      "side": 1,
      "message": "Yes,adding\n  rtc::VideoSinkWants sw;\n  OnSinkWants(sw);\nto the beginning of KeepFrame (the method is RTC_EXCLUSIVE_LOCKS_REQUIRED) gives:\n\n../../media/base/video_adapter.cc:149:3: error: cannot call function \u0027OnSinkWants\u0027 while mutex \u0027critical_section_\u0027 is held [-Werror,-Wthread-safety-analysis]\n  OnSinkWants(sw);\n\nIn the AdaptFrameResolution implementation (the method is RTC_LOCKS_EXCLUDED one), adding a OnSinkWants call after the critsect has been taken yields the same error.\n\n../../media/base/video_adapter.cc:195:3: error: cannot call function \u0027OnSinkWants\u0027 while mutex \u0027critical_section_\u0027 is held [-Werror,-Wthread-safety-analysis]\n  OnSinkWants(sw);\n\nYes I do think it should be recommended where it makes sense, and I have used it in other merged CLs, for example https://webrtc-review.googlesource.com/c/src/+/175101.",
      "parentUuid": "0d10dd1d_da646445",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c5a1080_4b077fb1",
        "filename": "media/base/video_adapter.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-05-15T11:17:26Z",
      "side": 1,
      "message": "Excellent---exactly what I was hoping for.",
      "parentUuid": "5e04cebe_a52a90a1",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 44
      },
      "revId": "b6679cfeaaf41719c7a3bf850761fc7b4afa24f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}