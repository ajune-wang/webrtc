{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a3b4b0b4_4ea58136",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-23T09:10:09Z",
      "side": 1,
      "message": "Thoughts:\n1) Using more than one PC is very normal. All mesh conferencing applications do it, and some even do it instead of multiple tracks per PC. If Chrome uses different threads for different PCs (I don\u0027t know if it does), the result will not make us happy.\n\nIt would be interesting to think about what it would take to make the network thread a singleton, but that is a lot more invasive than an SCTP-based solution.\n\n2) Having to support both single-process and multi-process modes of SCTP is the worst of all possible worlds. The idea behind switching to single-process is to make support simpler; supporting two modes will make it harder.\n\n3) In Chrome, the ultimate thread hop is the one that passes the UDP packets to the network process. So we\u0027re switching threads (AND sending packets over mojo) below the SCTP thread anyway. So we can\u0027t get to zero thread jumps - we should look to minimize, but be realistic.\n",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c52fce_21c85847",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-01-25T23:39:58Z",
      "side": 1,
      "message": "1) Two PeerConnections is fine, it\u0027s two PeerConnectionFactories (with different network threads) that isn\u0027t. I suspect this is much more rare, and it isn\u0027t an issue for chromium.\n\n2) The main goal isn\u0027t to make support simpler, it\u0027s to insulate us against new security bugs due to race conditions between the application thread and usrsctp timer thread. I think this is worth a little extra complexity.\n\n3) Agreed, that\u0027s why I like reusing the network thread instead of a new dedicated thread.",
      "parentUuid": "a3b4b0b4_4ea58136",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a28f528e_151297c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-28T06:51:15Z",
      "side": 1,
      "message": "After staring at the Chromium factory code for a while, I\u0027m thinking that we should make the network thread a global singleton in WebRTC.\nThat will make it safe to use that for the usrsctp thread. (IF the usrsctp thread respects the timing constraints that the network thread has.)\n\n",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61aac71c_d35a2dae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-01-29T00:24:08Z",
      "side": 1,
      "message": "It\u0027s already safe though; chromium only has one PeerConnectionFactory per renderer process, no? We can\u0027t force the network thread to be a singleton in general since that would break other applications/tests using separate threads. \n\nPersonally, I don\u0027t think this CL\u0027s approach is that ugly that it warrants greater architectural changes",
      "parentUuid": "a28f528e_151297c5",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3564a561_0384d9b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-29T09:06:34Z",
      "side": 1,
      "message": "I chatted with Tommi about the idea of making the network thread a global singleton (you can initialize it once, but if you try to initialize it to something else, you get an error when creating the PeerConnectionFactory).\n\nHe thought that sounded like a relatively safe way forward (given that Chromium already does this), and would make this CL safe for all cases.\n\nThe best way to resolve edge cases is to not have them.",
      "parentUuid": "61aac71c_d35a2dae",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8be95140_8c3e5acd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-29T09:06:34Z",
      "side": 1,
      "message": "Can we make this the right solution for all cases?\n",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5db8fba2_9cede092",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-01-29T20:16:27Z",
      "side": 1,
      "message": "What is the main downside in your opinion of supporting this edge case? Is it the additional code? Or is it the fact that some users of WebRTC will be vulnerable to race conditions while others aren\u0027t?\n\nMaybe we can discuss this in the next WebRTC core meeting, in the interest of time, since I\u0027d like this to be fixed by M90, optimally merged to M89 as well.",
      "parentUuid": "3564a561_0384d9b8",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d800e81_c881681c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-03-03T09:53:49Z",
      "side": 1,
      "message": "What\u0027s the status of this CL?",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "181a2f28_ebd42488",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-03-03T21:42:11Z",
      "side": 1,
      "message": "Abandoned in favor of https://webrtc-review.googlesource.com/c/src/+/209321.\n\nThe difference being that this CL provides two options, \"run in single threaded mode with network thread\" or \"run in multithreaded mode\". Whereas the new one provides options of \"use network thread in single threaded mode\" or \"use independent thread in single threaded mode\". Which is what people were asking for in the meeting where this was discussed, if I understood correctly.",
      "parentUuid": "1d800e81_c881681c",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70cdd24_4033cb75",
        "filename": "media/sctp/sctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 6305
      },
      "writtenOn": "2021-01-25T13:34:50Z",
      "side": 1,
      "message": "Hi Taylor. I believe it also important to take into account inherent inaccuracy of timer calling the lambda as well as execution time of `usrsctp_handle_timers`. Maybe it make sense to calculate elapsed duration to not to collect timer errors just by adding `10ms`? Just a reminder (maybe you will find it interesting): I\u0027ve tried migrate to single threaded usrsctp (https://webrtc-review.googlesource.com/c/src/+/175657), but stuck with overcoming issues with multiple PeerConnectionFactories having different network threads.",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9ef3af7_d6e73728",
        "filename": "media/sctp/sctp_transport.cc",
        "patchSetId": 3
      },
      "lineNbr": 329,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-01-25T23:39:58Z",
      "side": 1,
      "message": "I definitely agree, I plan to fix this if I clean the CL up.",
      "parentUuid": "c70cdd24_4033cb75",
      "revId": "f42b8feea04a063bf08a4569638ad7c43e4d4b9c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}