{
  "comments": [
    {
      "key": {
        "uuid": "da85fe42_ea032419",
        "filename": "api/rtp_parameters.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-02-05T09:46:40Z",
      "side": 1,
      "message": "A bit unclear if it\u0027s necessary to increment the version number or not without having the changes to the format in the same CL, but I assume you have concluded that this is needed.",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 80
      },
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "557a610c_727bad12",
        "filename": "api/rtp_parameters.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-05T10:06:52Z",
      "side": 1,
      "message": "We need someway of telling if the feedback should be periodic or on request.\n\nPerhaps, it would be enough to add support for RTP header extension attributes,\n\na\u003dextmap:5 http://www.ietf.org/id/draft-holmer-rmcat-transport-wide-cc-extensions-01 on-request\n\nThis seems to be allowed in the standard:\nhttps://tools.ietf.org/html/rfc8285#section-5",
      "parentUuid": "da85fe42_ea032419",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 80
      },
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10eefad3_7c1fbff6",
        "filename": "api/rtp_parameters.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-02-05T10:38:39Z",
      "side": 1,
      "message": "Ok, I\u0027m not sure what\u0027s best, but referring to -02 seems OK.",
      "parentUuid": "557a610c_727bad12",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 80
      },
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56364436_8b17ba7e",
        "filename": "api/rtp_parameters.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-02-06T12:19:44Z",
      "side": 1,
      "message": "I thinks it\u0027s ok. \nHeader extension attributes sound like an interesting alternative, do we support that in chrome?\nWe can always change this before we\u0027re done and actually start to advertise this as a capability.",
      "parentUuid": "10eefad3_7c1fbff6",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 80
      },
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec642e6_8dfc0d59",
        "filename": "api/rtp_parameters.cc",
        "patchSetId": 3
      },
      "lineNbr": 112,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-08T09:31:52Z",
      "side": 1,
      "message": "Attributes are not supported at the moment, but shouldn\u0027t be too complicated to add. Let\u0027s discuss how this should be done in person.",
      "parentUuid": "56364436_8b17ba7e",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 112,
        "endChar": 80
      },
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1caf44cd_b0be37af",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-02-05T10:32:45Z",
      "side": 1,
      "message": "Why isn\u0027t this guarded by `lock_` like every other member variable?",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2661831f_c18a247d",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-05T14:11:13Z",
      "side": 1,
      "message": "This should be set once before this module starts to get calls.\nDo you think that I should still guard with a lock to protect against unintended use cases?",
      "parentUuid": "1caf44cd_b0be37af",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d715b12_5868a1ca",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-02-05T14:31:22Z",
      "side": 1,
      "message": "Can we pass it in the constructor instead so it can be made const?",
      "parentUuid": "2661831f_c18a247d",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c236a8d_521a5f4f",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-05T16:00:11Z",
      "side": 1,
      "message": "Yes, that would solve the problem.\nNot sure if that\u0027s possible without too much effort though. It\u0027s created in the constructor of ReceiveSideCongestionController which is created in the constructor of Call.\n\nPerhaps the construction could be delayed, but I don\u0027t think it\u0027s worth the effort.",
      "parentUuid": "4d715b12_5868a1ca",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebb94e4b_33f15367",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-02-05T16:39:03Z",
      "side": 1,
      "message": "That\u0027s unfortunate. That means we\u0027ll have no machine checked limitations on how this variable can change. It may take only a minute of code perusal to ensure that it\u0027s all OK, but casual readers of this code might not have a minute to spend.\n\nWe *could* solve the general problem of write-once members by defining a kind of \"mutex\" similar to the thread checker, which would instead CHECK that it was being taken at most (or exactly) once. But I\u0027m disinclined to do so, because I don\u0027t want to encourage this sort of pattern.\n\nWould it make sense to make this an optional\u003cbool\u003e, and DCHECK that it\u0027s unset in the setter and set whenever we read it?",
      "parentUuid": "4c236a8d_521a5f4f",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c32ce2b0_fe0dd134",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-06T10:35:55Z",
      "side": 1,
      "message": "It\u0027s probably best to guard this variable with lock_ since all existing methods already uses a lock.",
      "parentUuid": "ebb94e4b_33f15367",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a74e4e1c_0af830e5",
        "filename": "modules/remote_bitrate_estimator/remote_estimator_proxy.h",
        "patchSetId": 3
      },
      "lineNbr": 77,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-02-08T09:31:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c32ce2b0_fe0dd134",
      "revId": "ad00963b4f88389efeef6ff0492ba73b253cfbb7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}