{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "01fcda52_759e27b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-11-21T09:59:07Z",
      "side": 1,
      "message": "+ asapersson@ (need +1 from another googler)",
      "revId": "17715ca298ebed06bc0f0f71f1db12d16fbfb9a6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a023e11c_ddf2493c",
        "filename": "modules/video_coding/codecs/av1/libaom_av1_encoder_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-10-21T14:27:54Z",
      "side": 1,
      "message": "It seems that we can actually set it to 0. Could you please try? I think it will make test more clear.",
      "range": {
        "startLine": 186,
        "startChar": 30,
        "endLine": 186,
        "endChar": 33
      },
      "revId": "17715ca298ebed06bc0f0f71f1db12d16fbfb9a6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0c33f5e_b1feef3a",
        "filename": "modules/video_coding/codecs/av1/libaom_av1_encoder_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 3691616
      },
      "writtenOn": "2024-11-21T01:08:21Z",
      "side": 1,
      "message": "0 will not trigger this bug, here are some exmaple:\nL3T1 input 2 frames:\n  allocation.SetBitrate(0, 0, 30000);\n  allocation.SetBitrate(1, 0, 40000);\n  allocation.SetBitrate(2, 0, 30000);\nOutput: 6 encoded frames ,correct end_of_pictures for frames[2]/frames[5]\n\n  allocation.SetBitrate(0, 0, 30000);\n  allocation.SetBitrate(1, 0, 40000);\n  allocation.SetBitrate(2, 0, 0);\nOutput: 4 encoded frames ,correct end_of_pictures for frames[1]/frames[3]\n\n   allocation.SetBitrate(0, 0, 30000);\n   allocation.SetBitrate(1, 0, 40000);\n   allocation.SetBitrate(2, 0, 500);\nOutput: 4 encoded frames , frames[1] has end_of_pictures, frames[3] do\u0027t has end_of_pictures (bug trigger)",
      "parentUuid": "a023e11c_ddf2493c",
      "range": {
        "startLine": 186,
        "startChar": 30,
        "endLine": 186,
        "endChar": 33
      },
      "revId": "17715ca298ebed06bc0f0f71f1db12d16fbfb9a6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a webrtc committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-webrtc-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-webrtc-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX,count>=2"],"failingAtoms":["label:Code-Review=MIN","uploaderin:cria/project-webrtc-committers"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "17715ca298ebed06bc0f0f71f1db12d16fbfb9a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "17715ca298ebed06bc0f0f71f1db12d16fbfb9a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "17715ca298ebed06bc0f0f71f1db12d16fbfb9a6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}