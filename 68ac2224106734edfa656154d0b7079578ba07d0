{
  "comments": [
    {
      "key": {
        "uuid": "ddf77464_ce65e204",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-05-13T14:26:26Z",
      "side": 1,
      "message": "Why can\u0027t those set themself as the current TQ? It should be as simple as using instantiating a TaskQueueBase::CurrentTaskQueueSetter around the execution of the pending tasks. I\u0027d consider that part of the expectations for anything that implements the TaskQueueBase interface and not having it there would break other code that have the same expectation as well.",
      "range": {
        "startLine": 46,
        "startChar": 37,
        "endLine": 48,
        "endChar": 72
      },
      "revId": "68ac2224106734edfa656154d0b7079578ba07d0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc1cfd3d_2c14811a",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-05-13T15:53:04Z",
      "side": 1,
      "message": "replying below",
      "parentUuid": "ddf77464_ce65e204",
      "range": {
        "startLine": 46,
        "startChar": 37,
        "endLine": 48,
        "endChar": 72
      },
      "revId": "68ac2224106734edfa656154d0b7079578ba07d0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6bf254a_c424ca2b",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-05-13T10:20:23Z",
      "side": 1,
      "message": "In case anyone is wondering how big of an effort it would be to keep using |task_queue_| as the checker, here\u0027s a preview:\nhttps://webrtc-review.googlesource.com/c/src/+/174828",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "68ac2224106734edfa656154d0b7079578ba07d0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b8a210_08907384",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-05-13T14:26:26Z",
      "side": 1,
      "message": "There are a lot of changes in that CL, I\u0027m not sure if all of them are related. Is the issue that you want to stop the repeated task, not by actually using a task running on the task queue, but from a non-task that happens to be running on the same thread?\n\nIf we want that to be allowed behavior, maybe we should make it so that the TaskQueue checker use the SequenceChecker implementation underneath? Or make rtc::Thread do something like what I had to do for simulated threads that ran into a similar issue.",
      "parentUuid": "c6bf254a_c424ca2b",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "68ac2224106734edfa656154d0b7079578ba07d0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfcb2ef3_b9bbdd75",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-05-13T15:53:04Z",
      "side": 1,
      "message": "They\u0027re all related and because it turned out to be a lot of changes, I decided to take a different approach.\n\nThe delta between this CL and that CL, is two things:\n* Trying out an injectable timer in repeated_task* - you can ignore this part.\n* Working around the fact that a lot of tests are running on an rtc::Thread based implementation of TaskQueue, very often implicitly.\n\nThe TaskQueueBase::Current() method, is a static method. The IsCurrent() method is also not overridable and is basically an inline helper method in the TaskQueueBase interface that calls Current(). The RTC_DCHECK_RUN_ON() macro then basically calls the IsCurrent() method. But perhaps I\u0027m misunderstanding. Can you clarify what you mean with \"the TaskQueue checker use the SequenceChecker implementation underneath\"?",
      "parentUuid": "57b8a210_08907384",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "68ac2224106734edfa656154d0b7079578ba07d0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da20227c_f1fc9352",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-05-14T08:59:41Z",
      "side": 1,
      "message": "What I mean is that we probably should not have a TaskQueue specific check at all if we want to support combining TaskQueue semantics with rtc::Thread semantics, since this won\u0027t be the only place we\u0027ll run into the problem.",
      "parentUuid": "dfcb2ef3_b9bbdd75",
      "range": {
        "startLine": 51,
        "startChar": 2,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "68ac2224106734edfa656154d0b7079578ba07d0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}