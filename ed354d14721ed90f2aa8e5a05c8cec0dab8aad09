{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "683cb2a9_2232475f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6305
      },
      "writtenOn": "2023-06-13T12:11:49Z",
      "side": 1,
      "message": "Hi Kári,\n\nCould you please take a look?\n\nThanks a lot,\nYury.",
      "revId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ea40b91_7bc525de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6305
      },
      "writtenOn": "2023-06-16T10:49:29Z",
      "side": 1,
      "message": "Hi Kári,\nmay I kindly ask to to have another look at this CL and see my previous comment?\nThanks a lot in advance!",
      "revId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5ff7c78_300e170c",
        "filename": "sdk/objc/api/peerconnection/RTCPeerConnection.mm",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 5520
      },
      "writtenOn": "2023-06-13T15:59:49Z",
      "side": 1,
      "message": "Can we keep this in a std::unique_ptr also within the scope of this function? Makes the lifetime of the object a bit clearer IMO.",
      "range": {
        "startLine": 374,
        "startChar": 4,
        "endLine": 374,
        "endChar": 43
      },
      "revId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48024eb8_c63212dd",
        "filename": "sdk/objc/api/peerconnection/RTCPeerConnection.mm",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 6305
      },
      "writtenOn": "2023-06-14T08:37:09Z",
      "side": 1,
      "message": "[CreatePeerConnectionOrError](https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/pc/peer_connection_factory.h;l\u003d70-73;drc\u003d041ecb87f57ea5a7489de0a936e64756ee23a7ea) accepts `PeerConnectionDependencies` by value, so somewhere `PeerConnectionDependencies` anyway has to be copied from `std::unique_ptr\u003cwebrtc::PeerConnectionDependencies\u003e` argument. So I could mutate the argument by assigning observer and then copy value from unique_ptr, or keep it as is - have a copy of `PeerConnectionDependencies` which is then modified and passed by value into `CreatePeerConnectionOrError`. Let me know if I should change to modifying unique_ptr and then copy. Or maybe the arguments should be changed from `std::unique_ptr\u003cwebrtc::PeerConnectionDependencies\u003e` to `webrtc::PeerConnectionDependencies`?",
      "parentUuid": "a5ff7c78_300e170c",
      "range": {
        "startLine": 374,
        "startChar": 4,
        "endLine": 374,
        "endChar": 43
      },
      "revId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c938149f_2a153a75",
        "filename": "sdk/objc/api/peerconnection/RTCPeerConnection.mm",
        "patchSetId": 1
      },
      "lineNbr": 374,
      "author": {
        "id": 5520
      },
      "writtenOn": "2023-06-16T11:45:34Z",
      "side": 1,
      "message": "I guess the mismatch here is a bit unfortunate, but let\u0027s just keep it as-is for now. Thanks Yury!",
      "parentUuid": "48024eb8_c63212dd",
      "range": {
        "startLine": 374,
        "startChar": 4,
        "endLine": 374,
        "endChar": 43
      },
      "revId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "ed354d14721ed90f2aa8e5a05c8cec0dab8aad09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}