{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ae893ae3_997af57a",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-11-20T10:54:21Z",
      "side": 1,
      "message": "Can your DropFrame() be called here instead?\n\nThe only difference between OnDroppedFrame() and DropFrame() is that the former forwards the event to |sink_| and |stream_resource_manager_| (this one will always be on the EncoderQueue).\n\nDo we probably need to also forward event from the DropFrame()?\n\nBTW, it seems that |sink_-\u003eOnFrameDropped()| does nothing, while |stream_resource_manager_-\u003eOnFrameDropped()| will affect quality adaptation.",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93422430_7bb5da77",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-11-20T11:31:12Z",
      "side": 1,
      "message": "|sink_-\u003eOnFrameDropped()| is implemented by VideoSendStream which has an action happening. Agree it seems to me that this drop should be forwarded to stats collection as well. @hbos@webrtc.org WDYT?",
      "parentUuid": "ae893ae3_997af57a",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a79f80e_3875c8e5",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-11-20T11:47:00Z",
      "side": 1,
      "message": "You are right the |sink_| has an action: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/video_send_stream_impl.cc;l\u003d568;drc\u003d445f8cfdbb63b29ce44f728f6b5015cf18df5534\n\nIt\u0027s used to figure out if the encoder is hanging. Maybe we shouldn\u0027t trigger it each time we drop a frame due to kEncoderQueue.\n\n\nHow about we still merge things, but call the sink_ and stream_resource_manager_ only for |VideoStreamEncoderObserver::DropReason::kMediaOptimization| and |VideoStreamEncoderObserver::DropReason::kEncoder| reasons? Then we can merge the two functions.",
      "parentUuid": "93422430_7bb5da77",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68666e7b_35fb5066",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-20T13:15:00Z",
      "side": 1,
      "message": "Personally, I find it confusing if we handle different frame drops differently.\n\nWould it make more sense to forward all frame drops, and then let the stream_resource_manager_ decide which frame drop reasons to care about or not?\n\nBut on second though, why does the frame drop reason matter? Why aren\u0027t we forwarding all drops?",
      "parentUuid": "4a79f80e_3875c8e5",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62814b28_c2326aa5",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-11-21T08:03:51Z",
      "side": 1,
      "message": "\u003e Personally, I find it confusing if we handle different frame drops differently.\n\nI kind of agree, but this is the state of reality. At least we\u0027re calling the same function everywhere in VSE now.\n\nPTAL on the new PS.",
      "parentUuid": "68666e7b_35fb5066",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71b87e00_9dca40a9",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-21T10:29:41Z",
      "side": 1,
      "message": "I buy the \"this is the state of reality\" argument and won\u0027t block on this, but out of curiosity, do we know WHY we don\u0027t report all frame drops equally? (Wondering if this is a bug or feature, but I guess there must be a reason for it?)",
      "parentUuid": "62814b28_c2326aa5",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35dd8207_327923b7",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 1842,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-11-21T15:02:39Z",
      "side": 1,
      "message": "Several people over the last ten years have been involved in this file. I fear the answer is simply because they lead to different logic, plastered on over time. At this point I feel it\u0027s not worth taking a regression in something because we don\u0027t understand or miss some aspect while refactoring. However, the previously duplicated frame drop pattern in this file bugged me for the 100th time which is why I wrote this CL.",
      "parentUuid": "71b87e00_9dca40a9",
      "range": {
        "startLine": 1840,
        "startChar": 3,
        "endLine": 1842,
        "endChar": 38
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "828e3110_8b46f6eb",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 2579,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-11-20T10:54:21Z",
      "side": 1,
      "message": "nit: OnFrameDroppedInternally seems like a better name. It sounds like it actually does something to drop frame, but it instead it reacts to the event.\n\nSince it clashes with OnDroppedFrame, we need to distinguish it as something originated in VSE vs. something happening before in the pipeline.",
      "range": {
        "startLine": 2579,
        "startChar": 25,
        "endLine": 2579,
        "endChar": 34
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "57a627da_1cd73bc0",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 2579,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-11-20T11:31:12Z",
      "side": 1,
      "message": "Makes sense, renamed to ProcessDroppedFrame.",
      "parentUuid": "828e3110_8b46f6eb",
      "range": {
        "startLine": 2579,
        "startChar": 25,
        "endLine": 2579,
        "endChar": 34
      },
      "revId": "abdf43708fc481f36836018bb13cd527c71c62b2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}