{
  "comments": [
    {
      "key": {
        "uuid": "8aebd2d9_f5c444e0",
        "filename": "media/base/delayable.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "nit: I think these would fit best right above the `class Delayable`",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91d7da70_434b0ef6",
        "filename": "media/base/delayable.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8aebd2d9_f5c444e0",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf4ce8c1_0a0635d7",
        "filename": "media/engine/fake_webrtc_call.cc",
        "patchSetId": 6
      },
      "lineNbr": 413,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "nit: GetVideoReceiveStreamByRemoteSsrc\n\nsince I would usually expect the ssrc to be the local ssrc",
      "range": {
        "startLine": 413,
        "startChar": 40,
        "endLine": 413,
        "endChar": 61
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fb83d10_eeafa91a",
        "filename": "media/engine/fake_webrtc_call.cc",
        "patchSetId": 6
      },
      "lineNbr": 413,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "I don\u0027t mind it but I cloned this method from the GetAudioReceiveStream. If we change this one, we need to change other one for consistency.\n\nAnd can you please explain the difference:\nhttps://cs.corp.google.com/piper///depot/google3/third_party/webrtc/files/stable/webrtc/call/video_receive_stream.h?rcl\u003d234527948\u0026g\u003d0\u0026l\u003d147\n\nHere local ssrc is the ssrc of sending stream, right?\nWhile remote ssrc is the ssrc of receiving stream, isn\u0027t it?",
      "parentUuid": "bf4ce8c1_0a0635d7",
      "range": {
        "startLine": 413,
        "startChar": 40,
        "endLine": 413,
        "endChar": 61
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f65caed_20febe2f",
        "filename": "media/engine/fake_webrtc_call.h",
        "patchSetId": 6
      },
      "lineNbr": 240,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "Move the methods above the fields",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a5f5a71_5f870b66",
        "filename": "media/engine/fake_webrtc_call.h",
        "patchSetId": 6
      },
      "lineNbr": 240,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "0f65caed_20febe2f",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "06deed6c_6845c8e2",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1502,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "Are CriticalSections not re-entrant?",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "951fc00c_da1080f1",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1502,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "stream_crit_",
      "range": {
        "startLine": 1502,
        "startChar": 56,
        "endLine": 1502,
        "endChar": 68
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5070cad0_ba0d860b",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1502,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "My bad, the reset of code is actually written in the way so it doesn\u0027t lock twice on single thread, critical_section_unittest doesn\u0027t test that behavior, and I am not that familiar with pthreads, so I thought pthread_mutex_t is non-recursive.\nIn reality it depends on how you initialize it or compile it.\nI have compiled it so it locks its twice on the same thread and it works, so you are right - it is re-entrant.\nI removed the comment, however can I please leave it on the same place for my own calm? I have tested it only on Linux and for other platforms the locking is very different. Plus the missing recursive test case in critical_section_unittest looks a bit suspicious.",
      "parentUuid": "06deed6c_6845c8e2",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd50aa11_8a7e4258",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1502,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "951fc00c_da1080f1",
      "range": {
        "startLine": 1502,
        "startChar": 56,
        "endLine": 1502,
        "endChar": 68
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e6299ef_002624b4",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1510,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "noop?",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e2afd4c_34456592",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 6
      },
      "lineNbr": 1510,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "Oh, it is actually my mistake. receive_streams_ can\u0027t contain 0 as their key, and if default_ssrc is present I don\u0027t update its value and actually just returning instead. I will fix it.",
      "parentUuid": "9e6299ef_002624b4",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "994eecc9_da7ba394",
        "filename": "pc/playout_latency.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "Mention that this is expected to be used with the PlayoutLatencyProxy",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef11064b_0b17b715",
        "filename": "pc/playout_latency.h",
        "patchSetId": 6
      },
      "lineNbr": 38,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "signaling_thread_",
      "range": {
        "startLine": 38,
        "startChar": 21,
        "endLine": 38,
        "endChar": 33
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06ce901b_cf17bf63",
        "filename": "pc/playout_latency_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "Please document these interface methods",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4e3212f_6b4545e0",
        "filename": "pc/remote_audio_source.cc",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-20T15:23:05Z",
      "side": 1,
      "message": "Here, can we remove excessive testing of the caching behavior from the RemoteAudioSource in the rtp_sender_receiver_unittest.cc as this logic is now tested in playout_latency_unittest.cc?",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c97b4ef0_2a3f51bb",
        "filename": "pc/remote_audio_source.cc",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "sg",
      "parentUuid": "c4e3212f_6b4545e0",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e16e5716_ae1c08e3",
        "filename": "pc/remote_audio_source.cc",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "can we rename this to signaling_thread_?",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 18
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0c32b02_df1347d4",
        "filename": "pc/test/mock_delayable.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "I think the mock should be alongside Delayable in media/",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fad6fb94_d6dd18a5",
        "filename": "pc/test/mock_delayable.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "Can it remain here, as it this mock only is used for tests in pc? It is also logical from BUILD file structure point of view.",
      "parentUuid": "f0c32b02_df1347d4",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5761796_9bd0a2fb",
        "filename": "pc/video_rtp_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "extra",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c15874ba_dd1e5837",
        "filename": "pc/video_rtp_receiver.h",
        "patchSetId": 6
      },
      "lineNbr": 147,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "signaling_thread_",
      "range": {
        "startLine": 147,
        "startChar": 21,
        "endLine": 147,
        "endChar": 33
      },
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4a01684_258fd975",
        "filename": "pc/video_rtp_receiver.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-21T06:46:20Z",
      "side": 1,
      "message": "I don\u0027t think we need a lock since all accesses happen on the same thread.",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dee74063_c560ed53",
        "filename": "pc/video_rtp_receiver.h",
        "patchSetId": 6
      },
      "lineNbr": 148,
      "author": {
        "id": 8286
      },
      "writtenOn": "2019-02-21T15:06:25Z",
      "side": 1,
      "message": "Yes, sorry, it is just remnant from the time when I was trying to figure out how threading is organized.",
      "parentUuid": "a4a01684_258fd975",
      "revId": "1e70dd5261d789c660aa1779967a1c919da80e55",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}