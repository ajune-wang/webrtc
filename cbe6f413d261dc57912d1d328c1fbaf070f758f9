{
  "comments": [
    {
      "key": {
        "uuid": "2b5730ab_7fd85fe3",
        "filename": "pc/peer_connection.h",
        "patchSetId": 1
      },
      "lineNbr": 1230,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-04-01T09:10:40Z",
      "side": 1,
      "message": "I opted for a mutex rather than an atomic\u003cbool\u003e, since atomics are harder to use correctly.",
      "revId": "cbe6f413d261dc57912d1d328c1fbaf070f758f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69715e66_06fa9afd",
        "filename": "pc/peer_connection.h",
        "patchSetId": 1
      },
      "lineNbr": 1230,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-04-01T16:59:41Z",
      "side": 1,
      "message": "The only access on the network thread is in DestroySctpTransprot_n which has only one call site DestroyDataChannel, which is called from the signaling thread. I think we can satisfy the compiler and remove the lock by moving the `sctp_ready_to_send_data_ \u003d false` to DestroyDataChannel.",
      "parentUuid": "2b5730ab_7fd85fe3",
      "revId": "cbe6f413d261dc57912d1d328c1fbaf070f758f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49678f21_13b5c0f0",
        "filename": "pc/peer_connection.h",
        "patchSetId": 1
      },
      "lineNbr": 1230,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-04-02T11:34:21Z",
      "side": 1,
      "message": "Aha---that appears to work beautifully. Thanks!",
      "parentUuid": "69715e66_06fa9afd",
      "revId": "cbe6f413d261dc57912d1d328c1fbaf070f758f9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}