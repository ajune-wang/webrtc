{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ca2183be_e7a8df9c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12215
      },
      "writtenOn": "2023-12-12T12:10:46Z",
      "side": 1,
      "message": "Looks good - thanks! I\u0027ll let the question from Florent be answered before submitting this one.",
      "revId": "c3653877bd7b32f73a83196eebbe84d2e55e9329",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad847ae_2bd015b0",
        "filename": "net/dcsctp/socket/callback_deferrer.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 7036
      },
      "writtenOn": "2023-12-12T10:22:02Z",
      "side": 1,
      "message": "Have you tried measuring the overhead from an absl::AnyInvocable there instead?",
      "revId": "c3653877bd7b32f73a83196eebbe84d2e55e9329",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "896ffc81_e174aa10",
        "filename": "net/dcsctp/socket/callback_deferrer.h",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 22664
      },
      "writtenOn": "2023-12-12T13:12:54Z",
      "side": 1,
      "message": "It would be greater than this approach (which calls into a type-erased function pointer and unambiguously accesses data via std::get), and would not resolve the double allocation issue which is where most of the overhead is (not in copyability)",
      "parentUuid": "5ad847ae_2bd015b0",
      "revId": "c3653877bd7b32f73a83196eebbe84d2e55e9329",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c3653877bd7b32f73a83196eebbe84d2e55e9329",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "c3653877bd7b32f73a83196eebbe84d2e55e9329",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}