{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d22e77b5_8aaaf24d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-17T06:36:33Z",
      "side": 1,
      "message": "If all our theories are right, this should be safe to roll out as default-on.\nLet\u0027s try it.",
      "revId": "8e26c7ffb3f892aa60e235f4f1df651a891d9220",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9ec35b6_5a99d8a4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-09-18T15:56:33Z",
      "side": 1,
      "message": "davidben@: since I need a second +1 and you know most about this stuff...\n\nAnd I have a question:\nFor DTLS 1.3 it looks like we will need to use SSL_CTX_set_num_tickets(0) to disable tickets:https://docs.openssl.org/1.1.1/man3/SSL_CTX_set_options/#notes\nBut that can be done after rolling this one out.",
      "revId": "8e26c7ffb3f892aa60e235f4f1df651a891d9220",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a68681b_86da1c9d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5602
      },
      "writtenOn": "2024-09-18T16:25:11Z",
      "side": 1,
      "message": "DTLS 1.3 doesn\u0027t exist in either OpenSSL or BoringSSL yet (though we\u0027re working on it). But no, you shouldn\u0027t need to call `SSL_CTX_set_num_tickets` for DTLS 1.3. BoringSSL servers already will not send tickets if you `SSL_OP_NO_TICKET`. Possibly we should also have the client not send `psk_key_exchange_mode` so the server won\u0027t send one, but `SSL_CTX_set_num_tickets` won\u0027t help with that anyway. *shrug*",
      "parentUuid": "f9ec35b6_5a99d8a4",
      "revId": "8e26c7ffb3f892aa60e235f4f1df651a891d9220",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfe47c59_6c9e95be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-09-18T16:41:11Z",
      "side": 1,
      "message": "No future TODO then, thank you!",
      "parentUuid": "0a68681b_86da1c9d",
      "revId": "8e26c7ffb3f892aa60e235f4f1df651a891d9220",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a webrtc committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-webrtc-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-webrtc-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-webrtc-committers","label:Code-Review=MAX,count>=2"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "8e26c7ffb3f892aa60e235f4f1df651a891d9220",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "8e26c7ffb3f892aa60e235f4f1df651a891d9220",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}