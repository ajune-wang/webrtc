{
  "comments": [
    {
      "key": {
        "uuid": "f7aaba6a_1677ea39",
        "filename": "api/test/video_quality_test_fixture.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-23T09:02:06Z",
      "side": 1,
      "message": "Maybe replace the second sentence with \"Must be nullopt if `sender_network` and `receiver_network` are non-null.\"\n\nThird sentence: \"May be nullopt even if `sender_network` and `receiver_network` are null; in that case, a default config will be used.\" Or did I misunderstand?",
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77e17334_dee0f134",
        "filename": "api/test/video_quality_test_fixture.h",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-08-23T11:09:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7aaba6a_1677ea39",
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e188f9e8_b0f4a39e",
        "filename": "api/test/video_quality_test_fixture.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-23T09:02:06Z",
      "side": 1,
      "message": "Suggested shared comment for both line 92 and 95: \"Simulations of sender and receiver networks. They must either both be null (in which case `config` is used), or both be non-null (in which case `config` must be nullopt).\"",
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ffbf306_ea97b0ce",
        "filename": "api/test/video_quality_test_fixture.h",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-08-23T11:09:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e188f9e8_b0f4a39e",
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c33aedfc_568adec0",
        "filename": "video/video_quality_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-08-23T09:05:04Z",
      "side": 1,
      "message": "This seems questionable. The underlying code will rightly assume that it has ownership of the underlying implementation (meaning that it safely can assume that is not destroyed and that it can destroy the underlying object at any time), but this will be a false assumption.\n\nI think it\u0027s better to reconsider if the interfaces are correct. There are some options that we could consider.\n\nMaybe the interface should not transfer ownership and we should instead provide a raw pointer to the underlying layers? That way ownership is moved to where it seems to belong. This is more or less equivalent to the wrapper solution, but makes it more apparent and removes one level of indirection (making it easier to debug and understand).\n\nIf we want to support both having ownership only in FakeNetworkPipe and having it outside we can use a shared pointer (I\u0027d prefer the std version, but others might argue for the rtc version).",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 76,
        "endChar": 31
      },
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a17ab7e3_bb871696",
        "filename": "video/video_quality_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-08-23T11:09:19Z",
      "side": 1,
      "message": "As I understand shared pointers currently forbidden by style guide and using scoped pointer requires additional actions from implementor. \n\nAs I understand FakeNetworkPipe is used not only in video quality test pipeline, but also in other parts, so it is why I was aware of changing ownership there and wanted to keep it as before if possible. \n\nAssumption, that object will be alive during pipeline execution because of ownership holding is not absolutely wrong, because fake pipeline usually created on per test basis and it is test writer responsibility to keep configuration and implementation objects alive, during test run, otherwise it will look weird, that test writer want to run test, but want to destroy simulation, that is part of test. So underlying layers can still believe that object will be alive during whole life cycle.",
      "parentUuid": "c33aedfc_568adec0",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 76,
        "endChar": 31
      },
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b0413e3_00a18ad7",
        "filename": "video/video_quality_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-23T09:02:06Z",
      "side": 1,
      "message": "This class can be final, right?",
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d65668d0_090dbfac",
        "filename": "video/video_quality_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-08-23T09:02:06Z",
      "side": 1,
      "message": "This formatting looks off. Did you run `git cl format`?",
      "range": {
        "startLine": 84,
        "startChar": 55,
        "endLine": 84,
        "endChar": 65
      },
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b7c3f24_60a7ae17",
        "filename": "video/video_quality_test.cc",
        "patchSetId": 2
      },
      "lineNbr": 84,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-08-23T11:09:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d65668d0_090dbfac",
      "range": {
        "startLine": 84,
        "startChar": 55,
        "endLine": 84,
        "endChar": 65
      },
      "revId": "149232776e9ac5c8ddab5fe7f2f37ed7759b24a4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}