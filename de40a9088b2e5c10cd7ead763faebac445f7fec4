{
  "comments": [
    {
      "key": {
        "uuid": "c4a98c79_e900467d",
        "filename": "BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 280,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "Would it be possible to define this as for the rtc_enable_protobuf, i.e. as either 0 or 1.\n\nAlso, would it make sense to enforce it to be defined, so that transient suppressor throws a build error if it is not?",
      "range": {
        "startLine": 280,
        "startChar": 18,
        "endLine": 280,
        "endChar": 56
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56ba84d0_2bb47697",
        "filename": "BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 280,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T09:59:37Z",
      "side": 1,
      "message": "\u003e Also, would it make sense to enforce it to be defined, so that transient suppressor throws a build error if it is not?\n\nIf we can rely on -Wundef -Werror being used, then yes. See https://webrtc.googlesource.com/src/+/master/style-guide.md#conditional-compilation-with-the-c-preprocessor\n\nIf we can not rely on -Wundef -Werror being used, then the current way is likely safer.",
      "parentUuid": "c4a98c79_e900467d",
      "range": {
        "startLine": 280,
        "startChar": 18,
        "endLine": 280,
        "endChar": 56
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "472e951f_fe5623e6",
        "filename": "BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 280,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-04-01T11:33:00Z",
      "side": 1,
      "message": "(Discussed in another comment.)",
      "parentUuid": "56ba84d0_2bb47697",
      "range": {
        "startLine": 280,
        "startChar": 18,
        "endLine": 280,
        "endChar": 56
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "226f6ffa_705a3f94",
        "filename": "modules/audio_processing/transient/transient_suppressor.h",
        "patchSetId": 6
      },
      "lineNbr": 2,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T09:59:37Z",
      "side": 1,
      "message": "IIRC we don\u0027t usually update these.",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edc50397_1b503894",
        "filename": "modules/audio_processing/transient/transient_suppressor.h",
        "patchSetId": 6
      },
      "lineNbr": 2,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T12:03:46Z",
      "side": 1,
      "message": "It\u0027s an unfortunate consequence of me and git messing up the diff.\nThe files transient_suppressor.* were renamed to transient_suppressor_impl.*, and the suppressor interface was added as transient_suppressor.h. This is a new file, or rather, it is forked from transient_suppressor.h but happens to share the name...",
      "parentUuid": "226f6ffa_705a3f94",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1dac8782_61c55391",
        "filename": "modules/audio_processing/transient/transient_suppressor.h",
        "patchSetId": 6
      },
      "lineNbr": 2,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-04-01T11:33:00Z",
      "side": 1,
      "message": "I will leave this as-is. I can\u0027t find an approach that updates the files correctly, short of making a brand new CL.",
      "parentUuid": "edc50397_1b503894",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dcb7712d_7191ca6d",
        "filename": "modules/audio_processing/transient/transient_suppressor.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "What is the main purpose of making this an interface?\nIt is possible to make the transient suppression optionally excludable without that approach.\n\nMy concerns with this approach are that this adds overhead: \n-in terms of CPU since all function calls now needs a v-table lookup.\n-in terms of code complexity since\n--There is much more boilerplate code to add the interface, implement the interface, and implement the factory.\n--There are a fair amount of more files to handle this.\n\n\nSince the intention is for this to scale for more submodules, I\u0027d suggest instead:\n1. Keep the TransientDetector class as it is.\n2. Add a ApmSubmoduleCreate file where a CreateTransientDetector Method is placed.\n3. Use the build flag inside the ApmSubmoduleCreate file to optionally return a null pointer for the TransientSuppressor.\n\nThe advantages I see with the above suggestion are that\nA) When adding more build flags, all of those can be put into one single file, instead of being spread out in several different files in different places beneath the audio_processing folder.\nB) There is no need for v-table lookups.\nC) It requires less amount of code, fewer files and a minimum of changes to the submodules that are effected.\n\nWDYT?",
      "range": {
        "startLine": 22,
        "startChar": 6,
        "endLine": 22,
        "endChar": 25
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a760655b_a16c6123",
        "filename": "modules/audio_processing/transient/transient_suppressor.h",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-31T09:33:51Z",
      "side": 1,
      "message": "From the offline discussion I\u0027m now convinced that the approach taken in the CL using an interface is the correct one.\nSo the comment above can be disregarded.",
      "parentUuid": "dcb7712d_7191ca6d",
      "range": {
        "startLine": 22,
        "startChar": 6,
        "endLine": 22,
        "endChar": 25
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fa2a133_27d30c0e",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-31T12:41:07Z",
      "side": 1,
      "message": "kwiberg@: Could you please chip in on your opinion on whether this is a factory or should be called something different.",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cb97f4a_03627676",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T13:20:22Z",
      "side": 1,
      "message": "In my experience, a FooFactory is an object that can create objects of type Foo. What we have here is just a create function, not an object.\n\nIf \"transient_suppressor.h/.cc\" are free, I would choose that name for this file. If that name is already taken (e.g. by the interface definition), I would choose \"transient_suppressor_impl.h/.cc\". (In this CL, that name is also taken, by the declaration + definition of TransientSuppressorImpl. I would move all of that to transient_suppressor_impl.cc, and expose just the create function in transient_suppressor_impl.h.)",
      "parentUuid": "9fa2a133_27d30c0e",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c3884d6_653f45a2",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": "I reasoned that TransientSuppressor::Create() is a factory method ( / member function), and taking it out of the class namespace doesn\u0027t change its job in any way.\n\nI am trying not to change the transient suppressor implementation itself.\nTransientSuppressorImplTest is a friend of TransientSuppressorImpl, some testing is based on accessing those methods. In order to move TransientSuppressorImpl to the .cc file, either the transient suppressor itself would need to be refactored to extract the functionality as a testable subcomponent, or the functions under test would need to be lifted to TransientSuppressor::FooForTesting().\n\nI have renamed it to `transient_suppressor_create_function.h`. PTAL",
      "parentUuid": "3cb97f4a_03627676",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb0f6a75_b7f06cfc",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-31T14:40:03Z",
      "side": 1,
      "message": "\"_function\" is quite redundant and the name is already fairly long so it could make sense to avoid that.\n\nWhat about \ntransient_suppressor_creator.h\n?",
      "parentUuid": "8c3884d6_653f45a2",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4c33712_ee185acb",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T14:54:39Z",
      "side": 1,
      "message": "OK, exposing the class makes sense then---especially since you\u0027ve made the build target suitably private.\n\n+1 for transient_suppressor_creator.h/.cc. Or _create. Adding _function makes a long name longer without making it better.",
      "parentUuid": "bb0f6a75_b7f06cfc",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b6d826e_fa99abb6",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 13,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-04-01T11:33:00Z",
      "side": 1,
      "message": "Changed to \"transient_suppressor_creator.\"",
      "parentUuid": "a4c33712_ee185acb",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d06b126_decaacf3",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "I think this check needs to be\n#if defined(WEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR) \u0026\u0026 WEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR\u003d\u003d1\n\nA quite easy error would be to assume that this build flag is a bool but WEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR\u003d\u003d0 will deactivate the building.",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 48
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d7d9a80_480ddbc1",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5087
      },
      "writtenOn": "2020-03-31T09:40:18Z",
      "side": 1,
      "message": "Yes, this is another thing we need to discuss.\n\nIn general I prefer to use the \u003d1/\u003d0 pattern and rely on -Wundef (in that case you don\u0027t need to have the `defined(WEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR)` part. That said, with multiple build systems in the mix, I think #ifdef is more flexible (and never check the value of the macro) because if a default build config is WEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR\u003d0, to override we will have to undef the macro and redefine it, while if we only check if it is defined we can completely sidestep every build system with -DWEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR or -UWEBRTC_EXCLUDE_TRANSIENT_SUPPRESSOR.\n\nI think this should also be done on the APM CL.\n\n+kwiberg@ for a second opinion.",
      "parentUuid": "7d06b126_decaacf3",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 48
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc041f07_e7c92d24",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T09:59:37Z",
      "side": 1,
      "message": "If we can rely on -Wundef -Werror, doing just\n\n  #if FOO \u003d\u003d 1\n\nis probably best, since it forces the caller to define FOO to *something* or else get an error.\n\nIf we can\u0027t rely on that,\n\n  #ifdef FOO\n\nis probably best, since that will make it impossible for the user to confuse themself by setting FOO but to the wrong value.",
      "parentUuid": "2d7d9a80_480ddbc1",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 48
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd522740_0a445d1a",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T12:03:46Z",
      "side": 1,
      "message": "Could one argue that\n\n  #ifdef FOO\n\nis equally open for the user to confuse, by setting FOO \u003d 0 and expecting this to disable the macro?\n\nAdditionally, would we avoid relying on -Wundef -Werror, if we explicitly add a check ourselves, like here?\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/audio_processing/logging/apm_data_dumper.h?l\u003d31-35\u0026rcl\u003dfa068336f9e04dacb80eee6f19a77e60a5f32398",
      "parentUuid": "bc041f07_e7c92d24",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 48
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "903c2b47_d1cf9b6c",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 20,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": "I will use #ifdef, to minimize burden on users.",
      "parentUuid": "dd522740_0a445d1a",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 48
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0f867e0_dcc8175e",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "I think this should be placed together with the rest of the TransientSuppressor code.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 25,
        "endChar": 1
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9a282ed_5aa6b2da",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-31T09:33:51Z",
      "side": 1,
      "message": "From the offline discussion I\u0027m now convinced that the approach taken in the CL regarding the placement of this is the correct one.\nSo the comment above can be disregarded.",
      "parentUuid": "e0f867e0_dcc8175e",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 25,
        "endChar": 1
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2e71590_a8b07a65",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.cc",
        "patchSetId": 6
      },
      "lineNbr": 25,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": ".",
      "parentUuid": "c9a282ed_5aa6b2da",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 25,
        "endChar": 1
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "557f18f9_5dfa4027",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "I don\u0027t think this really is a factory. And I don\u0027t think that this needs to be in a separate file. It is sufficient to use a simple create method for this,\n\nI understand the idea with this approach but I think it becomes more complex than needed when making this a factory. Also, with the current approach taken an interface needs to be used (and I don\u0027t think that is necessary).",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 74
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ab6cf36_2cfcb78e",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-31T09:33:51Z",
      "side": 1,
      "message": "From the offline discussion I\u0027m now convinced that using a factory for this is a fully valid approach.\nSo the comment above can be disregarded.",
      "parentUuid": "557f18f9_5dfa4027",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 74
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0373a49b_a9bce66c",
        "filename": "modules/audio_processing/transient/transient_suppressor_factory.h",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": ".",
      "parentUuid": "4ab6cf36_2cfcb78e",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 12,
        "endChar": 74
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0292fcbb_c76982f2",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "Is this a copy from the former transient_suppressor.cc or has something been changed?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 23
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "608f8681_a2efafc6",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 49,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": "Copy. I don\u0027t know how to make Gerrit reflect this, short of compromising on file naming for the benefit of git history.",
      "parentUuid": "0292fcbb_c76982f2",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 23
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39ae77cc_5224f7aa",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T09:59:37Z",
      "side": 1,
      "message": "Consider moving this class to the .cc file and just exposing a create function in the .h file.",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e3471b5_b66849d2",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 28,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-04-01T11:33:00Z",
      "side": 1,
      "message": "(Discussed in another comment: leaving it as is due to the befriended unit test.)",
      "parentUuid": "39ae77cc_5224f7aa",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1841b112_c18a2499",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T16:01:22Z",
      "side": 1,
      "message": "Is this a copy from the former transient_suppressor.h or has something been changed?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 30,
        "endChar": 28
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec577bda_8a689db6",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T12:03:46Z",
      "side": 1,
      "message": "A copy, with minimal changes (to implement TransientSuppressor). I / Git / diff messed up the diff.",
      "parentUuid": "1841b112_c18a2499",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 30,
        "endChar": 28
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f650e48b_e364ae14",
        "filename": "modules/audio_processing/transient/transient_suppressor_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": ".",
      "parentUuid": "ec577bda_8a689db6",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 30,
        "endChar": 28
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "959c8de7_2f722403",
        "filename": "native-api.md",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T09:59:37Z",
      "side": 1,
      "message": "remove",
      "range": {
        "startLine": 112,
        "startChar": 53,
        "endLine": 112,
        "endChar": 54
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6915c161_1240389e",
        "filename": "native-api.md",
        "patchSetId": 6
      },
      "lineNbr": 112,
      "author": {
        "id": 5119
      },
      "writtenOn": "2020-03-31T14:17:43Z",
      "side": 1,
      "message": "Done!",
      "parentUuid": "959c8de7_2f722403",
      "range": {
        "startLine": 112,
        "startChar": 53,
        "endLine": 112,
        "endChar": 54
      },
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dc44709_d8173fe4",
        "filename": "native-api.md",
        "patchSetId": 6
      },
      "lineNbr": 116,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-31T09:59:37Z",
      "side": 1,
      "message": "This SGTM, and it\u0027s the same as we do in other cases.",
      "revId": "de40a9088b2e5c10cd7ead763faebac445f7fec4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}