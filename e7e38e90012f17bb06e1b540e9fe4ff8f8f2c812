{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3c9edb79_16ac48c6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-11-09T18:42:13Z",
      "side": 1,
      "message": "NIT: Desktop_Capture\n\nAlso fine would be just [DesktopCapture] instead of \u0027modules/desktop_capture\u0027",
      "range": {
        "startLine": 7,
        "startChar": 8,
        "endLine": 7,
        "endChar": 21
      },
      "revId": "e7e38e90012f17bb06e1b540e9fe4ff8f8f2c812",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9a8c1b9_db30f76a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-11-09T18:42:13Z",
      "side": 1,
      "message": "NIT: Finish the statement with constraint and then put a colon and this on the following line to keep the relevant data to 80 chars, e.g.\n\n```\nThis is a change needed to implement the \u0027never\u0027 cursor constriant:\n\u003curl\u003e\n```",
      "range": {
        "startLine": 9,
        "startChar": 54,
        "endLine": 9,
        "endChar": 130
      },
      "revId": "e7e38e90012f17bb06e1b540e9fe4ff8f8f2c812",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d4ab023_999f40d7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-11-09T18:42:13Z",
      "side": 1,
      "message": "WebRTC Presubmits require a bug to have been filed, either:\n\nBug: webrtc:XXXX\nor\nBug: chromium:XXX\n\n(\u0027Fixed\u0027 is an acceptable prefix substitute for \u0027Bug\u0027 which will automatically mark the corresponding bug as \u0027Fixed\u0027 once the patch lands).",
      "revId": "e7e38e90012f17bb06e1b540e9fe4ff8f8f2c812",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1718ff14_88cc4ac5",
        "filename": "modules/desktop_capture/desktop_and_cursor_composer.cc",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-11-09T18:42:13Z",
      "side": 1,
      "message": "It doesn\u0027t actually look like anything in WebRTC code creates this DesktopAndCursorComposer, unless I\u0027m missing something. So the higher level actually has the choice to create it or not; and thus I don\u0027t think we should add this bool here, as it would only add extra overhead to create this object and then have it not really do anything.",
      "revId": "e7e38e90012f17bb06e1b540e9fe4ff8f8f2c812",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd3f8e82_9dd2d439",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 1
      },
      "lineNbr": 169,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-11-09T18:42:13Z",
      "side": 1,
      "message": "This isn\u0027t really the pattern that we follow to configure Desktop Capturers; instead, we prefer to add items to DesktopCaptureOptions and let the capturers reference those instead.",
      "range": {
        "startLine": 166,
        "startChar": 0,
        "endLine": 169,
        "endChar": 0
      },
      "revId": "e7e38e90012f17bb06e1b540e9fe4ff8f8f2c812",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3cd6f22_917eab54",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-11-09T18:42:13Z",
      "side": 1,
      "message": "If the system has the capability to capture the cursor, I think we should prefer that; as it\u0027s likely to be more efficient than anything that we do. I think this instead should check the DesktopCaptureOptions (which will likely need to be plumbed in to the screen capturer from WgcCapturerWin::CreateRaw*Capturer and then down to this from there).",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 197,
        "endChar": 3
      },
      "revId": "e7e38e90012f17bb06e1b540e9fe4ff8f8f2c812",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}