# Copyright (c) 2022 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

import("../../../webrtc.gni")

if (!build_with_chromium) {
  group("metrics") {
    testonly = true
    deps = [
      ":metric",
      ":metrics_exporter",
      ":metrics_logger_and_exporter",
      ":stdout_metrics_exporter",
    ]
    if (rtc_enable_protobuf) {
      deps += [ ":chrome_perf_dashboard_metrics_exporter" ]
    }
  }

  if (rtc_include_tests) {
    group("metrics_unittests") {
      testonly = true

      deps = [
        ":metrics_logger_and_exporter_test",
        ":stdout_metrics_exporter_test",
      ]
      if (rtc_enable_protobuf) {
        deps += [ ":chrome_perf_dashboard_metrics_exporter_test" ]
      }
    }
  }
}

rtc_library("metric") {
  visibility = [ "*" ]
  sources = [
    "metric.cc",
    "metric.h",
  ]
  absl_deps = [ "//third_party/abseil-cpp/absl/types:optional" ]
  deps = [ "../../../api/units:timestamp" ]
}

rtc_library("metrics_exporter") {
  visibility = [ "*" ]
  sources = [ "metrics_exporter.h" ]
  deps = [
    ":metric",
    "../../../api:array_view",
  ]
}

rtc_library("stdout_metrics_exporter") {
  visibility = [ "*" ]
  sources = [
    "stdout_metrics_exporter.cc",
    "stdout_metrics_exporter.h",
  ]
  deps = [
    ":metric",
    ":metrics_exporter",
    "../../../api:array_view",
  ]
  absl_deps = [ "//third_party/abseil-cpp/absl/types:optional" ]
}

if (rtc_enable_protobuf) {
  rtc_library("chrome_perf_dashboard_metrics_exporter") {
    visibility = [ "*" ]
    testonly = true
    sources = [
      "chrome_perf_dashboard_metrics_exporter.cc",
      "chrome_perf_dashboard_metrics_exporter.h",
    ]
    deps = [
      ":metric",
      ":metrics_exporter",
      "../..:fileutils",
      "../..:perf_test",
      "../../../api:array_view",
    ]
    absl_deps = [
      "//third_party/abseil-cpp/absl/memory",
      "//third_party/abseil-cpp/absl/strings",
    ]
  }
}

rtc_library("metrics_logger_and_exporter") {
  visibility = [ "*" ]
  sources = [
    "metrics_logger_and_exporter.cc",
    "metrics_logger_and_exporter.h",
  ]
  deps = [
    ":metric",
    ":metrics_exporter",
    "../../../api/numerics",
    "../../../rtc_base/synchronization:mutex",
    "../../../system_wrappers",
  ]
  absl_deps = [
    "//third_party/abseil-cpp/absl/strings",
    "//third_party/abseil-cpp/absl/types:optional",
  ]
}

if (rtc_include_tests) {
  rtc_library("stdout_metrics_exporter_test") {
    testonly = true
    sources = [ "stdout_metrics_exporter_test.cc" ]
    deps = [
      ":metric",
      ":stdout_metrics_exporter",
      "../..:test_support",
      "../../../api/units:timestamp",
    ]
  }

  if (rtc_enable_protobuf) {
    rtc_library("chrome_perf_dashboard_metrics_exporter_test") {
      testonly = true
      sources = [ "chrome_perf_dashboard_metrics_exporter_test.cc" ]
      deps = [
        ":chrome_perf_dashboard_metrics_exporter",
        ":metric",
        "../..:fileutils",
        "../..:test_support",
        "../../../api/units:timestamp",
        "//third_party/catapult/tracing/tracing:histogram",
      ]
    }
  }

  rtc_library("metrics_logger_and_exporter_test") {
    testonly = true
    sources = [ "metrics_logger_and_exporter_test.cc" ]
    deps = [
      ":metric",
      ":metrics_exporter",
      ":metrics_logger_and_exporter",
      "../..:test_support",
      "../../../api/numerics",
      "../../../system_wrappers",
    ]
    absl_deps = [ "//third_party/abseil-cpp/absl/types:optional" ]
  }
}
