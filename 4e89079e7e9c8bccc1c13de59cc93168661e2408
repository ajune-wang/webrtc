{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2cf9c5a7_e250ff3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 17619
      },
      "writtenOn": "2021-05-27T15:14:09Z",
      "side": 1,
      "message": "I have tended to latest comments.\nPlease take a look.",
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f34a51a_feb3d186",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-31T09:23:11Z",
      "side": 1,
      "message": "Code-wise, I think this is ready to land. Firing off a test queue to look at the size impact.\n",
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9292273e_9e1d481c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-31T09:39:46Z",
      "side": 1,
      "message": "I\u0027m not convinced that this is a great interface for injecting a transport with custom behavior, but if it\u0027s good enough for Harald, it\u0027s good enough for me.\n\nOne question on const ref vs value for the config argument.",
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7df1a71_8f4f7f11",
        "filename": "call/call_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 94,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-31T09:23:11Z",
      "side": 1,
      "message": "This block of config moves is repeated twice. Can you move it to a helper function on RtpTransportConfig (either a constructor that takes Call::Config as argument or a static Create function that takes Call::Config as argument)?",
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1199f31_64498696",
        "filename": "call/call_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 94,
      "author": {
        "id": 17619
      },
      "writtenOn": "2021-05-31T09:51:39Z",
      "side": 1,
      "message": "Problem I will face is that call_interfaces module depends on rtp_interfaces module. If I add that static method or constructor in RtpTransportConfig I\u0027ll haveto add dependency for rtp_interfaces and I\u0027ll end up in circular dependencies with gn. I can add a function in CallConfig but that doesn\u0027t seem right. Any suggestion?",
      "parentUuid": "a7df1a71_8f4f7f11",
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c37970cf_fa4d2851",
        "filename": "call/call_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 94,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-31T10:01:15Z",
      "side": 1,
      "message": "You could split out call_config.h to it\u0027s own build target, but I\u0027m not sure that\u0027s a good idea. \n\nPutting the helper in CallConfig might make sense, if we think about that class as primarily tied to the factory interfaces, rather than the Call implementation. If we had a different set of settings, with no overlap between what\u0027s used in Call itself and what\u0027s for the RtpTransportControllerSend, we could make RtpTransportConfig a direct member of CallConfig, and from that perspective, having CallConfig depend in RtpTransprtConfig is natural.",
      "parentUuid": "f1199f31_64498696",
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "087dca24_688ba86c",
        "filename": "call/rtp_transport_controller_send_factory_interface.h",
        "patchSetId": 27
      },
      "lineNbr": 25,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-05-31T09:39:46Z",
      "side": 1,
      "message": "Can we make this a pass-by-value argument, and include both the Clock* and the std::unique_ptr\u003cProcessThread\u003e as members? Since the corresponding const ref for CallConfig appears to make it unnecessarily clumsy to inject components to be owned by Call? Or do you see a clear separation between config to be shared by all transports, and injected state owned by each created instance?",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 39
      },
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b4a3862_0e7352cb",
        "filename": "call/rtp_transport_controller_send_factory_interface.h",
        "patchSetId": 27
      },
      "lineNbr": 25,
      "author": {
        "id": 17619
      },
      "writtenOn": "2021-05-31T09:58:25Z",
      "side": 1,
      "message": "I would like to keep it like this, all configs passed from CallConfig in RtpTransportConfig and these 2 as a separate arguments. That way we clearly know what we inherit from Call and what are additional needs. I had to do it this way because of circular dependencies problem mentioned on Harald\u0027s comment, otherwise I would just pass CallConfig to it.",
      "parentUuid": "087dca24_688ba86c",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 39
      },
      "revId": "4e89079e7e9c8bccc1c13de59cc93168661e2408",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}