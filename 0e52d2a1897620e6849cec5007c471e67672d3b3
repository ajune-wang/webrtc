{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0ca62823_e9a12be2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-10-06T13:03:18Z",
      "side": 1,
      "message": "PTAL Stefan for common_video/ and Peter for sdk/objc",
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1890f29f_2e8cf3e4",
        "filename": "sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 5670
      },
      "writtenOn": "2020-10-06T14:12:16Z",
      "side": 1,
      "message": "Could we remove this as well or do we anticipate other pixel formats that would require the tmp buffer? To avoid breaking can we add the signature without tmpBuffer to the API and mark this as deprecated?",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 51
      },
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3d119ce_605aef62",
        "filename": "sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-10-07T08:01:26Z",
      "side": 1,
      "message": "The temp buffer should never be needed, it was only used because there was a conversion to I420 used in this method, so I can deprecate and replace with a method without tmp buffer.",
      "parentUuid": "1890f29f_2e8cf3e4",
      "range": {
        "startLine": 124,
        "startChar": 8,
        "endLine": 124,
        "endChar": 51
      },
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d281b02e_4dd5150f",
        "filename": "sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 5670
      },
      "writtenOn": "2020-10-06T14:12:16Z",
      "side": 1,
      "message": "This can be removed.",
      "range": {
        "startLine": 136,
        "startChar": 8,
        "endLine": 138,
        "endChar": 9
      },
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28d18d9d_cf7ecdad",
        "filename": "sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 5525
      },
      "writtenOn": "2020-10-06T13:12:46Z",
      "side": 1,
      "message": "Looks like this is changing the filter from kFilterBox to kFilterBilinear. Is that intended?",
      "range": {
        "startLine": 305,
        "startChar": 28,
        "endLine": 305,
        "endChar": 43
      },
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d0a6d2c_6d44130d",
        "filename": "sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-10-06T13:33:51Z",
      "side": 1,
      "message": "kFilterBox is not yet supported by UV scale. I can set this to kFilterBox which will switch to Bilinear right now by default.",
      "parentUuid": "28d18d9d_cf7ecdad",
      "range": {
        "startLine": 305,
        "startChar": 28,
        "endLine": 305,
        "endChar": 43
      },
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6d47a95_8aa5df48",
        "filename": "sdk/objc/components/video_frame_buffer/RTCCVPixelBuffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 305,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-10-06T13:51:32Z",
      "side": 1,
      "message": "Could this be why the test is failing, because the PSNR has changed from \"perfect\" to slightly less? \n\nIf that is the case, how critical is Box versus Bilinear? I just tested in video_loopback with simulcast downscaling and couldn\u0027t notice a difference.",
      "parentUuid": "0d0a6d2c_6d44130d",
      "range": {
        "startLine": 305,
        "startChar": 28,
        "endLine": 305,
        "endChar": 43
      },
      "revId": "0e52d2a1897620e6849cec5007c471e67672d3b3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}