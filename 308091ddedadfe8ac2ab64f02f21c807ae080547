{
  "comments": [
    {
      "key": {
        "uuid": "299760bd_c16eae7d",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-02-06T21:44:35Z",
      "side": 1,
      "message": "Cute trick to get rid of this conditional:\n\n  const char* delimiter \u003d \"\";  // No delimiter before first parameter.\n  for (const auto\u0026 entry : fmtp_parameters) {\n    const std::string\u0026 key \u003d entry.first;\n    const std::string\u0026 value \u003d entry.second;\n    // Parameters are a semicolon-separated list, no spaces.\n    fmtp \u003c\u003c delimiter \u003c\u003c key \u003c\u003c \"\u003d\" \u003c\u003c value;\n    delimiter \u003d \";\";  // A semicolon before each subsequent parameter.\n  }",
      "revId": "308091ddedadfe8ac2ab64f02f21c807ae080547",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b5931b2_09aba1bf",
        "filename": "pc/rtc_stats_integrationtest.cc",
        "patchSetId": 5
      },
      "lineNbr": 455,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-02-07T12:55:39Z",
      "side": 1,
      "message": "For a use case where we do get the FMTP parameter, can we add a test that verifies that if we string-search the contents of createOffer() SDP for the sdpFmtpLine we should get a match? This would catch different orders or difference in formatting between the two places. This should be \"The a\u003dfmtp line in the SDP corresponding to the codec\".\n\nThis test may be added to rtc_stats_integrationtest.cc or it may be added to peer_connection_interface_unittest.cc:\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/pc/peer_connection_interface_unittest.cc;l\u003d1883?q\u003df:peer_connection_%20f:unittest.cc%20GetStats\u0026originalUrl\u003dhttps:%2F%2Fcs.chromium.org%2F",
      "revId": "308091ddedadfe8ac2ab64f02f21c807ae080547",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}