{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "61063371_a2f6f061",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-09-26T17:56:07Z",
      "side": 1,
      "message": "Reland did not work (\"identical tree\") so a revert of the revert.\nPS1..2 contains the changes necessary to fix the issue while restoring multislice support.",
      "revId": "f21fc90550b5c34d6f6f0bea403edc80d7a77847",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01db7cf7_925d1fe1",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-09-27T08:58:40Z",
      "side": 1,
      "message": "I agree that settings is_first_packet_in_frame\u003dtrue at AUD is the right thing to do. But I do not think it is absolutely necessary. Identifying frame border by first_mb_in_slice\u003d\u003d0 should be sufficient (should probably include preceding SEI). Do we understand why it is not working? In theory, video from provided pcap should still be decodable if all AUDs will be removed.",
      "range": {
        "startLine": 213,
        "startChar": 7,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "f21fc90550b5c34d6f6f0bea403edc80d7a77847",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00e61d1f_8714afea",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 22924
      },
      "writtenOn": "2024-09-27T09:32:56Z",
      "side": 1,
      "message": "I think the input and output requirements for different modules are not the same.\nFor frame assembly lookup based on sequence number continuity, the required input and output are the start and end markers of a frame, which are independent of the frame content. \nFor the decoding module, it does not matter how the encoded frames were generated; as long as they are continuous and decodable, it is acceptable, regardless of whether they were transmitted continuously.\nThe main issue this PR aims to address is that the frame assembly module can cause connectivity detection to fail in certain situations after frame assembly, which in turn leads to subsequent frame loss issues.\nMaybe others can explain it more clearly.",
      "parentUuid": "01db7cf7_925d1fe1",
      "range": {
        "startLine": 213,
        "startChar": 7,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "f21fc90550b5c34d6f6f0bea403edc80d7a77847",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc9f39f4_57c56cb3",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-09-27T10:54:32Z",
      "side": 1,
      "message": "I agree with @ssilkin@webrtc.org and @phancke@meta.com\n\nsetting the first packet in frame to true on an AUD is the right thing to do, although it is unclear why the issue is solved. Previously we had issues when incorrect detection of the first packet caused to drop packets needed for decoding (for example, in multislice encoding). \n\nNot setting the flag for AUD, should only cause the AUD to be dropped, but not cause any decoding issues. So maybe there is a different underlying issue that we need still to fix.\n\nAnyway, this lgtm, would be great to get confirmation that this solves the hw encoding issue.\n\nI plan to submit a couple of CLs doing some long standing TODO cleanups of the h264 code that maybe help identify any other issue.",
      "parentUuid": "00e61d1f_8714afea",
      "range": {
        "startLine": 213,
        "startChar": 7,
        "endLine": 213,
        "endChar": 68
      },
      "revId": "f21fc90550b5c34d6f6f0bea403edc80d7a77847",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}