{
  "comments": [
    {
      "key": {
        "uuid": "6580e745_29e381ee",
        "filename": "common_video/libyuv/webrtc_libyuv.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-16T12:52:32Z",
      "side": 1,
      "message": "This won\u0027t work. PSNR is not a linear function. You could potentially infer sum-square-error  from the psnr values, and calculate a new psnr from the joint sse and sample count.\nOr preferably add direct support for this in libyuv. ping magjed@ itc",
      "range": {
        "startLine": 251,
        "startChar": 29,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "659188a7_6eb6bc52",
        "filename": "common_video/libyuv/webrtc_libyuv.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 5682
      },
      "writtenOn": "2018-02-22T03:05:44Z",
      "side": 1,
      "message": "I see. I changed it to a simple average for now. I think we can keep YUV and AXX seperate and add an additional line in the report, WDYT? I am adding magjed to advice on the way to go with these.",
      "parentUuid": "6580e745_29e381ee",
      "range": {
        "startLine": 251,
        "startChar": 29,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a988527_8a42397a",
        "filename": "common_video/libyuv/webrtc_libyuv.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-22T12:56:10Z",
      "side": 1,
      "message": "Have a look at the psnr and ssim functions used in libyuv: https://cs.chromium.org/chromium/src/third_party/libyuv/source/compare.cc\n\nSeems pretty trivial to implement a version with axx support here, since all the functions used (looking at each plane at a time) are also exposed externally. Then we will get proper values.",
      "parentUuid": "659188a7_6eb6bc52",
      "range": {
        "startLine": 251,
        "startChar": 29,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1257445_8a06937e",
        "filename": "common_video/libyuv/webrtc_libyuv.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 5682
      },
      "writtenOn": "2018-02-23T21:48:03Z",
      "side": 1,
      "message": "Ok, I moved over the plane functions to calculate the exact vals. \n\nI am not sure about SSIM metrics weights though, set it equal to Y for now.",
      "parentUuid": "6a988527_8a42397a",
      "range": {
        "startLine": 251,
        "startChar": 29,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "368ba55c_2ee46b03",
        "filename": "common_video/libyuv/webrtc_libyuv.cc",
        "patchSetId": 4
      },
      "lineNbr": 251,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-03-01T14:08:30Z",
      "side": 1,
      "message": "That sounds right.",
      "parentUuid": "b1257445_8a06937e",
      "range": {
        "startLine": 251,
        "startChar": 29,
        "endLine": 251,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "488c0ffc_7940ac55",
        "filename": "common_video/libyuv/webrtc_libyuv.cc",
        "patchSetId": 4
      },
      "lineNbr": 298,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-16T12:52:32Z",
      "side": 1,
      "message": "ssim isn\u0027t linear either...",
      "range": {
        "startLine": 298,
        "startChar": 29,
        "endLine": 298,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43278cbc_c36b3da8",
        "filename": "test/frame_generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-16T12:52:32Z",
      "side": 1,
      "message": "Please add a comment what this is used for.\nWouldn\u0027t it be possible to use a lambda instead?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 4
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "184b6746_eea8b77a",
        "filename": "test/frame_generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-16T12:52:32Z",
      "side": 1,
      "message": "Update the draw-method to directly handle i420a?",
      "range": {
        "startLine": 70,
        "startChar": 31,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8733c7ae_d0904237",
        "filename": "test/frame_generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 5682
      },
      "writtenOn": "2018-02-22T03:05:44Z",
      "side": 1,
      "message": "MutableData*() methods are only available in I420Buffer. If I pass in any other interface we don\u0027t have access to mutable data pointers. I just wanted to keep the scope of CL to the added test, but let me know if you have a suggestion.",
      "parentUuid": "184b6746_eea8b77a",
      "range": {
        "startLine": 70,
        "startChar": 31,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2abf51a3_33e1da0c",
        "filename": "test/frame_generator.cc",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 5682
      },
      "writtenOn": "2018-02-23T21:48:03Z",
      "side": 1,
      "message": "Taking another look, this looks risky as alpha is actually Y. I refactored and used const_cast to make draw do all the work based on the type.",
      "parentUuid": "8733c7ae_d0904237",
      "range": {
        "startLine": 70,
        "startChar": 31,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "d4eab206d07340b8ab0f8837e5c80183a9c6dbd4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}