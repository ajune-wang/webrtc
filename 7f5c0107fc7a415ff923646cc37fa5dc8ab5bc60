{
  "comments": [
    {
      "key": {
        "uuid": "cd43d98d_ea9f00ee",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-10-10T22:41:58Z",
      "side": 1,
      "message": "\"it keeps the interface stateless, and gives\"\n\nSince not having state is a very very nice property for interfaces.",
      "range": {
        "startLine": 59,
        "startChar": 51,
        "endLine": 59,
        "endChar": 59
      },
      "revId": "7f5c0107fc7a415ff923646cc37fa5dc8ab5bc60",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed6086c4_c05e491e",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5053
      },
      "writtenOn": "2017-10-11T01:49:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd43d98d_ea9f00ee",
      "range": {
        "startLine": 59,
        "startChar": 51,
        "endLine": 59,
        "endChar": 59
      },
      "revId": "7f5c0107fc7a415ff923646cc37fa5dc8ab5bc60",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62356169_4cac961b",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-10-10T22:41:58Z",
      "side": 1,
      "message": "``",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 25
      },
      "revId": "7f5c0107fc7a415ff923646cc37fa5dc8ab5bc60",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e918dcaf_3937e957",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 5053
      },
      "writtenOn": "2017-10-11T01:49:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62356169_4cac961b",
      "range": {
        "startLine": 63,
        "startChar": 8,
        "endLine": 63,
        "endChar": 25
      },
      "revId": "7f5c0107fc7a415ff923646cc37fa5dc8ab5bc60",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a0c7659_495dbf54",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-10-10T22:41:58Z",
      "side": 1,
      "message": "When might it not be safe?",
      "range": {
        "startLine": 70,
        "startChar": 47,
        "endLine": 70,
        "endChar": 63
      },
      "revId": "7f5c0107fc7a415ff923646cc37fa5dc8ab5bc60",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc485710_6638c368",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 5053
      },
      "writtenOn": "2017-10-11T01:49:16Z",
      "side": 1,
      "message": "When the other class\u0027s lifetime is not the same as your own. For example, suppose |bar_| is something that can change or be recreated. In this case I\u0027d use a repeater, and every time it changes do:\n\nfoo_.stop(bar_);\nfoo_.repeat(new_bar);\n\nThat way, the client just hooks up to my signal once, and any time my underlying |bar_| changes, it will continue to get signals from it.\n\nI guess I\u0027ll change \"if safe to do so\" with \"if the other object\u0027s lifetime is the same as its own,\" unless you can think of better wording. Maybe I could use real code snippets here to solidify the point, once we actually have code that uses this advice.",
      "parentUuid": "7a0c7659_495dbf54",
      "range": {
        "startLine": 70,
        "startChar": 47,
        "endLine": 70,
        "endChar": 63
      },
      "revId": "7f5c0107fc7a415ff923646cc37fa5dc8ab5bc60",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}