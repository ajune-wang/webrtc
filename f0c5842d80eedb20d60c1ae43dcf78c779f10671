{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "518c7875_72d9eeae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-11-02T10:01:38Z",
      "side": 1,
      "message": "Sami, PTAL\nSergey, not sure if this of interest to you, but just FYI.",
      "revId": "f0c5842d80eedb20d60c1ae43dcf78c779f10671",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c70f1a99_68aa6465",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5825
      },
      "writtenOn": "2020-11-05T10:35:50Z",
      "side": 1,
      "message": "I agree that it would be right to request CBP/CHP explicitly. But doing this by default may result to:\n1. Failures at initialization (if encoder doesn\u0027t recognize the profile).\n2. Regressions in performance (e.g. CAVLC instead of CABAC when CHP is requested explicitly).\n\nWe should do this only for verified implementations.",
      "revId": "f0c5842d80eedb20d60c1ae43dcf78c779f10671",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd75983c_895e1b45",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 5825
      },
      "writtenOn": "2020-11-03T07:55:04Z",
      "side": 1,
      "message": "Not all implementations recognize profile\u003d0x80000 and \u003d0x10000. Initialization of such encoders may fail.\n\nBoth AVCProfileConstrainedHigh and AVCProfileConstrainedBaseline were added in O (API v27) - https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel#AVCProfileConstrainedBaseline\n\nWe probably should not even try to use them on Android \u003cO.",
      "range": {
        "startLine": 251,
        "startChar": 1,
        "endLine": 255,
        "endChar": 79
      },
      "revId": "f0c5842d80eedb20d60c1ae43dcf78c779f10671",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5bf994c_8c3806d7",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 14754
      },
      "writtenOn": "2020-11-04T21:46:04Z",
      "side": 1,
      "message": "Do you mean that \n1) regardless of api version there will be android handsets crashing when initiated with values from later API or \n2) just handsets that are on an older api?\n\nIf the (2) it is easily solved by using a check on build version (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.O).\nIf doing this we do not need to wrap the constants either and are free to use them directly (a good thing).\n\nIf the problem is (1) then how can this ever be updated? Are we stuck at whatever was defined at api level 16?",
      "parentUuid": "dd75983c_895e1b45",
      "range": {
        "startLine": 251,
        "startChar": 1,
        "endLine": 255,
        "endChar": 79
      },
      "revId": "f0c5842d80eedb20d60c1ae43dcf78c779f10671",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a75b5f69_f196d721",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 4
      },
      "lineNbr": 255,
      "author": {
        "id": 5825
      },
      "writtenOn": "2020-11-05T07:23:42Z",
      "side": 1,
      "message": "We need to query supported profiles and use only those.\n\nI also would like to point to how Android MediaCodec configures underlying encoders - https://android.googlesource.com/platform/frameworks/av/+/master/media/libstagefright/ACodec.cpp#4524.\nBP, MP and HP are configured explicitly. For other profiles some default settings are used. What I observed on practice is that requesting HP technically results to CHP (no B-frames) with CABAC. But if you request CHP you get CHP with CAVLC. I.e., you lose coding efficiency when requesting CHP. Ideally we need to fix Android MediaCodec layer first (configure CBP/CHP explicitly) before using CBP/CHP.",
      "parentUuid": "a5bf994c_8c3806d7",
      "range": {
        "startLine": 251,
        "startChar": 1,
        "endLine": 255,
        "endChar": 79
      },
      "revId": "f0c5842d80eedb20d60c1ae43dcf78c779f10671",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}