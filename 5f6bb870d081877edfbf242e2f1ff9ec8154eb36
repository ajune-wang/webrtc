{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "713a3d39_bc1f0d09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5825
      },
      "writtenOn": "2022-12-22T19:14:44Z",
      "side": 1,
      "message": "https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d14717#c3",
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7f0b9fb_4b20eacc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20164
      },
      "writtenOn": "2023-01-08T07:52:18Z",
      "side": 1,
      "message": "This change in direction hasn\u0027t happened yet for WebRTC, and it doesn\u0027t help any of the current users of the library right now. If you want to gut all the factories from the library, ideally please do it after this has landed, so that existing consumers can still leverage this until they rework their stuff to provide their own codec factories.",
      "parentUuid": "713a3d39_bc1f0d09",
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "485749e0_83456420",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 5527
      },
      "writtenOn": "2022-12-02T13:45:22Z",
      "side": 1,
      "message": "AFAICT these are note defined anywhere?\n\nHow would this feature be tested? Would we need a dedicated bot for this?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 52
      },
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "37a8d9a5_51b9ab33",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-12-02T14:10:06Z",
      "side": 1,
      "message": "These are automatically generated from the `generate_stubs()` macro.\n\nI guess having a dedicated bot would be the only way to test this, however, I\u0027m afraid this will be hard to do as we would need libopenh264 in form of CIPD package to be available in `third_party`, basically same thing I had to do for PipeWire in order to test the wayland desktop capturer.",
      "parentUuid": "485749e0_83456420",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 50,
        "endChar": 52
      },
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8423818b_792eca25",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 5825
      },
      "writtenOn": "2022-11-30T08:54:41Z",
      "side": 1,
      "message": "Do we need to keep this value up-to-date? How are we going to update it?",
      "range": {
        "startLine": 52,
        "startChar": 55,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e805fbdd_8d567fa8",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-11-30T08:59:04Z",
      "side": 1,
      "message": "This will need to be kept in sync with version you have in `third_party/openh264`.",
      "parentUuid": "8423818b_792eca25",
      "range": {
        "startLine": 52,
        "startChar": 55,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fc1916e_e2351195",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-11-30T10:15:33Z",
      "side": 1,
      "message": "Also in case the API changes for functions we use here, we will need to update the function definitions. Is there any place where one would see we use this and hopefully update this accordingly when updating `third_party/openh264`?",
      "parentUuid": "e805fbdd_8d567fa8",
      "range": {
        "startLine": 52,
        "startChar": 55,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47929eb6_a53029fd",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 5825
      },
      "writtenOn": "2022-11-30T13:00:54Z",
      "side": 1,
      "message": "One way to sync this with third_party/openh264 would be to use a build flag. Something like to https://chromium-review.googlesource.com/c/chromium/src/+/3986032.",
      "parentUuid": "9fc1916e_e2351195",
      "range": {
        "startLine": 52,
        "startChar": 55,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "5f6bb870d081877edfbf242e2f1ff9ec8154eb36",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}