{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2f475cdb_b420f181",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7036
      },
      "writtenOn": "2022-10-31T13:31:00Z",
      "side": 1,
      "message": "I think we still want to address a few more things in the cxx17 file:\n- Many symbols are defined in multiple locations in the canonical STL I used ( https://github.com/PeterFeicht/cppreference-doc ). Could be fixed upstream, we could remove duplicate definitions if we agree on the canonical header to be used most of the time.\n- Some symbols like std::swap are used in too many places, should we remove them?",
      "revId": "f92cdf26ce9eb9cea37c03149214f0b27e2389ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32c3d6d8_88704842",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-10-31T13:44:50Z",
      "side": 1,
      "message": "why multiple location is a problem? \nWould that mean that iwyu would accept either of the header files and pick \u0027random\u0027 (first?)\u0027 when header is absent.\nAfaik iwyu does that for \u003cstdint.h\u003e vs \u003ccstdint\u003e for uintxx_t types, accepting a bit of inconsistency.",
      "parentUuid": "2f475cdb_b420f181",
      "revId": "f92cdf26ce9eb9cea37c03149214f0b27e2389ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25871d4b_92285f28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7036
      },
      "writtenOn": "2022-10-31T14:05:35Z",
      "side": 1,
      "message": "Because if you use `std::move(T v)`, you should use `\u003cutility\u003e`. For `std::move(T begin, T end)` that\u0027s `\u003calgorithm\u003e`. At the moment, IWYU will add `\u003calgorithm\u003e` for all `std::move` (any) usage, where we should have `\u003cutility\u003e` for most (all?).\nIt\u0027s possibly an issue for a few other usage, but I didn\u0027t try running and validating IWYU results for the whole codebase.",
      "parentUuid": "32c3d6d8_88704842",
      "revId": "f92cdf26ce9eb9cea37c03149214f0b27e2389ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58f0304b_6601b971",
        "filename": "tools_webrtc/iwyu/libcxx.imp",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-10-31T13:44:50Z",
      "side": 1,
      "message": "I wonder which file is easier to maintain:\nthis one:\nautogenerated, but depends on certain version of the std lib. would it allow to work with multiple versions?\n\nor set of rules from https://webrtc-review.googlesource.com/c/src/+/280965:\nbut with number of rules that is much smaller (~1 mark rule per public std include header per std lib implementation), but assembled manually",
      "revId": "f92cdf26ce9eb9cea37c03149214f0b27e2389ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4759ce71_16be56ae",
        "filename": "tools_webrtc/iwyu/libcxx.imp",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 7036
      },
      "writtenOn": "2022-10-31T14:05:35Z",
      "side": 1,
      "message": "I don\u0027t think the rules regarding all the private headers in that CL are correct as some symbols are only internal and privately used. But they will be referenced and IWYU might try to add an include for a public header that\u0027s not strictly necessary.\n\nI don\u0027t think libc++ is updated so fast that the list of private headers will be a problem to update. Most of the usage should be covered by what\u0027s in cxx17.imp anyway. Both approaches are complimentary.",
      "parentUuid": "58f0304b_6601b971",
      "revId": "f92cdf26ce9eb9cea37c03149214f0b27e2389ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}