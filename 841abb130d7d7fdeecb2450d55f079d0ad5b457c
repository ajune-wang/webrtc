{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "505c4bf6_26ffa366",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-29T14:59:28Z",
      "side": 1,
      "message": "PTAL Philip, took some work \u0026 extra changes to get the internal compile working\n\n+Harald for owners of all the small things (api/test, media/engine/fake*, rtc_tools/, sdk/, test/)\n\nThanks",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aeb9e8e2_10aad463",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-08-30T10:28:07Z",
      "side": 1,
      "message": "Phew, that was a lot of nitty-gritty changes! Great to get it done!",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "371d54ec_4e98eb3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-30T10:36:34Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94c26cb0_a7c97dd7",
        "filename": "api/video_codecs/video_decoder.h",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-08-30T10:28:07Z",
      "side": 1,
      "message": "Does it work to add [[deprecated]] here?\n\nWill probably require some #pragma magic around the stuff you need for backwards compatiblity, and requires Chrome to update first, if needed (it doesn\u0027t tolerate deprecated WebRTC stuff).",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d8e8f22_cbd10965",
        "filename": "api/video_codecs/video_decoder.h",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-30T10:36:34Z",
      "side": 1,
      "message": "Yep, indeed, we need to land this to add the new Decode(input_image, render_time_ms) method, then migrate Chrome, then deprecate this, then remove it.",
      "parentUuid": "94c26cb0_a7c97dd7",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e42524a_27d02457",
        "filename": "sdk/objc/api/video_codec/RTCWrappedNativeVideoDecoder.mm",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-08-30T10:28:07Z",
      "side": 1,
      "message": "I take it lack of familiarity with the language is the reason for not doing it in this CL? Do we have someone this can be burdened on?",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc618b35_98b35297",
        "filename": "sdk/objc/api/video_codec/RTCWrappedNativeVideoDecoder.mm",
        "patchSetId": 9
      },
      "lineNbr": 49,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-30T10:36:34Z",
      "side": 1,
      "message": "Right, I had tried, but some quick web searching said there\u0027s no way to supply a default implementation in an ObjectiveC protocol, (ie in sdk/objc/base/RTCVideoDecoder.h), and we have internal usages which fail to compile if we just jump straight over.\n\nSo... yeah, I couldn\u0027t work it out, so punted working on it to a smaller follow-up cl. At least we\u0027re in a better state!",
      "parentUuid": "0e42524a_27d02457",
      "revId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "841abb130d7d7fdeecb2450d55f079d0ad5b457c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}