{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "329d02e2_8568023f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "This was a little easier for me to review next - I will need a bit more time to get background on the xdg-portal split patch.  ",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ddbe20c_203bc32d",
        "filename": "modules/desktop_capture/linux/wayland/mouse_cursor_monitor_pipewire.cc",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "What about mode \u003d\u003d SHAPE_ONLY?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4eb8520e_a1befc98",
        "filename": "modules/desktop_capture/linux/wayland/mouse_cursor_monitor_pipewire.cc",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "std::move is not necessary here because you\u0027re just passing a pointer.  (If OnMouseCursor took a std::unique_ptr or a plain MouseCursor, then std::move would make sense.)",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30cc384f_bad435f8",
        "filename": "modules/desktop_capture/linux/wayland/mouse_cursor_monitor_pipewire.cc",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Is (0,0) a valid coordinate?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7d6d49a_4fa6d366",
        "filename": "modules/desktop_capture/linux/wayland/mouse_cursor_monitor_pipewire.cc",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "All three of the Create() functions do the same thing.  Can you keep the Create() below which returns a std::unique_ptr and get rid of the two others?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50aad8d7_6a7c4b30",
        "filename": "modules/desktop_capture/linux/wayland/mouse_cursor_monitor_pipewire.h",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Since this is initialized in the ctor you shouldn\u0027t need a default value here.",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25836dc2_c2e031c7",
        "filename": "modules/desktop_capture/linux/wayland/mouse_cursor_monitor_pipewire.h",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Can you add a default value just for documentation purposes (even if it won\u0027t be used normally)?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28278eca_da6b8519",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 59,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Prefer to declare this as normal constexpr values, instead of using preprocessor defines.",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b78a6d43_337a35c9",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 60,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Can this be a constexpr function instead of a #define?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80a37f79_ee41ed19",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 553,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "How does the caller know when it\u0027s safe to call CaptureCursor?  Should this take a callback to invoke after the next ProcessBuffer()?\n\nOr is the idea that the caller always calls this on a frame capture to get the latest cursor data (if there is any)?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1cc72b7_b53ed858",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 574,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Who sets the data inside spa_meta_cursor here?  How do you know that it is a valid spa_meta_cursor?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76e4cda5_e80a8826",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 587,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Does Pipewire sanity-check the values of width and height (i.e. no larger than 256x256 or some reasonable value)?  If not, can we do that here?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "068f5fc0_d2fd0c0f",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 589,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Is the cursor data only passed by pipewire on a cursor change, or is it passed with every captured frame?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2a75676_e0f37067",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 3
      },
      "lineNbr": 594,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "What is the difference between the values of cursor-\u003ehotspot and cursor-\u003eposition for pipewire?",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2297d391_50538f93",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.h",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-14T20:11:15Z",
      "side": 1,
      "message": "Please document these two methods, particularly under what conditions that CaptureCursor() actually returns a value.",
      "revId": "465ef26d8590f5210410d53395e85155f910cf70",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}