{
  "comments": [
    {
      "key": {
        "uuid": "5e46c994_dc71daf5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5578
      },
      "writtenOn": "2020-09-30T08:12:27Z",
      "side": 1,
      "message": "Hej- can you please review?",
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e7f995d_302e4a04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "First pass: style comments, as these are easier.\nI still haven\u0027t check nor what is put into this extension, nor format, nor implementation.\nAs a next step will take a closer look at what your are putting into this extension.",
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0034b810_18e6bae1",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "add an empty line between c++ header and library header\nhttps://google.github.io/styleguide/cppguide.html#Names_and_Order_of_Includes",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 16,
        "endChar": 0
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77912a96_ddf48ad1",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "what are the units for the frame rate?\nhow framerate 7.5fps would be represented?",
      "range": {
        "startLine": 28,
        "startChar": 12,
        "endLine": 28,
        "endChar": 22
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6558d1ce_2723f49b",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "put members after function.\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "range": {
        "startLine": 26,
        "startChar": 1,
        "endLine": 29,
        "endChar": 0
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "752f3291_dae90dda",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "for operator\u003d\u003d prefer 2-parameter version:\nfriend bool operator\u003d\u003d(const ResolutionAndFrameRate\u0026 lhs, const ResolutionAndFrameRate\u0026 rhs) {",
      "range": {
        "startLine": 30,
        "startChar": 19,
        "endLine": 30,
        "endChar": 55
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45d28cb5_1d4542d7",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "when you declare operator\u003d\u003d it is a good idea to also add matching !\u003d operator:\nfriend bool operator!\u003d(const ResolutionAndFrameRate\u0026 lhs, const ResolutionAndFrameRate\u0026 rhs) {\n  return !(lhs \u003d\u003d rhs);\n}",
      "range": {
        "startLine": 30,
        "startChar": 9,
        "endLine": 30,
        "endChar": 19
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51312349_22a29509",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 37,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "this comment imply that \"simulcast\" term can be understood differently\n(one meaning is \u0027independent stream\u0027, another meaning is \u0027differetnt ssrc/rtp stream\u0027)\nbecause of the first meaning (which seems more spread) may be don\u0027t call this variable \"simulcast\" in the first place.\n\nHow about something like\n// Index of the simulcast encoding this allocation is sent on. When all layers are sent over same ssrc/rtp stream, this value is 0.\nint rtp_stream_index \u003d 0;",
      "range": {
        "startLine": 36,
        "startChar": 46,
        "endLine": 37,
        "endChar": 26
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcec805b_ce96cc8f",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "That is actually one of the issues with the rtcp TargetBitrate messages:\nit reports bitrate per layer, instead of per ... decode target, i.e. it doesn\u0027t accumulate bitrates. Since SFM doesn\u0027t know if stream would be K-SVC or FullSvc, it can\u0027t accumulate it property until later.\n.....\n\n\nafter reading code I noticed that this not the bitrate of the layer, but bitrate of a decode target identified by top layer. I would prefer this comment rewritten to avoid the confusion.",
      "range": {
        "startLine": 40,
        "startChar": 20,
        "endLine": 40,
        "endChar": 50
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c34c05c_69c0b071",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "inlined vector has dynamic size (and allows to grow beyound 2nd template parameter. it just used dynamic memory in that case)\nc-array has static size.\nhere you are using static size for spatial layers and dynamic size for temporal layers.\nNext variable you are using dynamic size for spatial layers.\nwhy treat them differently?\n\nmay be for simplicity use just c-array (or std::array), i.e. static size.\nif number of temporal/spatial layers can never be more than 4, you do not need InlinedVector.",
      "range": {
        "startLine": 41,
        "startChar": 2,
        "endLine": 41,
        "endChar": 80
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "092e4d5d_86a22831",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "put functions before members\n\nbtw, why call it equal instead of \nfriend bool operator\u003d\u003d(const VideoLayerAllocation\u0026 lhs, const VideoLayerAllocation\u0026 rhs) {",
      "range": {
        "startLine": 48,
        "startChar": 2,
        "endLine": 48,
        "endChar": 54
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05c2a46c_c11c2867",
        "filename": "api/video/video_layers_allocation.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "may be call it result (since in this content res might also mean resolution)\n\nOr may be you do not need that variable at all:\nif (lhs.sid !\u003d rhs.sid || lhs.resolution !\u003d rhs.resolution) {\n  return false;\n}\n\nfor (...) {\n  if (lhs.bitrate[i] !\u003d rhs.bitrate(i)) return false;\n}\n\nreturn true;",
      "range": {
        "startLine": 51,
        "startChar": 4,
        "endLine": 52,
        "endChar": 17
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7a3952f_8e4e6053",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "keep this constant in unnamed namespace (or add static keyword for internal linkage)",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 38
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f2ef23d_52ef5fba",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "I\u0027m a bit lost here:\nyou do not make difference between spatial layer and rtp stream when counting their number,\nbut do make that difference for the Sid field.\n\nHow would receiver know if it is spatial layers or simulcast streams?\nWould this message support case when both of them are used?, i.e. one rtp stream send layered video with spatial layers, and there is also 2nd rtp stream.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 29,
        "endChar": 53
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98b5bfce_82ff323d",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 32,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "in this version should be set to 0 and ignored by the parser. right?",
      "range": {
        "startLine": 32,
        "startChar": 3,
        "endLine": 32,
        "endChar": 39
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41d653d7_0d563f05",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:54:09Z",
      "side": 1,
      "message": "is there difference between \ntemporal_layers \u003d 1\nbitrates \u003d {100\u0027000},\nand\ntemporal_layers \u003d 2\nbitrates \u003d {100\u0027000, 0};\n\nif not, may be drop this extra rule for zero bitrate, but instead communicate disabled temporal layer with number of [active] temporal layers.",
      "range": {
        "startLine": 40,
        "startChar": 48,
        "endLine": 41,
        "endChar": 22
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "179939f8_8c3395f7",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "did you consider \nhttps://en.wikipedia.org/wiki/Exponential-Golomb_coding instead?\nBitBuffer already supports that one.\n\nthe encoding your described is byte aligned, but bitrates area already is in the block that is not byte aligned.\n\nAnother format to consider is leb128.\nIt can be shared with av1 packetizer\n(https://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/modules/rtp_rtcp/source/rtp_packetizer_av1.cc;l\u003d61;drc\u003d096a46f38f6735716191786775b5de577aca4605)\n\nIf you find byte-alignment helpful, may be make section1 byte-aligned:\ne.g. when T\u003d1, use reserved two bits.\nwhen T\u003d0, always use full byte.",
      "range": {
        "startLine": 47,
        "startChar": 56,
        "endLine": 47,
        "endChar": 63
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13168c84_a247373c",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "if you rearrange block 3 before block1, then block3 would always be byte-aligned and thus easier to read/write.",
      "range": {
        "startLine": 53,
        "startChar": 3,
        "endLine": 53,
        "endChar": 28
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c05a9246_49d0065b",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "either DCHECK or recover (or CHECK)\n\nhttps://chromium.googlesource.com/chromium/src/+/master/styleguide/c++/c++.md#check_dcheck_and-notreached\n\n\"you should not handle DCHECK() failures\"",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 71
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d5f21ce_46c8d688",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 92,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "why do you need this variable outside for loop?",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 13
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0675280_0788e4b4",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 93,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "personally think \"the_same\" is slightly better than \"constant\" here",
      "range": {
        "startLine": 93,
        "startChar": 18,
        "endLine": 93,
        "endChar": 26
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a83731f_0d509bd2",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "nit: break;",
      "range": {
        "startLine": 97,
        "startChar": 33,
        "endLine": 97,
        "endChar": 34
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86166bcd_818a1b6d",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 105,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "this variable is used once (and the name is vague). may be do not introduce it:\nwriter.WriteBits(allocation.resolution_and_frame_rate.empty() ? 0 : 1, 1);",
      "range": {
        "startLine": 105,
        "startChar": 7,
        "endLine": 105,
        "endChar": 20
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dce5ee0_ae9c2671",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "might be better to expand the comment to \"Reserved\"\nto avoid confusion that it can have something to do with resolutions",
      "range": {
        "startLine": 108,
        "startChar": 5,
        "endLine": 108,
        "endChar": 8
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12e8eb38_24865cdb",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "might be good to remind reader meaning of each parameter:\nwriter.WriteBits(/*val\u003d*/0, /*bit_count\u003d*/2);",
      "range": {
        "startLine": 110,
        "startChar": 19,
        "endLine": 110,
        "endChar": 23
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb98a99e_6be36ed3",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "comment above claims \"All bitrates are in kbps, rounded up\",\nthis division rounds bitrate down.",
      "range": {
        "startLine": 130,
        "startChar": 6,
        "endLine": 130,
        "endChar": 28
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29aa40d0_c47b36ce",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 174,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "needed?\n(read for 2 bits value can\u0027t be more than 4)\nif you suspect it can be a problem, may be DCHECK instead.",
      "range": {
        "startLine": 174,
        "startChar": 2,
        "endLine": 174,
        "endChar": 68
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10e8caef_b9198683",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 181,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "ditto, needed?",
      "range": {
        "startLine": 181,
        "startChar": 2,
        "endLine": 181,
        "endChar": 72
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d489affd_83abb62e",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 185,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "why declare these variables here? \nwouldn\u0027t be cleaner to limit their scope to for loops?",
      "range": {
        "startLine": 185,
        "startChar": 2,
        "endLine": 185,
        "endChar": 21
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "769c9f91_228cf95c",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 186,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "why split declaration and assignment?\n(variable is not used in between)",
      "range": {
        "startLine": 186,
        "startChar": 2,
        "endLine": 186,
        "endChar": 35
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd34cbb5_7b656824",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "can you please make this line consistent with line#189, i.e. either use extra () in both of them, or in neither of them.",
      "range": {
        "startLine": 194,
        "startChar": 2,
        "endLine": 194,
        "endChar": 34
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e256e12_41f9758e",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "ditto, shouldn\u0027t be needed as runtime check",
      "range": {
        "startLine": 204,
        "startChar": 4,
        "endLine": 204,
        "endChar": 57
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e769ea39_5715e6a9",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.cc",
        "patchSetId": 3
      },
      "lineNbr": 230,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T10:50:22Z",
      "side": 1,
      "message": "either declare bit_length just in the else block, or move reader.ReadBits(\u0026val, bit_length) one level up.",
      "range": {
        "startLine": 230,
        "startChar": 8,
        "endLine": 230,
        "endChar": 23
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06da745f_be79eeb4",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "It is likely this extension will be changed, including what and how is sent on the wire.\nI suggest to add a version suffix (e.g. \"-00\")",
      "range": {
        "startLine": 24,
        "startChar": 52,
        "endLine": 24,
        "endChar": 76
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "786043df_82df236f",
        "filename": "modules/rtp_rtcp/source/rtp_video_layers_allocation_extension.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-09-30T08:35:32Z",
      "side": 1,
      "message": "prefer free function in the unnamed namespace in the .cc over static private helper\ngo/totw/186",
      "range": {
        "startLine": 35,
        "startChar": 2,
        "endLine": 35,
        "endChar": 22
      },
      "revId": "d89a861d24ac6b8c7b563beb2773eeae4e8e9356",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}