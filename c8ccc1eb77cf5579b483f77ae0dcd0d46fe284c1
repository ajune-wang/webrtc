{
  "comments": [
    {
      "key": {
        "uuid": "9cc7ea07_2f936ec7",
        "filename": "modules/video_coding/packet_buffer_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-10-24T09:07:25Z",
      "side": 1,
      "message": "WDYT about adding a matcher like this:\n\n  MATCHER_P(StartSeqNumsAre, seq_nums, \"\") {\n    return ::testing::Matches(ElementsAre(seq_nums))(FirstSeqNums(arg));\n  }\n\nThen we can write EXPECTs like this:\n\n  EXPECT_THAT(Insert(0x0, kKeyFrame, kNotFirst, kLast).frames,\n              StartSeqNumsAre(0xFFFF));",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 127,
        "endChar": 35
      },
      "revId": "c8ccc1eb77cf5579b483f77ae0dcd0d46fe284c1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02eeadd_43d0bd6c",
        "filename": "modules/video_coding/packet_buffer_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-10-24T10:46:34Z",
      "side": 1,
      "message": "This kind of matcher would be great together with pretty printer for RtpFrameObject.\n\nimaging the expectation fails.\nin addition to vector of expected sequence numbers\nwith my matcher you would read vector of actual sequence numbers.\nWith your suggestion you would read of blobs.\n\n... this code doesn\u0027t own RtpFrameObject to define Printer for it.\nbut... it might be ok to define Print for the PacketBuffer::InsertResult.\n\nthough... to obey both http://abseil.io/tips/99 and webrtc discouragment on std::ostream in prod code I need to create a wrapper.",
      "parentUuid": "9cc7ea07_2f936ec7",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 127,
        "endChar": 35
      },
      "revId": "c8ccc1eb77cf5579b483f77ae0dcd0d46fe284c1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "539e1272_6267d2dc",
        "filename": "modules/video_coding/packet_buffer_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-10-25T09:22:02Z",
      "side": 1,
      "message": "After some offline discussion, LGTM!",
      "parentUuid": "a02eeadd_43d0bd6c",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 127,
        "endChar": 35
      },
      "revId": "c8ccc1eb77cf5579b483f77ae0dcd0d46fe284c1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf6740f6_67d1a135",
        "filename": "modules/video_coding/packet_buffer_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-10-25T09:32:54Z",
      "side": 1,
      "message": "from the offline discussion:\nPrintTo is googletest feature:\nhttps://github.com/google/googletest/blob/master/googletest/docs/advanced.md#teaching-googletest-how-to-print-your-values",
      "parentUuid": "539e1272_6267d2dc",
      "range": {
        "startLine": 126,
        "startChar": 0,
        "endLine": 127,
        "endChar": 35
      },
      "revId": "c8ccc1eb77cf5579b483f77ae0dcd0d46fe284c1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}