{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "572f3d73_ed0f1607",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-10-02T08:17:18Z",
      "side": 1,
      "message": "Per for audio owners review.",
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2094a3a2_0d4430b9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-02T10:24:56Z",
      "side": 1,
      "message": "Note that a similar issue was fixed before in the generic versions of the functions: https://webrtc-review.googlesource.com/70780",
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea424f42_813ebe48",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5125
      },
      "writtenOn": "2023-10-02T08:41:42Z",
      "side": 1,
      "message": "I don\u0027t really understand the need for this change.\ndim_cross_correlation cannot be negative, and since the loop increases i  from 0 to dim_cross_correlation it should never become negative.\n\n(the change rather introduces the risk for a wraparound since with this change i in theory could wraparound in the loop)",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35934857_33b417d3",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-02T10:20:44Z",
      "side": 1,
      "message": "It\u0027s the step_seq2 that can be negative. When multiplied by a size_t in the expression `seq2 + (step_seq2 * i)`, it is upsized and becomes a large size_t: https://godbolt.org/z/39cMra9bG.",
      "parentUuid": "ea424f42_813ebe48",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7259f45b_d8392532",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-10-03T14:31:46Z",
      "side": 1,
      "message": "Thanks for the repro on Godbolt Sergey!\n\nAnd step_seq2 is actually set to -1 here https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/audio_coding/neteq/expand.cc;l\u003d495;drc\u003dd00ce747c7588b1541ad6a0c0db7895487b5a618.\n\nPer, are the size_t inputs needed or can we change the type and remove the danger of wraparound?",
      "parentUuid": "35934857_33b417d3",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff08614f_f359fb6a",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-03T14:40:54Z",
      "side": 1,
      "message": "`step_seq2` is already an `int` input. Are you talking about the two other `size_t` inputs `dim_seq` and `dim_cross_correlation`? They seem to be non-negative by nature.",
      "parentUuid": "7259f45b_d8392532",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bed0105d_38aef7f1",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-10-06T09:28:21Z",
      "side": 1,
      "message": "\u003e `step_seq2` is already an `int` input. Are you talking about the two other `size_t` inputs `dim_seq` and `dim_cross_correlation`? They seem to be non-negative by nature.\n\nYes, I was highlighting that `step_seq2` is actually passed with a negative value already, hence the problem we are discussing here is not hypotetical.\n\n\u003e Are you talking about the two other size_t inputs dim_seq and dim_cross_correlation? They seem to be non-negative by nature.\n\nYes, would you keep them as size_t then?",
      "parentUuid": "ff08614f_f359fb6a",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87b2925b_45dc51d4",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-06T10:37:52Z",
      "side": 1,
      "message": "Yes, keeping them unchanged.",
      "parentUuid": "bed0105d_38aef7f1",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9768434_3403f008",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5125
      },
      "writtenOn": "2023-10-09T06:47:06Z",
      "side": 1,
      "message": "To me the issue seems to be that step_seq2 is passed as a negative value, rather than that this code cannot handle it being a negative value.\nDo you know in what code this is called when it happens to be negative?",
      "parentUuid": "87b2925b_45dc51d4",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9189f5f_f54598e5",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-10-09T07:51:41Z",
      "side": 1,
      "message": "I talked with Per about this in our weekly 1:1. Looping in Jakob to take a look from a NetEq point of view.\n\nJakob, this code seems to have UB. As Per mentioned, it is not clear if this CL is the right fix or if there is more that needs to be done to ensure other issues don\u0027t happen.\n\nIn the C implementation, there is no problem with `step_seq2` since it is used like this https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/common_audio/signal_processing/cross_correlation.c;l\u003d27;drc\u003d92ea95e34af5966555903026f45164afbd7e2088, while here in the NEON implementation there is UB.",
      "parentUuid": "f9768434_3403f008",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b67a2746_13c20f09",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 8038
      },
      "writtenOn": "2023-10-09T08:49:27Z",
      "side": 1,
      "message": "step_seq2 is set to -1 in most cases (moving backwards in seq2): https://source.chromium.org/search?q\u003dCrossCorrelationWithAutoShift\u0026ss\u003dchromium%2Fchromium%2Fsrc:third_party%2Fwebrtc%2Fmodules%2Faudio_coding%2Fneteq%2F\n\nIt is also permitted in the comment here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/common_audio/signal_processing/include/signal_processing_library.h;l\u003d511;drc\u003d92ea95e34af5966555903026f45164afbd7e2088",
      "parentUuid": "c9189f5f_f54598e5",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88b0f048_b7408ad3",
        "filename": "common_audio/signal_processing/cross_correlation_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-09T10:17:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b67a2746_13c20f09",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 75,
        "endChar": 12
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb9b50cd_5c477ce4",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-10-02T07:48:41Z",
      "side": 1,
      "message": "Is the problem that `factor` can be negative?",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "137f889d_2633f5c1",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5125
      },
      "writtenOn": "2023-10-02T08:41:42Z",
      "side": 1,
      "message": "factor should never be set to negative.\n(https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/common_audio/signal_processing/include/signal_processing_library.h;drc\u003d96315752d2499e12794507d6dea0c2652373754e;l\u003d665)\n\nIt would be good to add a DCHECK to ensure that does not happen.\n\nBut with factor being nonnegative I don\u0027t see why the change from size_t to int for i,j is needed.",
      "parentUuid": "eb9b50cd_5c477ce4",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24fccb64_2f0a00b1",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-02T10:20:44Z",
      "side": 1,
      "message": "It\u0027s the expression `i-j` below that can become negative. When i and j were size_t, `i-j` was a large size_t. Using this large number as an index apparently is interpreted as using a signed negative index. It works but it\u0027s undefined behavior, which ubsan has detected in the downstream project.\n\nDetails: https://stackoverflow.com/questions/48429021/is-a-pointer-considered-an-unsigned-value-in-c",
      "parentUuid": "137f889d_2633f5c1",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17d25a53_f301b51f",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5125
      },
      "writtenOn": "2023-10-09T06:47:06Z",
      "side": 1,
      "message": "But if i-j can become negative, that\u0027d then be indexing data_in with negative indices, which should be equally bad as indexing them with a large index.\nSo I don\u0027t really see that this solves anything?",
      "parentUuid": "24fccb64_2f0a00b1",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5076f4f8_0980e9d9",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-09T08:25:29Z",
      "side": 1,
      "message": "Negative index is not UB as long as the result is within the boundaries of the allocated array. data_in is a pointer to memory within the allocated array. Here is what generic implementation of downsample has to say: https://webrtc.googlesource.com/src/+/refs/heads/main/common_audio/signal_processing/downsample_fast.c#45",
      "parentUuid": "17d25a53_f301b51f",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7034add4_ce80b3dd",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5125
      },
      "writtenOn": "2023-10-09T08:30:13Z",
      "side": 1,
      "message": "True, and looking at the code calling this function (and the code calling the function that calls this function, etc) it seems that the intention is for negative indices to be used here.",
      "parentUuid": "5076f4f8_0980e9d9",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "457c1d84_970a6a85",
        "filename": "common_audio/signal_processing/downsample_fast_neon.c",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 18169
      },
      "writtenOn": "2023-10-09T10:17:57Z",
      "side": 1,
      "message": "Resolving.",
      "parentUuid": "7034add4_ce80b3dd",
      "range": {
        "startLine": 172,
        "startChar": 40,
        "endLine": 172,
        "endChar": 50
      },
      "revId": "14d20f21dc9edd216c3acc22307451072775606b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}