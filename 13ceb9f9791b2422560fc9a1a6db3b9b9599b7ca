{
  "comments": [
    {
      "key": {
        "uuid": "78d3cd18_04c91680",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 603,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-17T13:36:21Z",
      "side": 1,
      "message": "may it should allowed on flexfec ssrc too.\n(since if rtx is not configured but flexfec is, then it make sense to use flexfec both for re-transmission and padding).\nBut, since that is not implemented, do not see reason to allow it now.",
      "revId": "13ceb9f9791b2422560fc9a1a6db3b9b9599b7ca",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1acf403_08e23a0f",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1978,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-17T13:36:21Z",
      "side": 1,
      "message": "please be consistent with [new] parameters order, i.e., like in previous function use\nASSERT_EQ(value_under_test, kConstant)",
      "range": {
        "startLine": 1978,
        "startChar": 2,
        "endLine": 1978,
        "endChar": 15
      },
      "revId": "13ceb9f9791b2422560fc9a1a6db3b9b9599b7ca",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec9ea0f3_22d08156",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2001,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-17T13:36:21Z",
      "side": 1,
      "message": "these 3 lines can now be shorten to one:\nEXPECT_EQ(received_packet.GetExtension\u003cTransmissionOffset\u003e(), kDiffMs * 90);\n\n(Because GetExtension without value parameters return absl::optional\u003cvalue\u003e\nand optional can be directly compared to type it holds)",
      "range": {
        "startLine": 1999,
        "startChar": 0,
        "endLine": 2001,
        "endChar": 36
      },
      "revId": "13ceb9f9791b2422560fc9a1a6db3b9b9599b7ca",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "572b854f_9be394ba",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2042,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-17T13:36:21Z",
      "side": 1,
      "message": "may be add using alias for it, like for other ::testing classes",
      "range": {
        "startLine": 2042,
        "startChar": 2,
        "endLine": 2042,
        "endChar": 23
      },
      "revId": "13ceb9f9791b2422560fc9a1a6db3b9b9599b7ca",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b35077f_f13acdfd",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2090,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-17T13:36:21Z",
      "side": 1,
      "message": "this adds expectation there is no call to OnSendPacket with exactly these 3 values.\nMay be make the expectation stricter,\ne.g.\nEXPECT_CALL(send_packet_observer_, OnSendPacket(2, _, _)).Times(0);\ni.e. there is no callback for packet with tsn \u003d 2",
      "range": {
        "startLine": 2090,
        "startChar": 53,
        "endLine": 2090,
        "endChar": 78
      },
      "revId": "13ceb9f9791b2422560fc9a1a6db3b9b9599b7ca",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}