{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce83639_9185747b",
        "filename": "api/stats/rtc_stats.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-06T14:41:30Z",
      "side": 1,
      "message": "This is not in line with the style guide IMO, why can\u0027t this be \"std::string\"?",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5732fd1_c8379205",
        "filename": "api/stats/rtc_stats.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-06T14:46:52Z",
      "side": 1,
      "message": "On second thought, alito@ is converting std::string uses to absl::string_view. Can we use that?",
      "parentUuid": "5ce83639_9185747b",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12885d68_3b6529ad",
        "filename": "api/stats/rtc_stats.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-09-07T09:42:16Z",
      "side": 1,
      "message": "yes, webrtc is slowly adopting absl::string_view in the entire codebase. See webrtc:13579.\n\nHowever, I don\u0027t think we\u0027ve made a decision yet about whether to migrate code under api/ to absl::string_view. Since this is under the api/ directory, I suggest simply using std::string or const std::string\u0026 for now (unless there is a big performance gain from forcing moves with std::string\u0026\u0026, in which case we should have data points to verify that).",
      "parentUuid": "c5732fd1_c8379205",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe4c101_69fadb9a",
        "filename": "api/stats/rtc_stats.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-07T13:33:11Z",
      "side": 1,
      "message": "this is mostly about not loosing the existing performance (and I think we need it). Removing the const string\u0026 constructor which was only used it tests makes this more explicit\n\n(quite some back and forth between the patchsets... latest one removes the const again since that was indeed a style issue)",
      "parentUuid": "12885d68_3b6529ad",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8080004_758df563",
        "filename": "api/stats/rtc_stats.h",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-10-21T09:44:05Z",
      "side": 1,
      "message": "I still think that the correct constructor should be \"RTCStats(std::string id, ...)\" and to do \"id_(std::move(id))\".\n\nThis is not only in accordance with the style guide and consistent with how we do things in other places, but it also allows the caller to decide whether to call-by-copy or call-by-rvalue. I see no downsides of that.",
      "parentUuid": "cbe4c101_69fadb9a",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "856ccf8a_1c45a48e",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 828,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-06T14:43:50Z",
      "side": 1,
      "message": "You can still std::move() even if the argument takes std::string. The string will be created implicitly and passed without copy",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "974fb6af_df6750a5",
        "filename": "pc/rtc_stats_collector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1740,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-06T14:43:50Z",
      "side": 1,
      "message": "With std::string as the constructor argument, you don\u0027t need to wrap this in std::string... it will be copied implicitly.",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cbb0850_aeea6f0b",
        "filename": "stats/rtcstats_objects.cc",
        "patchSetId": 3
      },
      "lineNbr": 101,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-06T14:19:04Z",
      "side": 1,
      "message": "this copies but is rare, correct?",
      "revId": "ae8e5634839f87b0662bc6c00a3c1a5770cb73fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}