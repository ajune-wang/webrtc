{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1e5bea19_68b53f91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-08-23T00:26:09Z",
      "side": 1,
      "message": "Adding phancke@ due to IETF proposal here:\nhttps://datatracker.ietf.org/doc/draft-aboba-avtcore-hevc-webrtc/\n\nA few comments to the proposal:\n1. For level-id:\nYour proposal asks level-id to be explicitly signaled in SDP. However, RFC7798 assumes level 3.1 if this is not explicitly signaled. I think we should follow RFC 7798.\n\n2. For sprop-vps/sprop-sps/sprop-pps\nThe proposal suggests to ignore those params. My suggestion is to first look at in-band params, and if not existing, take those params from sdp.  As WebRTC offerer in Chrome, we may opt to not signal them, but we should allow them to exist from a remote offerer,and we\u0027d better honor them as we do in AVC.\n\n3. About max-cpb/max-dpb\nActual implementation rarely depends on them. My suggestion is not to handle them, but instead let encoder/decode decide by themselves.\n\n4. About max-fps/max-br\nI don\u0027t think it is good idea to signal them in SDP. We\u0027re already trying to avoid SDP mungling for bandwidth, we should avoid bring this back.",
      "revId": "821ac4d5151c534fc446b036ed642e40a36255d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5576baa2_87fb3abd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-08-23T00:51:56Z",
      "side": 1,
      "message": "Also would you consider adding a section about \"tx-mode\"?(https://datatracker.ietf.org/doc/html/rfc7798, section 4.3).\n\nTo simplify the implementation, we may opt to support SRST only to avoid multiple AP packet formats that introduces the complexity, and would need extra sprop-max-don-diff which agent don\u0027t know how to fill them.\n\nWe may suggest ignoring this and assume SRST.",
      "parentUuid": "1e5bea19_68b53f91",
      "revId": "821ac4d5151c534fc446b036ed642e40a36255d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55aae509_1d3909f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-08-23T10:55:34Z",
      "side": 1,
      "message": "Regarding 2)\n\nI\u0027m strongly in favor of not supporting out of band SPS/PPS/VPS. From my experience with H264, there were issues with the RTP spec of course (which is why we ended up with the non-standardized sps-pps-idr-in-keyframe fmtp), but there were also problems with the ecosystem of H264 encoders. Often we would find encoders that would not update the SPS/PPS ID, even if those parameter changed.\n\nI don\u0027t know if the same is true for H265 encoders, but I rather not take the risk because if the size of SPS+PPS+VPS is similar to H264 SPS+PPS (~30-50 bytes) then the potential bandwidth saving is meaningless, even in very low bitrate scenarios.",
      "parentUuid": "5576baa2_87fb3abd",
      "revId": "821ac4d5151c534fc446b036ed642e40a36255d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "595f21c0_afe2e602",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-24T07:19:35Z",
      "side": 1,
      "message": "Thanks for the feedback. Bernard Aboba filed a couple of issues against https://github.com/aboba/hevc-webrtc/issues, shall we continue the discussion there?\n\nFor (1) we\u0027ll update the draft. It looks like we violate the default for H264 and assume for 3.1 for backward compat reasons with \"old chrome versions\"... whoops:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/video_codecs/h264_profile_level_id.cc;l\u003d182;drc\u003d93f41097bb9b07efd4b8e7e4536b8bf920baa915;bpv\u003d1;bpt\u003d1\n\nFor (2) I agree with Philip. sprop-parameter-sets as a similar codepath for H264 however that codepath (H264SpropParameterSets::DecodeSprop) is very much untested in the browser. https://www.rfc-editor.org/rfc/rfc7742#section-6.2 also forbids that actually.\n\nFor (3) SHOULD interpret means it is ok not to do so for now so you don\u0027t need to add them so the implementation seems fine.\n\nRe (4) the VP8 equivalents of those, max-fr and max-fs are also a MUST in RFC 7741 yet the missing support for them one of the longest-standing WebRTC bugs:\nhttps://bugs.chromium.org/p/webrtc/issues/detail?id\u003d2488\n\nWhat the CL does looks compatible to the draft.",
      "parentUuid": "55aae509_1d3909f3",
      "revId": "821ac4d5151c534fc446b036ed642e40a36255d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec9c5306_833401aa",
        "filename": "api/video_codecs/h265_profile_tier_level.cc",
        "patchSetId": 5
      },
      "lineNbr": 164,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-08-23T10:55:34Z",
      "side": 1,
      "message": "nit: `profile_tier_level_specified \u003d true;`\n\nChange for tier and level as well",
      "range": {
        "startLine": 164,
        "startChar": 33,
        "endLine": 164,
        "endChar": 36
      },
      "revId": "821ac4d5151c534fc446b036ed642e40a36255d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fce33848_2776f2b1",
        "filename": "api/video_codecs/h265_profile_tier_level.cc",
        "patchSetId": 5
      },
      "lineNbr": 164,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-08-24T01:59:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec9c5306_833401aa",
      "range": {
        "startLine": 164,
        "startChar": 33,
        "endLine": 164,
        "endChar": 36
      },
      "revId": "821ac4d5151c534fc446b036ed642e40a36255d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}