{
  "comments": [
    {
      "key": {
        "uuid": "4598d885_bde8bc1e",
        "filename": "pc/media_session.cc",
        "patchSetId": 3
      },
      "lineNbr": 1863,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-06-03T21:57:00Z",
      "side": 1,
      "message": "Technically extmap-allow-mixed means that you can use both the one byte header extension format and the two byte header extension format in the same RTP stream. The spec assumed that anyone who implemented one byte header extensions would also implement two byte header extensions at the same time, so there\u0027s no SDP negotiation message for it. That didn\u0027t happen in libwebrtc though, so we now rely on extmap-allow-mixed to tell us that the other side supports two byte header extensions.\n\nCould you leave a couple sentences explaining that here? For posterity :)",
      "revId": "c78a02b0b748c8affcdcd3f0d326be1204696d13",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62b67d31_8a747e23",
        "filename": "pc/used_ids.h",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-06-03T21:57:00Z",
      "side": 1,
      "message": "Hmm, what do you think about adding an enum to make this more explicit:\n\nenum class IdDomain {\n  // Only allocate IDs that fit in one byte header extensions.\n  kOneByteOnly,\n  // Prefer to allocate one byte header extension IDs, but overflow to two byte if none are left.\n  kTwoByteAllowed,\n};",
      "range": {
        "startLine": 106,
        "startChar": 37,
        "endLine": 106,
        "endChar": 60
      },
      "revId": "c78a02b0b748c8affcdcd3f0d326be1204696d13",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e47b8a0_3fcbcf80",
        "filename": "pc/used_ids_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 69,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-06-03T21:57:00Z",
      "side": 1,
      "message": "I\u0027d suggest using a value parameterized test instead: https://github.com/google/googletest/blob/master/googletest/docs/advanced.md#value-parameterized-tests\n\nAt the very least it will improve the error message (tell you whether true or false).",
      "revId": "c78a02b0b748c8affcdcd3f0d326be1204696d13",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07364a0e_5e747414",
        "filename": "pc/used_ids_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-06-03T21:57:00Z",
      "side": 1,
      "message": "To be honest, I wonder if it would be better to e.g. drop the header extension with a warning rather than DCHECKing. But it\u0027s already like this so don\u0027t feel pressure to change it in this CL.",
      "revId": "c78a02b0b748c8affcdcd3f0d326be1204696d13",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}