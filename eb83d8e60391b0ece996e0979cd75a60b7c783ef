{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a411805f_0a6ad150",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-27T11:30:06Z",
      "side": 1,
      "message": "I think the sensible thing to do is to make all the Impl methods in final classes private (they override a protected method in the base class).\n\nAlso, I think you should introduce the API you want to expose at once. In cases where there are utilities on top of Thread that you don\u0027t care about enumerating, we want to pass the Location down from even higher levels, even if it is normally a \"silent argument defaulting to caller\".",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1e9df35_3240b464",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-02-27T11:43:23Z",
      "side": 1,
      "message": "Re the second statement, it\u0027s not possible yet. See the followup CL where I finally do this.",
      "parentUuid": "a411805f_0a6ad150",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d02cff8_d1030248",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-02-27T12:08:00Z",
      "side": 1,
      "message": "it is possible, though I\u0027m not sure how much values would it add to do it early:\ne.g.\n\n```\n// TODO(crbug.com/1416199): Uncomment default value for the location once virtual function below is removed.\nvoid PostTask(absl::AnyInvocable\u003cvoid() \u0026\u0026\u003e task,\n              Location location /* \u003d Location::Current() */) {\n  PostTaskImpl(std::move(task), PostTaskTraits{}, location);\n}\n\n// TODO(crbug.com/1416199): Remove once subclasses migrated.\nvirtual void PostTask(absl::AnyInvocable\u003cvoid() \u0026\u0026\u003e task) {\n  PostTaskImpl(std::move(task), PostTaskTraits{}, Location::Current());\n}\n```",
      "parentUuid": "d1e9df35_3240b464",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db9897f4_3f7c33cc",
        "filename": "api/task_queue/task_queue_base.h",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-27T11:30:06Z",
      "side": 1,
      "message": "So the point is that these are final methods?\n\nShould you add the signatures you want to be permanent (with Location) now, so that callers can start migrating? Or do you have a different scheme in mind?",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b14d5831_8dd3d0f5",
        "filename": "api/task_queue/task_queue_base.h",
        "patchSetId": 9
      },
      "lineNbr": 67,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-02-27T11:43:23Z",
      "side": 1,
      "message": "Sub classes currently override the PostTask/PostDelayed[HighPrecision]Task methods so I can\u0027t yet introduce the final form of the interface without breaching google c++ styleguide or without compiler errors (ambiguous calls). This can be done first when all sub classes switched to override the Impl methods, see the follow-up WebRTC CL in the relation chain.",
      "parentUuid": "db9897f4_3f7c33cc",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c251c23_20594d8a",
        "filename": "rtc_base/task_queue_gcd.cc",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-27T11:30:06Z",
      "side": 1,
      "message": "Should these be protected or private, since they\u0027re not intended to be visible to the normal users?",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1df2bf96_cf1cbf02",
        "filename": "rtc_base/task_queue_gcd.cc",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-02-27T11:43:23Z",
      "side": 1,
      "message": "This implementation\u0027s type isn\u0027t visible to normal users so access is blocked from them anyway as they use the TaskQueueBase interface, i.e. doesn\u0027t matter. Nevertheless inserted a protected in final classes.",
      "parentUuid": "2c251c23_20594d8a",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "481a43c7_ef66b9c7",
        "filename": "rtc_base/task_queue_libevent.cc",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-27T11:30:06Z",
      "side": 1,
      "message": "Same comment about visibility here.",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5d863c4_5d403ecf",
        "filename": "rtc_base/task_queue_libevent.cc",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-02-27T11:43:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "481a43c7_ef66b9c7",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "827ec9aa_5b40f897",
        "filename": "rtc_base/task_queue_stdlib.cc",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-27T11:30:06Z",
      "side": 1,
      "message": "And here.",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ef0fbda_68599e5c",
        "filename": "rtc_base/task_queue_stdlib.cc",
        "patchSetId": 9
      },
      "lineNbr": 55,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-02-27T11:43:23Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "827ec9aa_5b40f897",
      "revId": "eb83d8e60391b0ece996e0979cd75a60b7c783ef",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}