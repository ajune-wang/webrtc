{
  "comments": [
    {
      "key": {
        "uuid": "fadd56c4_eae7415e",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 16
      },
      "lineNbr": 200,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "0 is probably not valid.",
      "range": {
        "startLine": 200,
        "startChar": 62,
        "endLine": 200,
        "endChar": 65
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8c13e4f_d6faadbd",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 16
      },
      "lineNbr": 200,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "Can you suggest a more reasonable value? It\u0027s not clear to me what it is used for. Non-zero target_rate was important to get tests working.",
      "parentUuid": "fadd56c4_eae7415e",
      "range": {
        "startLine": 200,
        "startChar": 62,
        "endLine": 200,
        "endChar": 65
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c61881ac_664e7de5",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 16
      },
      "lineNbr": 200,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-17T17:48:40Z",
      "side": 1,
      "message": "I\u0027ve seen 3000 in real life :)",
      "parentUuid": "c8c13e4f_d6faadbd",
      "range": {
        "startLine": 200,
        "startChar": 62,
        "endLine": 200,
        "endChar": 65
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4afdf3e3_af480d92",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 16
      },
      "lineNbr": 200,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-18T13:58:11Z",
      "side": 1,
      "message": "Ok, set to 3 seconds.",
      "parentUuid": "c61881ac_664e7de5",
      "range": {
        "startLine": 200,
        "startChar": 62,
        "endLine": 200,
        "endChar": 65
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce379e44_ee682611",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 16
      },
      "lineNbr": 220,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "you can DCHECK in destructor that this list is empty.",
      "range": {
        "startLine": 220,
        "startChar": 2,
        "endLine": 220,
        "endChar": 33
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291158f4_8f30552d",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 16
      },
      "lineNbr": 220,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce379e44_ee682611",
      "range": {
        "startLine": 220,
        "startChar": 2,
        "endLine": 220,
        "endChar": 33
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db725369_69f2d844",
        "filename": "call/call.cc",
        "patchSetId": 16
      },
      "lineNbr": 759,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "since this is a DCHECK, should the CritScope lock be part of the dcheck? We don\u0027t need a lock if we are not going to CHECK (in production).",
      "range": {
        "startLine": 759,
        "startChar": 4,
        "endLine": 759,
        "endChar": 15
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40bf6e81_6a7cd65c",
        "filename": "call/call.cc",
        "patchSetId": 16
      },
      "lineNbr": 759,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "Added an accessor method taking the lock, and used from the DCHECKs.",
      "parentUuid": "db725369_69f2d844",
      "range": {
        "startLine": 759,
        "startChar": 4,
        "endLine": 759,
        "endChar": 15
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ca6dbb_6b56f307",
        "filename": "call/call.cc",
        "patchSetId": 16
      },
      "lineNbr": 759,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-17T17:48:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40bf6e81_6a7cd65c",
      "range": {
        "startLine": 759,
        "startChar": 4,
        "endLine": 759,
        "endChar": 15
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6e0d274_09a7e006",
        "filename": "call/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 73,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "should we DCHECK that both are not set at the same time? (or do we expect rtcp_send_transport to still be present while media transport is used?).\n\nSo far we assumed that RTP codepath coexists and is present while media_transport is used, but if it is possible to check RTP \u003d null, that would be even better.",
      "range": {
        "startLine": 73,
        "startChar": 39,
        "endLine": 73,
        "endChar": 41
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccc86058_5cdbc718",
        "filename": "call/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 73,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "I don\u0027t think we can do that yet.",
      "parentUuid": "c6e0d274_09a7e006",
      "range": {
        "startLine": 73,
        "startChar": 39,
        "endLine": 73,
        "endChar": 41
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eea95249_5f599a55",
        "filename": "call/video_send_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 72,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "ditto: can we check that send_transport is null?",
      "range": {
        "startLine": 72,
        "startChar": 71,
        "endLine": 72,
        "endChar": 73
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02fd08f3_8468aad9",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 16
      },
      "lineNbr": 1341,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "if media transport is used, should we either replace this, or remove this code? if not, can we add a todo?",
      "range": {
        "startLine": 1338,
        "startChar": 2,
        "endLine": 1341,
        "endChar": 5
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f61e286c_734a4d1a",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 16
      },
      "lineNbr": 1341,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "I\u0027m afraid it\u0027s unclear to me what stats we should populate for MediaTransport, both short-term and long term.",
      "parentUuid": "02fd08f3_8468aad9",
      "range": {
        "startLine": 1338,
        "startChar": 2,
        "endLine": 1341,
        "endChar": 5
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c233584_ff49d4c8",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 16
      },
      "lineNbr": 1341,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-17T17:48:40Z",
      "side": 1,
      "message": "Can we add a todo / bug to webrtc?",
      "parentUuid": "f61e286c_734a4d1a",
      "range": {
        "startLine": 1338,
        "startChar": 2,
        "endLine": 1341,
        "endChar": 5
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e784dd2_926f33bf",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 16
      },
      "lineNbr": 1341,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-18T13:58:11Z",
      "side": 1,
      "message": "Added a TODO.",
      "parentUuid": "7c233584_ff49d4c8",
      "range": {
        "startLine": 1338,
        "startChar": 2,
        "endLine": 1341,
        "endChar": 5
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fb4d233_db939c5d",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "you should probably subscribe to media_transport and get those events as well.",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63878bce_98883655",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "Exactly what should we subscribe to? I think AddTargetTransferRateObserver should be send-side only.",
      "parentUuid": "8fb4d233_db939c5d",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb3f5c81_756b7979",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-17T17:48:40Z",
      "side": 1,
      "message": "Rtt should be the same for both, so subscribing to AddTargetTransferRateObserver to get the Rtt sounds reasonable. Not sure why video receive needs it (but I can imagine for nacks or jitter buffer size), but if it needs it, AddTargetTransferRateObserver is the way to get it.",
      "parentUuid": "63878bce_98883655",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50ab201a_484f149a",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-18T13:58:11Z",
      "side": 1,
      "message": "I\u0027m thinking that the main purpose of TargetTransferRateObserver is to get the rate to use for sending, so it doesn\u0027t seem appropriate on receive side.\n\nI think you\u0027re right that the receive side uses it in some way for nack and for jitter estimation.\n\nOk to just add a TODO item for now?\n\nBTW, it seems avg_rtt_ms is unused, maybe there\u0027s some code to delete.",
      "parentUuid": "fb3f5c81_756b7979",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09f74cc7_60f465ef",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 7029
      },
      "writtenOn": "2018-12-18T15:13:06Z",
      "side": 1,
      "message": "Leaving it without RTT makes the integration incomplete, and at least in the audio case it was providing subpar quality. So we definitely need this implemented - TODO is fine, but we need to address it (and it\u0027s not much code).\n\nWhile I agree that TargetTransferRateObserver is mainly used for the sender, the callers rtt should \u003d callee\u0027s rtt, and for the purposes of getting current RTT, using that targetrateobserver should be ok. If we think it\u0027s not, we can add another callback \u0027onrttchanged\u0027 in media transport interface - in which case please add it an I\u0027ll make sure downstream implementation implements it.\n\nWe actually don\u0027t report \u0027avg_rtt\u0027 or \u0027max_rtt\u0027 in target transfer rate, so maybe we need to add a callback (though we would need to define what \u0027avg\u0027 is, and what \u0027max\u0027 is (over what time?)) - it looks like it looks at 1.5 second of connection\n static constexpr const int64_t kRttTimeoutMs \u003d 1500;",
      "parentUuid": "50ab201a_484f149a",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02f029dd_b0e02d8d",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-18T15:21:28Z",
      "side": 1,
      "message": "\u003e While I agree that TargetTransferRateObserver is mainly used for the sender,\n\nAs I see it, TargetTransferRate is signaling from the congestion controller, and for a receive-only call, that call makes no sense.\n\nJust discussed RTT signalling with Sebastian, and it seems it\u0027s a bit of a mess, but we think it ought to be handled separately for send and receive. The current situation, where CallStats produces two values \"max\" and \"avg\", where max only is used by receive streams, and avg only is used (in a quastionable way) on the send side.\n\n\u003e  If we think it\u0027s not, we can add another callback \u0027onrttchanged\u0027 in media transport interface - in which case please add it an I\u0027ll make sure downstream implementation implements it.\n\nOk, I\u0027ll try to do that tomorrow, with a note that when we split into send/receive interfaces, it would belong to the receive side.\n\n\u003e We actually don\u0027t report \u0027avg_rtt\u0027 or \u0027max_rtt\u0027 in target transfer rate, so maybe we need to add a callback (though we would need to define what \u0027avg\u0027 is, and what \u0027max\u0027 is (over what time?)) - it looks like it looks at 1.5 second of connection\n\nI\u0027d guess the current filtering in CallStats is a bit arbitrary, and not necessarily right for the things the rtt measurement is ultimately used for.",
      "parentUuid": "09f74cc7_60f465ef",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abbc706d_5d315e32",
        "filename": "video/video_receive_stream.cc",
        "patchSetId": 16
      },
      "lineNbr": 445,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-19T14:02:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "02f029dd_b0e02d8d",
      "range": {
        "startLine": 445,
        "startChar": 25,
        "endLine": 445,
        "endChar": 36
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41969d40_997df909",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 281,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "what are those observers used for? do they decide any mission-critical things? (fps/bitrate/etc.?). If yes, do we need to implement them for media transport?",
      "range": {
        "startLine": 278,
        "startChar": 9,
        "endLine": 281,
        "endChar": 44
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6546b87_0ca4555b",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 281,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "That\u0027s also a bit unclear to me. I think most of them are either for stats or rtcp signalling.\n\nI don\u0027t think we need anything for this cl.",
      "parentUuid": "41969d40_997df909",
      "range": {
        "startLine": 278,
        "startChar": 9,
        "endLine": 281,
        "endChar": 44
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b93cd651_e9b3bb3d",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 610,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "+philipel@ I\u0027d like to resolve this :-) and I think this is a perfect time to do so. We can discuss this next week.",
      "range": {
        "startLine": 609,
        "startChar": 21,
        "endLine": 610,
        "endChar": 28
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b9d3931_60769774",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 612,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "how does it work with simulcast or temporal/spatial layers?",
      "range": {
        "startLine": 612,
        "startChar": 17,
        "endLine": 612,
        "endChar": 42
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20471728_a5d464d8",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 612,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "For RTP, and the standard packetization, I think frame_ids are expected to be continuous on each ssrc. So for simulcast, we\u0027d need one counter per layer. For the new frame descriptor, I\u0027m not sure what an id means.",
      "parentUuid": "6b9d3931_60769774",
      "range": {
        "startLine": 612,
        "startChar": 17,
        "endLine": 612,
        "endChar": 42
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d57c4d7a_1183b724",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 617,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "this is what we did before, and works fine for basic codec scenarios, though we probably should take these parameters from EncodedFrame.\n\nDo we have access to encoded frame here? Can we get it? (EncodedFrame already contains frame_id and reference frame ids)\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/api/video/encoded_frame.h?l\u003d80\u0026rcl\u003df7f13e0742a999c991ea3d2871dd99a042736c28",
      "range": {
        "startLine": 617,
        "startChar": 6,
        "endLine": 617,
        "endChar": 51
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58ac1ca3_009c37b9",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 617,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "EncodedFrame is not used on the send side. I think we should strive to provide this info earlier, possibly lettinf VideoStreamEncoder be responsible.",
      "parentUuid": "d57c4d7a_1183b724",
      "range": {
        "startLine": 617,
        "startChar": 6,
        "endLine": 617,
        "endChar": 51
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0da7b06_7fafa9dc",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 620,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-12-13T17:57:35Z",
      "side": 1,
      "message": "should we DCHECK that there is only one there?",
      "range": {
        "startLine": 620,
        "startChar": 26,
        "endLine": 620,
        "endChar": 30
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50a18322_edf38c8f",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 16
      },
      "lineNbr": 620,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-14T15:11:29Z",
      "side": 1,
      "message": "We could do that in the constructor. But this should change anyway when we get to demuxing inside media transport.",
      "parentUuid": "a0da7b06_7fafa9dc",
      "range": {
        "startLine": 620,
        "startChar": 26,
        "endLine": 620,
        "endChar": 30
      },
      "revId": "509b672330b92f2da2e909b7f7b4ac0cdf9e162d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}