{
  "comments": [
    {
      "key": {
        "uuid": "f7fc49dc_c0987537",
        "filename": "rtc_base/task_utils/repeating_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-05-18T11:33:09Z",
      "side": 1,
      "message": "If we fall back to Clock::GetRealtimeClock() we don\u0027t need this.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 25,
        "endChar": 1
      },
      "revId": "ebfc3673ab49c12969a1fc449660a45b765986b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a46432e7_456df3f8",
        "filename": "rtc_base/task_utils/repeating_task.cc",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-05-18T12:16:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7fc49dc_c0987537",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 25,
        "endChar": 1
      },
      "revId": "ebfc3673ab49c12969a1fc449660a45b765986b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd432c0a_9ba9d17b",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-05-18T11:33:09Z",
      "side": 1,
      "message": "Can we fall back to Clock::GetRealTimeClock()? That way we don\u0027t need to special case things.",
      "range": {
        "startLine": 58,
        "startChar": 51,
        "endLine": 58,
        "endChar": 56
      },
      "revId": "ebfc3673ab49c12969a1fc449660a45b765986b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "582dee7e_442a7556",
        "filename": "rtc_base/task_utils/repeating_task.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-05-18T12:16:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd432c0a_9ba9d17b",
      "range": {
        "startLine": 58,
        "startChar": 51,
        "endLine": 58,
        "endChar": 56
      },
      "revId": "ebfc3673ab49c12969a1fc449660a45b765986b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "952829df_cdb66eea",
        "filename": "rtc_base/task_utils/repeating_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-05-18T11:33:09Z",
      "side": 1,
      "message": "If you use SimulatedTimeController to create a simulated task queue, you can avoid a bunch of the boiler plate (and avoid the clock injection if you want to)",
      "range": {
        "startLine": 253,
        "startChar": 1,
        "endLine": 253,
        "endChar": 37
      },
      "revId": "ebfc3673ab49c12969a1fc449660a45b765986b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22cda833_503d3f3a",
        "filename": "rtc_base/task_utils/repeating_task_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-05-18T12:16:13Z",
      "side": 1,
      "message": "supporting and testing the clock injection is though what wanted to do and test.\nI looked into SimulatedTimeController but I think it\u0027s overkill for this particular test. I only need to mock one function to get the functionality I need and then everything runs inline.",
      "parentUuid": "952829df_cdb66eea",
      "range": {
        "startLine": 253,
        "startChar": 1,
        "endLine": 253,
        "endChar": 37
      },
      "revId": "ebfc3673ab49c12969a1fc449660a45b765986b5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}