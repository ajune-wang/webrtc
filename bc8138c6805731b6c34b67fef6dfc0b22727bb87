{
  "comments": [
    {
      "key": {
        "uuid": "164700ae_245acc7b",
        "filename": "audio/channel_receive.h",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T13:08:20Z",
      "side": 1,
      "message": "Optional nit: I prefer \"received\" to \"rcvd\"",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "265af1f5_dbe48b79",
        "filename": "audio/channel_receive.h",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-10-09T14:15:43Z",
      "side": 1,
      "message": "I\u0027m leaving as is, for consistency with code copying this value around. media_channel.h uses \"_rcvd\". Other than that, I\u0027m not fond of the \"rcvd\" abbreviation either.",
      "parentUuid": "164700ae_245acc7b",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd58fbad_3f608ea5",
        "filename": "pc/stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T13:08:20Z",
      "side": 1,
      "message": "Do we still need to maintain MediaSenderInfo::bytes_sent and MediaReceiverInfo::bytes_rcvd given that we calculate bytes_sent and bytes_received by summing up the payload and headers here?\n\nIf the answer is \"yes\" due to downstream projects that\u0027s fine.",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11b239f1_2be48554",
        "filename": "pc/stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-10-09T14:15:43Z",
      "side": 1,
      "message": "They\u0027re (and the corresponding Audio*Stream::Stats members) are used downstream. So we need to land this, update downstream code, and then delete the old members.",
      "parentUuid": "fd58fbad_3f608ea5",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "217bbd20_1a1d0e75",
        "filename": "pc/stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T14:23:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "11b239f1_2be48554",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5734a26b_7d305888",
        "filename": "pc/stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T13:08:20Z",
      "side": 1,
      "message": "It is strange to me that a test-only flag has to be controlled with a field trial, rather than the tests just explicitly setting the boolean with an API? But I guess these are devices running chrome or similar builds where the flags are the only control surfaces rather than unittest.cc files that can set up the environment as it sees fit?\n\nNot asking you to change anything in this CL. Given that we do use a field trial, I am happy to see it limited to the StatsCollector instead of deeper down layers. This is an improvement!",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b03a69a6_c6dc5135",
        "filename": "pc/stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-10-09T14:15:43Z",
      "side": 1,
      "message": "Maybe the field trial was a mistake. At the time, I guess the plan was to migrate both flavors of GetStats to count payload bytes only, but give applications control over how they migrate.\n\nIf the current plan, to update standard GetStats only, works out, the field trial won\u0027t be that useful.",
      "parentUuid": "5734a26b_7d305888",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfd96574_7583f940",
        "filename": "pc/stats_collector.cc",
        "patchSetId": 3
      },
      "lineNbr": 503,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-09T14:23:08Z",
      "side": 1,
      "message": "Not sure maybe I got confused but I got the impression that another part of the reason why it was made a field trial was to allow Meet to tell the difference in their dashboards (so they don\u0027t think it\u0027s a regression), which I don\u0027t think justifies rolling out the bugfix as an \"experiment\" for the rest of the web.\n\nI guess now the field trial will remain disabled-by-default only to be used by bots, and Meet can continue to look at the old numbers from legacy stats as they see fit.",
      "parentUuid": "b03a69a6_c6dc5135",
      "revId": "bc8138c6805731b6c34b67fef6dfc0b22727bb87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}