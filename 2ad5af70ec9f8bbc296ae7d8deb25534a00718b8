{
  "comments": [
    {
      "key": {
        "uuid": "edf96ba1_0596302b",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-09T18:33:49Z",
      "side": 1,
      "message": "Typo",
      "range": {
        "startLine": 292,
        "startChar": 41,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7fa0327_754f166c",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-09T22:55:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edf96ba1_0596302b",
      "range": {
        "startLine": 292,
        "startChar": 41,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "185d1019_515d1781",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-11T01:17:05Z",
      "side": 1,
      "message": "Still seems present in patch set 7, FWIW",
      "parentUuid": "a7fa0327_754f166c",
      "range": {
        "startLine": 292,
        "startChar": 41,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49af585a_7f11de9c",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 292,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-11T20:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "185d1019_515d1781",
      "range": {
        "startLine": 292,
        "startChar": 41,
        "endLine": 292,
        "endChar": 47
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f179ce3c_809d4b79",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-09T18:33:49Z",
      "side": 1,
      "message": "Hi Julien, thanks for working to address this issue. A couple suggestions on ways to partially mitigate the perf impact of this change, by making it more likely that the crop-from-screen path is used instead of the now-slower PrintWindow path:\n\n1. It might make sense to fix https://crbug.com/973245 prior to or in tandem with this change (i.e. in the same Chromium release that picks up this webrtc change). That would allow window capture via getDisplayMedia to use the cropping capturer when the window\u0027s only occluded by the sharing notification bar, including this in the output. This would match the behavior of window capture from extensions (via the chrome.desktopCapture API) \u0026 of the window capture support that predated getDisplayMedia (via non-standard constraints passed to getUserMedia).\n\n2. As suggested on https://crbug.com/webrtc/10734#c2 , perhaps using the cropping capturer shouldn\u0027t require explicit opt-in from client code. A change to use that by default (when appropriate) would benefit Firefox, for instance, by making the now-slower path less likely to be taken.",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b988420_a2d00f9a",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-09T22:55:35Z",
      "side": 1,
      "message": "Improving 1) can be done separately. This CL does not impact the perf, as the fallback was already there. This CL just fixes the fallback. But yes it is a good idea for 1). Let\u0027s improve things one step after another.\n\n2) sounds a good idea too. In any case it has to be done separately to keep one CL per functionality.",
      "parentUuid": "f179ce3c_809d4b79",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4b8dd41_7e752dae",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-11T01:17:05Z",
      "side": 1,
      "message": "I think this CL does impact the capture perf when this path is used. Calling PrintWindow with the flag was significantly slower in my testing (~3-12x) than calling BitBlt, which the existing code typically uses for occluded windows or in client apps that didn\u0027t opt in to using CroppingWindowCapturer when appropriate.\n\nMaking those mitigating changes in the same Chromium / WebRTC release containing this change may reduce its perf impact.\n\nIf 2) is to be done on a separate CL, should a separate issue be filed to track that, or can the second CL reference the same issue?",
      "parentUuid": "2b988420_a2d00f9a",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94fed32b_97445922",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-11T20:43:20Z",
      "side": 1,
      "message": "I think I got it, what about adding a constructor parameter \"use_flaged_print_window\" to the \"WindowCapturerWin\" that would be false by default. So then the perf impact won\u0027t be affected by default. And then the CroppingWindowCaptureWindow will just set this parameter to true.\nWhat do you think ?",
      "parentUuid": "b4b8dd41_7e752dae",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c38576c_18deff97",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 9565
      },
      "writtenOn": "2019-07-12T02:54:44Z",
      "side": 1,
      "message": "this WindowCapturer is also used by chromium\u0027s window picker, the PW_RENDERFULLCONTENT should be enabled so the window picker can get the content of \"Hardware accelerated\" apps",
      "parentUuid": "94fed32b_97445922",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46086513_311da3f9",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-15T07:01:18Z",
      "side": 1,
      "message": "Ah, interesting -- I\u0027d assumed the Chromium window picker was showing black previews for Electron apps / other Chromium instances because they weren\u0027t eligible for crop-from-screen capture at the time (because they weren\u0027t foreground / non-occluded). I see now that black previews are shown even when these windows are eligible for crop-from-screen capture.\n\nRegarding the constructor parameter suggestion: I suppose this would leave this bug unresolved for browsers / apps that have picked up a WebRTC version with this change but haven\u0027t opted in to using CroppingWindowCapturer. Notably, Firefox if this bug remains unresolved: https://bugzilla.mozilla.org/show_bug.cgi?id\u003d1559011 .\n\nRather than introduce further behavioral differences around whether CroppingWindowCapturer is used / attempted, it might be preferable to make that the default (remove the need to opt in by having DesktopCapturer::CreateWindowCapturer call CroppingWindowCapturer::CreateCapturer).\n\nCorrectness / reliability of the captured frames should perhaps take priority over performance, when a choice must be made. My original suggestions were around trying to avoid unnecessary perf impact when possible, but I think there are some cases where perf impact is unavoidable (short of special-casing captured app identities somehow, which\u0027d pose completeness \u0026 maintainability challenges).",
      "parentUuid": "1c38576c_18deff97",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25238187_e8bbf2af",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 296,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-15T16:20:15Z",
      "side": 1,
      "message": "Thx you both for your inputs, if I understand correctly, you are happy with the latest state of this CL.",
      "parentUuid": "46086513_311da3f9",
      "range": {
        "startLine": 295,
        "startChar": 15,
        "endLine": 296,
        "endChar": 63
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd2685ae_02ab8b49",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-09T18:33:49Z",
      "side": 1,
      "message": "I think this flag is only available on Windows 8.1+ (at least, it\u0027s conditionally declared in WinUser.h based on the corresponding _WIN32_WINNT version value). I haven\u0027t tested the behavior of passing this flag on Windows 8, but suspect it may fail (at least in recent Windows versions, PrintWindow fails if passed an unknown flag).\n\nTrying to detect whether the OS version is Win8.1+ would depend on how the application is manifested (per https://docs.microsoft.com/en-us/windows/win32/api/sysinfoapi/nf-sysinfoapi-getversionexw ). To avoid potential false negatives in any client apps that aren\u0027t manifested for Win8.1+, perhaps it\u0027d make sense to try the call with the flag on Win8+, and fall back to the existing logic on failure. (I.e. calling PrintWindow without any flags if either of the existing conditions is met before falling back to BitBlt.)",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 300,
        "endChar": 44
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd3accb_954d8eb7",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-09T22:55:35Z",
      "side": 1,
      "message": "Thx for the suggestion and the details, I fixed that in latest Patch Set. Please take a look. Thx!",
      "parentUuid": "bd2685ae_02ab8b49",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 300,
        "endChar": 44
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fdcac64_bf91efc6",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 9572
      },
      "writtenOn": "2019-07-11T01:17:05Z",
      "side": 1,
      "message": "Looks good, thanks. Consider updating the commit title / description to change some of the instances of Win8 to Win8.1.",
      "parentUuid": "4dd3accb_954d8eb7",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 300,
        "endChar": 44
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e92208fc_a7dce3b0",
        "filename": "modules/desktop_capture/window_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 300,
      "author": {
        "id": 6236
      },
      "writtenOn": "2019-07-11T20:43:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fdcac64_bf91efc6",
      "range": {
        "startLine": 297,
        "startChar": 2,
        "endLine": 300,
        "endChar": 44
      },
      "revId": "2ad5af70ec9f8bbc296ae7d8deb25534a00718b8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}