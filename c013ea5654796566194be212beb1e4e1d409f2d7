{
  "comments": [
    {
      "key": {
        "uuid": "e0ec71ad_7cb177ce",
        "filename": "modules/rtp_rtcp/source/time_util.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-27T08:22:25Z",
      "side": 1,
      "message": "Avoid lower-case l, since it\u0027s so close to 1. Prefer uppercase L or cast expression.",
      "range": {
        "startLine": 52,
        "startChar": 36,
        "endLine": 52,
        "endChar": 39
      },
      "revId": "c013ea5654796566194be212beb1e4e1d409f2d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fffe9af5_58d0a567",
        "filename": "modules/rtp_rtcp/source/time_util.cc",
        "patchSetId": 5
      },
      "lineNbr": 52,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-27T13:00:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0ec71ad_7cb177ce",
      "range": {
        "startLine": 52,
        "startChar": 36,
        "endLine": 52,
        "endChar": 39
      },
      "revId": "c013ea5654796566194be212beb1e4e1d409f2d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c141d16_bfc4e9cd",
        "filename": "modules/rtp_rtcp/source/time_util.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-27T08:22:25Z",
      "side": 1,
      "message": "\"Diverge\" is a bit vague. I see two cases: rtc::TimeMicros runnign at a sligthly different frequency than utc/ntp time, and hence drifting away. That shouldn\u0027t happen on linux (CLOCK_MONOTONIC obeys the adjtime calls done by the ntp daemon), but not sure how other systems behave.\n\nAnd the conversion will not track system time changes like settimeofday.\n\nWould be clarify what differences to expect.",
      "range": {
        "startLine": 21,
        "startChar": 53,
        "endLine": 21,
        "endChar": 60
      },
      "revId": "c013ea5654796566194be212beb1e4e1d409f2d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39e993ab_d087576c",
        "filename": "modules/rtp_rtcp/source/time_util.h",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-27T13:00:51Z",
      "side": 1,
      "message": "sorry, I do not know time topic that deep, and I\u0027m not sure these kind of details matters here.\n\nComment rewritten to stress TimeMicrosToNtp follows rtc::TimeMicros clock rather than (not mentioned as implementation detail) rtc::TimeUTCMicros() clock ,\nadded a test.",
      "parentUuid": "8c141d16_bfc4e9cd",
      "range": {
        "startLine": 21,
        "startChar": 53,
        "endLine": 21,
        "endChar": 60
      },
      "revId": "c013ea5654796566194be212beb1e4e1d409f2d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0927205b_bb1f8c65",
        "filename": "modules/rtp_rtcp/source/time_util_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-27T08:22:25Z",
      "side": 1,
      "message": "Use EXPECT_NEAR?",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 11
      },
      "revId": "c013ea5654796566194be212beb1e4e1d409f2d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "313607fc_68671b97",
        "filename": "modules/rtp_rtcp/source/time_util_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 30,
      "author": {
        "id": 5019
      },
      "writtenOn": "2017-11-27T13:00:51Z",
      "side": 1,
      "message": "No, do not want to assume taking time is fast operation.\n\nInstead time is taken both before and after sampling legacy_clock.\n\nif taking time is fast operation, new_time1 will be same as new_time3 covering what EXPECT_NEAR suppose to test.",
      "parentUuid": "0927205b_bb1f8c65",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 11
      },
      "revId": "c013ea5654796566194be212beb1e4e1d409f2d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}