{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b09c2a3f_6b3358fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-09T12:02:49Z",
      "side": 1,
      "message": "So the point is to distinguish FieldTrialsView::Lookup (which can check validity) from FieldTrials::GetValue (which doesn\u0027t check)?\n\nDoesn\u0027t seem like much of a reason for a name change to me, but OK....",
      "revId": "6490e558b01751405ec788588c7066b8e95e177c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47895eff_2ba4336d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-08-09T13:02:42Z",
      "side": 1,
      "message": "Yes, it was just easier to update the interface than all the call-sites.\n\nI could e.g. keep Lookup as (but make it private) and add a LookupAndValidate.",
      "parentUuid": "b09c2a3f_6b3358fc",
      "revId": "6490e558b01751405ec788588c7066b8e95e177c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60d8216a_39899d54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-10T08:55:09Z",
      "side": 1,
      "message": "LGTM stands (modulo fixing the compile errors, of course).\n\n",
      "revId": "6490e558b01751405ec788588c7066b8e95e177c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75dd9d24_f9caa0e1",
        "filename": "api/field_trials.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-09T12:02:49Z",
      "side": 1,
      "message": "While you\u0027re changing this stuff around - why does Lookup() / GetValue() return a copy of the string and not an absl::string_view?",
      "revId": "6490e558b01751405ec788588c7066b8e95e177c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68fb6b91_46c7a8ce",
        "filename": "api/field_trials.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 13704
      },
      "writtenOn": "2022-08-09T13:02:42Z",
      "side": 1,
      "message": "If it had returned `const std::string\u0026` it would be a no-brainer to change to `string_view`. However, the field trial string should be owned by or outlive a concrete `FieldTrialsView` so I think it should be possible to change both to `string_view`. I could do that as a follow-up?",
      "parentUuid": "75dd9d24_f9caa0e1",
      "revId": "6490e558b01751405ec788588c7066b8e95e177c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5272a660_8117df18",
        "filename": "api/field_trials.cc",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-10T08:55:09Z",
      "side": 1,
      "message": "Follow-up seems nice.",
      "parentUuid": "68fb6b91_46c7a8ce",
      "revId": "6490e558b01751405ec788588c7066b8e95e177c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "6490e558b01751405ec788588c7066b8e95e177c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6490e558b01751405ec788588c7066b8e95e177c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}