{
  "comments": [
    {
      "key": {
        "uuid": "0e7bb17c_59f488d7",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-16T12:16:41Z",
      "side": 1,
      "message": "It\u0027s this .reset call that ensures that the RtcpTransciverImpl is destroyed on the TaskQueue?\n\nMaybe add a comment, to make it obvious that this is the main operation of the task.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 30
      },
      "revId": "de8aa89203c5ffe5bf41f2546671d753a1acec17",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d51d1d9_af1882b5",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-16T12:16:41Z",
      "side": 1,
      "message": "And in case PostTask never posted the task, this will hang forever, right? I wish we could get that issue solved soon (cl https://webrtc-review.googlesource.com/c/src/+/15221).",
      "range": {
        "startLine": 45,
        "startChar": 0,
        "endLine": 45,
        "endChar": 34
      },
      "revId": "de8aa89203c5ffe5bf41f2546671d753a1acec17",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4caa7b52_48c79de3",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-16T12:16:41Z",
      "side": 1,
      "message": "Is this local variable required, or could we put ptr_ directly in the capture list? (still with capture by copy). And similarly for the other functions.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 47
      },
      "revId": "de8aa89203c5ffe5bf41f2546671d753a1acec17",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60c3baef_9651014c",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 76,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-16T12:16:41Z",
      "side": 1,
      "message": "Not sure what\u0027s the best style here. I think it would have been clearer to me to define a subclass of QueuedTask, and call tq_-\u003ePostTask(rtc::MakeUnique\u003cSetRembTask\u003e(...));\n\nAlso using struct initializer list is concise, but somewhat unusual in out code. I would have expected a boiler-plate constructor",
      "range": {
        "startLine": 76,
        "startChar": 24,
        "endLine": 76,
        "endChar": 38
      },
      "revId": "de8aa89203c5ffe5bf41f2546671d753a1acec17",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0ee77bd_c024f6ec",
        "filename": "modules/rtp_rtcp/source/rtcp_transceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-11-16T12:16:41Z",
      "side": 1,
      "message": "Would it make sense to add this as a utility function somewhere? It\u0027s a common pattern in tests (and also used in a few places outside of tests). One-line uses can be found with \n\ngit grep \u0027PostTask.*\\.Set\u0027\n\nWe shouldn\u0027t encourage use of this pattern in non-test code though, where it is used in cleanup code I think the weak-ptr thing you do in this cl is the preferred approach.",
      "range": {
        "startLine": 29,
        "startChar": 5,
        "endLine": 29,
        "endChar": 20
      },
      "revId": "de8aa89203c5ffe5bf41f2546671d753a1acec17",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}