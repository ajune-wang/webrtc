{
  "comments": [
    {
      "key": {
        "uuid": "04ac36a4_a55e1540",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 5
      },
      "lineNbr": 2238,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-18T19:31:04Z",
      "side": 1,
      "message": "handling",
      "range": {
        "startLine": 2238,
        "startChar": 19,
        "endLine": 2238,
        "endChar": 26
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62cc139c_2743b200",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 5
      },
      "lineNbr": 2243,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-12-18T20:44:09Z",
      "side": 1,
      "message": "worthwhile adding RTC_DCHECK(is_unified_plan_)",
      "range": {
        "startLine": 2243,
        "startChar": 2,
        "endLine": 2243,
        "endChar": 12
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87ac8e56_b1cdcb20",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 5
      },
      "lineNbr": 2267,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-12-18T20:44:09Z",
      "side": 1,
      "message": "this is somewhat leaking / breaking encapsulation.\nyou are aware of how the remote description\u0027s transport_infos use the content name.\nsomewhat better is: content-\u003eSetName() but i am aware that transport infos are stored next to it.\nso, perhaps, remote_description-\u003eSetMid(index, mid) can:\n1. set the name of the content at the index.\n2. set the content_name of the transport at the index.",
      "range": {
        "startLine": 2267,
        "startChar": 24,
        "endLine": 2267,
        "endChar": 46
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c37d14_2be492b9",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 5
      },
      "lineNbr": 2280,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-12-18T20:44:09Z",
      "side": 1,
      "message": "Can you please explain why this is a restriction? multiple sections without mid can still work if the remote can resolve the RtpStream ssrc to the correct media section.\nIf you accept this comment, you can significantly reduce the complexity of the code above to stop distinguishing between the different types of media sections.",
      "range": {
        "startLine": 2279,
        "startChar": 10,
        "endLine": 2280,
        "endChar": 72
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d076313_d8701d4c",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 5
      },
      "lineNbr": 2280,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-12-18T22:58:02Z",
      "side": 1,
      "message": "If we don\u0027t have mid, we know these sections are not bundled (because bundle depends on mid), so we know that each media section has its streams on a separate RTP transport. I don\u0027t know if we can use that to our advantage here.",
      "parentUuid": "45c37d14_2be492b9",
      "range": {
        "startLine": 2279,
        "startChar": 10,
        "endLine": 2280,
        "endChar": 72
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9748b9f7_1b9544bf",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 1613,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-18T19:31:04Z",
      "side": 1,
      "message": "Would this be a good place to use remove_if()?",
      "range": {
        "startLine": 1613,
        "startChar": 2,
        "endLine": 1613,
        "endChar": 36
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6caa9456_1c6d818d",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 1613,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-18T22:38:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9748b9f7_1b9544bf",
      "range": {
        "startLine": 1613,
        "startChar": 2,
        "endLine": 1613,
        "endChar": 36
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b50e891_44a11eb5",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 1658,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-18T19:31:04Z",
      "side": 1,
      "message": "new lines between tests, or was this on purpose?",
      "range": {
        "startLine": 1658,
        "startChar": 0,
        "endLine": 1658,
        "endChar": 6
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a7829b7_92a2fbf8",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 1658,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-12-18T22:38:25Z",
      "side": 1,
      "message": "Intentional to keep them grouped.",
      "parentUuid": "1b50e891_44a11eb5",
      "range": {
        "startLine": 1658,
        "startChar": 0,
        "endLine": 1658,
        "endChar": 6
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b4cbaba_97ee8592",
        "filename": "pc/peerconnection_jsep_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 1701,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-18T19:31:04Z",
      "side": 1,
      "message": "What do you think of testing the new error conditions that you incorporated as well?\n-Bundle with no a\u003dmid\n-One section has a\u003dmid while another doesn\u0027t\n-More than one video/audio section w/o a\u003dmid",
      "range": {
        "startLine": 1700,
        "startChar": 0,
        "endLine": 1701,
        "endChar": 0
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdab5380_56f8edf2",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 5
      },
      "lineNbr": 181,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-12-18T22:58:02Z",
      "side": 1,
      "message": "you could use rtc::optional\u003cstd::string\u003e for the mid....",
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f41d25e_36766d23",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 5
      },
      "lineNbr": 365,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-12-18T22:58:02Z",
      "side": 1,
      "message": "is there a reason why this writer can\u0027t set has_mid_ to true?\nit would seem to remove a source of inconsistency.",
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d987f2f9_fed9c57a",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 5
      },
      "lineNbr": 389,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-18T19:31:04Z",
      "side": 1,
      "message": "It\u0027s confusing that mid() can return a value but has_mid() would return false. Could you add a comment in here, possibly with a bug reference?",
      "range": {
        "startLine": 389,
        "startChar": 2,
        "endLine": 389,
        "endChar": 15
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28a95fdf_bf48c28d",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 5
      },
      "lineNbr": 389,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-12-18T20:44:09Z",
      "side": 1,
      "message": "I thought we wanted to remove the default mid assignment in the parser and that has_mid is true iff mid is not empty.",
      "parentUuid": "d987f2f9_fed9c57a",
      "range": {
        "startLine": 389,
        "startChar": 2,
        "endLine": 389,
        "endChar": 15
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f569632_d0e7a7a5",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 5
      },
      "lineNbr": 473,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-12-18T20:44:09Z",
      "side": 1,
      "message": "you are trying to confuse me here, but i remember that name is an alias for mid ;)\nDoes it make sense to have a method that accepts a mid and also a boolean indicating if the mid is there or not?\nreasonable compromise - when adding content, name should be either empty or a valid value. if name is empty, then this method can set a default name based on the content type and store the has_mid value as false.",
      "range": {
        "startLine": 472,
        "startChar": 18,
        "endLine": 473,
        "endChar": 30
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f12a5c14_ea0f86a1",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 4343,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-12-18T19:31:04Z",
      "side": 1,
      "message": "Is it worth adding a test as well that checks has_mid is true in the case that the a\u003dmid line does exist?",
      "range": {
        "startLine": 4343,
        "startChar": 36,
        "endLine": 4343,
        "endChar": 73
      },
      "revId": "24309e863fe3d15907a969a07eb5ed3e0be281df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}