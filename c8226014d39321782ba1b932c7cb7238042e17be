{
  "comments": [
    {
      "key": {
        "uuid": "bb7844ae_70ad447b",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-10T10:30:39Z",
      "side": 1,
      "message": "Is webrtc::Mutex constant initialized and trivially destructible, so that having it as a global variable is OK? I thought it (and rtc::CriticalSection) was not, and that\u0027s why we have rtc::GlobalLock?\n\nIIUC you don\u0027t introduce this problem, but you swap the implementation, which may cause problems to surface.",
      "revId": "c8226014d39321782ba1b932c7cb7238042e17be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f420ce7e_eb4fdd2c",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-10T11:32:32Z",
      "side": 1,
      "message": "Yep I was surprised to find this too. The swapped-in implementation isn\u0027t so different from the CriticalSection though so I don\u0027t see how this would be a problem?",
      "parentUuid": "bb7844ae_70ad447b",
      "revId": "c8226014d39321782ba1b932c7cb7238042e17be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4770ae17_63e1038c",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-10T11:46:23Z",
      "side": 1,
      "message": "You\u0027re replacing one thing that wasn\u0027t supposed to be used in this way with another thing that also isn\u0027t supposed to be used in this way. I will not guarantee that this will not break things.\n\nParable: We have a group of more than 4 people currently occupying an elevator labeled \"max 4 people\". Even though the elevator appears to work correctly now, we cannot conclude that replacing them with another group of more than 4 people is safe.\n\nSuggestion: If you\u0027ve made a replacement for rtc::GlobalLock, use that. If you haven\u0027t, use rtc::GlobalLock.",
      "parentUuid": "f420ce7e_eb4fdd2c",
      "revId": "c8226014d39321782ba1b932c7cb7238042e17be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82939fac_4376491c",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-10T12:06:23Z",
      "side": 1,
      "message": "\u003e I will not guarantee that this will not break things.\nIf you peer into the implementation you\u0027ll find nothing material changed here. So how can there be a new problem with it if the old way worked?\n\nI do not want to change to GlobalMutex. If you peer into it, the implementation on POSIX is using spin locks and this is a material change compared to how it was before.\n\nI\u0027ll add a TODO to get this solved somehow.",
      "parentUuid": "4770ae17_63e1038c",
      "revId": "c8226014d39321782ba1b932c7cb7238042e17be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}