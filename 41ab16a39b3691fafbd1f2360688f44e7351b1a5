{
  "comments": [
    {
      "key": {
        "uuid": "c5212734_90c63ecd",
        "filename": "api/video_codecs/vp8_frame_buffer_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "Is this comment outdated? Or was the code that disables clamping in libvpx itself? (Note to self - I need to either update this comment, or a DCHECK that touches this variable.)",
      "range": {
        "startLine": 87,
        "startChar": 22,
        "endLine": 87,
        "endChar": 48
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf7e16b_9e52258c",
        "filename": "api/video_codecs/vp8_frame_buffer_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-05-02T13:06:59Z",
      "side": 1,
      "message": "I think we always set a qpMax, so the comment is probably outdated.\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/media/engine/webrtc_video_engine.cc?l\u003d2143\u0026rcl\u003dc80e4d756e61773cf56f83873eae60b163ce288f\n\nSince we no longer propagate rc_min_quantizer here, can we stop propagating rc_max_quantizer too?",
      "parentUuid": "c5212734_90c63ecd",
      "range": {
        "startLine": 87,
        "startChar": 22,
        "endLine": 87,
        "endChar": 48
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4db2d9b5_48dfc569",
        "filename": "api/video_codecs/vp8_frame_buffer_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T14:54:23Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/third_party/webrtc/modules/video_coding/codecs/vp8/screenshare_layers.cc?l\u003d567\u0026rcl\u003db93c4e622f85350e7d00da73bad7c74f6b23412c\nIt might be possible to get rid of this, I don\u0027t know; I am not familiar with that quality-boost code. Maybe leave this for another day? This CL is already kind of cramped. :-)",
      "parentUuid": "faf7e16b_9e52258c",
      "range": {
        "startLine": 87,
        "startChar": 22,
        "endLine": 87,
        "endChar": 48
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "939e0cf2_8cfe90b0",
        "filename": "api/video_codecs/vp8_frame_buffer_controller.h",
        "patchSetId": 1
      },
      "lineNbr": 103,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "I introduced so that UpdateConfiguration would no longer need to look at an instance of Vp8EncoderConfig as input, and would be able to just return its own override set.",
      "range": {
        "startLine": 103,
        "startChar": 15,
        "endLine": 103,
        "endChar": 26
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0c55f77_0984b996",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-05-02T13:06:59Z",
      "side": 1,
      "message": "Was rc_min_quantizer removed since it was always set to 2?",
      "range": {
        "startLine": 182,
        "startChar": 49,
        "endLine": 182,
        "endChar": 52
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fac42fdd_0c90564e",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T14:54:23Z",
      "side": 1,
      "message": "rc_min_quantizer was read by ScreenshareLayers, but never written by it. ScreenshareLayers now gets |rc_min_quantizer| and |rc_max_quantizer| via SetQpLimits(). It can still override |rc_max_quantizer| as before.",
      "parentUuid": "d0c55f77_0984b996",
      "range": {
        "startLine": 182,
        "startChar": 49,
        "endLine": 182,
        "endChar": 52
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dd41dd0_0823a752",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "Erik, do you happen to know if we ever expect to keep using |this| after a call to Release(), say after calling InitEncode() again? If so, I might need to propagate the Release() signal to the frame buffer controller.",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 31
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cfe716f_6a9a22a2",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-05-02T13:06:59Z",
      "side": 1,
      "message": "Seems that could happen here: https://cs.chromium.org/chromium/src/third_party/webrtc/video/video_stream_encoder.cc?l\u003d748\u0026rcl\u003da0421d3d0cd7fac9e178900cbd59f5a2006615a2",
      "parentUuid": "6dd41dd0_0823a752",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 31
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e5a83ad_9af842f8",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T14:54:23Z",
      "side": 1,
      "message": "Thanks.\n\nPlease note the confusing comment there:\n  // Reset (release existing encoder) if one exists and anything except\n  // start bitrate or max framerate has changed. Don\u0027t call Release() if\n  // |pending_encoder_creation_| as that means this is a new encoder\n  // that has not yet been initialized.\nIt seems like it is possible for ReleaseEncoder() to be called when |pending_encoder_creation_| is true. This is unrelated to this CL, though. Is that code perhaps your domain, or should I hunt for someone to pass this on to?\n\nWith regards to the current CL, I see I am already resetting |frame_buffer_controller_| below, so I guess we\u0027re good on that front.",
      "parentUuid": "2cfe716f_6a9a22a2",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 31
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32ce3dcd_38b86176",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-05-02T20:45:54Z",
      "side": 1,
      "message": "I think that comment is just outdated, we can remove \"Don\u0027t call Release() if\n  // |pending_encoder_creation_| as that means this is a new encoder\n  // that has not yet been initialized.\"\n\nAnd to clarify, the encoder won\u0027t be used after Release() unless a new call to InitEncode() is made first.",
      "parentUuid": "3e5a83ad_9af842f8",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 31
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66da0732_d995a462",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 310,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T21:28:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "32ce3dcd_38b86176",
      "range": {
        "startLine": 310,
        "startChar": 4,
        "endLine": 310,
        "endChar": 31
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faea67a4_80cb7e8d",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 390,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "Piggy-backed this change.",
      "range": {
        "startLine": 390,
        "startChar": 4,
        "endLine": 390,
        "endChar": 55
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ed1798_de169545",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 880,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "This now writes a cumulative set of overrides, so it\u0027s now a member.",
      "range": {
        "startLine": 880,
        "startChar": 23,
        "endLine": 880,
        "endChar": 45
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eef2cac3_116295c5",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "Erik, wdyt about renaming this (in a separate CL) to something like vpx_configs_, so as to make the difference from Vp8EncoderConfig more apparent?",
      "range": {
        "startLine": 121,
        "startChar": 35,
        "endLine": 121,
        "endChar": 50
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7df75082_c0a8acba",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-05-02T13:06:59Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "eef2cac3_116295c5",
      "range": {
        "startLine": 121,
        "startChar": 35,
        "endLine": 121,
        "endChar": 50
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b32297f2_f9064149",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-05-02T20:45:54Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "7df75082_c0a8acba",
      "range": {
        "startLine": 121,
        "startChar": 35,
        "endLine": 121,
        "endChar": 50
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6611d8c3_3534d04c",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T21:28:29Z",
      "side": 1,
      "message": "Great. Done: https://webrtc-review.googlesource.com/c/src/+/135040",
      "parentUuid": "b32297f2_f9064149",
      "range": {
        "startLine": 121,
        "startChar": 35,
        "endLine": 121,
        "endChar": 50
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fddd0b56_48c92072",
        "filename": "modules/video_coding/codecs/vp8/screenshare_layers.cc",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "Would be a DCHECK if not for a certain test - please see the comment in the next file.",
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67b74fbb_dfc6aae2",
        "filename": "modules/video_coding/codecs/vp8/screenshare_layers.cc",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T21:28:29Z",
      "side": 1,
      "message": "Resolved.",
      "parentUuid": "fddd0b56_48c92072",
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7198c745_d1e3013f",
        "filename": "modules/video_coding/codecs/vp8/screenshare_layers_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "This monstrosity intends to keep the semantic meaning of |config_updated_| from before this CL.",
      "range": {
        "startLine": 100,
        "startChar": 0,
        "endLine": 106,
        "endChar": 43
      },
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31824873_b47fa5f2",
        "filename": "modules/video_coding/codecs/vp8/screenshare_layers_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 604,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-30T17:57:56Z",
      "side": 1,
      "message": "Is this a realistic scenario? Do we need to support this? If not, a soft-failure in the previous file can be turned into a DCHECK.",
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06d65e66_6cab4c6c",
        "filename": "modules/video_coding/codecs/vp8/screenshare_layers_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 604,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-05-02T20:45:54Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s a realistic scenario. Currently OnRatesUpdates() is always called first in InitEncode(). I would go for the dcheck.",
      "parentUuid": "31824873_b47fa5f2",
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f39ca7b_524cde3e",
        "filename": "modules/video_coding/codecs/vp8/screenshare_layers_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 604,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-05-02T21:28:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06d65e66_6cab4c6c",
      "revId": "41ab16a39b3691fafbd1f2360688f44e7351b1a5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}