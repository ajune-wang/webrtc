{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3a4c0eb2_2feac47b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-05-28T18:02:47Z",
      "side": 1,
      "message": "efficiency question before I do the backward-compatible revert with public_deps trick...\n\nthe best way to also rename helpers.h to crypto_random.h and is to add a helpers.h which includes this? And I can do that in this step and in the second one (which also flips the target) delete the old file?",
      "revId": "70134806da542626cd3af9e3231f46245be4b99b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feff84e7_6d2fb640",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-05-28T18:42:04Z",
      "side": 1,
      "message": "Correct.\n\nI would do this order:\n\n1. New header with the original content, old header #including the new header. New target (with the new header and the renamed .cc file). The old target depends on the new one (to link properly).\n\n2. Downstream can clean up and depend on the new target.\n\n3. Remove old header and if not needed also remove the dependency from the old target to the new target.\n\nIs crypto_random a good name here? I am not great at names but rtc_base:rng might capture the meaning better?",
      "parentUuid": "3a4c0eb2_2feac47b",
      "revId": "70134806da542626cd3af9e3231f46245be4b99b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "718bb791_888b71b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-05-29T00:18:28Z",
      "side": 1,
      "message": "Did that but encountered a few more roadblocks ;-)\n\nNames are hard... the methods relate to cryptographic randomness which is why this is depending on OpenSSL. We already have a \"random\" target but that is not crypto-random. No strong opinion, this is a simple search+replace op",
      "parentUuid": "feff84e7_6d2fb640",
      "revId": "70134806da542626cd3af9e3231f46245be4b99b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c78266f_1ade8fc7",
        "filename": "rtc_base/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 1550,
      "author": {
        "id": 3350241
      },
      "writtenOn": "2024-05-28T18:02:47Z",
      "side": 1,
      "message": "this can actually be moved to the is-boringssl if since it is only used by boringssl_certificate.cc",
      "revId": "70134806da542626cd3af9e3231f46245be4b99b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}