{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7c26eee1_f8696198",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-11-03T15:30:56Z",
      "side": 1,
      "message": "see previous comment, somehow the reviewer field got lost",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "df9ab6dc_206bf32e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-23T08:04:09Z",
      "side": 1,
      "message": "i had totally missed this, sorry!\nlooking at it today (you can remove poor hta@ from first round)",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0a9be56_b6d89419",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-24T08:06:08Z",
      "side": 1,
      "message": "Hi, sorry for late reply.\nReading the code,\n1) I can\u0027t find that the tie-breaker is surfaced to sdp/JS,\n2) I though that it might be the same if you have several ice transports (i.e not using BUNDLE), but it seems not to be.\n3) It is only using when receiving/sending ice-pings\n\nSummary: I see no reason why it should exist in anywhere except Port and p2p_transport_channel. I therefor suggest letting p2p_transport_channel\ncreating it \"privately\".\n\nOne thing to double check is that there is no scenario in which the tiebreaker changes during the life-time of p2p_transport_channel. I think not, but I suggest double checking.\n\nHow does that sound ? Am I missing something ?",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7b92cb7_a79d10bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-11-24T08:09:39Z",
      "side": 1,
      "message": "Yes, the tiebreaker is exposed, but not in JS or SDP.",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a74f2e7_a106b530",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-11-24T08:09:39Z",
      "side": 1,
      "message": "The tiebreaker is exposed in ICE packets. https://www.rfc-editor.org/rfc/rfc5245#section-7.1.2.2",
      "parentUuid": "a0a9be56_b6d89419",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dbc1300_8b36a279",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-24T08:15:25Z",
      "side": 1,
      "message": "yes ðŸ˜Š\nthis is why I suggest moving it down to layers that do send/recv stun-packets...",
      "parentUuid": "e7b92cb7_a79d10bf",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4282b8ab_6b523777",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-11-24T08:46:54Z",
      "side": 1,
      "message": "I think currently the tie breaker is the same for multiple ice transport which share the same jsep transport controller (i.e. from the same peerconnection). But I don\u0027t think it needs to be from a protocol perspective. Reviving an ICE restart is nice but not required either. Now whether we need the tie breaking in WebRTC even...\n\nAgree on the direction but you are thinking two CLs ahead :-)\n\nThe tie breaker is used in two ways currently which makes it confusing. I think they are separate but the tests will tell (hopefully):\n1/ in PortAllocator for creating the foundation. I plan to rename that to \"port allcoator random\" and internalize it.\n2/ in the ICE Transport as the tie breaker value set over the wire. That can indeed be created by the transport itself and not the controller.\n\nThose changes aren\u0027t complicated but will cause a significant amount of churn in the tests.",
      "parentUuid": "7a74f2e7_a106b530",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b37ea9e_9bc365cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-11-24T08:53:04Z",
      "side": 1,
      "message": "re churn: My guess/theory is that it\u0027s better to do a big-cleanup\nrather 10 small...but that might be a bad guess...",
      "parentUuid": "4282b8ab_6b523777",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2264d6f6_df877ff2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-05T19:29:17Z",
      "side": 1,
      "message": "atomic change theory:\n1/ this CL changes responsibility without other impact\n2/ future CL changes foundation to depend on PA ice tie breaker. This is externally visible to ICE.\n3/ future CL renames PA ice tie breaker to PA random seed. Not externally visible.\n\nIn Germany we call this Dreisatz... oh wait no, that is something else ;-)",
      "parentUuid": "3b37ea9e_9bc365cc",
      "revId": "575130445a6adec9f28cea7236eaf7bfc8c822d7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}