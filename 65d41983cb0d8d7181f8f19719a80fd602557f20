{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af75ba6c_e35b27c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-16T15:46:08Z",
      "side": 1,
      "message": "Looks good, just nits + I don\u0027t think you need the weak_ptr.\n",
      "revId": "65d41983cb0d8d7181f8f19719a80fd602557f20",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac1e49b7_38801a49",
        "filename": "pc/jsep_transport_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 511,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-02-16T15:26:56Z",
      "side": 1,
      "message": "This method is private and the transport it returns is the added to the controller state, so the JsepTransportController should always outlive the dtls_srtp_transport (https://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/pc/jsep_transport_controller.cc;l\u003d1011;drc\u003d8cb97062880b0e0a78f9d578370a01aced81a13f).\n\nThat said, it is not clear at first sight so using a weak ptr is probably better.\n\nCan you add nisse@ and hta@ to the code review for a second opinion?",
      "range": {
        "startLine": 511,
        "startChar": 7,
        "endLine": 511,
        "endChar": 15
      },
      "revId": "65d41983cb0d8d7181f8f19719a80fd602557f20",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38160c14_1bd88932",
        "filename": "pc/jsep_transport_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 511,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-16T15:46:08Z",
      "side": 1,
      "message": "I think it is safe to just capture \"this\" here.\nAgree that it is good to add a comment documenting the assumption, in case of refactoring.",
      "parentUuid": "ac1e49b7_38801a49",
      "range": {
        "startLine": 511,
        "startChar": 7,
        "endLine": 511,
        "endChar": 15
      },
      "revId": "65d41983cb0d8d7181f8f19719a80fd602557f20",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34ad2bb4_f190a16b",
        "filename": "pc/jsep_transport_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 511,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-02-16T16:11:19Z",
      "side": 1,
      "message": "I\u0027m afraid I don\u0027t have an informed opinion, I\u0027m not really familiar with this code, or how the old sigslot code would handle the case that `this` is destroyed.",
      "parentUuid": "38160c14_1bd88932",
      "range": {
        "startLine": 511,
        "startChar": 7,
        "endLine": 511,
        "endChar": 15
      },
      "revId": "65d41983cb0d8d7181f8f19719a80fd602557f20",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "365a0287_d002f220",
        "filename": "pc/jsep_transport_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 511,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-16T18:00:22Z",
      "side": 1,
      "message": "That\u0027s apparently one strong reason to get rid of sigslot. It has a very expensive operation that\u0027s invoked when the signal target is destroyed.",
      "parentUuid": "34ad2bb4_f190a16b",
      "range": {
        "startLine": 511,
        "startChar": 7,
        "endLine": 511,
        "endChar": 15
      },
      "revId": "65d41983cb0d8d7181f8f19719a80fd602557f20",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39b96fda_7b510338",
        "filename": "pc/jsep_transport_controller.h",
        "patchSetId": 6
      },
      "lineNbr": 501,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-16T15:46:08Z",
      "side": 1,
      "message": "Please place the new member above RTC_DISALLOW_COPY_AND_ASSIGN, per convention.",
      "revId": "65d41983cb0d8d7181f8f19719a80fd602557f20",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}