{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "388c58a7_d8326b10",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-27T09:09:27Z",
      "side": 0,
      "message": "If I understand correctly, the idea is to avoid to append to the stream the thread id and the timestamp at this stage but do it later and pass all the info to log sinks (in the struct) but then allow OutputToDebug to recreate the current format.\n\nIs this accurate?",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 131,
        "endChar": 3
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95cb8ee1_71b4f74d",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-27T09:21:36Z",
      "side": 0,
      "message": "yes, that is basically the suggestion, \nwill small extra idea: put the logic of the OutputToDebug into a helper method that can be, but doesn\u0027t have to be reused by custom LogSink.",
      "parentUuid": "388c58a7_d8326b10",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 131,
        "endChar": 3
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fd8ddf1_abc0edb6",
        "filename": "rtc_base/logging.cc",
        "patchSetId": 8
      },
      "lineNbr": 131,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-08-03T06:58:40Z",
      "side": 0,
      "message": "Ack",
      "parentUuid": "95cb8ee1_71b4f74d",
      "range": {
        "startLine": 112,
        "startChar": 0,
        "endLine": 131,
        "endChar": 3
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c47dc48_cff1720f",
        "filename": "rtc_base/logging_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-27T08:32:36Z",
      "side": 0,
      "message": "Since now the filename and the line are not added to the stream but passed to OutoutToDebug and log sinks, it becomes inconvenient to test if the path was correctly parsed by searching in the log.\n\nI wonder if adding a getter might help testing but I don\u0027t like for other reasons. Or I can register a log sink but that also seems a bit too overkill.\n\nWhat do you think?",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 230,
        "endChar": 1
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2410e58_f2758fcb",
        "filename": "rtc_base/logging_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-29T07:07:23Z",
      "side": 0,
      "message": "I think it is possible to add this back, I will do it in the next pass.",
      "parentUuid": "1c47dc48_cff1720f",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 230,
        "endChar": 1
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc97116c_dc3ca75a",
        "filename": "rtc_base/logging_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-01T08:19:38Z",
      "side": 0,
      "message": "Ack. On Windows, should the path have backslashes?",
      "parentUuid": "e2410e58_f2758fcb",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 230,
        "endChar": 1
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "98c8a2b5_af77afd3",
        "filename": "rtc_base/logging_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 230,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-08-02T20:39:47Z",
      "side": 0,
      "message": "Hmm... This is a good point...\n\nIt looks like this function is not really testing Windows paths (things should still work fine https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/rtc_base/logging.cc;l\u003d68-76;drc\u003d98bfd991517c30ae883b12a131c684aec8a3b178, but I will send another CL to add the test).",
      "parentUuid": "cc97116c_dc3ca75a",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 230,
        "endChar": 1
      },
      "revId": "cbe64b5e494b785a50cbdc90811fcd1def625432",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}