{
  "comments": [
    {
      "key": {
        "uuid": "96db5896_350a08cf",
        "filename": "media/base/video_broadcaster.cc",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-02-15T12:15:49Z",
      "side": 1,
      "message": "I think you need to clear flag here too; this is called from AdaptedVideoTrackSource::AdaptFrame.",
      "range": {
        "startLine": 100,
        "startChar": 23,
        "endLine": 100,
        "endChar": 39
      },
      "revId": "be83a14153b3853cbf2f971de8888318ad7f6c6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9c3e0c9_9fa1116a",
        "filename": "media/base/video_broadcaster.cc",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-15T12:36:26Z",
      "side": 1,
      "message": "No, it will be responsibility of AdapedVideoTrackSource to accumulate updates correctly.",
      "parentUuid": "96db5896_350a08cf",
      "range": {
        "startLine": 100,
        "startChar": 23,
        "endLine": 100,
        "endChar": 39
      },
      "revId": "be83a14153b3853cbf2f971de8888318ad7f6c6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3a6bb27_e370a0ec",
        "filename": "media/base/video_broadcaster.cc",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-02-15T12:53:01Z",
      "side": 1,
      "message": "Cl description claims to update *all* places where frames maybe dropped, but it doesn\u0027t touch AdaptedVideoTrackSource, which is the main place where frame dropping due to requested max fps happens...\n\nTo me it seems a bit brittle to have the previous_frame_sent_to_all_sinks flag and related logic spread out in both VideoBroadcaster, AdaptedVideoTrackSource, and possibly subclasses of AdaptedVideoTrackSource too (those are the classes doing scaling decided by VideoAdapter).\n\nSince AdaptedVideoTrackSource calls |broadcaster_.OnDiscardedFrame()| on frame drops, that seems like an easy way to reuse the same logic.\n\nNow, I wasn\u0027t really aware of the VideoSinkInterface::OnDiscardedFrame method; I\u0027m not familiar with the design behind that. Maybe we could pass it some frame metadata, including at least the UpdateRect? Will be a bit tricky with scaling though, since frame drop is done before scaling.",
      "parentUuid": "e9c3e0c9_9fa1116a",
      "range": {
        "startLine": 100,
        "startChar": 23,
        "endLine": 100,
        "endChar": 39
      },
      "revId": "be83a14153b3853cbf2f971de8888318ad7f6c6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e667f036_df5cd7de",
        "filename": "media/base/video_broadcaster.cc",
        "patchSetId": 5
      },
      "lineNbr": 100,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-15T13:59:03Z",
      "side": 1,
      "message": "OnDiscardedFrame is used to only count number of dropped frames.\n\nAdaptedVideoTrackSource doesn\u0027t actually drop frames, it just contains logic to decide to do it.\n\nThe actual dropping is done in WebrtcVideoTrackSource in Chrome here: [1]\nAt this place there\u0027s no rtc::VideoFrame yet. So, it makes sense to accumulate updates and pass correct one to WebRTC in a newsly created VideoFrame.\n\n\n[1] https://cs.chromium.org/chromium/src/content/renderer/media/webrtc/webrtc_video_track_source.cc?sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026g\u003d0\u0026l\u003d44",
      "parentUuid": "d3a6bb27_e370a0ec",
      "range": {
        "startLine": 100,
        "startChar": 23,
        "endLine": 100,
        "endChar": 39
      },
      "revId": "be83a14153b3853cbf2f971de8888318ad7f6c6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b4e44048_27c9168b",
        "filename": "media/base/video_broadcaster.h",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-02-15T12:53:01Z",
      "side": 1,
      "message": "nit: Add trailing underscore.",
      "range": {
        "startLine": 63,
        "startChar": 7,
        "endLine": 63,
        "endChar": 39
      },
      "revId": "be83a14153b3853cbf2f971de8888318ad7f6c6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f277855_02dd6116",
        "filename": "media/base/video_broadcaster.h",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-15T13:59:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4e44048_27c9168b",
      "range": {
        "startLine": 63,
        "startChar": 7,
        "endLine": 63,
        "endChar": 39
      },
      "revId": "be83a14153b3853cbf2f971de8888318ad7f6c6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}