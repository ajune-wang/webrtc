{
  "comments": [
    {
      "key": {
        "uuid": "e37c30e5_079e8a2e",
        "filename": "p2p/base/port.cc",
        "patchSetId": 5
      },
      "lineNbr": 437,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-11-26T15:07:31Z",
      "side": 1,
      "message": "This looks to me it would block the gathering of a non-host candidate, if the mdns name registration encounters a problem.",
      "range": {
        "startLine": 437,
        "startChar": 2,
        "endLine": 437,
        "endChar": 4
      },
      "revId": "2f2dc1678c35757e7cec99dd5eda425fed49be00",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1618dc68_d7ed7436",
        "filename": "p2p/base/port.cc",
        "patchSetId": 5
      },
      "lineNbr": 437,
      "author": {
        "id": 7524
      },
      "writtenOn": "2018-11-26T19:22:08Z",
      "side": 1,
      "message": "MaybeObfustcateAddress only has in implementation for UDPPorts and TcpPorts, for other port types it is a noop. For every port the status starts with kNotStarted.\n\nWhat am I missing? How does this potentially block other candidates?",
      "parentUuid": "e37c30e5_079e8a2e",
      "range": {
        "startLine": 437,
        "startChar": 2,
        "endLine": 437,
        "endChar": 4
      },
      "revId": "2f2dc1678c35757e7cec99dd5eda425fed49be00",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "694b848b_1d9dcbd9",
        "filename": "p2p/base/port.cc",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-11-26T15:07:31Z",
      "side": 1,
      "message": "I feel since we still rely on the switching of types to determine the behavior in this method (which is defined for all Port types even though it is only used for host and srflx), instead of relying on MaybeObfuscateAddress being a virtual, it reads cleaner to me if we simply absorb this method in MaybeObfuscateAddress and make it a non-virtual private. In other words, the overloads of MaybeObfuscateAddress duplicates the switching here. I understand this would result in no much difference from the base, modulo a bit cleaner organization.",
      "range": {
        "startLine": 443,
        "startChar": 11,
        "endLine": 443,
        "endChar": 27
      },
      "revId": "2f2dc1678c35757e7cec99dd5eda425fed49be00",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c124bd_a0072d50",
        "filename": "p2p/base/port.cc",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 5603
      },
      "writtenOn": "2018-11-26T21:44:29Z",
      "side": 1,
      "message": "Agreed - I think we probably want to hoist the LOCAL behavior into a private Port::WrapAddress routine, and then UdpPort and TcpPort can call it from their gathering code.\n\nThe changes to raddr should probably be done separate from WrapAddress, I think they should be done prior to calling AddAddress, as done by TurnPort.",
      "parentUuid": "694b848b_1d9dcbd9",
      "range": {
        "startLine": 443,
        "startChar": 11,
        "endLine": 443,
        "endChar": 27
      },
      "revId": "2f2dc1678c35757e7cec99dd5eda425fed49be00",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5611f482_23ed59ce",
        "filename": "p2p/base/port.cc",
        "patchSetId": 5
      },
      "lineNbr": 443,
      "author": {
        "id": 7524
      },
      "writtenOn": "2018-11-26T21:55:29Z",
      "side": 1,
      "message": "You\u0027re probably referring to https://chromium.googlesource.com/external/webrtc/+/edc6e57a92d2b366871f4c2d2e926748326017b9/webrtc/p2p/base/turnport.cc#578, but that that code was moved to BasicPortAllocatorSession::SanitizeCandidate, which is called after the candidate has been  gathered (OnCandidateReady).",
      "parentUuid": "c1c124bd_a0072d50",
      "range": {
        "startLine": 443,
        "startChar": 11,
        "endLine": 443,
        "endChar": 27
      },
      "revId": "2f2dc1678c35757e7cec99dd5eda425fed49be00",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}