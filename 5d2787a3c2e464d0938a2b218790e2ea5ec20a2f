{
  "comments": [
    {
      "key": {
        "uuid": "1dda1860_3e8bca04",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 238,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-10-03T07:19:19Z",
      "side": 1,
      "message": "Is this guaranteed to be true? Considering wraparounds etc.",
      "range": {
        "startLine": 238,
        "startChar": 16,
        "endLine": 238,
        "endChar": 41
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88e742a4_7b675552",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 238,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-10-03T08:31:47Z",
      "side": 1,
      "message": "Yes, except for some tests, that check is duplicated here: https://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/source/rtp_sender.cc?sq\u003dpackage:chromium\u0026dr\u003dSs\u0026g\u003d0\u0026l\u003d675\n\nSo I thought I could just replace it with a check instead of trying to fix packets again. But this is causing various test cases to explode and fixing those is getting complex so I\u0027ll do that in another CL instead.",
      "parentUuid": "1dda1860_3e8bca04",
      "range": {
        "startLine": 238,
        "startChar": 16,
        "endLine": 238,
        "endChar": 41
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc678b8c_d5cfd9fb",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 342,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-10-03T07:19:19Z",
      "side": 1,
      "message": "Could this logic be moved to the prober? Seems like it belongs there more than here.",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 342,
        "endChar": 5
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49f24c24_1686f23b",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 342,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-10-03T08:31:47Z",
      "side": 1,
      "message": "Agree, but the problem is BitrateProber::CurrentCluser() is const. We could change that and rename it to reflect that it mutates the internal state, but it looks like it will require rewriting a bunch of tests. I don\u0027t particularly feel like dealing with that right now :)",
      "parentUuid": "cc678b8c_d5cfd9fb",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 342,
        "endChar": 5
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82177b82_bb0d2370",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 342,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-10-03T10:52:25Z",
      "side": 1,
      "message": "Or add new methods: FirstPacketInCluster() and IncrementPacketCounter() that\u0027s called for the first sent packet.",
      "parentUuid": "49f24c24_1686f23b",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 342,
        "endChar": 5
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6562bc52_e4562a8d",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 342,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-10-03T14:46:58Z",
      "side": 1,
      "message": "We already propagate back the number of bytes sent for a probe per call to ProcessPackets(), so I just added that to PacedPacketInfo. wdyt?",
      "parentUuid": "82177b82_bb0d2370",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 342,
        "endChar": 5
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed5c5a28_4e9fc6cc",
        "filename": "modules/pacing/pacing_controller.cc",
        "patchSetId": 6
      },
      "lineNbr": 342,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-10-03T15:55:35Z",
      "side": 1,
      "message": "SGTM",
      "parentUuid": "6562bc52_e4562a8d",
      "range": {
        "startLine": 339,
        "startChar": 0,
        "endLine": 342,
        "endChar": 5
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "080678c7_7ffcd333",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 6
      },
      "lineNbr": 346,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-10-03T07:19:19Z",
      "side": 1,
      "message": "We can\u0027t reconstruct the capture time based on per-packet timing. Consider the case where a single frame is split into several packets and there\u0027s stalls on this thread.\n\nMaybe use a DCHECK?",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 346,
        "endChar": 3
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f2a4c46_c9408933",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 6
      },
      "lineNbr": 346,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-10-03T08:31:47Z",
      "side": 1,
      "message": "Maybe, but I\u0027ll push that to another CL. See previous comment.",
      "parentUuid": "080678c7_7ffcd333",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 346,
        "endChar": 3
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1082e88e_9b024ff4",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 6
      },
      "lineNbr": 346,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-10-03T10:52:25Z",
      "side": 1,
      "message": "Well, if it\u0027s only for tests. Maybe you can check for that instead? And then set the value to some dummy value rather than the current time. This seems like it\u0027d \"kinda\" work for broken code. Maybe you can merge the followup cl with this CL?",
      "parentUuid": "9f2a4c46_c9408933",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 346,
        "endChar": 3
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39635495_e1c568b0",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 6
      },
      "lineNbr": 346,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-10-03T14:46:58Z",
      "side": 1,
      "message": "Possibly, I\u0027m not going to touch this code in this CL though.",
      "parentUuid": "1082e88e_9b024ff4",
      "range": {
        "startLine": 344,
        "startChar": 0,
        "endLine": 346,
        "endChar": 3
      },
      "revId": "5d2787a3c2e464d0938a2b218790e2ea5ec20a2f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}