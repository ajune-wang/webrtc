{
  "comments": [
    {
      "key": {
        "uuid": "37c37f32_1b36f79e",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 12
      },
      "lineNbr": 873,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-07-10T12:56:24Z",
      "side": 1,
      "message": "It\u0027s not obvious to me why having abs send time etc. means that we should support padding and when and why we actually use the lack of such extensions to avoid sending padding.\n\nAFAICT padding is always allowed by RTP?",
      "range": {
        "startLine": 873,
        "startChar": 27,
        "endLine": 873,
        "endChar": 50
      },
      "revId": "e8fbbfd08c6900f6d40448787ae83667fa0cf3a1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44caa992_2216e88d",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 12
      },
      "lineNbr": 873,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-07-10T13:24:57Z",
      "side": 1,
      "message": "The reason for not sending padding if we don\u0027t have any of those extensions is that then can\u0027t use those packets to keep the bandwidth estimate high, meaning we\u0027re wasting bits for little benefit.\n\nNote that this is not a change in behavior. I\u0027m just doing the check in here once, rather than grabbing then lock multiple times per padding packet (see eg https://webrtc-review.googlesource.com/c/src/+/144780/12/modules/rtp_rtcp/source/rtp_rtcp_impl.cc#b594)\n\nThis CL is intended to have no functional difference, it\u0027s only aiming to reduce the number of times we acquire and release |send_critsect_| in this class.",
      "parentUuid": "37c37f32_1b36f79e",
      "range": {
        "startLine": 873,
        "startChar": 27,
        "endLine": 873,
        "endChar": 50
      },
      "revId": "e8fbbfd08c6900f6d40448787ae83667fa0cf3a1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd9363a1_d78372cb",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 12
      },
      "lineNbr": 873,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-07-10T13:44:20Z",
      "side": 1,
      "message": "Maybe the function name should reflect this? Maybe something like UseInBandwidthEstimationPadding?",
      "parentUuid": "44caa992_2216e88d",
      "range": {
        "startLine": 873,
        "startChar": 27,
        "endLine": 873,
        "endChar": 50
      },
      "revId": "e8fbbfd08c6900f6d40448787ae83667fa0cf3a1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6016ca4_56f1b539",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 12
      },
      "lineNbr": 876,
      "author": {
        "id": 5531
      },
      "writtenOn": "2019-07-10T13:44:20Z",
      "side": 1,
      "message": "If the above name is changed, maybe this should be used in combination with that and be simplified? e.g.\nInstead of SupportsRtxPayloadPadding() we would do UseForBandwidthEstimationPadding() \u0026\u0026 SupportsRtxPayloadPadding()\n\nand the return value here would be just rtx_ \u0026 kRtxRedundantPayloads",
      "range": {
        "startLine": 876,
        "startChar": 16,
        "endLine": 876,
        "endChar": 41
      },
      "revId": "e8fbbfd08c6900f6d40448787ae83667fa0cf3a1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}