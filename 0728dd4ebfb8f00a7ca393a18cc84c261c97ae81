{
  "comments": [
    {
      "key": {
        "uuid": "67fd69a0_198da658",
        "filename": "modules/video_coding/codecs/test/stats.h",
        "patchSetId": 3
      },
      "lineNbr": 56,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "I\u0027d move this above between |qp| and |packets_dropped|.",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 56,
        "endChar": 19
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f765a09_7d24242e",
        "filename": "modules/video_coding/codecs/test/videoprocessor.cc",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "I think it would be slightly nicer to have\nconst int frame_number \u003d ++last_inputed_frame_num_; \nand then use |frame_number| in the rest of the function. WDYT?",
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9eeae253_cc9cd9e8",
        "filename": "modules/video_coding/codecs/test/videoprocessor.cc",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "Remove?",
      "range": {
        "startLine": 184,
        "startChar": 44,
        "endLine": 184,
        "endChar": 50
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f71d735_238d3bca",
        "filename": "modules/video_coding/codecs/test/videoprocessor.cc",
        "patchSetId": 3
      },
      "lineNbr": 296,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "|decoded_frame| ?",
      "range": {
        "startLine": 296,
        "startChar": 52,
        "endLine": 296,
        "endChar": 57
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5708b094_ea101200",
        "filename": "modules/video_coding/codecs/test/videoprocessor.cc",
        "patchSetId": 3
      },
      "lineNbr": 326,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "Nice!",
      "range": {
        "startLine": 326,
        "startChar": 4,
        "endLine": 326,
        "endChar": 20
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc255e96_da36980b",
        "filename": "modules/video_coding/codecs/test/videoprocessor.cc",
        "patchSetId": 3
      },
      "lineNbr": 353,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "After the removal of the lines above, most of the time this function will not do anything. I think it would be nicer to make this clear at the call sites, by moving this conditional there. Then you can update the comments on L237 and L289 and clarify the code around L330 a bit.",
      "range": {
        "startLine": 353,
        "startChar": 2,
        "endLine": 353,
        "endChar": 28
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a4cfc8_6d35b3da",
        "filename": "modules/video_coding/codecs/test/videoprocessor.h",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "Might as well use int here, since that\u0027s what we are using for the frame index in other parts of the file. Then we could do a concerted effort to switch to size_t everywhere.",
      "range": {
        "startLine": 205,
        "startChar": 11,
        "endLine": 205,
        "endChar": 19
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1ccd8df_2d6a06a1",
        "filename": "modules/video_coding/codecs/test/videoprocessor.h",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "|input_frames_| ?",
      "range": {
        "startLine": 205,
        "startChar": 50,
        "endLine": 205,
        "endChar": 62
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c7be947_137804f5",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 532,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "This is basically duplicating some of the functionality in Stats::PrintSummary(). I think it should be up to the Stats class to do all the metric aggregation over the frame sequence and then the VideoProcessorIntegrationTest can do whatever EXPECT\u0027s it wants. So maybe something like this?\n\nQualityMetrics quality_metrics \u003d stats_.GetQualityMetrics();\nVerifyQualityMetrics(quality_thresholds, quality_metrics);\n\n--\n\nThe fact that the rate control quality calculations are done in the VideoProcessorIntegrationTest is due to legacy reasons and I think it would be nicer to have that be part of the Stats class too. That can be a future change though.",
      "range": {
        "startLine": 532,
        "startChar": 36,
        "endLine": 532,
        "endChar": 56
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb7284a7_83af7383",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "It\u0027s not required by the style guide, but we mostly use the prefix versions of the increment operator.\n\nhttps://google.github.io/styleguide/cppguide.html#Preincrement_and_Predecrement",
      "range": {
        "startLine": 535,
        "startChar": 4,
        "endLine": 535,
        "endChar": 33
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ac8de72_d567dbfb",
        "filename": "modules/video_coding/codecs/test/videoprocessor_integrationtest.h",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 5023
      },
      "writtenOn": "2017-11-16T10:02:20Z",
      "side": 1,
      "message": "See comment below.",
      "range": {
        "startLine": 161,
        "startChar": 9,
        "endLine": 161,
        "endChar": 23
      },
      "revId": "0728dd4ebfb8f00a7ca393a18cc84c261c97ae81",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}