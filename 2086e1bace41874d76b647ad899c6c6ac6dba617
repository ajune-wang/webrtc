{
  "comments": [
    {
      "key": {
        "uuid": "8d9c2ae6_f0c795a5",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 483,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T10:19:19Z",
      "side": 1,
      "message": "different frame rates is screencast feature. maybe check here that screencast is enabled?",
      "range": {
        "startLine": 483,
        "startChar": 6,
        "endLine": 483,
        "endChar": 32
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ab23b77_1c42c91d",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 483,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-12-03T10:48:38Z",
      "side": 1,
      "message": "I think this more flexible check is better. yes, there are no different framerates in real-time video, but the check is for different framerates and not screenshare.",
      "parentUuid": "8d9c2ae6_f0c795a5",
      "range": {
        "startLine": 483,
        "startChar": 6,
        "endLine": 483,
        "endChar": 32
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a92b4e_b50c7145",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 484,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T10:19:19Z",
      "side": 1,
      "message": "is this check needed?",
      "range": {
        "startLine": 484,
        "startChar": 6,
        "endLine": 484,
        "endChar": 50
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "748ae5a8_abae1fad",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 484,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-12-03T10:48:38Z",
      "side": 1,
      "message": "No, removed.",
      "parentUuid": "02a92b4e_b50c7145",
      "range": {
        "startLine": 484,
        "startChar": 6,
        "endLine": 484,
        "endChar": 50
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b4f84e4_72a1ec65",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 498,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T10:19:19Z",
      "side": 1,
      "message": "should bypass mode always be enabled if external_ref_control_ is true?",
      "range": {
        "startLine": 498,
        "startChar": 38,
        "endLine": 498,
        "endChar": 72
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "916332cb_91402085",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 498,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-12-03T10:48:38Z",
      "side": 1,
      "message": "Yes, otherwise, external references are just ignored.",
      "parentUuid": "6b4f84e4_72a1ec65",
      "range": {
        "startLine": 498,
        "startChar": 38,
        "endLine": 498,
        "endChar": 72
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3233b08_7b117ba4",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 498,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T11:11:01Z",
      "side": 1,
      "message": "what i meant is that external_ref_control_\u003dtrue should be enough condition to enable bypass mode.",
      "parentUuid": "916332cb_91402085",
      "range": {
        "startLine": 498,
        "startChar": 38,
        "endLine": 498,
        "endChar": 72
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9825adc5_6c24c93c",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 498,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-12-03T11:20:40Z",
      "side": 1,
      "message": "Nope, external_ref_control_ is set to field trial value only. Since flexible mode is in testing and doesn\u0027t work without external reference control at all, I decided not to tie this to the field trial flag.",
      "parentUuid": "c3233b08_7b117ba4",
      "range": {
        "startLine": 498,
        "startChar": 38,
        "endLine": 498,
        "endChar": 72
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60d7b382_0ba2219c",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 1130,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T10:19:19Z",
      "side": 1,
      "message": "would it be enough to only look at external_ref_control_[] to obtain updated buffers?",
      "range": {
        "startLine": 1130,
        "startChar": 25,
        "endLine": 1130,
        "endChar": 43
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62599d91_3fc79fb8",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 1130,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-12-03T10:48:38Z",
      "side": 1,
      "message": "So far, gold/last/alt updated the same buffers as slot in my tests. But I don\u0027t trust libvpx. I\u0027ll ask Marco first and then remove old code in a separate clean-up CL. is it OK?",
      "parentUuid": "60d7b382_0ba2219c",
      "range": {
        "startLine": 1130,
        "startChar": 25,
        "endLine": 1130,
        "endChar": 43
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddd6c93f_4b1caec0",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 1130,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T11:11:01Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "62599d91_3fc79fb8",
      "range": {
        "startLine": 1130,
        "startChar": 25,
        "endLine": 1130,
        "endChar": 43
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "188c8eac_f7520ef1",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 1171,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-12-03T10:19:19Z",
      "side": 1,
      "message": "we probably should not refer to gof_ in SetReference() since it can handle flexible temporal prediction now but gof_ assumes that temporal prediciton is fixed.",
      "range": {
        "startLine": 1171,
        "startChar": 45,
        "endLine": 1171,
        "endChar": 49
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1dfe0bd_8ac85a51",
        "filename": "modules/video_coding/codecs/vp9/vp9_impl.cc",
        "patchSetId": 20
      },
      "lineNbr": 1171,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-12-03T10:48:38Z",
      "side": 1,
      "message": "Yes, but that\u0027s a separate issue, which doesn\u0027t have to do anything with making flexible mode work. Below, you can see, that in flexible mode this gof_idx is ignored. I\u0027ve moved one DCHECK so it\u0027s not ran.",
      "parentUuid": "188c8eac_f7520ef1",
      "range": {
        "startLine": 1171,
        "startChar": 45,
        "endLine": 1171,
        "endChar": 49
      },
      "revId": "2086e1bace41874d76b647ad899c6c6ac6dba617",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}