{
  "comments": [
    {
      "key": {
        "uuid": "d115489b_36dbd90c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-08-16T12:48:29Z",
      "side": 1,
      "message": "The referenced bug is closed as Fixed:\nhttps://bugs.chromium.org/p/webrtc/issues/detail?id\u003d10679#c13\n\nShould it be reopened or do we need to create a new issue?",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f907be0_309797df",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-16T13:26:59Z",
      "side": 1,
      "message": "It can be seen as a followup to that work, but maybe I should file a new issue, I\u0027m just having a bit of trouble titling it. The work should lead up to a fix of  https://bugs.chromium.org/p/chromium/issues/detail?id\u003d677543\n\nThe plan is to share a ReceiveStatistics instance for all receive streams, possibly owned by StreamReceiverController class. VideoReceiveStream and AudioReceiveStream would then not access it directly. For stats, it would call a GetStats method on RtpStreamReceiverInterface. \n\nThe next missing piece is transmission of the report blocks, that has to be moved out of the RtpRtcp modules for individual receive streams. A possible next step is to let RtpStreamReceiverController have an RtcpTransciever, but later on, report blocks should be attached to RTCP sender reports (in the case that we have a send stream).",
      "parentUuid": "d115489b_36dbd90c",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3bda0ff_aaaf9e26",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-19T09:11:28Z",
      "side": 1,
      "message": "I\u0027ve added a link to the chromium bug, and a little more context. Ok?",
      "parentUuid": "4f907be0_309797df",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "884030eb_8584f392",
        "filename": "/COMMIT_MSG",
        "patchSetId": 8
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-08-19T09:29:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c3bda0ff_aaaf9e26",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a590d516_b3cd5ffa",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 8
      },
      "lineNbr": 461,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-08-16T12:48:29Z",
      "side": 1,
      "message": "Does this mean we can remove the StreamDataCountersCallback and GetReceiveStreamDataCounters too? Should we make them deprecated / should we delete them?",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3526b0dc_99f63db5",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 8
      },
      "lineNbr": 461,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-16T13:26:59Z",
      "side": 1,
      "message": "StreamDataCountersCallback has been deleted from the ReceiveStatistics class, but it is used on the send side, so not going away from receive side refactoring. \n\nGetReceiveStreamDataCounters could perhaps be deleted, depending on what downstream users need.",
      "parentUuid": "a590d516_b3cd5ffa",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b5c672c_2ee50801",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp_defines.h",
        "patchSetId": 8
      },
      "lineNbr": 461,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-08-19T09:29:40Z",
      "side": 1,
      "message": "How about adding a TODO to delete in favor of GetStats() when downstream projects have migrated, to document its superflousness?",
      "parentUuid": "3526b0dc_99f63db5",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3640af0_618bbf91",
        "filename": "modules/rtp_rtcp/source/receive_statistics_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 256,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-08-16T12:48:29Z",
      "side": 1,
      "message": "Do we have plans for these other methods? Which methods will exist if we refactor everything the way we want it? This sounds like what we might want in ReportBlockData fort RTCRemoteInboundRtpStreamStats?",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "629feefa_f556d340",
        "filename": "modules/rtp_rtcp/source/receive_statistics_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 256,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-16T13:26:59Z",
      "side": 1,
      "message": "GetFractionLostInPercent and BitrateReceived are not used by GetStats; they report a total average over the call and is used to update uma histograms when the call ends. One could consider deleting the methods and make sure that the values can be derived from GetStats at the end of the call.\n\nAs for RTCRemoteInboundRtpStreamStats, not sure what\u0027s the best organization, but as far as I understand, the values correspond closely to the most recent report block for the given ssrc. So more tightly couple to RTCP than the receive-side stats.",
      "parentUuid": "b3640af0_618bbf91",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b46f74_f51a5225",
        "filename": "modules/rtp_rtcp/source/receive_statistics_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 256,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-08-19T09:29:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "629feefa_f556d340",
      "revId": "7086df0ad429fbb662345d3cf0ab3f6e2def6ada",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}