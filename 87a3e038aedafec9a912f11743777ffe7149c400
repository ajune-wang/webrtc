{
  "comments": [
    {
      "key": {
        "uuid": "1be1e17a_f2ac1e8d",
        "filename": "pc/data_channel.cc",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-03-25T18:25:38Z",
      "side": 1,
      "message": "There are several \"send\" and \"update\" codepaths, which makes me wonder if this solves the problem or just one of the symptoms.\n\nFor example, SendDataMessages() can also happen as a result of calling Send().\nIs it safe to try to send?\n\nUpdateState() can also happen as a result of other methods, like SetSendSsrc or SetReceiveSsrc. Is that fine?\n\nThis does look like an improvement, but before LGTM\u0027ing I want to see if you\u0027ve considered this and whether or not it is a good idea to simply Close() the data channel if we are unable to obtain an ID?",
      "revId": "87a3e038aedafec9a912f11743777ffe7149c400",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9af4a08_b32d5091",
        "filename": "pc/data_channel.cc",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-03-25T22:27:16Z",
      "side": 1,
      "message": "In all other codepaths, the id will either have been assigned at startup (when transport is open) or is -1 (when transport is still closed). This is the only place where the ID transitions.\nSendQueuedControlMessages is called only from this point according to codesearch.\nSendControlMessage is called only from SendQueuedControlMessages and from UpdateState.\nUpdateState is called only from here, from Set*Ssrc (only relevant for RTP data channels), and from Close().\n\nAltogether, I think we\u0027re pretty safe. If not - tests should show it.",
      "parentUuid": "1be1e17a_f2ac1e8d",
      "revId": "87a3e038aedafec9a912f11743777ffe7149c400",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21187287_fe62b46c",
        "filename": "pc/data_channel.cc",
        "patchSetId": 1
      },
      "lineNbr": 420,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-26T01:43:05Z",
      "side": 1,
      "message": "It also looks like Send() only calls SendDataMessage() when the state_ \u003d\u003d kOpen, which is only updated after OnChannelReady()/UpdateState() is called.\n\nI saw that it looks like the ID can also be assigned when setting local/remote description, when the SCTP SSL role is known. See PeerConnection::AllocateSctpSids. I don\u0027t know this stuff well, but it seems like this is being used to assign a SID for the case when it isn\u0027t specified at DataChannel creation time.",
      "parentUuid": "b9af4a08_b32d5091",
      "revId": "87a3e038aedafec9a912f11743777ffe7149c400",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dbd1854_55f21c20",
        "filename": "pc/data_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-26T01:43:05Z",
      "side": 1,
      "message": "I noticed this comment at the top of this test class:\n// TODO(deadbeef): The fact that these tests use a fake provider makes them not\n// too valuable. Should rewrite using the\n// peerconnection_datachannel_unittest.cc infrastructure.\n\nCould you write a similar test using peer_connection_data_channel_unittest.cc? It would exercise a more real code path using the PeerConnection as the DataProvider. I think the equivalent of what your test is would be something along the lines of:\n-CreateDataChannel\n-SDP negotiation\n-Channel is still in connecting state w/ no id assigned",
      "range": {
        "startLine": 618,
        "startChar": 7,
        "endLine": 618,
        "endChar": 26
      },
      "revId": "87a3e038aedafec9a912f11743777ffe7149c400",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "417e850c_74771574",
        "filename": "pc/data_channel_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 618,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-26T16:26:55Z",
      "side": 1,
      "message": "Okay, after reading your longer explanation I don\u0027t think you HAVE to write a PC test for this behavior, since the fake provider actually helps isolate and test it. From my understanding, since the offer/answer negotiation reserves/assigns a SID, you would have to create number of datachannels \u003e number of available SIDs to reserve in order to test the behavior.\n\nI\u0027ll leave it up to you :)",
      "parentUuid": "4dbd1854_55f21c20",
      "range": {
        "startLine": 618,
        "startChar": 7,
        "endLine": 618,
        "endChar": 26
      },
      "revId": "87a3e038aedafec9a912f11743777ffe7149c400",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}