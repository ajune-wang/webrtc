{
  "comments": [
    {
      "key": {
        "uuid": "7ae637e0_607eb35c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "I wonder if we could come up with a better term than \"any address port\"...  Maybe \"wildcard port\"? I tried googling but couldn\u0027t find any standard terminology for this (which somewhat surprises me; I may just not be looking hard enough).",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a640bdf_fbe9cd3d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 7,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "I didn\u0027t find an official name for this either, but INADDR_ANY is named the \"wildcard address\" in Unix Network Programming (there is a copy on my desk). Maybe we can follow the book or keep it as is (literally mapped from the constant name INADDR_ANY). The \"any address\" name is only used elsewhere in network.h/cc so far, and should be easy to rename if we decide to.",
      "parentUuid": "7ae637e0_607eb35c",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8960670f_6291c153",
        "filename": "p2p/base/p2pconstants.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "How did you decide on 2 seconds? Do we have any stats we could use to decide?",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6614e46_d4ff57c0",
        "filename": "p2p/base/p2pconstants.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "I can not determine if this is long enough for the moment (we almost surely would hit the delay in the VPN scenario I\u0027ve been testing since nothing else works), and used as a rule of thumb in my tests more for my subjective feeling if it causes unpleasant lagging. We probably should expose this as a config, and do experiments in the application with a couple of values.",
      "parentUuid": "8960670f_6291c153",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a09981b7_195cf74c",
        "filename": "p2p/base/p2pconstants.h",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "nit: Given that this value is only used in one place, I don\u0027t think it needs to be a named constant. Though I guess that could change (if you added a test for this, for example, which is probably a good idea)",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3acac2d7_feb4d0df",
        "filename": "p2p/base/p2pconstants.h",
        "patchSetId": 9
      },
      "lineNbr": 110,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Sure, tests related to this constant are added and keep it for the moment.",
      "parentUuid": "a09981b7_195cf74c",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d586cc_3bcc4b96",
        "filename": "p2p/base/tcpport.h",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "Exposing the socket leaks the implementation details of this class, and I don\u0027t think it\u0027s necessary; as mentioned in a comment, we can just use the dummy port value of 9 to distinguish between \"active\"/\"passive\" candidates (using terminology from https://tools.ietf.org/html/rfc6544)",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3f46c8f_06591bdb",
        "filename": "p2p/base/tcpport.h",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Ack. This point becomes clear after seeing your CL.",
      "parentUuid": "d3d586cc_3bcc4b96",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "836c95db_034b2a08",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "Why is checking for nullness needed?",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e0c924b_3df1b696",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 117,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Removed; nullness already checked before the call sites.",
      "parentUuid": "836c95db_034b2a08",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71f9d955_2b3edb82",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 961,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "nit: Given that this method isn\u0027t too large, and it\u0027s the only thing that calls MaybeSignalPortReady, it may make the code more readable to just inline it here (since the name \"Maybe\" doesn\u0027t tell you anything about what actual conditions the method will check, and it also doesn\u0027t imply that \"port-\u003eKeepAliveUntilPruned()\" is called). Same with MaybeSignalCandidateReady.",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d2d1f3c_b3923d10",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 961,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "71f9d955_2b3edb82",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "45fa357c_08ab8be4",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1125,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "nit: The second sentence of this comment still seems out of place.",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bb09178_56501203",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1125,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Fixed. This method is rewritten.",
      "parentUuid": "45fa357c_08ab8be4",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54ad4b0d_1d462e56",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1208,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "nit: Why is this timer started here, instead of when allocation starts? Seems like a somewhat roundabout approach.",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "405465de_bcf4b3f6",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1208,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Ack. Fixed.",
      "parentUuid": "54ad4b0d_1d462e56",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be2311da_a4437702",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1222,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "Why is checking for nullness needed? Doesn\u0027t appear a PortData can ever be added with a null Port. Also, even if it is possible, why \"return\" instead of \"continue\"?",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "278cacf2_ed772cf0",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1222,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Ack, no null Port can be wrapped in a PortData. \"return\" is a mistake.",
      "parentUuid": "be2311da_a4437702",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dee2d1f_6c1996ab",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1262,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "Why do we need to check \"has_ready_ports_bound_to_enumerated_networks\" here? It seems like if \"signalable_candidates\" is empty, then \"ips_from_non_any_address_ports\" must be nonempty, which means \"has_ready_ports_bound_to_enumerated_networks\" *must* be true. I\u0027m having a bit of trouble following this logic though, I may be missing something.",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c215a961_da43d8fd",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1262,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "It was because the signalable_candidates defined here could be empty, and a candidate from an any address port was signalable if it passed CheckCandidateFilter in an earlier place where MaybeSignalCandidateReady was called. A case then would be the any address port is a TCP port that has no signalable candidates yet (is_any_ip is true in your CL), but no other ports bounded to enumerated networks seem to work (\"ready\" defined here; also, sorry that I should have just checked ips_from_non_any_address_ports.empty() and has_ready_ports_bound_to_enumerated_networks is equivalent but confusing). In this case, we still signal this port, and no candidates from it would be signaled though. This is equivalent to is_any_ip and ips_from_non_any_address_ports.empty() both true in your CL, which is followed by signaling the port but not the candidate since the candidate does not pass the filter.\n\nI like the way you coded in the fork CL on this part, and the comments there make the reasoning clearer. Will merge your change. Thanks!",
      "parentUuid": "4dee2d1f_6c1996ab",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "889ca020_7a835f6d",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1298,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "nit: I don\u0027t think a helper function improves readability if it\u0027s only 1 line and only called in one place.",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e763bebd_49ba1172",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 9
      },
      "lineNbr": 1298,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "889ca020_7a835f6d",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37263cc5_3c46ee30",
        "filename": "p2p/client/basicportallocator.h",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "nit: Not sure we need the extra lists; could probably just use Port::Candidates",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41f9acdf_56428676",
        "filename": "p2p/client/basicportallocator.h",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "37263cc5_3c46ee30",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a51aa3_c8d6ccca",
        "filename": "p2p/client/basicportallocator_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 2023,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "What does \"potential redundancy allowed\" refer to? The fact that PORTALLOCATOR_DISABLE_ANY_ADDRESS_PORTS isn\u0027t set? I thought that was going to be removed though",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9a3b9fe1_259d5284",
        "filename": "p2p/client/basicportallocator_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 2023,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Removed.",
      "parentUuid": "f6a51aa3_c8d6ccca",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a42452cb_ed486244",
        "filename": "p2p/client/basicportallocator_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 2034,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "Why does this test have two waits, the first waiting for only one candidate and the second waiting for allocation to complete?",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c166091_41bf92ca",
        "filename": "p2p/client/basicportallocator_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 2034,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "That was intended to test that the signaling of candidates from the any address port takes place after the candidate allocation done (or after 2 seconds, which is not the case in this test), but now I realize this test actually failed to do that and we have other tests to cover the logic in timeline. Just test the behavior of discovering a new address now.",
      "parentUuid": "a42452cb_ed486244",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffbb36be_32bd36e6",
        "filename": "p2p/client/basicportallocator_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 2066,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-06-09T00:44:19Z",
      "side": 1,
      "message": "There are some things still not covered by tests, such as:\n\n* All the TCP-specific stuff\n* Signaling the \"any address\" candidates after the 2-second timeout",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4b7e477_29858f57",
        "filename": "p2p/client/basicportallocator_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 2066,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-06-12T21:25:13Z",
      "side": 1,
      "message": "Tests a few tests, but for the TCP related, I have only added a test for signaling a TCP port with the any address when no ports bound to enumerated ports. What else do you suggest for TCP?",
      "parentUuid": "ffbb36be_32bd36e6",
      "revId": "be2680ca791fb3f4c598eac4af0e68288744a09d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}