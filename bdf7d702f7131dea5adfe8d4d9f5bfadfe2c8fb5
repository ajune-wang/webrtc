{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "139b7a66_2e5140c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-07-20T12:40:45Z",
      "side": 1,
      "message": "LGTM % nit",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1526b2c7_3bdfddf1",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-07-20T12:40:45Z",
      "side": 1,
      "message": "On some layers of our code base DISABLED is the default value but according to spec DISABLED does not exist and there are some TODOs to remove it, so I prefer to use some other DegradationPreference value other than DISABLED just in case. Also while it may not have a value by default on this layer, I have a feeling that MAINTAIN_FRAMERATE tends to be the behavior we get if we don\u0027t say anything.\n\nnit: Can you update this test to use MAINTAIN_RESOLUTION instead? It might not matter but that seems the most future-proof in case we delete DISABLED and start defaulting to MAINTAIN_FRAMERATE at some point",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04357bab_e9b3b4ac",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-07-20T12:50:10Z",
      "side": 1,
      "message": "Hmmm, will DegradationPreference::DISABLED be removed? Since enable_cpu_adaptation is deprecated, I have been using DegradationPreference::DISABLED as an alternative. Is there a related issue tracker item?\n\nAnyway, I changed tests to use DegradationPreference::MAINTAIN_RESOLUTION.",
      "parentUuid": "1526b2c7_3bdfddf1",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e957eec4_b593fb95",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-07-20T13:04:43Z",
      "side": 1,
      "message": "I can\u0027t find an issue but \"disabled\" does not exist in the spec or on the web and I think I\u0027ve seen TODOs about removing it but AFAIK nobody is working on removing it at the moment.\n\nWhy do you feel the need to disable CPU adaptation? It sounds like something one would only want to do if CPU adaptation is not working correctly.",
      "parentUuid": "04357bab_e9b3b4ac",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73d7c988_416cea6c",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-07-20T13:20:34Z",
      "side": 1,
      "message": "If there was an issue with the CPU adaptation, I would have reported a bug or sent a patch.\n\nSome of our products have multiple CPU intensive subsystems, and WebRTC is one of them. I\u0027ve found that the video send quality (both resolution and fps) is too bad if the degraded preference is set to anything other than Disabled and some other subsystem is using too much CPU. So we disabled CPU adaptation. It\u0027s not an ideal solution, but controlling the resource usage of multiple subsystems is not trivial.",
      "parentUuid": "e957eec4_b593fb95",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bb39f28_dba463c4",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-07-20T13:35:57Z",
      "side": 1,
      "message": "OK. Is the issue that we don\u0027t want ANY degradation or is the issue that we send unreasonably low resolution and fps?\n\nThe performance gains in degrading are significant when resolution is high, but the quality vs performance tradeoff changes as we go down in resolution.\n\nIf max resolution is already at VGA, there probably is no point in going down even further, but the current adaptation logic always goes down in fractions of whatever the input was.\n\nQuestion: Would your issue be resolved if the CPU adaptation logic prevented going down below some unreasonably low threshold? Or is this a matter of wanting to force high resolution no matter what?",
      "parentUuid": "73d7c988_416cea6c",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ac8b84d_1edbd8f6",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-07-20T14:00:52Z",
      "side": 1,
      "message": "Of course. It would be much better if the user could set a lower bound on the resolution.",
      "parentUuid": "0bb39f28_dba463c4",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "00dcdc5a_02111411",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-07-20T14:04:56Z",
      "side": 1,
      "message": "Alright. Just one nuance to see if I understand this:\n\nWould you need an API to configure this, or would it be enough that CPU adaptation stops at some hardcoded VGA/QVGA resolution (that is not application specific) after which going down further would not be worth it?\n\n(An API change is one thing and a bug fix to CPU adaptation to stop making \"unreasonable tradeoffs\" is another thing)",
      "parentUuid": "7ac8b84d_1edbd8f6",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1368274d_8012a450",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-07-20T14:16:00Z",
      "side": 1,
      "message": "Because our products are distributed worldwide, configurable resolution is much preferred. I have no preference between using the C++ API and using the field trial.",
      "parentUuid": "00dcdc5a_02111411",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "35dc233c_d61a3872",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 3663,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-07-20T14:20:30Z",
      "side": 1,
      "message": "Alright. Well maybe we should continue to allow DISABLED in C++, it seems to solve your problem. That would be the easiest way to allow the app to do custom adaptation logic.",
      "parentUuid": "1368274d_8012a450",
      "revId": "bdf7d702f7131dea5adfe8d4d9f5bfadfe2c8fb5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}