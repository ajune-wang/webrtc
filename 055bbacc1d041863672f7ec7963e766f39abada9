{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1b65e235_f7937d7b",
        "filename": "rtc_base/synchronization/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:09:58Z",
      "side": 1,
      "message": "is it possible to limit visibility of this target just to sequence_checker?",
      "range": {
        "startLine": 58,
        "startChar": 13,
        "endLine": 58,
        "endChar": 38
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5670198_34f1741c",
        "filename": "rtc_base/synchronization/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 6337
      },
      "writtenOn": "2021-02-03T13:34:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b65e235_f7937d7b",
      "range": {
        "startLine": 58,
        "startChar": 13,
        "endLine": 58,
        "endChar": 38
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "204ac8f0_196a797a",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-02-03T12:52:28Z",
      "side": 1,
      "message": "I think this one should also be webrtc_sequence_checker_internal. Should we also move it to the _internal.h header?",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05ef59c3_809c48bb",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 6337
      },
      "writtenOn": "2021-02-03T12:57:32Z",
      "side": 1,
      "message": "Will do it later, because of downstream deps",
      "parentUuid": "204ac8f0_196a797a",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4efc9e7d_3c16b8b7",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:09:58Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "204ac8f0_196a797a",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85f67766_c646416d",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:11:10Z",
      "side": 1,
      "message": "downstream deps would still be able to use it through transitive include.",
      "parentUuid": "4efc9e7d_3c16b8b7",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e79cba81_f9e50944",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:14:05Z",
      "side": 1,
      "message": "for them may be add\nnamespace webrtc_seq_check_impl {\n// TODO: Remove when downstream deps are updated\nusing ::webrtc::webrtc_sequence_checker_internal::SequenceCheckerScope;\n}",
      "parentUuid": "85f67766_c646416d",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef0c7c6a_1424d73b",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-02-03T13:19:28Z",
      "side": 1,
      "message": "What about:\n\nnamespace webrtc {\n// TODO: Remove when downstream deps are updated\nnamespace webrtc_sequence_checker_internal {}\nnamespace webrtc_seq_check_impl \u003d webrtc_sequence_checker_internal;\n}\n\nAnyway, I agree with Danil we should try to do it now and add the TODO with the trick to make it work and update downstream clients as soon as this lands.",
      "parentUuid": "e79cba81_f9e50944",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c4656d6_4a22cb22",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:31:45Z",
      "side": 1,
      "message": "I think explicetly listing all symbols is better [i.e. less worse] than aliasing full namespace.\nNamespace aliases in header files is discouraged much more than individual symbol aliasing.\n\nhttps://google.github.io/styleguide/cppguide.html#Namespaces\n\"Do not use Namespace aliases at namespace scope in header files\"\n(though there is also any except in that rule that technically applies here.)",
      "parentUuid": "ef0c7c6a_1424d73b",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a8f3da5_433fe2f8",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 6337
      },
      "writtenOn": "2021-02-03T13:34:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef0c7c6a_1424d73b",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b022c81b_62115e49",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-02-03T13:40:16Z",
      "side": 1,
      "message": "Got it, thanks!",
      "parentUuid": "2a8f3da5_433fe2f8",
      "range": {
        "startLine": 47,
        "startChar": 10,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50ad660c_5e45e0a0",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:09:58Z",
      "side": 1,
      "message": "I think this one also should be in the internal namespace.\n\n(may be temporary leave a deprecated version in webrtc namespace to avoid breaking users who use it outside of the RTC_DCHECK_RUN_ON macro)",
      "range": {
        "startLine": 132,
        "startChar": 12,
        "endLine": 132,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a7a85c5_35490c15",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 6337
      },
      "writtenOn": "2021-02-03T13:34:17Z",
      "side": 1,
      "message": "I was thinking to replace macro on the MutexLock-like class that you proposed in different CL and remove both this method and macro, WDYT?",
      "parentUuid": "50ad660c_5e45e0a0",
      "range": {
        "startLine": 132,
        "startChar": 12,
        "endLine": 132,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f74efc88_18a2f82d",
        "filename": "rtc_base/synchronization/sequence_checker.h",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:39:23Z",
      "side": 1,
      "message": "Even more reason to avoid exposing it in the non-internal header.",
      "parentUuid": "5a7a85c5_35490c15",
      "range": {
        "startLine": 132,
        "startChar": 12,
        "endLine": 132,
        "endChar": 31
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07e47b65_0e51188b",
        "filename": "rtc_base/synchronization/sequence_checker_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-03T13:09:58Z",
      "side": 1,
      "message": "nit: may be inline destructor.\nThe only non-trivial thing it does is ~Mutex.",
      "range": {
        "startLine": 34,
        "startChar": 3,
        "endLine": 34,
        "endChar": 22
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d1cb40a_d14bef00",
        "filename": "rtc_base/synchronization/sequence_checker_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 6337
      },
      "writtenOn": "2021-02-03T13:34:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07e47b65_0e51188b",
      "range": {
        "startLine": 34,
        "startChar": 3,
        "endLine": 34,
        "endChar": 22
      },
      "revId": "055bbacc1d041863672f7ec7963e766f39abada9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}