{
  "comments": [
    {
      "key": {
        "uuid": "f103ab50_3783e95a",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "absl::string_view?",
      "range": {
        "startLine": 18,
        "startChar": 35,
        "endLine": 18,
        "endChar": 53
      },
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a041a8c3_e93295b2",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-28T13:24:56Z",
      "side": 1,
      "message": "This is the only method an application is supposed to override, right? Would it make sense to make it look more like a map lookup, to be able to, at some point, replaces this with a std::map?",
      "range": {
        "startLine": 18,
        "startChar": 22,
        "endLine": 18,
        "endChar": 34
      },
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "520bf8c7_3e546697",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "And here?",
      "range": {
        "startLine": 19,
        "startChar": 24,
        "endLine": 19,
        "endChar": 35
      },
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "722d71d9_8aa29294",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-28T13:24:56Z",
      "side": 1,
      "message": "These convenience helpers are only used internally, right? Then they don\u0027t really belong in the interface. Possibly rtc_base/experiments/field_trial_parser.h is a good location for helpers like these.",
      "range": {
        "startLine": 19,
        "startChar": 14,
        "endLine": 19,
        "endChar": 23
      },
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e60bbdf_1dba517d",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "And here?",
      "range": {
        "startLine": 22,
        "startChar": 25,
        "endLine": 22,
        "endChar": 36
      },
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef4c75bd_3a833f28",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "These two should be const too, right?",
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "554bfab3_3b246709",
        "filename": "api/config/field_trial.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "This goes first.",
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0698a9b1_cc4e3e6e",
        "filename": "api/config/field_trial_default.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "This shouldn\u0027t be necessary.",
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b235ed66_77338ff0",
        "filename": "api/transport/network_control.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-26T16:32:47Z",
      "side": 1,
      "message": "Pointer to const? (This applies everywhere.)",
      "revId": "88b83d525c248b4f66b7e7a1a9b19c2ef1100a06",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}