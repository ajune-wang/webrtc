{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eb44f545_9ec39ca3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "I think there\u0027s a big issue with converting fps to integer interval in ms.\n\nFor 30 fps you will get a consistent drift which after 30 seconds it will be off by one frame. After 10 minutes it will be almost one second off.\n\nWould it be possible to store last_frame_time and the inter-frame interval as double and round it when writing the frame?",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f64b21_77b49dab",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-14T19:03:36Z",
      "side": 1,
      "message": "I am not sure I follow this part. Can we just write the last_frame_ like we do on lines 37-39? Why do we need to WriteFrame(nullopt) which can or cannot write the frame base on now?",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 28
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56768afc_5372eb5d",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "I don\u0027t like this approach. Instead of mixing some logic in the same function but with nullopt input, make a new function named, e.g. Flush() or FinalizeStream().\n\nAll it has to do is to write the last_frame_ if it\u0027s there and then repeat it until current time.\n\nI understand that current approach reduces code duplication, but it makes the code harder to understand. The duplicated code would be quite trivial anyways.",
      "parentUuid": "77f64b21_77b49dab",
      "range": {
        "startLine": 36,
        "startChar": 2,
        "endLine": 36,
        "endChar": 28
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6a5ab18_39658e61",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Shouldn\u0027t you rewrite last_frame_ timestamp to last_frame_time_ before writing it? Some writer store timestamps in the file.\nMake sure to update the last_frame_time_ below in the option I.",
      "range": {
        "startLine": 80,
        "startChar": 5,
        "endLine": 80,
        "endChar": 46
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e3589c5_8843c4c7",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.cc",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T11:46:41Z",
      "side": 1,
      "message": "Correction: all writers currently do not save timestamp in the file. So it\u0027s not that necessary.\n\nBut still, if you are up to it, it would be greate to update VideoFrame::ntp_time_ms_ and rtp_timestamp_",
      "parentUuid": "f6a5ab18_39658e61",
      "range": {
        "startLine": 80,
        "startChar": 5,
        "endLine": 80,
        "endChar": 46
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "080afd6a_ab303993",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Did I understand correctly, what the algorithm does this?\n\nThere are output \"slots\" at a fixed frame rate (starting at the time of the first input frame). Each incoming frame is assigned to the closest output slot. Then empty slots are repeating the last filled slot.\nIf there are multiple frames, closest to the same slot, the latest one is used.\nThe frames are outputted for the whole duration of the class life after the first frame was written.\n\n\nIf so, I find this explanation way simpler for understanding. It explains WHAT is happening. Option listing is explaining HOW, which isn\u0027t really needed at the interface level.\n\nAlso, instead of options, it would be good to show a diagram of input frames, labeled A, B, C, D, E, F, G and output frames at regular intervals.\n\nSomething like this:\n\n\n    A            B       C      D  EF               Destructor called\n    v            v       v      v  vv               v\n    |----|----|----|----|----|----|----|----|----|----|\n    A    A    A    B    C    C    F    F    F    F\n    \n    \nThen a good comment at |last_frame_| would be like:\nThis is the last \"slot\" with a frame. It\u0027s not yet written to the file, as it may be replaced by a later frame.",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "184125c8_045048da",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-15T08:40:55Z",
      "side": 1,
      "message": "\u003e Then a good comment at |last_frame_| would be like: This is the last \"slot\" with a frame. It\u0027s not yet written to the file, as it may be replaced by a later frame.\n\n+1, I was thinking at this earlier today and forgot to add a comment.",
      "parentUuid": "080afd6a_ab303993",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6fb0858_003a565d",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-14T19:03:36Z",
      "side": 1,
      "message": "nit: \"the following\"",
      "range": {
        "startLine": 28,
        "startChar": 11,
        "endLine": 28,
        "endChar": 15
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c7dff2b_eca16468",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-14T19:03:36Z",
      "side": 1,
      "message": "Let\u0027s mention (in the paragraph below) that these will be sent to the video writer as \"last frame\" (maybe let\u0027s even use B, C, D, etc..).",
      "range": {
        "startLine": 40,
        "startChar": 15,
        "endLine": 40,
        "endChar": 35
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1ef3681_55d7e74c",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "The error mentioned here is impossible. Since frames can\u0027t arrive in the past. if option I or II did put the last frame in the future, the previous frame time was already \u003e A/2. The current is even bigger than that.",
      "range": {
        "startLine": 69,
        "startChar": 3,
        "endLine": 69,
        "endChar": 52
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9526d83_8731bd4e",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-14T19:03:36Z",
      "side": 1,
      "message": "\"the program will stop\"?",
      "range": {
        "startLine": 82,
        "startChar": 29,
        "endLine": 82,
        "endChar": 49
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "287243ae_633a2003",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Nit:\nAs this class isn\u0027t really responsible for the writing itself, a VideoWriterFixedFpsAdapter is a better name. Or FixedFpsVideoWriterAdapter.",
      "range": {
        "startLine": 83,
        "startChar": 6,
        "endLine": 83,
        "endChar": 26
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ee35f40_7b128a4b",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "A small lag between what and what?\nAlso, end the comment with a dot.\n\nI don\u0027t get how the first frame can be written two times in the described algorithm.\nAnd it\u0027s not even that\u0027s checked below. It apears that the last frame isn\u0027t checked, but first 29 frames are placed in correct order.",
      "range": {
        "startLine": 82,
        "startChar": 45,
        "endLine": 82,
        "endChar": 64
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da1ed073_a4783551",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Ditto.\n\nBut the code below now tests all the 24 frames without expecting any weird repeats.",
      "range": {
        "startLine": 116,
        "startChar": 4,
        "endLine": 116,
        "endChar": 64
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83fe85b3_53e0ae77",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 129,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "The code will be clearer if you produce a vector of frame ids (e.g with std::transform) and compare with testing::ElementsAre. You might want to reduce the amount of frames from 10 to e.g. 5 to make it even more readable.",
      "range": {
        "startLine": 121,
        "startChar": 2,
        "endLine": 129,
        "endChar": 46
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a302cc15_b0964c5e",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 141,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Please advance time here to emulate that the writer was alive for quite some time.",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9799016c_b1fbde82",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 159,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Could you please compute this constant in the code above based on fps? e.g \n\n    kFps \u003d 10;\n    kIntervalMs \u003d 1000/kFps;\n    // Less than half interval after the last slot.\n    kFrameDealy \u003d 2*kIntervalMs + kIntervalMs  * 3/10;",
      "range": {
        "startLine": 159,
        "startChar": 51,
        "endLine": 159,
        "endChar": 54
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "030bb25b_fb3537f6",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Ditto. Please compute 250 this based on fps.",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d403a1c5_77636b34",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "please use testing::ElemntsAre\n\nThe frames vector to id vector conversion should be a helper function as it will be used in a lot of tests here.\n\nOr write a helper function ExpectFramesHaveIds(vector\u003cframe\u003e, vector\u003cint\u003e ), which does transform and calls ElementsAre. Or you can do the check there manually with a iterations. I\u0027m fine with it as long as you have explicit list of IDs here in the actual test.",
      "range": {
        "startLine": 186,
        "startChar": 2,
        "endLine": 190,
        "endChar": 40
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "841a834c_35969472",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Ditto. Compute based on fps.",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04744e02_19cea1fb",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "ElementsAre or ExpectFramesIdsAre",
      "range": {
        "startLine": 228,
        "startChar": 2,
        "endLine": 229,
        "endChar": 40
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90f30214_90fe7632",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 243,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 243,
        "startChar": 54,
        "endLine": 243,
        "endChar": 55
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "903ad1b7_12924d2a",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 250,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Ditto.",
      "range": {
        "startLine": 247,
        "startChar": 2,
        "endLine": 250,
        "endChar": 40
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0df90a0e_398861c5",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 264,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 264,
        "startChar": 51,
        "endLine": 264,
        "endChar": 54
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6310162_99a1bc69",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 271,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 268,
        "startChar": 2,
        "endLine": 271,
        "endChar": 40
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c922098d_0baa84be",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 284,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 284,
        "startChar": 51,
        "endLine": 284,
        "endChar": 53
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56a59764_437528db",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 289,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "ditto.",
      "range": {
        "startLine": 288,
        "startChar": 2,
        "endLine": 289,
        "endChar": 40
      },
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22a10d47_800e38f3",
        "filename": "test/pc/e2e/analyzer/video/fixed_fps_video_writer_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-07-15T08:34:43Z",
      "side": 1,
      "message": "Please add the test which checks that the outputted timestamps are at regular intervals.",
      "revId": "1b04e7db18075fb7f38eff24efe511dd23f57e6c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}