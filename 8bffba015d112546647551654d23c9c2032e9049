{
  "comments": [
    {
      "key": {
        "uuid": "123af83e_4ed6c531",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-03-22T22:05:36Z",
      "side": 1,
      "message": "For new constants, we should use \"kMixedCase\" naming, see https://google.github.io/styleguide/cppguide.html#Constant_Names",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a30e7521_9b5f4727",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "123af83e_4ed6c531",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3b9374a_e17b3c8b",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-03-22T22:05:36Z",
      "side": 1,
      "message": "Can include \"ms\" in the name (\"kPortAllocationRetryIntervalMs\"), so that you don\u0027t need to look at the declaration to remember the units",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30ad9e54_9b9229f8",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "How do we know this is long enough?   It seems like this should be infrequent enough that being more conservative with the value would be safer (say.... 500ms).  But it would be even better to have data around how long is needed.",
      "range": {
        "startLine": 42,
        "startChar": 53,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0c3a73a_43bbc303",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "From a few logs for calls where this issue was reproduced, it looks like the network interface would be ready around 100-200ms after the initial port allocation. Our current implementation using the allocation sequence takes ~200ms for one iteration. I was betting the 3 rounds of retriss would probably suffice. But yeah, it is a good idea to be more conservation given the case is rare. Btw, we can only reproduce on a N6P phone after a number of internal tests.",
      "parentUuid": "30ad9e54_9b9229f8",
      "range": {
        "startLine": 42,
        "startChar": 53,
        "endLine": 42,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "697d32e2_d4915e69",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3b9374a_e17b3c8b",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b7d07c2_3156130c",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1267,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "I like how you did it below without a map.  A lambda here that updates the bools instead of a map would also be nice to be more readable so you can write something like RecordResult(CreateXPorts());",
      "range": {
        "startLine": 1266,
        "startChar": 60,
        "endLine": 1267,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10732f20_e2c51eae",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1267,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b7d07c2_3156130c",
      "range": {
        "startLine": 1266,
        "startChar": 60,
        "endLine": 1267,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43aadb6e_91a51d13",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1293,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "This is a big else block now.  Can we move this into a separate method?",
      "range": {
        "startLine": 1293,
        "startChar": 61,
        "endLine": 1293,
        "endChar": 65
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f2b84e3_4f8edb40",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1293,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43aadb6e_91a51d13",
      "range": {
        "startLine": 1293,
        "startChar": 61,
        "endLine": 1293,
        "endChar": 65
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "856ed971_6b3c65aa",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-03-22T22:05:36Z",
      "side": 1,
      "message": "\"At least one success\" may not mean much. If creating an \"active\" TCPPort, it\u0027s possible that no socket will actually be created until an outgoing connection is made, so the creation of the TCPPort itself will always succeed.",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6b75246_e5afa01e",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "Good point.  What else can we use, though?",
      "parentUuid": "856ed971_6b3c65aa",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e230d28f_f37a86f9",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1296,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "I have rewritten how retry is performed, and retry is done per port type now. This hopefully covers the common use cases when we rely on udp sockets. The bug reports related to what this CL is fixing have the common pattern where the shared udp socket failed to bind, which was attempted at the first place, and the following per-port udp socket also failed in binding. I mentioned in a comment below where Taylor pointed out the issue of shared udp socket failure, that it seems we tolerate that failure in design by falling back to per-port udp socket. We can also make the shared udp socket initialization reliable to improve the robustness if we want to enforce the shared design, which is the default.",
      "parentUuid": "c6b75246_e5afa01e",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b7328e9_2fd10939",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1302,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-03-22T22:05:36Z",
      "side": 1,
      "message": "LOG_J(LS_INFO, network_), so you know which network interface allocation failed for.",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3066e2b5_49fb993e",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1302,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Good point. Done with ToString. LOG_J got removed in a CL we reviewed.",
      "parentUuid": "1b7328e9_2fd10939",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b99c7c7_42a2119d",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1335,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-03-22T22:05:36Z",
      "side": 1,
      "message": "What if udp_socket_ is null? Something to keep in mind is that PORTALLOCATOR_ENABLE_SHARED_SOCKET is the default everywhere; https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d8283",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42bd7512_d44a25af",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1335,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "From logs for cases where the racing condition was reproduced, the creation of udp_socket_ did failure as well in Init in the first place. Though the else block takes care of this failure and the retry is supposedly to make the creation below reliable, I am wondering if it is the intended behavior from the design point of view. We can also retry in Init, but it seems the current implementation is aware of that and decides to move on.",
      "parentUuid": "0b99c7c7_42a2119d",
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78ca7e03_1c6d0324",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1369,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "Can you move this up to an early return to make it more readable?  Something like:\n\nif (!port) {\n  return PortAllocationResult::FAILURE_CREATION_ERROR;\n}\n\nSame in a few places below.",
      "range": {
        "startLine": 1368,
        "startChar": 54,
        "endLine": 1369,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "332632eb_e6ee3994",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1369,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78ca7e03_1c6d0324",
      "range": {
        "startLine": 1368,
        "startChar": 54,
        "endLine": 1369,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2f3378c8_0a43c799",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1445,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "The way you did it below without a map seemed cleaner.  Why not do the same here?  Why do you need the map?  Sure, it might be two if statements, but that seems fine.",
      "range": {
        "startLine": 1444,
        "startChar": 64,
        "endLine": 1445,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85da064c_f3b8f671",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1445,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f3378c8_0a43c799",
      "range": {
        "startLine": 1444,
        "startChar": 64,
        "endLine": 1445,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa2eb833_f43172d9",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1569,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "It succeeds if *any* of the configs work?  That should be documented somewhere.",
      "range": {
        "startLine": 1568,
        "startChar": 41,
        "endLine": 1569,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d5d71e_f33c0dc1",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1569,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Added in the comments to the definition of PortAllocationResult.",
      "parentUuid": "fa2eb833_f43172d9",
      "range": {
        "startLine": 1568,
        "startChar": 41,
        "endLine": 1569,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81085483_b272681e",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1574,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "This would read a little easier like so:\n\nif (!tried_creation_with_feasible_config) {\n  return PortAllocationResult::FAILURE_INFEASIBLE_CONFIG;\n}\nif (!created_valid_port) {\n  return PortAllocationResult::FAILURE_CREATION_ERROR;\n}\nreturn PortAllocationResult::SUCCESS;",
      "range": {
        "startLine": 1573,
        "startChar": 57,
        "endLine": 1574,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e13d6ab2_14214571",
        "filename": "p2p/client/basicportallocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 1574,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Ack. Changed the same block above as well.",
      "parentUuid": "81085483_b272681e",
      "range": {
        "startLine": 1573,
        "startChar": 57,
        "endLine": 1574,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a96890b4_0c714400",
        "filename": "p2p/client/basicportallocator.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 5659
      },
      "writtenOn": "2018-03-26T19:57:53Z",
      "side": 1,
      "message": "These could use some comments as to what they mean.",
      "range": {
        "startLine": 311,
        "startChar": 25,
        "endLine": 311,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b5bb0a1_25cee860",
        "filename": "p2p/client/basicportallocator.h",
        "patchSetId": 3
      },
      "lineNbr": 311,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-23T23:07:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a96890b4_0c714400",
      "range": {
        "startLine": 311,
        "startChar": 25,
        "endLine": 311,
        "endChar": 0
      },
      "revId": "8bffba015d112546647551654d23c9c2032e9049",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}