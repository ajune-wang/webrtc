{
  "comments": [
    {
      "key": {
        "uuid": "f1646d41_1ad9764c",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-05-13T09:43:50Z",
      "side": 1,
      "message": "/*manual_reset\u003d*/true,\n/*initially_signaled\u003d*/false",
      "range": {
        "startLine": 161,
        "startChar": 41,
        "endLine": 161,
        "endChar": 59
      },
      "revId": "d64c42d75c66da1047579a4ce73abd476f558edb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b678978a_fbf418b4",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-13T13:21:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f1646d41_1ad9764c",
      "range": {
        "startLine": 161,
        "startChar": 41,
        "endLine": 161,
        "endChar": 59
      },
      "revId": "d64c42d75c66da1047579a4ce73abd476f558edb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "58976800_81fae247",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-05-13T09:38:06Z",
      "side": 1,
      "message": "Could replace this getter with a method \"WaitForQpUsageHandled\"",
      "range": {
        "startLine": 172,
        "startChar": 2,
        "endLine": 172,
        "endChar": 75
      },
      "revId": "d64c42d75c66da1047579a4ce73abd476f558edb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6036715b_c709e971",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-05-13T09:43:50Z",
      "side": 1,
      "message": "Nit: it would be more readable if you hide event implementation detail inside the callback.\n\nPlease make this method |bool WaitForQpUsageHandled(int max_wait_ms)| instead of exposing rtc::Event.",
      "range": {
        "startLine": 172,
        "startChar": 14,
        "endLine": 172,
        "endChar": 36
      },
      "revId": "d64c42d75c66da1047579a4ce73abd476f558edb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d7641c4_b6e8844c",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-13T13:21:15Z",
      "side": 1,
      "message": "Done, except I skipped the argument since I don\u0027t think you would ever want to pass in different values. I\u0027d use a constant like kDefaultTimeoutMs except that one is 30 seconds. I just hardcoded it as 5000 (5 sec) because that what all the other code in this file seem to be doing.",
      "parentUuid": "6036715b_c709e971",
      "range": {
        "startLine": 172,
        "startChar": 14,
        "endLine": 172,
        "endChar": 36
      },
      "revId": "d64c42d75c66da1047579a4ce73abd476f558edb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50ae4fa3_b20c6169",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-05-13T13:21:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58976800_81fae247",
      "range": {
        "startLine": 172,
        "startChar": 2,
        "endLine": 172,
        "endChar": 75
      },
      "revId": "d64c42d75c66da1047579a4ce73abd476f558edb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}