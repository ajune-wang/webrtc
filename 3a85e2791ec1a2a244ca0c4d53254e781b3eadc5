{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3b8ee432_0a244477",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-18T17:29:26Z",
      "side": 1,
      "message": "Thank you Alessio for the comments!",
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be8aee0e_510ce39d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T09:13:43Z",
      "side": 1,
      "message": "The AdjustedConfig setup looks great, minimal footprint in audio_processing_impl.\n\nI am not looking at the AGC2 unit tests unless you need me to, Alessio knows that better.",
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28d9e112_e1d9929f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "Thanks for the new patchset Hanna, great work!",
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f094c95f_cb488e06",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "nit: a shorter name is fine here (e.g., `field_trial_name`) since there are no other field trials being parsed in this function",
      "range": {
        "startLine": 157,
        "startChar": 20,
        "endLine": 157,
        "endChar": 59
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bd933c0_012dcfc8",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 157,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f094c95f_cb488e06",
      "range": {
        "startLine": 157,
        "startChar": 20,
        "endLine": 157,
        "endChar": 59
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a22a1dd_17225fe3",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "move closer to where it\u0027s used (namely, line 189)",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 158,
        "endChar": 66
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36460202_7747fb25",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a22a1dd_17225fe3",
      "range": {
        "startLine": 155,
        "startChar": 0,
        "endLine": 158,
        "endChar": 66
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03a72ea4_854921af",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "remove, unused",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 161,
        "endChar": 80
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c9fe04e_4effdf98",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 161,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "03a72ea4_854921af",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 161,
        "endChar": 80
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "235775d2_20084ac9",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "Question: `/*upper_limit\u003d*/absl::nullopt` means that there\u0027s no upper limit, right?",
      "range": {
        "startLine": 172,
        "startChar": 65,
        "endLine": 173,
        "endChar": 19
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3366c689_f1d3b10f",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T09:13:43Z",
      "side": 1,
      "message": "Should this be `kDefaultConfig.` like the rest?",
      "range": {
        "startLine": 182,
        "startChar": 6,
        "endLine": 182,
        "endChar": 47
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d96d6b4_b36ef5aa",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3366c689_f1d3b10f",
      "range": {
        "startLine": 182,
        "startChar": 6,
        "endLine": 182,
        "endChar": 47
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b24039b8_21ab5f56",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "return",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 197,
        "endChar": 53
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d045ea2f_00acbae1",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 197,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b24039b8_21ab5f56",
      "range": {
        "startLine": 197,
        "startChar": 2,
        "endLine": 197,
        "endChar": 53
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7391780e_0adb41f5",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T09:13:43Z",
      "side": 1,
      "message": "Can this comment be more explicit about what adjustment is made? Something like:\n\"Returns an adjusted config\" -\u003e \"Replaces analog AGC1 with AGC2 input volume controller\"",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 46
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "154b3a26_403c55a5",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T14:43:01Z",
      "side": 1,
      "message": "```\n\"Returns an adjusted config\" -\u003e \"Replaces analog AGC1 with AGC2 input volume controller\"\n```\nAlessio clarified to me that this is not all that `AdjustConfig` does, since it is intended to replace the full AGC1 with the full AGC2 as well. So I guess something like \"Returns a config where AGC2 is used for all gain control if [...]\".",
      "parentUuid": "7391780e_0adb41f5",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 46
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e51551e_6e9cde6b",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-23T17:32:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "154b3a26_403c55a5",
      "range": {
        "startLine": 218,
        "startChar": 0,
        "endLine": 219,
        "endChar": 46
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b10657_79886e6b",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T09:13:43Z",
      "side": 1,
      "message": "Are there any conflicts here wrt digital AGC?\nWhat if AGC1 digital + AGC2 input volume control is specified, can that happen?\n\nIf some combination like this is possible in practice, then we should handle it.\n\nIf it is possible in theory but not in practice because we will only use this experiment on platforms X+Y with config Z, then assumptions like that should be checked (DCHECK / LOG(ERROR) / at least call out in a comment). It makes some configs effectively illegal, because configuring APM in conflict with those assumptions will behave in unexpected and undesired ways.",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b433624_2b101cc9",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "TL;DR we should check how this code interacts with https://source.chromium.org/chromium/chromium/src/+/main:media/webrtc/helpers.cc;l\u003d67-118;drc\u003d6be15666177fafa1311dab630d2fd4619beeeed6 on different platforms.\n\n\u003e Are there any conflicts here wrt digital AGC?\n\nNo, because `gain_controller1.enabled \u003d false` disables any digital gains applied by AGC1.\n\n\u003e What if AGC1 digital + AGC2 input volume control is specified, can that happen?\n\nNo, that setup is used nowhere. Also, at this point of the code, AGC1 analog must be active (see `analog_agc_enabled` above).\n\nWe should `RTC_DCHECK(!config.gain_controller2.input_volume_controller.enabled)` after line 236, since this is a newly added functionality that must be enabled via the field trial override.\n\n\u003e \n\u003e If some combination like this is possible in practice, then we should handle it.\n\u003e \n\u003e If it is possible in theory but not in practice because we will only use this experiment on platforms X+Y with config Z, then assumptions like that should be checked (DCHECK / LOG(ERROR) / at least call out in a comment). It makes some configs effectively illegal, because configuring APM in conflict with those assumptions will behave in unexpected and undesired ways.\n\nGood point. At this point in the code, we expect one of the following configurations:\n\n#1 Hybrid AGC: AGC1 analog + AGC2 adaptive digital\n```\n.gain_controller1 enabled \u003d true,\n.gain_controller1.analog_gain_controller.enabled \u003d true,\n.gain_controller1.analog_gain_controller.enable_digital_adaptive \u003d false\n.gain_controller2.enabled \u003d true\n.gain_controller2.adaptive_digital.enabled \u003d true\n.gain_controller2.input_volume_controller.enabled \u003d true\n``` \n\n#2 Full AGC1\n```\n.gain_controller1 enabled \u003d true,\n.gain_controller1.analog_gain_controller.enabled \u003d true,\n.gain_controller1.analog_gain_controller.enable_digital_adaptive \u003d true\n.gain_controller2.enabled \u003d false\n```\n\nWe could define two local boolean variables named `hybrid_agc_config_detected` and `full_agc1_config_detected` and then DCHECK `hybrid_agc_config_detected` XOR `full_agc1_config_detected`.",
      "parentUuid": "70b10657_79886e6b",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21c5bb6b_2328ffe6",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T13:54:03Z",
      "side": 1,
      "message": "One mistake in my comment above that Sam noticed. In the *Hybrid AGC* config, ignore the last line sicne `.gain_controller2.input_volume_controller.enabled` must obviously be false.",
      "parentUuid": "6b433624_2b101cc9",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a2876da_9ebdb11a",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T14:43:01Z",
      "side": 1,
      "message": "This is less confusing once the function comment clarifies that AGC2 is fully enabled (i.e. that we also intend to switch from AGC1 digital to AGC2 digital with this experiment).\n\nI\u0027m OK with no DCHECK, the DCHECK suggested by Alessio, or DCHECKING that a digital AGC is already enabled (since the analog part is already tested for up front.)",
      "parentUuid": "21c5bb6b_2328ffe6",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b00c158d_5b7df88b",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "It\u0027s a good idea to add checks here.\n\nJust to make sure -- Alessio, is the preferred behaviour that the override is only taken into account if one of `hybrid_agc_config_detected` and `full_agc1_config_detected` is true? We need to leave `.gain_controller2.input_volume_controller.enabled \u003d true` out here from the check, it\u0027s set in this function, not necessarily before.",
      "parentUuid": "5a2876da_9ebdb11a",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d2da304_ae47a274",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-22T13:53:23Z",
      "side": 1,
      "message": "\u003e It\u0027s a good idea to add checks here.\n\u003e \n\u003e Just to make sure -- Alessio, is the preferred behaviour that the override is only taken into account if one of `hybrid_agc_config_detected` and `full_agc1_config_detected` is true? \n\nI would do that to ensure that the experiment is not activated on platforms that don\u0027t support Full AGC2.\n\n\u003e We need to leave `.gain_controller2.input_volume_controller.enabled \u003d true` out here from the check, it\u0027s set in this function, not necessarily before.\n\nYes, it was a mistake in my 1st comment above. Actually we could add `DCHECK(!config.gain_controller2.input_volume_controller.enabled);`.",
      "parentUuid": "b00c158d_5b7df88b",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9bf165f3_35f1536c",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-23T17:32:05Z",
      "side": 1,
      "message": "I\u0027ve added a check for \n\n`hybrid_agc_config_detected \u003d\u003d full_agc1_config_detected ||`\n`config.gain_controller2.input_volume_controller.enabled`\n\nin AdjustConfig(). The function now returns the original config and logs an error if neither or both AGCs are enabled or input volume controller is already enabled. I\u0027d prefer not to modify the config rather than only doing DCHECK. WDYT?",
      "parentUuid": "4d2da304_ae47a274",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "504a446f_56717d45",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 242,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-24T14:33:42Z",
      "side": 1,
      "message": "Perfect!",
      "parentUuid": "9bf165f3_35f1536c",
      "range": {
        "startLine": 236,
        "startChar": 0,
        "endLine": 242,
        "endChar": 74
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8efc6a6_95bcd11f",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 630,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T09:13:43Z",
      "side": 1,
      "message": "sine these two variables are identical, `input_volume_controller_config_override_changed` will never be `true` and can be removed",
      "range": {
        "startLine": 629,
        "startChar": 13,
        "endLine": 630,
        "endChar": 47
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "513fe825_3468dd41",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 630,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8efc6a6_95bcd11f",
      "range": {
        "startLine": 629,
        "startChar": 13,
        "endLine": 630,
        "endChar": 47
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b486a7_cee9df95",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 659,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-21T09:13:43Z",
      "side": 1,
      "message": "The std::optional operator\u003d\u003d do this comparison for us, so `\u003d (previous_input_volume_controller_config_override !\u003d input_volume_controller_config_override_` should be enough\n\n\nhttps://en.cppreference.com/w/cpp/utility/optional/operator_cmp\n\"contained values are compared (using the corresponding operator of T) only if both lhs and rhs contain values. Otherwise, [essentially compare has_value()]\"\n\n\n\n(but see the earlier comment about `input_volume_controller_config_override_changed`)",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 659,
        "endChar": 52
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88b4b3a9_777f2c1c",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 659,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-21T16:46:11Z",
      "side": 1,
      "message": "Thanks Sam for the explanation! The check is removed since `input_volume_controller_config_override_changed` is now a const.",
      "parentUuid": "79b486a7_cee9df95",
      "range": {
        "startLine": 654,
        "startChar": 0,
        "endLine": 659,
        "endChar": 52
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6d22a25_8d37edc5",
        "filename": "modules/audio_processing/audio_processing_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-21T10:26:04Z",
      "side": 1,
      "message": "nit: bugs.webrtc.org/7494\n(I also wish this notation is accepted...)",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 194,
        "endChar": 21
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97b31de2_bf222ce5",
        "filename": "modules/audio_processing/audio_processing_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-22T09:00:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6d22a25_8d37edc5",
      "range": {
        "startLine": 194,
        "startChar": 10,
        "endLine": 194,
        "endChar": 21
      },
      "revId": "3a85e2791ec1a2a244ca0c4d53254e781b3eadc5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}