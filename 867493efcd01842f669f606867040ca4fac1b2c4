{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "63d706c3_03baeb42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-09-30T08:58:41Z",
      "side": 1,
      "message": "Adding someone who I think knows iOS better..",
      "revId": "867493efcd01842f669f606867040ca4fac1b2c4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5ea00bde_3c264708",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5520
      },
      "writtenOn": "2022-09-30T12:52:47Z",
      "side": 1,
      "message": "Wait, does this CL actually change anything? I may be missing something but it seems that in order to use monotonic clocks we\u0027re requiring both `USE_CLOCK_GETTIME` \u0026\u0026 `USE_PTHREAD_CONDATTR_SETCLOCK`, while the latter is set to 0 on iOS/mac?\n\nIdeally I think we\u0027d use Mach time for this on iOS/Mac but that\u0027s a bigger project.",
      "revId": "867493efcd01842f669f606867040ca4fac1b2c4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "adac2c37_d85f3575",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5520
      },
      "writtenOn": "2022-09-30T13:01:41Z",
      "side": 1,
      "message": "Do you know if the BSD calls `msleep` etc use monotonic clocks? I think they should be using Mach time",
      "parentUuid": "5ea00bde_3c264708",
      "revId": "867493efcd01842f669f606867040ca4fac1b2c4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "612a644b_86504232",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-10-05T09:39:42Z",
      "side": 1,
      "message": "After reading the documentation and the Apple libc/libpthread code, I found there was no reason to go ahead with this CL.\n\nUsing `gettimeofday` is perfectly justified, and the current code is correct because `pthread_cond_timedwait` expects a wall clock.\n\nhttps://github.com/apple-opensource/libpthread/blob/e9b4bbf00b7a94f4eba9c74771ad1e659e8cc568/src/pthread_cond.c#L770\n\nSorry for the noise!",
      "revId": "867493efcd01842f669f606867040ca4fac1b2c4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "867493efcd01842f669f606867040ca4fac1b2c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "867493efcd01842f669f606867040ca4fac1b2c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}