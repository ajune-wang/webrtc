{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b680cf29_af8e14c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-07-07T16:07:37Z",
      "side": 1,
      "message": "Nice!\n\nNot obligatory, but curious: Were you able to repro locally and verify that the fix works?",
      "revId": "f160530c142109835e32cd7674249209eaa5f145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37d724e6_cd719002",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-07-12T09:04:52Z",
      "side": 1,
      "message": "yup",
      "parentUuid": "b680cf29_af8e14c7",
      "revId": "f160530c142109835e32cd7674249209eaa5f145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89fc0f5b_c5e389c1",
        "filename": "common_audio/vad/vad_filterbank.c",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-07-07T16:07:37Z",
      "side": 1,
      "message": "I didn\u0027t follow along 100% in the chat discussion - the problem was that we overflow here, right? If we fix this by extending the rate (32 -\u003e 64 bit), won\u0027t we instead overflow when we downshift and cast to `int16_t` on line 104?",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 25
      },
      "revId": "f160530c142109835e32cd7674249209eaa5f145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b6602fd_6336c66e",
        "filename": "common_audio/vad/vad_filterbank.c",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-07-12T09:04:52Z",
      "side": 1,
      "message": "Good point; the fuzzer found this issue:\n\n```\n../../third_party/webrtc/common_audio/vad/vad_filterbank.c:96:21: runtime error: signed integer overflow: 1583657904 + 677877956 cannot be represented in type \u0027int\u0027\n```\n\nbut your point is anyways valid, as exactly the same happens in line 97.\n\nThe alternatives I see:\n- use Q14 for `state32` and hence reducing precision\n- clamping, which still requires a 64 bit tmp variable\n\nBoth alternatives might break the unit tests though. I will give a try and get back; feel free to propose other options.",
      "parentUuid": "89fc0f5b_c5e389c1",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 25
      },
      "revId": "f160530c142109835e32cd7674249209eaa5f145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c52fbbd_f18c45c3",
        "filename": "common_audio/vad/vad_filterbank.c",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-07-12T09:41:46Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion. Clamping sounds like the simplest solution assuming that it does not break any unit tests, and clamping what used to be an overflow should make the values closer to the \"truth\".",
      "parentUuid": "4b6602fd_6336c66e",
      "range": {
        "startLine": 100,
        "startChar": 4,
        "endLine": 100,
        "endChar": 25
      },
      "revId": "f160530c142109835e32cd7674249209eaa5f145",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a webrtc committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-webrtc-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-webrtc-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["uploaderin:cria/project-webrtc-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "f160530c142109835e32cd7674249209eaa5f145",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*Unresolved-Comment-Reason:.*\""]}
      },
      "patchSetCommitId": "f160530c142109835e32cd7674249209eaa5f145",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f160530c142109835e32cd7674249209eaa5f145",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}