{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "34e92665_6ecb375a",
        "filename": "modules/rtp_rtcp/source/rtcp_receiver.cc",
        "patchSetId": 21
      },
      "lineNbr": 181,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-06-16T10:00:25Z",
      "side": 1,
      "message": "you\u0027re disabling thread checks when RTCPReceiver created not as a member of ModuleRtpRtcpImpl2\n\nI think cleaner way to add checks to RTCPReceiver when it is part of ModuleRtpRtcpImpl2\nis to add thread checks into ModuleRtpRtcpImpl2 rather than into RTCPReceiver.\n\nThread checks might be ignored unless set_local_media_ssrc is called, so may be add a log into that setter when RTCPReceiver is not member of ModuleRtpRtcpImpl2.\nOr.... make set_local_media_ssrc private but add ModuleRtpRtcpImpl2 as friend of the RTCPReceiver. Then no logs are required.",
      "range": {
        "startLine": 181,
        "startChar": 24,
        "endLine": 181,
        "endChar": 28
      },
      "revId": "23f37f3e8c8111f6c1b1a3890459f0e1251d65c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90e65675_632a047e",
        "filename": "modules/rtp_rtcp/source/rtcp_receiver.cc",
        "patchSetId": 21
      },
      "lineNbr": 181,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-16T13:34:50Z",
      "side": 1,
      "message": "Yes, RTCPReceiver is an implementation detail of ModuleRtpRtcpImpl2 and is only created as a member of that class.\n\nThe problem is that RTCPReceiver is not an API or something that\u0027s intended to be used as a separate utility class outside of webrtc, but there are downstream examples of it being used as such. I added a log statement to give a heads up there, but as far as the webrtc code goes, it is a part of the implementation behind the media streams and several other components where we\u0027re making threading changes. If we don\u0027t want to break that code, we can do something similar to classes like DEPRECATED_RtpSenderEgress.",
      "parentUuid": "34e92665_6ecb375a",
      "range": {
        "startLine": 181,
        "startChar": 24,
        "endLine": 181,
        "endChar": 28
      },
      "revId": "23f37f3e8c8111f6c1b1a3890459f0e1251d65c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e032e89_7f74ad77",
        "filename": "modules/rtp_rtcp/source/rtp_rtcp_impl.cc",
        "patchSetId": 21
      },
      "lineNbr": 686,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-06-16T10:02:52Z",
      "side": 1,
      "message": "And leave SetLocalSsrc unimplemented for the deprecated ModuleRtpRtcpImpl,\n(i.e. log ERROR here and do nothing. or CHECK)\n\nthat module was left because it is used when threading is uncertain, so calling SetLocalSsrc might not be safe anyway.",
      "range": {
        "startLine": 686,
        "startChar": 5,
        "endLine": 686,
        "endChar": 36
      },
      "revId": "23f37f3e8c8111f6c1b1a3890459f0e1251d65c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f5b3844_2d213575",
        "filename": "modules/rtp_rtcp/source/rtp_rtcp_impl.cc",
        "patchSetId": 21
      },
      "lineNbr": 686,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-16T13:34:50Z",
      "side": 1,
      "message": "good point, I\u0027ll do a follow up change that removes this implementation.",
      "parentUuid": "2e032e89_7f74ad77",
      "range": {
        "startLine": 686,
        "startChar": 5,
        "endLine": 686,
        "endChar": 36
      },
      "revId": "23f37f3e8c8111f6c1b1a3890459f0e1251d65c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}