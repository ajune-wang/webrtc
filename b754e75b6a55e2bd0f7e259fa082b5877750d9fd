{
  "comments": [
    {
      "key": {
        "uuid": "b7566dab_e7c628e1",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T07:34:17Z",
      "side": 1,
      "message": "Where does the number 48 come from? Document with a comment?",
      "range": {
        "startLine": 668,
        "startChar": 25,
        "endLine": 668,
        "endChar": 27
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1965ce5e_54c176ed",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 668,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-07-01T10:10:29Z",
      "side": 1,
      "message": "Yes please. Or a function-local named constant.",
      "parentUuid": "b7566dab_e7c628e1",
      "range": {
        "startLine": 668,
        "startChar": 25,
        "endLine": 668,
        "endChar": 27
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34cd5328_8fb5338b",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 671,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T07:34:17Z",
      "side": 1,
      "message": "Nit: cares -\u003e care",
      "range": {
        "startLine": 671,
        "startChar": 49,
        "endLine": 671,
        "endChar": 54
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09481bb9_3ea95bca",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 686,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-07-01T10:10:29Z",
      "side": 1,
      "message": "Nit: payload_length_ms \u003c 10 would be easier on at least my eyes...",
      "range": {
        "startLine": 686,
        "startChar": 6,
        "endLine": 686,
        "endChar": 28
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4442e53_6724b0a4",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-07-01T10:10:29Z",
      "side": 1,
      "message": "Don\u0027t initialize; we always set the variable below, and if we didn\u0027t, we\u0027d want UBSan to notice.",
      "range": {
        "startLine": 689,
        "startChar": 18,
        "endLine": 689,
        "endChar": 21
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e84c1d70_25ea1745",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 5100
      },
      "writtenOn": "2019-07-01T07:34:17Z",
      "side": 1,
      "message": "Why (D)CHECK this? Should we not handle multi-channel packets?",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29dd8bd1_d9c75f33",
        "filename": "modules/audio_coding/codecs/opus/opus_interface.c",
        "patchSetId": 2
      },
      "lineNbr": 710,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-07-01T07:57:18Z",
      "side": 1,
      "message": "AFAIK, this function can only return 1 or 2. \n\nhttps://cs.chromium.org/chromium/src/third_party/opus/src/src/opus_decoder.c?type\u003dcs\u0026q\u003dopus_packet_get_nb_channels\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d959\n\nBut yes, how about multi-channel?\n\nWe need to use multistream APIs\nhttps://mf4.xiph.org/jenkins/view/opus/job/opus/ws/doc/html/group__opus__multistream.html\n\nBasically, a multichannel Opus payload should have many frames, each can be mono/stereo and should be mapped to multichannel. The payload itself has no mapping information, and therefore \"the encoder and decoder must negotiate the channel configuration before the decoder can successfully interpret the data in the packets produced by the encoder.\"\n\nHow FEC should work in multichannel case is unclear. We should avoid multichannel payload to be parsed by this method actually.",
      "parentUuid": "e84c1d70_25ea1745",
      "range": {
        "startLine": 710,
        "startChar": 2,
        "endLine": 710,
        "endChar": 45
      },
      "revId": "b754e75b6a55e2bd0f7e259fa082b5877750d9fd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}