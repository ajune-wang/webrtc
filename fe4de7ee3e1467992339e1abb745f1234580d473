{
  "comments": [
    {
      "key": {
        "uuid": "063c4502_9aca641b",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 2
      },
      "lineNbr": 652,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-04T14:50:01Z",
      "side": 1,
      "message": "alternatively record just the 1st sequence number and the rtp timestamp.\npackets in a frame MUST have consecutive sequence numbers.\n\nThen later loop can be:\n   for (uint16_t i \u003d 0; i \u003c num_packets; ++i) {\n     map_-\u003eInsert(first_sequence_number + i,\n                  {rtp_timestamp, /*first\u003d*/i\u003d\u003d0, /*last\u003d*/i \u003d\u003d num_packets - 1});\n   }",
      "range": {
        "startLine": 651,
        "startChar": 2,
        "endLine": 652,
        "endChar": 34
      },
      "revId": "fe4de7ee3e1467992339e1abb745f1234580d473",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be61d37c_472e910c",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 2
      },
      "lineNbr": 652,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-04T15:02:18Z",
      "side": 1,
      "message": "IMHO, the code is simpler with just a container, than it is with a container-and-uint duo.",
      "parentUuid": "063c4502_9aca641b",
      "range": {
        "startLine": 651,
        "startChar": 2,
        "endLine": 652,
        "endChar": 34
      },
      "revId": "fe4de7ee3e1467992339e1abb745f1234580d473",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f432507e_22201bc8",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 2
      },
      "lineNbr": 652,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-04T15:07:43Z",
      "side": 1,
      "message": "container-and-uint?\nI suggested just two uints (rtp_timestamp, first_sequence_number) instead of extra container.",
      "parentUuid": "be61d37c_472e910c",
      "range": {
        "startLine": 651,
        "startChar": 2,
        "endLine": 652,
        "endChar": 34
      },
      "revId": "fe4de7ee3e1467992339e1abb745f1234580d473",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aefc7cfb_4e26d8d5",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 2
      },
      "lineNbr": 740,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-04T14:50:01Z",
      "side": 1,
      "message": "const auto\u0026\nif you still want this kind of vector.",
      "range": {
        "startLine": 740,
        "startChar": 15,
        "endLine": 740,
        "endChar": 19
      },
      "revId": "fe4de7ee3e1467992339e1abb745f1234580d473",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3fc4d25_594e47bc",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 2
      },
      "lineNbr": 740,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-04-04T15:02:18Z",
      "side": 1,
      "message": "Oops; thanks!",
      "parentUuid": "aefc7cfb_4e26d8d5",
      "range": {
        "startLine": 740,
        "startChar": 15,
        "endLine": 740,
        "endChar": 19
      },
      "revId": "fe4de7ee3e1467992339e1abb745f1234580d473",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}