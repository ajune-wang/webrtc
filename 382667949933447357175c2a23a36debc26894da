{
  "comments": [
    {
      "key": {
        "uuid": "b8066f68_0a8bb19a",
        "filename": "call/degraded_call.h",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-12T08:09:37Z",
      "side": 1,
      "message": "Please add a comment explaining the purpose of this class.",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80c6fe1_20026a26",
        "filename": "call/degraded_call.h",
        "patchSetId": 8
      },
      "lineNbr": 125,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-08-12T08:45:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8066f68_0a8bb19a",
      "range": {
        "startLine": 125,
        "startChar": 8,
        "endLine": 125,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d7586b1_b7c7ac0e",
        "filename": "call/fake_network_pipe.h",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-12T08:09:37Z",
      "side": 1,
      "message": "Do we need both |media_type_| and |transport_| ? Both are intended to handle the videoengine/voiceengine split, if I remember correctly. It seems a bit brittle with the raw Transport pointer, if the transport may go away before the packet is delivered.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6be7e44_6aa72400",
        "filename": "call/fake_network_pipe.h",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-08-12T08:45:13Z",
      "side": 1,
      "message": "They are used in opposite directions. Receiving packets and sending them use completely different APIs, so depending on which packets you want to delay we need to use one api or the other.\nI don\u0027t see any easy way around the destruction problem. I don\u0027t want to resort to a shared pointer as that would mean mucking up the production APIs for the sake of testing features.\nKeeping track of live transport should work well enough.",
      "parentUuid": "2d7586b1_b7c7ac0e",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "269fe4db_80b4ad85",
        "filename": "call/fake_network_pipe.h",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-12T09:08:14Z",
      "side": 1,
      "message": "I\u0027m a bit confused. FakeNetworkPipe::EnqueuePacket sets both media_type_ and transport_, and that sounds like a uni-directional method.\n\nAre there different users of this NetworkPacket class, or is it only FakeNetworkPipe?\n\nThat said, explicit refcounting seems like a reasonable way to deal with the problem. You could consider moving that inside the TransportAdapter, with a map real_transport --\u003e TransportAdapter in DegradedCall, and a refcount inside TransportAdapter.",
      "parentUuid": "a6be7e44_6aa72400",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "754d05c9_c704ea0f",
        "filename": "call/fake_network_pipe.h",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-08-12T09:25:28Z",
      "side": 1,
      "message": "In both cases EnqueuePacket can be used, but if used when receiving packets then media_type_ is populated with an actual media type and the receiver_ field is set in the fake network pipe (and transport will be nullptr).\nIf used when sending packets, media_type will be ANY, receiver_ will not be set and the transport is non-null.\n\nI could consider adding a separate method to clarify this.\n\nI don\u0027t think the normal refcounted pointer type will help much since we can refcount the real Transport instance. We also can\u0027t easily use TransportAdapter for this purpose too since it\u0027s already implementing Transport to capture packets to be inserted into the queue. So we\u0027d need another adapter class to keep track of real transports after the queue. I considered that but I got even uglier quickly.",
      "parentUuid": "269fe4db_80b4ad85",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29f0dd8e_60751116",
        "filename": "call/fake_network_pipe.h",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-08-12T09:46:04Z",
      "side": 1,
      "message": "\u003e In both cases EnqueuePacket can be used, but if used when receiving packets then media_type_ is populated with an actual media type and the receiver_ field is set in the fake network pipe (and transport will be nullptr).\n\u003e If used when sending packets, media_type will be ANY, receiver_ will not be set and the transport is non-null.\n\u003e \n\u003e I could consider adding a separate method to clarify this.\n\nWould be nice with either separate methods, or a comment explaining when the respective field is needed.\n \n\u003e I don\u0027t think the normal refcounted pointer type will help much since we can refcount the real Transport instance.\n\nI was thinking that maybe one could arrange so that TransportAdapter is passed to FakeNetworkPipe, and always living long enough that FakeNetworkPipe doesn\u0027t need the Add/RemoveActiveTransport. The refcount would be moved to TransportAdapter, and when it reaches zero, it would set the internal real_transport pointer to null and just discard any incoming packets.\n\nIf you don\u0027t think that will work out well, cl is ok as is.",
      "parentUuid": "754d05c9_c704ea0f",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4be3e99_a936aa22",
        "filename": "call/fake_network_pipe.h",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-08-12T12:54:54Z",
      "side": 1,
      "message": "Alright, added differentiated Enqueue methods.",
      "parentUuid": "29f0dd8e_60751116",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 24
      },
      "revId": "382667949933447357175c2a23a36debc26894da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}