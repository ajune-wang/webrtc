{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2906fd98_75d4b292",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 11
      },
      "lineNbr": 0,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "I made some initial comments on the modified files.  There is a lot of new/moved code here so I will need to take on this review in chunks, and familiarize myself with some of the existing code.\n",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "407bf36f_d523f861",
        "filename": "modules/desktop_capture/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 568,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "C++ files in this repository use the .cc extension.",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87c3eff0_af48b056",
        "filename": "modules/desktop_capture/BUILD.gn",
        "patchSetId": 11
      },
      "lineNbr": 568,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "Good catch. Habits.",
      "parentUuid": "407bf36f_d523f861",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebde7712_0e9a1a09",
        "filename": "modules/desktop_capture/desktop_capture_options.h",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "It is always safer to return a reference counted object by the reference wrapper (in this case, rtc::scoped_refptr).",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc809c68_9ffe11a3",
        "filename": "modules/desktop_capture/desktop_capture_options.h",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "This is how all the objects from DesktopCapturerOptions are implemented. I took inspiration from here:\n\n#if defined(WEBRTC_USE_X11)\n  SharedXDisplay* x_display() const { return x_display_; }\n  void set_x_display(rtc::scoped_refptr\u003cSharedXDisplay\u003e x_display) {\n    x_display_ \u003d x_display;\n  }\n#endif\n\nBUT I can fix it of course if you want.",
      "parentUuid": "ebde7712_0e9a1a09",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bae9e446_925f2bb5",
        "filename": "modules/desktop_capture/desktop_capture_options.h",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 18474
      },
      "writtenOn": "2021-12-01T00:26:05Z",
      "side": 1,
      "message": "Per the style guide: https://chromium.googlesource.com/chromium/src/+/HEAD/styleguide/c++/c++.md#object-ownership-and-calling-conventions and I\u0027m not seeing anything contradictory in the webrtc styleguide, I *believe* that a most of these should probably be const refptr\u0026, especially since I found at least one instance that is making a new scoped_refptr out of a raw ptr (which I believe is not a good idea), this at least ensures we don\u0027t pay the cost of bumping/dropping the ref count while giving code the *option* to share ownership.",
      "parentUuid": "fc809c68_9ffe11a3",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46d3ceb9_c17dccb5",
        "filename": "modules/desktop_capture/desktop_capture_options.h",
        "patchSetId": 11
      },
      "lineNbr": 169,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-01-03T13:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bae9e446_925f2bb5",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b162342_3b353df4",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "Can you use options_(options) here?",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa3ff12f_2baeef9f",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 23,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8b162342_3b353df4",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3425ff31_e7f5a82c",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "Is screencast_portal_ ever nullptr?  If not, then it doesn\u0027t need to be a std::unique_ptr.",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86e4d86d_ce482537",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 25,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3425ff31_e7f5a82c",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebc5b9ab_7752a9c3",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "This doesn\u0027t look right.  The options are passed in from the WebRTC client and should be an immutable set of parameters that tell WebRTC how to initiate the capture stream.  Is there a different object that can keep track of the stream object?",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "892f52f3_540353e5",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "The reason why I moved it into DesktopCapturerOptions is that I plan to implement MouseCursorMonitor and I need access to the same PW stream. Both DesktopCapturer and MouseCursorMonitor share same DesktopCapturerOptions object when combined together in DesktopAndCursorComposer and then in this case you can think of it as a parameter.\n\nMaybe use different naming? Something like screencast_stream()-\u003eConnectTo(node_id, fd)? I again took inspiration from the X11 capturer, where they share X11Display, it\u0027s kind of similar and both provide the screen content, it\u0027s just with the PipeWire stream we don\u0027t know in advance node_id and filedescriptor we need to connect to. \n\nI could combine both the xdg-desktop-portal code and PipeWire stream code together, but it would result into the same â†’ we would need to start it somehow later in similar way. Also, I made those separate to make it easier in the future to write automated tests in case we will want to test each component separately.",
      "parentUuid": "ebc5b9ab_7752a9c3",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99c6e4ae_9122bb0c",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-01-03T13:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "892f52f3_540353e5",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e034efb8_2d35f61a",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-01-05T13:45:36Z",
      "side": 1,
      "message": "You can see here why I did it this way: https://webrtc-review.googlesource.com/c/src/+/244507. I can now access screencast_stream() from the options in mouse cursor monitor implementation. There it feels natural, same as in the X11 implementation. I agree that this call might appear to be weird, but don\u0027t really know how to make it more reasonable.",
      "parentUuid": "99c6e4ae_9122bb0c",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d5ec64a4_ae7b0b5f",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-10T19:11:27Z",
      "side": 1,
      "message": "Un-resolving until I figure out why the X11 capturer does things this way and look at the MouseCursorMonitor changes.",
      "parentUuid": "e034efb8_2d35f61a",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da5a15a4_4f3edbb2",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-01-11T09:18:49Z",
      "side": 1,
      "message": "The X11 capturer does exactly same thing. They share XDisplay between their capturer and mouse cursor monitor. The only difference is that with X11 you have access to everything, with Wayland/PipeWire we can connect to a certain socket and stream ID, which will be provided to us by xdg-desktop-portal and that\u0027s why I call StartScreenCastStream() as it cannot be initialized earlier.",
      "parentUuid": "d5ec64a4_ae7b0b5f",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93d3cd72_1d08b736",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 36,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-01-20T00:55:06Z",
      "side": 1,
      "message": "Ok.  For now let\u0027s keep the pattern followed by the X11 capturer until we can find a better way to pass X11/Pipewire streams to the MouseCursorMonitor.",
      "parentUuid": "da5a15a4_4f3edbb2",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9529cb65_f364781d",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "Please include the result code in the logging string.",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e3d4b55_276653bd",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 43,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9529cb65_f364781d",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c208061_e36fb18a",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "It\u0027s unusual to have a unique_ptr be wrapped in absl::optional, since a unique_ptr can have a nullptr value.",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46068ef6_02eb59d0",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "Yes, I realized that and fixed it in the following PR:\nhttps://webrtc-review.googlesource.com/c/src/+/239362\n\nCan I keep it there? Or do you want me to fix it here and rebase the other change?",
      "parentUuid": "6c208061_e36fb18a",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11ee7268_1741ae8c",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 18474
      },
      "writtenOn": "2021-12-01T00:26:05Z",
      "side": 1,
      "message": "Personally I\u0027d prefer to fix it here rather than introduce the pattern in case the other PR gets held up.",
      "parentUuid": "46068ef6_02eb59d0",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e719bca5_8804b001",
        "filename": "modules/desktop_capture/linux/wayland/base_capturer_pipewire.cc",
        "patchSetId": 11
      },
      "lineNbr": 62,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-01-03T13:27:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11ee7268_1741ae8c",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5380ae22_d983cd5a",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 11
      },
      "lineNbr": 373,
      "author": {
        "id": 14134
      },
      "writtenOn": "2021-11-29T21:52:43Z",
      "side": 1,
      "message": "Is this an error condition?",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75e145ba_9dc10333",
        "filename": "modules/desktop_capture/linux/wayland/egl_dmabuf.cc",
        "patchSetId": 11
      },
      "lineNbr": 373,
      "author": {
        "id": 8046
      },
      "writtenOn": "2021-11-30T07:52:04Z",
      "side": 1,
      "message": "Probably leftover when I tried to debug things. I\u0027ll turn this into LS_INFO.",
      "parentUuid": "5380ae22_d983cd5a",
      "revId": "779de735b10bfdb5b739b317d076ccd1b1c1312b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}