{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ddecc6f9_46a10b5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-09T19:20:53Z",
      "side": 1,
      "message": "Hi! Thanks for this CL! It\u0027s great that it\u0027s so explicit about the AGC order of precedence.\n\n1. Is there some more precise issue to use than \"Automatic Gain Control (AGC) clean-up and refactoring\"? Or is all the AGC2 development and release related work already tracked in that one?\n\n2. Testing - is this CL (or some followup?) manually tested? Could you mention that in a `Tested:` tag in the CL description?",
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14b30c0b_e4473a22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-10T17:39:24Z",
      "side": 1,
      "message": "Thanks Sam for the comments!",
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b8b8f19_04183bfa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-10T17:39:24Z",
      "side": 1,
      "message": "Thanks Sam for the comments!\n\n1. We\u0027ve been using that issue also for some related CLs.\n\n2. Thanks for reminding! I\u0027ll add the comment after finishing all the changes.",
      "parentUuid": "ddecc6f9_46a10b5e",
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8128b84d_41ea0d04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-11T15:05:28Z",
      "side": 1,
      "message": "Thanks Hanna! I added a few comments.",
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8e46f9d_0d0eeab7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-11T16:37:41Z",
      "side": 1,
      "message": "This CL LGTM, I\u0027m OK with adding the enum either here or in a follow up",
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48775a0e_e1d20cdb",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 667,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-11T15:05:28Z",
      "side": 1,
      "message": "in the CL description I\u0027d add that AGC2 now handles the capture output unused state",
      "range": {
        "startLine": 664,
        "startChar": 0,
        "endLine": 667,
        "endChar": 3
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fca8dbec_240c26fa",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 667,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-14T13:36:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48775a0e_e1d20cdb",
      "range": {
        "startLine": 664,
        "startChar": 0,
        "endLine": 667,
        "endChar": 3
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f751410_52cd733b",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-09T19:20:53Z",
      "side": 1,
      "message": "There is a hefty amount of logic to compute variants of: \"is AgcManagerDirect in control\", \"is Agc1 in control\" and \"is InputVolumeController in control\", and it requires inspection at each site to understand what is done. I\u0027m sure it is more straightforward to the rest of you (Hanna, Alessio, Per) who all have dabbled with implementing one of our gain controllers, but it\u0027s easy for me to lose track of what the logic is saying at each point.\n\nIs it possible to somehow centralize the logic? To make it easier to read and more obviously consistent across audio_processing_impl. Is it an improvement, or is the logic too varied / does it lead to too verbose code?\n\nSomething like:\n```\nenum class ActiveAnalogAgcEnum {\n  kLegacyAgc1,\n  kLegacyAgcMangerDirect,\n  kInputVolumeController,\n  kNone\n};\nActiveAnalogAgcEnum ActiveAnalogAgc(submodules_, config_);\n```\n\n...and then consistently defer to this function:\n```\n  ... in ProcessCaptureStreamLocked:\n  if (ActiveAnalogAgc(submodules_, config_)\n          \u003d\u003d ActiveAnalogAgcEnum::kLegacyAgc1) {\n    GainControlImpl::PackRenderAudioBuffer(*audio, \u0026agc_render_queue_buffer_);\n    ...\n  }\n  ...\n  if (ActiveAnalogAgc(submodules_, config_)\n          \u003d\u003d ActiveAnalogAgcEnum::kLegacyAgcManagerDirect) {\n    submodules_.agc_manager-\u003eAnalyzePreProcess(*capture_buffer);\n  }\n  ... etc\n  ... in set_stream_analog_level:\n  switch (ActiveAnalogAgc(submodules_, config_)) {\n    case ActiveAnalogAgcEnum::kInputVolumeController:\n      return;\n    case ActiveAnalogAgcEnum::kLegacyAgcManagerDirect:\n      submodules_.agc_manager-\u003eset_stream_analog_level(level);\n      return;\n    case ActiveAnalogAgcEnum::kLegacyAgcManagerDirect:\n      submodules_.agc_manager-\u003eset_stream_analog_level(level);\n      return;\n    case kNone:\n      int error \u003d submodules_.gain_control-\u003eset_stream_analog_level(level);\n      RTC_DCHECK_EQ(kNoError, error);\n      return;\n  }\n  RTC_NOTREACHED();\n```",
      "range": {
        "startLine": 950,
        "startChar": 6,
        "endLine": 953,
        "endChar": 30
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "208273ce_349bbf4d",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-10T17:39:24Z",
      "side": 1,
      "message": "I wrote a draft CL for a centralised logic in: https://webrtc-review.googlesource.com/c/src/+/282981.\n\nSam, Alessio, Per: Could you please take a look at the logic? It\u0027s not a pure refactoring CL (centralising the logic meant including some extra checks in some cases). Also, some parts of the logic won\u0027t be needed after Alessio\u0027s APM refactoring CLs land but some would still be needed. WDYT?",
      "parentUuid": "8f751410_52cd733b",
      "range": {
        "startLine": 950,
        "startChar": 6,
        "endLine": 953,
        "endChar": 30
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1692660b_8e7f7ccf",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-11T15:05:28Z",
      "side": 1,
      "message": "I reviewed https://webrtc-review.googlesource.com/c/src/+/282981, I added some comments but the approach LGTM.",
      "parentUuid": "208273ce_349bbf4d",
      "range": {
        "startLine": 950,
        "startChar": 6,
        "endLine": 953,
        "endChar": 30
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51f53486_4a107c32",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 953,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-14T13:36:12Z",
      "side": 1,
      "message": "Based on the offline discussion, let\u0027s abandon https://webrtc-review.googlesource.com/c/src/+/282981.",
      "parentUuid": "1692660b_8e7f7ccf",
      "range": {
        "startLine": 950,
        "startChar": 6,
        "endLine": 953,
        "endChar": 30
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e3a1284_5b140259",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1186,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-10T06:55:17Z",
      "side": 1,
      "message": "Is no `capture_.applied_input_volume` ever an error here? Would it be a useful debugging signal to log a (rate-limited) warning/error?",
      "range": {
        "startLine": 1186,
        "startChar": 6,
        "endLine": 1186,
        "endChar": 47
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46b3b0f9_9727c1d9",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1186,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-11T15:05:28Z",
      "side": 1,
      "message": "AGC2 can be used in digital-only mode and if so, there\u0027s no input volume to handle\nhowever, I see why you have this question\nwould the following help?\n\n```\nif (submodules_.gain_controller2) {\n  submodules_.gain_controller2-\u003eAnalyze(\n      capture_.applied_input_volume, *capture_buffer);\n}\n```\n\nAGC2 knows if the input volume controller is enabled; if so, it will compute a new recommended input volume, otherwise it recommends the applied input volume. Hence, it\u0027s easier to pass the optional value and then `GainController2::Analyze()` will yell if the first arg is unspecified and the input volume controller is enabled or in the opposite case.\n\nWDYT?",
      "parentUuid": "9e3a1284_5b140259",
      "range": {
        "startLine": 1186,
        "startChar": 6,
        "endLine": 1186,
        "endChar": 47
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0d4ebd6_1de01f6e",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1186,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-14T13:36:12Z",
      "side": 1,
      "message": "A few CLs ago this argument was changed from optional to non-optional based on the review comments: https://webrtc-review.googlesource.com/c/src/+/279822/comment/5f7ae0ba_e43a0143/.\n\nI agree that it would simplify the call but I would leave this to a later CL if we find it necessary.",
      "parentUuid": "46b3b0f9_9727c1d9",
      "range": {
        "startLine": 1186,
        "startChar": 6,
        "endLine": 1186,
        "endChar": 47
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7740d3b4_0911cc63",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1189,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-10T06:55:17Z",
      "side": 1,
      "message": "Should the input volume always go to AGC2 when set, as done here?\nOr are we ever in a situation where we use digital AGC2 and analog AGC1, and here have a `submodules_.gain_controller2` for digital AGC but `capture_.applied_input_volume` expected to go to AGC1?",
      "range": {
        "startLine": 1184,
        "startChar": 0,
        "endLine": 1189,
        "endChar": 3
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62f9cc37_1b3fa1dd",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1189,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-10T17:39:24Z",
      "side": 1,
      "message": "This logic doesn\u0027t depend on whether AGC1 analog is used or not (AGC1 volume is set elsewhere regardless of this call if AGC1 analog is enabled). Internally AGC2 sets the volume if InputVolumeController has been enabled in its constructor.",
      "parentUuid": "7740d3b4_0911cc63",
      "range": {
        "startLine": 1184,
        "startChar": 0,
        "endLine": 1189,
        "endChar": 3
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe8ff56e_929b3ba2",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1189,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-11T16:37:41Z",
      "side": 1,
      "message": "Makes sense, thank you for explaining",
      "parentUuid": "62f9cc37_1b3fa1dd",
      "range": {
        "startLine": 1184,
        "startChar": 0,
        "endLine": 1189,
        "endChar": 3
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2746c8f2_19d76542",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1351,
      "author": {
        "id": 5122
      },
      "writtenOn": "2022-11-11T15:05:28Z",
      "side": 1,
      "message": "Shall we remove the 2nd arg in `GainController2::Process()`?\nFor me it\u0027s ok to keep as it is, but I\u0027d like to hear by others.\nI\u0027m asking because `GainController2::Analyze()` now observes the applied input volumes and hence it looks odd that we pass this flag - and it\u0027s error prone since one could pass different applied input volumes and false as input volume change flag. \n\nAlternatively, we could detect input volume changes internally in `GainController2`. Another option is passing `capture_.applied_input_volume_changed` to `GainController2::Analyze()` together with the applied input volume, but I wouldn\u0027t do that since the flag is only used by `GainController2::Process()` and it\u0027d make `GainController2` unnecessarily too complex - I\u0027d prefer to avoid adding a private member in `GainController2` to \"pass\" information from `Analyze()` to `Process()`.\n\nWDYT?",
      "range": {
        "startLine": 1351,
        "startChar": 29,
        "endLine": 1351,
        "endChar": 66
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c324e644_5a95671c",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1351,
      "author": {
        "id": 5119
      },
      "writtenOn": "2022-11-11T16:37:41Z",
      "side": 1,
      "message": "\u003e I\u0027d like to hear by others\n\nIt sounds like this would reduce and simplify the API surface of AGC2, and sgtm for that reason.",
      "parentUuid": "2746c8f2_19d76542",
      "range": {
        "startLine": 1351,
        "startChar": 29,
        "endLine": 1351,
        "endChar": 66
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbda0c7b_a00b4843",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1351,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-14T13:36:12Z",
      "side": 1,
      "message": "That\u0027s a good idea! I\u0027d suggest we only take care of the integration in this CL and postpone changes in GainController2 to another CL.",
      "parentUuid": "c324e644_5a95671c",
      "range": {
        "startLine": 1351,
        "startChar": 29,
        "endLine": 1351,
        "endChar": 66
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78c99558_df81d2a6",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1701,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-09T10:18:01Z",
      "side": 1,
      "message": "This was changed in patchset 2: `GetRecommendedInputVolume()` may return an `absl::nullopt`, assign that to `capture_.recommended_input_volume` without further checks instead of repeating `capture_.applied_input_volume`",
      "range": {
        "startLine": 1700,
        "startChar": 0,
        "endLine": 1701,
        "endChar": 66
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67551d17_62c70067",
        "filename": "modules/audio_processing/audio_processing_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 1701,
      "author": {
        "id": 17719
      },
      "writtenOn": "2022-11-10T17:39:24Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "78c99558_df81d2a6",
      "range": {
        "startLine": 1700,
        "startChar": 0,
        "endLine": 1701,
        "endChar": 66
      },
      "revId": "54176e27a4c6fb8a57c5a23f2ba589ce51621f7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}