# Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

# FOR DETAILS ON THIS FILE SEE THE MAIN COPY IN //tools/mb/mb_config.pyl.
# This is configuration for standalone WebRTC bots. It is used to keep the bot
# configurations source-side instead of in the buildbot scripts. That makes it
# easy to try different configurations of GN args in tryjob patches.

{
  # This is a map of buildbot master names -> buildbot builder names ->
  # list of mixins. mb uses this dict to look up which config to use for a given
  # bot. The builders should be sorted by the order they appear in the /builders
  # page on the buildbots, *not* alphabetically.
  'masters': {
    'client.webrtc': {
      # iOS
      # This is just used for auditing. iOS bots use the ios recipes and look up
      # their GN arguments via files checked in under //tools_webrtc/ios/bots.
      # It is an error to use one of these configs to generate the build files.
      'iOS32 Debug': ['error'],
      'iOS32 Release': ['error'],
      'iOS64 Debug': ['error'],
      'iOS64 Release': ['error'],
      'iOS32 Sim Debug (iOS 9.0)': ['error'],
      'iOS64 Sim Debug (iOS 9.0)': ['error'],
      'iOS64 Sim Debug (iOS 10.0)': ['error'],

      # Mac
      'Mac64 Debug': [
        'gn', 'openh264_debug_bot', 'x64'],
      'Mac64 Release': [
        'gn', 'openh264_release_bot', 'x64'],
      'Mac Asan': [
        'gn', 'asan', 'clang', 'openh264_release_bot', 'x64'],

      # Linux
      'Linux32 Debug': [
        'gn', 'debug_bot', 'x86'],
      'Linux32 Release': [
        'gn', 'openh264_release_bot', 'x86'],
      # TODO(kjellander): Restore Goma for this when crbug.com/726706 is fixed.
      'Linux32 Debug (ARM)': [
        'gn', 'openh264', 'debug', 'arm'],
      'Linux32 Release (ARM)': [
        'gn', 'openh264_release_bot', 'arm'],
      'Linux64 Debug': [
        'gn', 'openh264_debug_bot', 'x64'],
      'Linux64 Release': [
        'gn', 'openh264_release_bot', 'x64'],
      'Linux64 Debug (ARM)': [
        'gn', 'openh264_debug_bot', 'arm64'],
      'Linux64 Release (ARM)': [
        'gn', 'openh264_release_bot', 'arm64'],
      'Linux64 Release (GCC)': [
        'gn', 'gcc', 'release_bot', 'x64', 'no_rtc_tests'],
      'Linux Asan': [
        'gn', 'asan', 'lsan', 'clang', 'openh264_release_bot', 'x64'],
      'Linux Memcheck': [
        'memcheck', 'gn', 'openh264_release_bot', 'x64', 'use_default_libcxx',
        'no_lld'],
      'Linux MSan': [
        'gn', 'msan', 'clang', 'openh264_release_bot', 'x64'],
      'Linux Tsan v2': [
        'gn', 'tsan', 'clang', 'openh264_release_bot', 'x64'],
      'Linux UBSan': [
        'gn', 'ubsan', 'clang', 'openh264_release_bot', 'x64'],
      'Linux UBSan vptr': [
        'gn', 'ubsan_vptr', 'clang', 'openh264_release_bot', 'x64'],
      'Linux (more configs)': {
        'intelligibility_enhancer_no_include_tests': [
          'debug_bot', 'x64', 'intelligibility_enhancer', 'no_include_tests'],
        'bwe_test_logging': [
          'debug_bot', 'x64', 'bwe_test_logging'],
        'dummy_audio_file_devices_no_protobuf': [
          'debug_bot', 'x64', 'dummy_audio_file_devices', 'no_protobuf'],
        'rtti_no_sctp': [
          'debug_bot', 'x64', 'rtti', 'no_sctp'],
      },
      'Linux64 Release (Libfuzzer)': [
        'libfuzzer', 'asan', 'optimize_for_fuzzing', 'openh264_release_bot',
        'x64', 'no_rtc_tests'],

      # Android
      'Android32 (M Nexus5X)': [
        'android', 'gn', 'release_bot', 'arm'],
      'Android32 (M Nexus5X)(dbg)': [
        'android', 'gn', 'debug_static_bot', 'arm'],
      'Android64 (M Nexus5X)': [
        'android', 'gn', 'release_bot', 'arm64'],
      'Android64 (M Nexus5X)(dbg)': [
        'android', 'gn', 'debug_static_bot', 'arm64'],
      'Android32 Builder x86': [
        'android', 'gn', 'release_bot', 'x86'],
      'Android32 Builder x86 (dbg)': [
        'android', 'gn', 'debug_static_bot', 'x86'],
      'Android64 Builder x64 (dbg)': [
        'android', 'gn', 'debug_static_bot', 'x64'],
      'Android32 (more configs)': {
        'intelligibility_enhancer_no_include_tests': [
          'android', 'debug_static_bot', 'arm',
          'intelligibility_enhancer', 'no_include_tests'],
        'bwe_test_logging': [
          'android', 'debug_static_bot', 'arm', 'bwe_test_logging'],
        'dummy_audio_file_devices_no_protobuf': [
          'android', 'debug_static_bot', 'arm',
          'dummy_audio_file_devices', 'no_protobuf'],
        'rtti_no_sctp': [
          'android', 'debug_static_bot', 'arm', 'rtti', 'no_sctp'],
      },

      # Windows
      'Win32 Debug': [
        'gn', 'no_clang', 'openh264_debug_bot', 'x86'],
      'Win32 Release': [
        'gn', 'no_clang', 'openh264_release_bot', 'x86'],
      'Win64 Debug': [
        'gn', 'no_clang', 'openh264_debug_bot', 'x64'],
      'Win64 Release': [
        'gn', 'no_clang', 'openh264_release_bot', 'x64'],
      'Win32 Debug (Clang)': [
        'gn', 'clang', 'openh264_debug_bot', 'x86'],
      'Win32 Release (Clang)': [
        'gn', 'clang', 'openh264_release_bot', 'x86'],
      'Win64 Debug (Clang)': [
        'gn', 'clang', 'openh264_debug_bot', 'x64'],
      'Win64 Release (Clang)': [
        'gn', 'clang', 'openh264_release_bot', 'x64'],
      'Win32 ASan': [
        'gn', 'asan', 'clang',  'full_symbols', 'openh264_release_bot', 'x86',
        'win_fastlink'],
      'Win (more configs)': {
        'intelligibility_enhancer_no_include_tests': [
          'debug_bot', 'x86', 'intelligibility_enhancer', 'no_include_tests'],
        'bwe_test_logging': [
          'debug_bot', 'x86', 'bwe_test_logging'],
        'dummy_audio_file_devices_no_protobuf': [
          'debug_bot', 'x86', 'dummy_audio_file_devices', 'no_protobuf'],
        'rtti_no_sctp': [
          'debug_bot', 'x86', 'rtti', 'no_sctp'],
      },
    },
    'client.webrtc.branches': {
      # iOS
      'iOS (stable)': ['error'],
      'iOS (beta)': ['error'],

      # Mac
      'Mac (stable)': [
        'gn', 'openh264_release_bot', 'x64'],
      'Mac (beta)': [
        'gn', 'openh264_release_bot', 'x64'],

      # Linux
      'Linux (stable)': [
        'gn', 'openh264_release_bot', 'x64'],
      'Linux (beta)': [
        'gn', 'openh264_release_bot', 'x64'],

      # Android
      'Android (stable)': [
        'android', 'gn', 'release_bot', 'arm'],
      'Android (beta)': [
        'android', 'gn', 'release_bot', 'arm'],

      # Windows
      'Win (stable)': [
        'gn', 'openh264_release_bot', 'x86'],
      'Win (beta)': [
        'gn', 'openh264_release_bot', 'x86'],
    },
    'client.webrtc.perf': {
      # Android
      'Android32 Builder': [
        'android', 'gn', 'release', 'goma', 'arm'],
      'Android64 Builder': [
        'android', 'gn', 'release', 'goma', 'arm64'],
      'Android32 Tests (J Nexus4)': ['error'],
      'Android32 Tests (K Nexus5)': ['error'],
      'Android32 Tests (L Nexus5)': ['error'],
      'Android32 Tests (L Nexus6)': ['error'],
      'Android32 Tests (L Nexus7.2)': ['error'],
      'Android64 Tests (L Nexus9)': ['error'],
      'Linux Trusty': [
        'gn', 'openh264', 'release', 'goma', 'x64'],
      'Mac 10.11': [
        'gn', 'openh264', 'release', 'goma', 'x64'],
      'Win7': [
        'gn', 'openh264', 'release', 'goma', 'x86'],
    },
    'client.webrtc.fyi': {
      # Mac
      'Mac (swarming)': [
        'gn', 'openh264_release_bot', 'x64'],

      # Android
      'Android Perf (swarming)': [
        'android', 'gn', 'release', 'goma', 'arm'],
      'Android ASan (swarming)': [
        'android', 'gn', 'asan', 'clang', 'release_bot', 'arm'],

      # Windows
      'Win (swarming)': [
        'gn', 'openh264_release_bot', 'x86'],
      'Win64 Debug (Win8)': [
        'gn', 'openh264_debug_bot', 'x64'],
      'Win64 Debug (Win10)': [
        'gn', 'openh264_debug_bot', 'x64'],
    },
    'chromium.infra.codesearch': {
      'codesearch-gen-webrtc-android': {
        'android': [
          'android', 'gn', 'debug_static_bot', 'arm'],
      },
      'codesearch-gen-webrtc-linux': {
        'linux': [
          'gn', 'openh264_debug_bot', 'minimal_symbols'],
      }
    },
    'internal.client.webrtc': {
      'iOS64 Debug': ['error'],
      'iOS64 Perf': ['error'],
      'iOS64 Release': ['error'],
    },
    'internal.tryserver.webrtc': {
      'ios_arm64_dbg': ['error'],
      'ios_arm64_rel': ['error'],
    },
    'tryserver.webrtc': {
      # iOS
      'ios_dbg': ['error'],
      'ios_rel': ['error'],
      'ios_arm64_dbg': ['error'],
      'ios_arm64_rel': ['error'],
      'ios32_sim_ios9_dbg': ['error'],
      'ios64_sim_ios9_dbg': ['error'],
      'ios64_sim_ios10_dbg': ['error'],

      # Mac
      'mac_compile_dbg': [
        'gn', 'openh264_debug_bot', 'x64'],
      'mac_compile_rel': [
        'gn', 'openh264_release_bot', 'x64'],
      'mac_dbg': [
        'gn', 'openh264_debug_bot', 'x64'],
      'mac_rel': [
        'gn', 'openh264_release_bot', 'x64'],
      'mac_asan': [
        'gn', 'asan', 'clang', 'openh264_release_bot', 'x64'],
      'mac_experimental': [
        'gn', 'openh264_release_bot', 'x64'],

      # Linux
      'linux_compile_dbg': [
        'gn', 'openh264_debug_bot', 'x64'],
      'linux_compile_rel': [
        'gn', 'openh264_release_bot', 'x64'],
      'linux_dbg': [
        'gn', 'openh264_debug_bot', 'x64'],
      'linux_rel': [
        'gn', 'openh264_release_bot', 'x64'],
      'linux_arm64_dbg': [
        'gn', 'openh264_debug_bot', 'arm64'],
      'linux_arm64_rel': [
        'gn', 'openh264_release_bot', 'arm64'],
      'linux32_dbg': [
        'gn', 'debug_bot', 'x86'],
      'linux32_rel': [
        'gn', 'openh264_release_bot', 'x86'],
      'linux32_arm_dbg': [
        'gn', 'openh264', 'debug', 'arm'],
      'linux32_arm_rel': [
        'gn', 'openh264_release_bot', 'arm'],
      'linux_asan': [
        'gn', 'asan', 'lsan', 'clang', 'openh264_release_bot', 'x64'],
      'linux_gcc_rel': [
        'gn', 'gcc', 'release_bot', 'x64', 'no_rtc_tests'],
      'linux_memcheck': [
        'memcheck', 'gn', 'openh264_release_bot', 'x64', 'use_default_libcxx',
        'no_lld'],
      'linux_msan': [
        'gn', 'msan', 'clang', 'openh264_release_bot', 'x64'],
      'linux_tsan2': [
        'gn', 'tsan', 'clang', 'openh264_release_bot', 'x64'],
      'linux_ubsan': [
        'gn', 'ubsan', 'clang', 'openh264_release_bot', 'x64'],
      'linux_ubsan_vptr': [
        'gn', 'ubsan_vptr', 'clang', 'openh264_release_bot', 'x64'],
      'linux_more_configs': {
        'intelligibility_enhancer_no_include_tests': [
          'debug_bot', 'x64', 'intelligibility_enhancer', 'no_include_tests'],
        'bwe_test_logging': [
          'debug_bot', 'x64', 'bwe_test_logging'],
        'dummy_audio_file_devices_no_protobuf': [
          'debug_bot', 'x64', 'dummy_audio_file_devices', 'no_protobuf'],
        'rtti_no_sctp': [
          'debug_bot', 'x64', 'rtti', 'no_sctp'],
      },
      'linux_libfuzzer_rel': [
        'libfuzzer', 'asan', 'optimize_for_fuzzing', 'openh264_release_bot',
        'x64', 'no_rtc_tests'],
      'linux_experimental': [
        'gn', 'openh264_release_bot', 'x64'],

      # Android
      'android_compile_dbg': [
        'android', 'gn', 'debug_static_bot', 'arm'],
      'android_compile_rel': [
        'android', 'gn', 'release_bot', 'arm'],
      'android_compile_arm64_dbg': [
        'android', 'gn', 'debug_static_bot', 'arm64'],
      'android_compile_arm64_rel': [
        'android', 'gn', 'release_bot', 'arm64'],
      'android_compile_x86_dbg': [
        'android', 'gn', 'debug_static_bot', 'x86'],
      'android_compile_x86_rel': [
        'android', 'gn', 'release_bot', 'x86'],
      'android_compile_x64_dbg': [
        'android', 'gn', 'debug_static_bot', 'x64'],
      'android_compile_mips_dbg': [
        'android', 'gn', 'debug_static_bot', 'mipsel'],
      'android_dbg': [
        'android', 'gn', 'debug_static_bot', 'arm'],
      'android_rel': [
        'android', 'gn', 'release_bot', 'arm'],
      'android_arm64_rel': [
        'android', 'gn', 'release_bot', 'arm64'],
      'android_more_configs': {
        'intelligibility_enhancer_no_include_tests': [
          'android', 'debug_static_bot', 'arm',
          'intelligibility_enhancer', 'no_include_tests'],
        'bwe_test_logging': [
          'android', 'debug_static_bot', 'arm', 'bwe_test_logging'],
        'dummy_audio_file_devices_no_protobuf': [
          'android', 'debug_static_bot', 'arm',
          'dummy_audio_file_devices', 'no_protobuf'],
        'rtti_no_sctp': [
          'android', 'debug_static_bot', 'arm', 'rtti', 'no_sctp'],
      },
      'android_experimental': [
        'android', 'gn', 'release_bot', 'arm'],

      # Windows
      'win_compile_dbg': [
        'gn', 'openh264_debug_bot', 'x86'],
      'win_compile_rel': [
        'gn', 'openh264_release_bot', 'x86'],
      'win_compile_x64_dbg': [
        'gn', 'openh264_debug_bot', 'x64'],
      'win_compile_x64_rel': [
        'gn', 'openh264_release_bot', 'x64'],
      'win_dbg': [
        'gn', 'no_clang', 'openh264_debug_bot', 'x86'],
      'win_rel': [
        'gn', 'no_clang', 'openh264_release_bot', 'x86'],
      'win_x64_dbg': [
        'gn', 'no_clang', 'openh264_debug_bot', 'x64'],
      'win_x64_rel': [
        'gn', 'no_clang', 'openh264_release_bot', 'x64'],
      'win_clang_dbg': [
        'gn', 'clang', 'openh264_debug_bot', 'x86'],
      'win_clang_rel': [
        'gn', 'clang', 'openh264_release_bot', 'x86'],
      'win_x64_clang_dbg': [
        'gn', 'clang', 'openh264_debug_bot', 'x64'],
      'win_x64_clang_rel': [
        'gn', 'clang', 'openh264_release_bot', 'x64'],
      'win_asan': [
        'gn', 'asan', 'clang',  'full_symbols', 'openh264_release_bot', 'x86',
        'win_fastlink'],
      'win_experimental': [
        'gn', 'openh264_release_bot', 'x86'],
      'win_x64_win8': [
        'gn', 'openh264_debug_bot', 'x64'],
      'win_x64_win10': [
        'gn', 'openh264_debug_bot', 'x64'],
      'win_more_configs': {
        'intelligibility_enhancer_no_include_tests': [
          'debug_bot', 'x86', 'intelligibility_enhancer', 'no_include_tests'],
        'bwe_test_logging': [
          'debug_bot', 'x86', 'bwe_test_logging'],
        'dummy_audio_file_devices_no_protobuf': [
          'debug_bot', 'x86', 'dummy_audio_file_devices', 'no_protobuf'],
        'rtti_no_sctp': [
          'debug_bot', 'x86', 'rtti', 'no_sctp'],
      },
    }
  },

  # This is a dict mapping a given 'mixin' name to a dict of settings that
  # mb should use. See //tools/mb/docs/user_guide.md for more information.
  'mixins': {
    'android': {
      'gn_args': 'target_os="android"',
    },

    'arm': {
      'gn_args': 'target_cpu="arm"',
    },

    'arm64': {
      'gn_args': 'target_cpu="arm64"',
    },

    'asan': {
      'gn_args': 'is_asan=true',
    },

    # is_clang=true by default, this is only to guard from upstream changes.
    'clang': {
      'gn_args': 'is_clang=true',
    },

    'dcheck_always_on': {
      'gn_args': 'dcheck_always_on=true',
    },

    'debug': {
      'gn_args': 'is_debug=true',
    },

    'debug_bot': {
      'mixins': ['debug', 'goma'],
    },

    'debug_static_bot': {
      'mixins': ['debug', 'minimal_symbols', 'goma'],
    },

    # This mixin is used to force configs that use it to fail. It
    # is used in two cases: when we have bots that we haven't looked
    # at yet and don't know whether they need MB or not, and for bots
    # that are test-only and should never run MB.
    'error': {
      'gn_args': 'error',
    },

    'full_symbols': {
      'gn_args': 'symbol_level=2',
    },

    'gcc': {
      'gn_args': ('is_clang=false use_sysroot=false '
                  'treat_warnings_as_errors=false'),
    },

    'gn': {'type': 'gn'},

    'goma': {
      'gn_args': 'use_goma=true',
    },

    'libfuzzer': {
      'gn_args': 'use_libfuzzer=true',
    },

    'lsan': {
      'gn_args': 'is_lsan=true',
    },

    'memcheck': {
      'gn_args': 'rtc_use_memcheck=true',
    },

    'minimal_symbols': {
      'gn_args': 'symbol_level=1 strip_absolute_paths_from_debug_symbols=true',
    },

    'mipsel': {
      'gn_args': 'target_cpu="mipsel"',
    },

    'msan': {
      'gn_args': ('is_msan=true msan_track_origins=2 '
                  'use_prebuilt_instrumented_libraries=true'),
    },

    'no_clang': {
      'gn_args': 'is_clang=false',
    },

    'no_lld': {
      'gn_args': 'use_lld=false',
    },

    'no_rtc_tests': {
      'gn_args': 'rtc_include_tests=false',
    },

    'openh264': {
      'gn_args': 'ffmpeg_branding="Chrome" rtc_use_h264=true',
    },

    'openh264_debug_bot': {
      'mixins': ['openh264', 'debug_bot'],
    },

    'openh264_release_bot': {
      'mixins': ['openh264', 'release_bot'],
    },

    'optimize_for_fuzzing': {
      'gn_args': 'optimize_for_fuzzing=true',
    },

    'release': {
      'gn_args': 'is_debug=false',
    },

    'release_bot': {
      'mixins': ['release', 'dcheck_always_on', 'goma'],
    },

    'tsan': {
      'gn_args': 'is_tsan=true',
    },

    'ubsan': {
      'gn_args': 'is_ubsan=true is_ubsan_no_recover=true',
    },

    'ubsan_vptr': {
      'gn_args': 'is_ubsan_vptr=true is_ubsan_no_recover=true',
    },

    'win_fastlink': {
      'gn_args': 'is_win_fastlink=true',
    },

    'x64': {
      'gn_args': 'target_cpu="x64"',
    },

    'x86': {
      'gn_args': 'target_cpu="x86"',
    },

    'use_default_libcxx': {
      'gn_args': 'use_custom_libcxx=false',
    },

    'intelligibility_enhancer': {
      'gn_args': 'rtc_enable_intelligibility_enhancer=true',
    },

    'no_include_tests': {
      'gn_args': 'rtc_include_tests=false',
    },

    'bwe_test_logging': {
      'gn_args': 'rtc_enable_bwe_test_logging=true',
    },

    'dummy_audio_file_devices': {
      'gn_args': 'rtc_use_dummy_audio_file_devices=true',
    },

    'no_protobuf': {
      'gn_args': 'rtc_enable_protobuf=false',
    },

    'rtti': {
      'gn_args': 'use_rtti=true',
    },

    'no_sctp': {
      'gn_args': 'rtc_enable_sctp=false',
    },
  },
}
