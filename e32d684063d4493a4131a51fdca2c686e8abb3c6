{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8fa56621_79e0a99b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5864
      },
      "writtenOn": "2022-07-22T22:24:52Z",
      "side": 1,
      "message": "PTAL and let me know if this sounds reasonable (3 CLs):\n\n1: Add these methods to checks.h\n2: Define these methods in webrtc_overrides/rtc_base/checks_overrides.cc (and add to buildfile under build_with_chromium)\n3: Move this out of anonymous-namespace in checks.cc, only define when not building with chromium.\n\nAnother option is that webrtc defines LS_FATAL and starts using fatal logging for this, then logging.h as an override would use LOG_FATAL for webrtc\u0027s LS_FATAL and would crash equally.",
      "revId": "e32d684063d4493a4131a51fdca2c686e8abb3c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "760e0192_fafc0a50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5864
      },
      "writtenOn": "2022-07-22T22:33:10Z",
      "side": 1,
      "message": "Note that this plan retains the current formatting, so we\u0027ll crash as something like:\n\nfoo.cc:line:\n\n#\n# asdf\n# Last error: \n# Check failed:123\n#\n\nImproving this seems orthogonal. :)",
      "parentUuid": "8fa56621_79e0a99b",
      "revId": "e32d684063d4493a4131a51fdca2c686e8abb3c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ec3e4d8_a5137540",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-25T07:29:53Z",
      "side": 1,
      "message": "The LS_FATAL severity looks interesting.\n\nWe do have an RTC_FATAL (https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/rtc_base/checks.h;l\u003d464-467;drc\u003d9432768024b0397f2dccfec0cab30f33dde87b93) which seem a bit off compared to the rest (RTC_LOG(LS_FATAL) would be better).\n\nLet me ask around how people feel about LS_FATAL, IIUC this is also easier to implement overall:\n* RTC_FATAL disappears in favor of RTC_LOG(LS_FATAL) which maps with the current overrides system.\n* No need to maintain the WriteFatalLog only when building for Chromium.\n* Easier to connect to other log systems (e.g. absl).",
      "parentUuid": "760e0192_fafc0a50",
      "revId": "e32d684063d4493a4131a51fdca2c686e8abb3c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "640fa817_51e4bb89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5864
      },
      "writtenOn": "2022-07-25T16:08:45Z",
      "side": 1,
      "message": "If you\u0027d be interested to go down this path I think it\u0027s a better one than this as it\u0027s more compatible with existing. In Chromium LOG_FATAL dies in ~LogMessage (see IMMEDIATE_CRASH()).\n\nThough you may run into the problem that your RTC_FATAL() is properly [[noreturn]] whereas LogMessage\u0027s destructor for LOG_FATAL is not [[noreturn]] so you can\u0027t (at least right now) call\n\nLOG(FATAL) \u003c\u003c \"foo\";\n// and skip the return here because the compiler knows it\u0027s an unreachable statement.\n\nThat was one of the issues I ran into doing this. Let me know if you\u0027d like to proceed with this to get better crash reporting until we figure out logging. Undoing the work here shouldn\u0027t be hard if you\u0027re able to transition to LS_FATAL, so we can also treat them as orthogonal. Your call.",
      "parentUuid": "2ec3e4d8_a5137540",
      "revId": "e32d684063d4493a4131a51fdca2c686e8abb3c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "270f000e_76ffbc89",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-29T16:50:05Z",
      "side": 1,
      "message": "Discussed offline, we agreed to proceed with this solutions and eventually rework it when we will do LS_FATAL which requires some more work before being able to land that.",
      "parentUuid": "640fa817_51e4bb89",
      "revId": "e32d684063d4493a4131a51fdca2c686e8abb3c6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}