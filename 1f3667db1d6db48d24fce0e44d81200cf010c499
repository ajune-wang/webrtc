{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5f0513dc_f65e20b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-02-17T12:23:05Z",
      "side": 1,
      "message": "Fixed a bug with how the last payload type was used. Renamed the method to indicate it has other side effects... may want to take a second stab.",
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02885e17_a6f25a63",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-02-17T12:23:05Z",
      "side": 1,
      "message": "This line caused an issue, since we now assign sequence numbers after packetization - meaning this would store the RED payload type rather than the media payload type causing padding using RED which it seems at least some tests don\u0027t like.\n\nAdded check to unwrap this. Would be good if we could build red support into RtpPacketToSend ;)",
      "range": {
        "startLine": 647,
        "startChar": 2,
        "endLine": 647,
        "endChar": 49
      },
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "989a9934_520a0e9b",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 647,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-17T12:59:32Z",
      "side": 1,
      "message": "I still disagree with making RtpPacket be aware of any payload format, in particular do not like partial support of red format.\n\nThough I agree it would be nice to avoid overhead of extra copying when creating a red packet. I beleive there should be a neater way. Looking at the code now I guess it was my mistake making VideoPacketizers be aware of the RtpPacket.",
      "parentUuid": "02885e17_a6f25a63",
      "range": {
        "startLine": 647,
        "startChar": 2,
        "endLine": 647,
        "endChar": 49
      },
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54b1b1a0_257eec07",
        "filename": "modules/rtp_rtcp/source/rtp_sender.h",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-17T10:23:58Z",
      "side": 1,
      "message": "this function doesn\u0027t modify vector itself (it\u0027s size), just the content of the elements.\nmay be use rtc::ArrayView\u003cstd::unique_ptr\u003cRtpPacketToSend\u003e\u003e instead to capture that.\ni.e. ArrayView\u003cnon-const T\u003e\n\n(technically ArrayView\u003cconst unique_ptr\u003cT\u003e\u003e would work too, since pointers themself are also not modified, but that might send a wrong singal to the reader)",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 52
      },
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bd6d161_6bb267dd",
        "filename": "modules/rtp_rtcp/source/rtp_sender.h",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-02-17T12:23:05Z",
      "side": 1,
      "message": "Good point, done. I initially wanted to use an ArrayView\u003cRtpPacketToSend\u003e but didn\u0027t find a clean way to unwrap from the unique pointers.",
      "parentUuid": "54b1b1a0_257eec07",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 52
      },
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61e76b0c_a6c2d5fc",
        "filename": "modules/rtp_rtcp/source/rtp_sender.h",
        "patchSetId": 1
      },
      "lineNbr": 143,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-17T12:59:32Z",
      "side": 1,
      "message": "you can\u0027t wrap continuous array of smart pointers to T into ArrayView\u003cconst T\u003e.\nArrayView require underlying type to be a continuous array of concrete objects.\n\nThere are more complicated reference types that can do that with a reasonable overhead, but I do not think any of these types are available in webrtc.",
      "parentUuid": "5bd6d161_6bb267dd",
      "range": {
        "startLine": 143,
        "startChar": 6,
        "endLine": 143,
        "endChar": 52
      },
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "07413221_498705fc",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 1
      },
      "lineNbr": 671,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-17T10:23:58Z",
      "side": 1,
      "message": "at this point sequence number is not yet allocated. May be just remove this clause.",
      "range": {
        "startLine": 671,
        "startChar": 47,
        "endLine": 671,
        "endChar": 76
      },
      "revId": "1f3667db1d6db48d24fce0e44d81200cf010c499",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}