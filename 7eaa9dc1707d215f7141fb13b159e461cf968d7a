{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "53b23aae_1e5ace66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-12-18T15:14:04Z",
      "side": 1,
      "message": "We ended up with some complicated woes because this instantiates a TaskQueueWin which IIUC is not used in Chromium which overrides the task queue in its PeerConnectionDepdencyFactory. But that override isn\u0027t done by the EnvironmentFactory?",
      "revId": "7eaa9dc1707d215f7141fb13b159e461cf968d7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c18f6cf_9f7316c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-12-18T15:31:46Z",
      "side": 1,
      "message": "This should link in default task queue factory (i.e. TaskQueueWin on windows) but shouldn\u0027t instantiate it as long as webrtc::PeerConnectionFactoryDependencies::task_queue_factory is set.\n\nOr do you refer to some test?\n\nIf linking TaskQueueWin in chromium is a problem, then it might be possible to overwrite chromium version of CreateDefaultTaskQueueFactory to create chromium\u0027s version.",
      "parentUuid": "53b23aae_1e5ace66",
      "revId": "7eaa9dc1707d215f7141fb13b159e461cf968d7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ef47aab_c0920f2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-12-19T06:37:48Z",
      "side": 1,
      "message": "What we ended up doing to avoid the timeKillEvent symbol was to remove the TaskQueueWin from the BUILD.gn file which removes the symbol from the resulting library (on Windows that means a DLL).\n\nI wonder if it that whole block should be guarded with !build_with_chromium",
      "parentUuid": "4c18f6cf_9f7316c7",
      "revId": "7eaa9dc1707d215f7141fb13b159e461cf968d7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea22fdb7_055a42b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-12-19T12:00:02Z",
      "side": 1,
      "message": "so the issue is that TaskQueueWin is linked into chromium.\nThe simplest solution might be to link TaskQueueStdLib as default task queue when build_with_chromium, that should have less controversial dependencies.\n\nThe better solution might be to do some chromium\u003c-\u003ewebrtc dance and use chromium specific task queue as the default one when build_with_chromium (i.e. webrtc::CreateDefaultTaskQueueFactory() would return ::CreateWebRtcTaskQueueFactory from chromium/third_party/webrtc_overrides/task_queue_factory.h )\n\nThe third solution might be to crash when webrtc::CreateDefaultTaskQueueFactory()  is called from chromium, forcing all chromium code (including tests) to specify task queue factory explicitly.",
      "parentUuid": "0ef47aab_c0920f2b",
      "revId": "7eaa9dc1707d215f7141fb13b159e461cf968d7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}