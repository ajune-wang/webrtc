{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d68f24a6_a85b4107",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 352,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-07-26T14:20:03Z",
      "side": 1,
      "message": "this log now inaccurate when per_call_network_controller_factory !\u003d nullptr\nmay be add extra if branch to have more accurate LOG,\n(or may be those LOGs can be removed, but I\u0027m not familiar with the network controller factory to comment how useful these logs are)\ne.g.\n\n```\nif (per_call_network_controller_factory !\u003d nullptr) {\n  RTC_LOG(LS_INFO) \u003c\u003c \"Using pc injected network controller factory\";\n  call_config.per_call_network_controller_factory \u003d\n      std::move(per_call_network_controller_factory);\n} else if (IsTrialEnabled(\"WebRTC-Bwe-InjectedCongestionController\")) {\n  RTC_LOG(LS_INFO) \u003c\u003c \"Using pcf injected network controller factory\";\n  call_config.network_controller_factory \u003d\n        injected_network_controller_factory_.get();\n} else {\n  RTC_LOG(LS_INFO) \u003c\u003c \"Using default network controller factory\";\n}\n```\n(this way code also make it clear that `per_call_network_controller_factory` and `network_controller_factory` are closely related)",
      "revId": "db76074a619278fbe733806e808bfdb339670879",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb6e8487_6ed98530",
        "filename": "pc/peer_connection_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 352,
      "author": {
        "id": 17470
      },
      "writtenOn": "2024-07-26T14:27:24Z",
      "side": 1,
      "message": "I like it! Thanks! Done.",
      "parentUuid": "d68f24a6_a85b4107",
      "revId": "db76074a619278fbe733806e808bfdb339670879",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}