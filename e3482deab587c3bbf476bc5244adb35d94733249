{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "83e414af_79745c29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Hiro, thanks for the review. I just want to point out that this is for prototyping purposes, so things are certainly not set in stone.\n\nWhile we believe the API is basically done there will be a lot of polish as we iterate and make it more and more production ready.",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe395efb_91d6566d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Yeah, but some of my comments are worth addressing: it points that the current code is wrong.",
      "parentUuid": "83e414af_79745c29",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a01fbedc_8b16ed33",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 74,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit:\n```\nreturn it !\u003d kSupportedScalingFactors.end() ? *it : absl::nullopt;\n```",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 74,
        "endChar": 12
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5884f762_18b7d9da",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 74,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a01fbedc_8b16ed33",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 74,
        "endChar": 12
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f28fb7be_64fb74ca",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 78,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "LibaomAv1Encoder() \u003d default;",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bdf80f5_b7478f53",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 78,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f28fb7be_64fb74ca",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36a6304f_33fa0c8b",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 78,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "It is recommented to have constructor and destructor explicitly for non PoD type.\n\n\nhttps://chromium.googlesource.com/playground/chromium-org-site/+/refs/heads/main/developers/coding-style/cpp-dos-and-donts.md#stop-inlining-constructors-and-destructors",
      "parentUuid": "1bdf80f5_b7478f53",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "336cf35c_f8e364a3",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 78,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36a6304f_33fa0c8b",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "988229bb_1950bec0",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 79,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "override",
      "range": {
        "startLine": 79,
        "startChar": 21,
        "endLine": 79,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb25e95c_e02b3535",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 79,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "988229bb_1950bec0",
      "range": {
        "startLine": 79,
        "startChar": 21,
        "endLine": 79,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13757313_e5a4e777",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 91,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "This should be std::unique_ptr.\n\nFor example,\n```\nusing aom_image_ptr \u003d std::unique_ptr\u003caom_image_t, decltype(aom_img_free)\u003e;\naom_image_ptr image_to_encode_;\n\nPrepareInputImage(..., aom_image_ptr\u0026 image_to_encode) {\n  image_to_encode.reset(aom_img_wrap(), aom_image_free);\n}\n```",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 42
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f79c410d_47229a0f",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 91,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "13757313_e5a4e777",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 42
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15bef482_62ee4ada",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 96,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "I think we should change this to non optional type, set a default value and configure for the default values in InitEncode().\nOtherwise, unless a user doesn\u0027t set these in TemporalUnitSettings, some configuration is never performed.\nEven if they are default in libaom, we should explicitly configure them.",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4048b33b_5f2306ec",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 96,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "No, they should not have any default values, everything has to be explicitly configured by the user.",
      "parentUuid": "15bef482_62ee4ada",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "969dd7ed_e5c2ec26",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 96,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "But Encode() doesn\u0027t have the checks for them?",
      "parentUuid": "4048b33b_5f2306ec",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2c945d3_7e8ca267",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 96,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "You are forced to provide these parameters when you call `Encode` (L631 for example).",
      "parentUuid": "969dd7ed_e5c2ec26",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 96,
        "endChar": 44
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2db40ab_bd2cf06d",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 121,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "LS_ERROR? ditto for other LS_WARNING returning false.",
      "range": {
        "startLine": 121,
        "startChar": 12,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec653524_636c42fd",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 121,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f2db40ab_bd2cf06d",
      "range": {
        "startLine": 121,
        "startChar": 12,
        "endLine": 121,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c23f389b_bde02666",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 137,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Is this correct?\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/libaom/source/libaom/aom/aom_encoder.h;l\u003d419;drc\u003dfdd6af31b1f6ea19464daf961b46ad6a5befd89f\n\n\u003e * This value identifies the presentation resolution of the frame,\n\u003e * in pixels. Note that the frames passed as input to the encoder must\n\u003e * have this resolution. Frames will be presented by the decoder in this\n\u003e * resolution, independent of any spatial resampling the encoder may do.\n\nIt sounds the encoder resolution, not max resolution.",
      "range": {
        "startLine": 135,
        "startChar": 2,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a6a223b0_fd97a1ea",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 137,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Exactly, why does an _encode_ resolution have to be specified before encoding starts?\n\nWithout it init fails.",
      "parentUuid": "c23f389b_bde02666",
      "range": {
        "startLine": 135,
        "startChar": 2,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ff6be2a_ab8f5dbf",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 137,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "I would commett\n```\n// The encoder resolution is dynamically set for each Encode(). \n// Here, we set them to the maximum resolution so that aom_codec_enc_init() succeeeds.\n```",
      "parentUuid": "a6a223b0_fd97a1ea",
      "range": {
        "startLine": 135,
        "startChar": 2,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d57197df_85ca91ec",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 137,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Good point, updated.",
      "parentUuid": "3ff6be2a_ab8f5dbf",
      "range": {
        "startLine": 135,
        "startChar": 2,
        "endLine": 137,
        "endChar": 51
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f5c9dc0_a00e6c05",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 143,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "How are these removed?",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10293036_9655e756",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 143,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Not removed from libaom, just removed from this wrapper since according to the documentation they don\u0027t have anything to do with CBR or CQP.",
      "parentUuid": "0f5c9dc0_a00e6c05",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe3e3033_be6995f1",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 143,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Eh, they should have some effect in CBR.",
      "parentUuid": "10293036_9655e756",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90d74648_fffd6828",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 143,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "fe3e3033_be6995f1",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a48a5b4f_8d3a9a48",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 151,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Is this correct?\nIn CBR, I expect this uses traditional values.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/av1/libaom_av1_encoder.cc;l\u003d260;drc\u003d604b4db346d3101870407add8b24543cc7bef051\n\nI am not sure what should be set in CQP.",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 151,
        "endChar": 58
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1312fe7d_41db7189",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 151,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Yes, this is correct. In the old wrapper they are hard coded, but with this API the user can specify buffer settings.",
      "parentUuid": "a48a5b4f_8d3a9a48",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 151,
        "endChar": 58
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a85e13eb_505da5f5",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 151,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "I think we need to add more values. A user frequently sets rc_buf_initial_sz and rc_buf_optimal_sz to different values.\n\nI have no idea setting these values makes sense in CQP.\nsprang@, do you know?",
      "parentUuid": "1312fe7d_41db7189",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 151,
        "endChar": 58
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e57e012_e876ddfe",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 151,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Adding a value for `rc_buf_initial_sz` probably wouldn\u0027t hurt.\n\nThese values are only configured when you create an encoder with CBR rate control.",
      "parentUuid": "a85e13eb_505da5f5",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 151,
        "endChar": 58
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6adcfb4b_09228fa7",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 151,
      "author": {
        "id": 5597
      },
      "writtenOn": "2024-04-16T12:41:30Z",
      "side": 1,
      "message": "Yeah, I don\u0027t see how they would be used in CQP.\nI wonder if we really need `rc_buf_initial_sz` to be anything other than `rc_buf_optimal_sz`. Iirc it was basically done, to account for the initial keyframe which could be bursty, but that\u0027s not a great way to deal with it imo - and we may have lots of keyframes at a later stage which does not get the same treatment..? I\u0027m skeptical.",
      "parentUuid": "3e57e012_e876ddfe",
      "range": {
        "startLine": 149,
        "startChar": 2,
        "endLine": 151,
        "endChar": 58
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae3bef39_c4974940",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 233,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "I was confused by this at the first glance and saw this is set to AV1E_SET_TILE_ROWS/COLUMNS and they are meant in 2**n.\nIt\u0027s nicer to rename the variable to like exp_tile_rows/columns?",
      "range": {
        "startLine": 232,
        "startChar": 4,
        "endLine": 233,
        "endChar": 23
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46e34d0a_eec8fd71",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 233,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Yes, that\u0027s clearer, updated.",
      "parentUuid": "ae3bef39_c4974940",
      "range": {
        "startLine": 232,
        "startChar": 4,
        "endLine": 233,
        "endChar": 23
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bc236c7d_c7b31487",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 329,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Is this correct in S-mode encoding?",
      "range": {
        "startLine": 326,
        "startChar": 8,
        "endLine": 329,
        "endChar": 9
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dfc97f9_c907459a",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 329,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Yes, to do S-mode with libaom you have to use startframes.",
      "parentUuid": "bc236c7d_c7b31487",
      "range": {
        "startLine": 326,
        "startChar": 8,
        "endLine": 329,
        "endChar": 9
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d322c53e_5c90d284",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 347,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "This function should be renamed to some name like IsSupportedScalingFactor.",
      "range": {
        "startLine": 347,
        "startChar": 10,
        "endLine": 347,
        "endChar": 72
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "43af77fc_04cec41c",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 347,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "No, we use it later to get the scaling factor.",
      "parentUuid": "d322c53e_5c90d284",
      "range": {
        "startLine": 347,
        "startChar": 10,
        "endLine": 347,
        "endChar": 72
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3376469_9e1d105a",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 358,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Theoretically, this is allowed. This seems to be assumed that a frame is not referenced beyond one layer.",
      "range": {
        "startLine": 353,
        "startChar": 6,
        "endLine": 358,
        "endChar": 7
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad0e09b6_725e8b63",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 358,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "No, that is not what is being checked here. Here we check, for a given frame that is about the be encoded, if that frame is allowed to use the same buffer for prediction _twice_.",
      "parentUuid": "b3376469_9e1d105a",
      "range": {
        "startLine": 353,
        "startChar": 6,
        "endLine": 358,
        "endChar": 7
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9a7fc63_4215c4e9",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 372,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "not duplicate but same or upper layer?",
      "range": {
        "startLine": 372,
        "startChar": 30,
        "endLine": 372,
        "endChar": 66
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56e881ca_920d33f8",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 372,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Updated.",
      "parentUuid": "e9a7fc63_4215c4e9",
      "range": {
        "startLine": 372,
        "startChar": 30,
        "endLine": 372,
        "endChar": 66
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d887c701_54069ce0",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 401,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "LS_VERBOSE or remove.",
      "range": {
        "startLine": 401,
        "startChar": 14,
        "endLine": 401,
        "endChar": 24
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41626803_09ec5d15",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 401,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "This is prototype code, so we want to keep this for now.",
      "parentUuid": "d887c701_54069ce0",
      "range": {
        "startLine": 401,
        "startChar": 14,
        "endLine": 401,
        "endChar": 24
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0824e2a_255c73dc",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 408,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "LS_VERBOSE. ditto other LS_WARNINGs",
      "range": {
        "startLine": 408,
        "startChar": 12,
        "endLine": 408,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f807df72_32cf29c7",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 408,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Ditto...",
      "parentUuid": "e0824e2a_255c73dc",
      "range": {
        "startLine": 408,
        "startChar": 12,
        "endLine": 408,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7f541ba_5f59a0ee",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 421,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit: RTC_CHECK",
      "range": {
        "startLine": 421,
        "startChar": 4,
        "endLine": 421,
        "endChar": 14
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88958414_c411379e",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 421,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "This is here for asserting purposes in debug, and documentation purposes in release.",
      "parentUuid": "b7f541ba_5f59a0ee",
      "range": {
        "startLine": 421,
        "startChar": 4,
        "endLine": 421,
        "endChar": 14
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d49c8b9b_80504c24",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 433,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit: RTC_CHECK",
      "range": {
        "startLine": 433,
        "startChar": 4,
        "endLine": 433,
        "endChar": 14
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5aae7d68_8badace4",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 433,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Ditto",
      "parentUuid": "d49c8b9b_80504c24",
      "range": {
        "startLine": 433,
        "startChar": 4,
        "endLine": 433,
        "endChar": 14
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28cbc544_24caf7a0",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 520,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Pass height and width only.",
      "range": {
        "startLine": 520,
        "startChar": 0,
        "endLine": 520,
        "endChar": 49
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e68c173_40807e74",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 531,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "This should be set to `1 \u003c\u003c (svc_params.number_temporal_layers - 1 - tid)`.",
      "range": {
        "startLine": 531,
        "startChar": 39,
        "endLine": 531,
        "endChar": 40
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd5c21c4_bebeea20",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 531,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Why?",
      "parentUuid": "8e68c173_40807e74",
      "range": {
        "startLine": 531,
        "startChar": 39,
        "endLine": 531,
        "endChar": 40
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29fdabc1_6ead6250",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 531,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "It is what libaom wants.\nIn fact,\nthe existing av1 encoder does so. https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/av1/libaom_av1_encoder.cc;l\u003d482;drc\u003def16abac3eb13bf11a4d387cc21b2ffb3046a72b",
      "parentUuid": "bd5c21c4_bebeea20",
      "range": {
        "startLine": 531,
        "startChar": 39,
        "endLine": 531,
        "endChar": 40
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d95d6ec4_6c2a483e",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 531,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "The current `libaom_av1_encoder.cc` assumes every layer is half the framerate of the previous one, that is not an assumption we should make.",
      "parentUuid": "29fdabc1_6ead6250",
      "range": {
        "startLine": 531,
        "startChar": 39,
        "endLine": 531,
        "endChar": 40
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3969924_71f506b0",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 539,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "When does this happen? They are set in the following for-loop?",
      "range": {
        "startLine": 534,
        "startChar": 2,
        "endLine": 539,
        "endChar": 3
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69ebafcc_6aba551c",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 539,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "It\u0027s just how libaom works, not awsome for users ofc...",
      "parentUuid": "b3969924_71f506b0",
      "range": {
        "startLine": 534,
        "startChar": 2,
        "endLine": 539,
        "endChar": 3
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33a6dbc6_39d0032c",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 539,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "The existing av1 encoder works just setting for required parameters.\nWhat makes a difference?\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/av1/libaom_av1_encoder.cc",
      "parentUuid": "69ebafcc_6aba551c",
      "range": {
        "startLine": 534,
        "startChar": 2,
        "endLine": 539,
        "endChar": 3
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8337d3c_14b41d8f",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 539,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Not sure what you mean, these values are set in the current wrapper as well?",
      "parentUuid": "33a6dbc6_39d0032c",
      "range": {
        "startLine": 534,
        "startChar": 2,
        "endLine": 539,
        "endChar": 3
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd81c05b_a9a87415",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 577,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "This is strange. The target bitrate isn\u0027t the target bitrate for all the bitstream, not the bitrate for the current layer.\n\nIsn\u0027t it necessary to distribute the bitrate to layers?",
      "range": {
        "startLine": 565,
        "startChar": 12,
        "endLine": 577,
        "endChar": 42
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "228ed275_6fd1a6a4",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 577,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Strange yes, just more libaom quirkiness.\n\nWe distribute the bitrate as specified by the settings on line 576.",
      "parentUuid": "dd81c05b_a9a87415",
      "range": {
        "startLine": 565,
        "startChar": 12,
        "endLine": 577,
        "endChar": 42
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "32c0d198_1c678803",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 577,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "line 576 sets the same value to each layer. I think this is wrong?",
      "parentUuid": "228ed275_6fd1a6a4",
      "range": {
        "startLine": 565,
        "startChar": 12,
        "endLine": 577,
        "endChar": 42
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "360a2ece_71bdf8fe",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 577,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Both `flat_layer_id` and `arg` will be layer specific. Note how this visitor is called on L592",
      "parentUuid": "32c0d198_1c678803",
      "range": {
        "startLine": 565,
        "startChar": 12,
        "endLine": 577,
        "endChar": 42
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6953df80_db5a9ed1",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 589,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Note that this qp is not a codec quantization parameter, but a parameter spefiically in libvpx/libaom, which is between 0 and 63.\n\nIf you think this is the quantization parameter defined in codec (e.g. 0-255 in AV1), then you need to convert it to the qp in libaom.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/libaom/source/libaom/av1/encoder/av1_quantize.c;l\u003d910;drc\u003d2a713e792a7439e460a4e0aa66f851cb0f2884a5",
      "range": {
        "startLine": 589,
        "startChar": 54,
        "endLine": 589,
        "endChar": 68
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11b429d7_01c254c1",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 589,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "the 0-63 \u003c--\u003e 0-255 range mapping is done by libaom, the user does not need to do that.",
      "parentUuid": "6953df80_db5a9ed1",
      "range": {
        "startLine": 589,
        "startChar": 54,
        "endLine": 589,
        "endChar": 68
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65c48ca9_0ea634d2",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 589,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Exactly. \nMy point is that we should specify the qp value (target_qp) is the between 0 and 63  in https://webrtc-review.googlesource.com/c/src/+/306181/27..33/api/video_codecs/video_encoder_interface.h#54 if we set so.\n\nBut I am wondering if the qp should be quantization parameter defined in codec. \nOtherwise, we need to have the conversion in each encoder (e.g. hardware encoder).\nThis means we have some dependency in some specific library (e.g. libaom), which we would like to avoid by introducing the new API.",
      "parentUuid": "11b429d7_01c254c1",
      "range": {
        "startLine": 589,
        "startChar": 54,
        "endLine": 589,
        "endChar": 68
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82bc7605_e1bb87af",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 589,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Right, the API supports this but I forgot to include it. Added now on L824.",
      "parentUuid": "65c48ca9_0ea634d2",
      "range": {
        "startLine": 589,
        "startChar": 54,
        "endLine": 589,
        "endChar": 68
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a7d1f5d_bfa89aac",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 624,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "I would like to explicitly speify EncodingError{}.",
      "range": {
        "startLine": 624,
        "startChar": 27,
        "endLine": 624,
        "endChar": 29
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aba3db1_afc5d04e",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 624,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2a7d1f5d_bfa89aac",
      "range": {
        "startLine": 624,
        "startChar": 27,
        "endLine": 624,
        "endChar": 29
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a15a4a_5184766c",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 632,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit: 8 -",
      "range": {
        "startLine": 632,
        "startChar": 40,
        "endLine": 632,
        "endChar": 45
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2155a965_dcaccb17",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 632,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7a15a4a_5184766c",
      "range": {
        "startLine": 632,
        "startChar": 40,
        "endLine": 632,
        "endChar": 45
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f64b575_bb44704c",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 637,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit: I would use switch case so we can get a compiler warning if a new content hint is added.",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 69
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "915a1ce4_fe4635d5",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 637,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "I don\u0027t think that is desirable, it would just make it harder to add new hints to the API (given that most encoders implementations would not support the new content hint anyway).",
      "parentUuid": "6f64b575_bb44704c",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 69
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d24c076d_2be924e8",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 637,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "915a1ce4_fe4635d5",
      "range": {
        "startLine": 637,
        "startChar": 4,
        "endLine": 637,
        "endChar": 69
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbee4992_2f693b25",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 656,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "LS_VERBOSE?",
      "range": {
        "startLine": 656,
        "startChar": 12,
        "endLine": 656,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "916ab40d_baaeaeba",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 656,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "prototype",
      "parentUuid": "cbee4992_2f693b25",
      "range": {
        "startLine": 656,
        "startChar": 12,
        "endLine": 656,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46820897_0398d8e9",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 662,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "LS_VERBOSE or LS_INFO?",
      "range": {
        "startLine": 662,
        "startChar": 12,
        "endLine": 662,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "859f81b6_b316fdb4",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 662,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "prototype",
      "parentUuid": "46820897_0398d8e9",
      "range": {
        "startLine": 662,
        "startChar": 12,
        "endLine": 662,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c588b975_9599e13f",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 738,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Where is this from?",
      "range": {
        "startLine": 738,
        "startChar": 75,
        "endLine": 738,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa237a32_15730343",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 738,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "This is the configured timebase denominator in ms.",
      "parentUuid": "c588b975_9599e13f",
      "range": {
        "startLine": 738,
        "startChar": 75,
        "endLine": 738,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cdeacd9_9233bad0",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 783,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "absl::AnyInvocable can be called one time (undefined behavior if multiple times). \nBut this calls multiple times. This needs to be fixed.",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 783,
        "endChar": 5
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d01e7e6d_0f20ce66",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 783,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "There is no restriction on how many times an AnyInvocable can be called. You are probably thinking of using it with an rvalue signature, in which case you have to std::move it in order to call it.",
      "parentUuid": "3cdeacd9_9233bad0",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 783,
        "endChar": 5
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a1ecb31_d5722fd0",
        "filename": "api/video_codecs/libaom_av1_encoder_factory.cc",
        "patchSetId": 27
      },
      "lineNbr": 783,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Ah, right. \nI missed \"in a such case\" in.\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/abseil-cpp/absl/functional/any_invocable.h;l\u003d152;drc\u003d24b05ec85c4ff3834f894322d1478d2df19d0635",
      "parentUuid": "d01e7e6d_0f20ce66",
      "range": {
        "startLine": 777,
        "startChar": 4,
        "endLine": 783,
        "endChar": 5
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7836e7a_f72d90fe",
        "filename": "api/video_codecs/libaom_av1_encoder_factory_test.cc",
        "patchSetId": 27
      },
      "lineNbr": 2,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "2024 ditto in other files.",
      "range": {
        "startLine": 2,
        "startChar": 18,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc9056e5_673bf4be",
        "filename": "api/video_codecs/libaom_av1_encoder_factory_test.cc",
        "patchSetId": 27
      },
      "lineNbr": 2,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7836e7a_f72d90fe",
      "range": {
        "startLine": 2,
        "startChar": 18,
        "endLine": 2,
        "endChar": 22
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2b7b9f_56f9e638",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 61,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "This should be declaraed with a good variable name.\nBesides, could you comment why we have this restriction.\nditto to temporal layers.",
      "range": {
        "startLine": 61,
        "startChar": 15,
        "endLine": 61,
        "endChar": 16
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46949f76_574cf077",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 69,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "QQ: \u003e1 because reference for same layer and reference for different layer?",
      "range": {
        "startLine": 69,
        "startChar": 44,
        "endLine": 69,
        "endChar": 47
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff9bcf3a_f650870a",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 75,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "This should be a function with a better name.",
      "range": {
        "startLine": 75,
        "startChar": 48,
        "endLine": 75,
        "endChar": 77
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fdd8d89_33d5beee",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 75,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Any temporal layers can be constructed if it supports two reference frames. This is up to temporal layer structure.",
      "range": {
        "startLine": 75,
        "startChar": 58,
        "endLine": 75,
        "endChar": 66
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9057a73f_c0eef678",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 75,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:55:35Z",
      "side": 1,
      "message": "This function determines which webrtc SVC scalability modes are supported, not general scalability modes.",
      "parentUuid": "5fdd8d89_33d5beee",
      "range": {
        "startLine": 75,
        "startChar": 58,
        "endLine": 75,
        "endChar": 66
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b5b2f61_e25db0a5",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 77,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "VA-API doesn\u0027t support non k-SVC and non S-mode spatial layer encoding. Does an encoder need to support it?",
      "range": {
        "startLine": 77,
        "startChar": 10,
        "endLine": 77,
        "endChar": 69
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b4bc017_ddf9b875",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 77,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:55:35Z",
      "side": 1,
      "message": "An encoder does not need to support any scalability, we can still wrap it in this interface.",
      "parentUuid": "0b5b2f61_e25db0a5",
      "range": {
        "startLine": 77,
        "startChar": 10,
        "endLine": 77,
        "endChar": 69
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90c29def_6fac6d53",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 81,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "```\nif (s \u003d\u003d 1) {\n  res.push_back(SvcToString(s, t, Inter::kL, Scaling::k1_2));\n  continue;\n}\n```",
      "range": {
        "startLine": 76,
        "startChar": 8,
        "endLine": 81,
        "endChar": 9
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e808fe6_f1352ee7",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 83,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Can we assume this? For example, Chrome VA-API encoder recently supports S-mode though it has been supporting k-SVC for a long time.",
      "range": {
        "startLine": 83,
        "startChar": 9,
        "endLine": 83,
        "endChar": 69
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e78ef7d_17c7392a",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 85,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "```\nres.push_back(SvcToString(s, t, Inter::kL, Scaling::k1_2));\n```",
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6e25429_a9ac0576",
        "filename": "api/video_codecs/simple_encoder_wrapper.cc",
        "patchSetId": 27
      },
      "lineNbr": 171,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "How is this guaranteed? \nTo generalize, shall we change update_buffer to std::vector?",
      "range": {
        "startLine": 171,
        "startChar": 8,
        "endLine": 171,
        "endChar": 35
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9c98bb6_da699355",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 21,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit: It would be good to remove this in favor of forward declaration. nit other variables and other files.",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 53
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e09e452_5487b01e",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 21,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "In WebRTC we avoid forward declarations.",
      "parentUuid": "e9c98bb6_da699355",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 53
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3bad5dd2_511c6928",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 21,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Oh, really, would you mind giving providing me with the style guide?",
      "parentUuid": "1e09e452_5487b01e",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 53
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f07dd35_d341aa10",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 21,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-16T11:26:40Z",
      "side": 1,
      "message": "Oops, forgot this link: https://webrtc.googlesource.com/src/+/HEAD/g3doc/style-guide.md#forward-declarations",
      "parentUuid": "3bad5dd2_511c6928",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 53
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "478d1f51_f574bbfa",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 47,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "What is this intention?",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "22aafda2_a18ee96e",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 47,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "To signal that something is wrong :)\n\nNote that this class is just a PoC to show that higher level APIs can be easily implemented on top of the lower level API.",
      "parentUuid": "478d1f51_f574bbfa",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "166b1541_91acf316",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 47,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "Maybe comment `TODO: rename this`?",
      "parentUuid": "22aafda2_a18ee96e",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 23
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08fd0493_0c72a2d9",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "nit: Follow delcaration order \nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29a3c644_ced68245",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-12T07:50:02Z",
      "side": 1,
      "message": "I don\u0027t see any obvious grouping/ordering of these members.",
      "parentUuid": "08fd0493_0c72a2d9",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2813e482_b4ce1b07",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-15T02:30:32Z",
      "side": 1,
      "message": "I meant to SimpleEncoderWrapper, for example, EncodeResultCallback and EncodeResult should be put to the first place in SimpleEncoderWrapper.",
      "parentUuid": "29a3c644_ced68245",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce7d566a_919809dc",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 52,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-04-15T11:53:58Z",
      "side": 1,
      "message": "Ah, got it :)\n\nUpdated.",
      "parentUuid": "2813e482_b4ce1b07",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 52,
        "endChar": 4
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16cca2a9_84cbeb68",
        "filename": "api/video_codecs/simple_encoder_wrapper.h",
        "patchSetId": 27
      },
      "lineNbr": 64,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 62,
        "startChar": 2,
        "endLine": 64,
        "endChar": 61
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d57d4e7_cb47aef2",
        "filename": "api/video_codecs/video_encoding_general.h",
        "patchSetId": 27
      },
      "lineNbr": 20,
      "author": {
        "id": 9338
      },
      "writtenOn": "2024-04-09T02:31:55Z",
      "side": 1,
      "message": "Why is this separately declared? \nI think we need to sort out the delcaration places later through learning what encoder implementation typically references. \nMy point is that it would be a little bit strange that an encoder needs to reference factory_interface.h for some structures and enum values.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 20,
        "endChar": 2
      },
      "revId": "e3482deab587c3bbf476bc5244adb35d94733249",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}