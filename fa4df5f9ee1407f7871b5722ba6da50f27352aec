{
  "comments": [
    {
      "key": {
        "uuid": "21d19d6c_1bc5d436",
        "filename": "p2p/base/stun_port.cc",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-05-22T16:32:13Z",
      "side": 1,
      "message": "Do you need to return nullptr here? the if + NOTREACHED is equivalent to:\nRTC_DCHECK(!SharedSocket() || Candidates()[0].type() \u003d\u003d LOCAL_PORT_TYPE || mdns_name_registration_status() !\u003d MdnsNameRegistrationStatus::kNotStarted);\n\nso the question is should you write code to handle DCHECK failures and return a value, or are you ok to assume that the program is broken.",
      "range": {
        "startLine": 272,
        "startChar": 0,
        "endLine": 277,
        "endChar": 3
      },
      "revId": "fa4df5f9ee1407f7871b5722ba6da50f27352aec",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ace9a0f_0e91eb5a",
        "filename": "p2p/base/stun_port.cc",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-05-22T20:52:13Z",
      "side": 1,
      "message": "The DCHECK failure indeed signals program broken from the design perspective, but after some thoughts, I think the old behavior of returning nullptr can be too brittle for the release build even when there are latent bugs that violate the assumption. The nullptr would completely void all connections for this Port and we could have a connectivity issue, whereas the downside of keeping going is resulting in redundant connections, which is more acceptable imho.\n\nI have made changes accordingly and please let me know what you think.\n\nAlso I don\u0027t think the DCHECK on empty() is enough (the legacy code does not even have that)... edited accordingly.",
      "parentUuid": "21d19d6c_1bc5d436",
      "range": {
        "startLine": 272,
        "startChar": 0,
        "endLine": 277,
        "endChar": 3
      },
      "revId": "fa4df5f9ee1407f7871b5722ba6da50f27352aec",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1987f56e_39ae9081",
        "filename": "p2p/base/stun_port.cc",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-05-22T21:35:50Z",
      "side": 1,
      "message": "Added comments to elaborate the handling of DCHECK per our offline discussion.",
      "parentUuid": "4ace9a0f_0e91eb5a",
      "range": {
        "startLine": 272,
        "startChar": 0,
        "endLine": 277,
        "endChar": 3
      },
      "revId": "fa4df5f9ee1407f7871b5722ba6da50f27352aec",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}