{
  "comments": [
    {
      "key": {
        "uuid": "026bd825_67e2bd17",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 4
      },
      "lineNbr": 544,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-07T12:20:55Z",
      "side": 1,
      "message": "nit: is",
      "range": {
        "startLine": 544,
        "startChar": 55,
        "endLine": 544,
        "endChar": 64
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faefeff1_dd31dc13",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 4
      },
      "lineNbr": 544,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-11T10:35:39Z",
      "side": 1,
      "message": "missed this one, will do",
      "parentUuid": "026bd825_67e2bd17",
      "range": {
        "startLine": 544,
        "startChar": 55,
        "endLine": 544,
        "endChar": 64
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63776da9_79f98c3b",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-07T12:20:55Z",
      "side": 1,
      "message": "I think it would be better to make a separate test that generates a single padding packet and then parses it. This would make it easier to identify what is breaking. Could be done by passing in \"bool padding\" as an argument and placing the unit test in rtc_event_lg_encoder_unittest.cc",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9825087_05443c9b",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-07T14:25:55Z",
      "side": 1,
      "message": "I think it is good to let the padding become a part of RTP randomization, since it is part of RTP.",
      "parentUuid": "63776da9_79f98c3b",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde83e24_9cf7105b",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-10T15:30:42Z",
      "side": 1,
      "message": "Right, but some things (including SSRC) are passed in as arguments even though it is part of  RTP.\n\nOn the other hand, if you do want RandomizeRtpPacket to randomly generate padding packets,  then I\u0027d like to reduce the fraction to something lower, e.g. 10%.",
      "parentUuid": "c9825087_05443c9b",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c7f141c_4f5308f4",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-11T10:35:39Z",
      "side": 1,
      "message": "I see that changing the API makes sense, particularly because the packet size is given as argument, and the padding size is coupled with it.\n\nBut I did not fully follow your suggestion to treat it as SSRC. I think SSRC is different from padding. The value of randomizing SSRC can be limited while introducing much complication of the test.\n\nPadding (including padding bit, padding length and actual padding data) is good subject (particularly padding bit and padding length) to randomize. IMO, the value of doing randomization is similar to Marker, PayloadType, etc.\n\nYes, the generation cannot be completely random due to the deficiency of parser, but it should be fixed soonish I believe. Then we will just need to modify this part a little bit.",
      "parentUuid": "cde83e24_9cf7105b",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9d7e14b_2de3a8ee",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-11T11:27:16Z",
      "side": 1,
      "message": "Right, but the padding bit could have been randomized from the outside, in the same way as you do with padding length now.\n\nI don\u0027t understand what you mean about the \"deficiency of the parser\"?",
      "parentUuid": "6c7f141c_4f5308f4",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffab63da_b41d5989",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 7102
      },
      "writtenOn": "2018-09-11T11:40:55Z",
      "side": 1,
      "message": "As there no other ways to get it right if padding bit (in header) is true and packet contains both regular payload and padding.\n\nI meant by \"deficiency\" the above case. Test will fail if we generate such packets.\n\nI\u0027d add padding_length to event log in a follow up cl to solve this issue.",
      "parentUuid": "f9d7e14b_2de3a8ee",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6604c4dc_c7565dbd",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 299,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-11T11:54:03Z",
      "side": 1,
      "message": "Please hold off on doing this. Since we\u0027re never creating those kinds of packets, it\u0027s unclear if we want to spend a substantial number of bits to encode this information. We\u0027re also working on large changes to the proto format, and we\u0027d like to avoid conflicts with other format changes.",
      "parentUuid": "ffab63da_b41d5989",
      "range": {
        "startLine": 299,
        "startChar": 13,
        "endLine": 299,
        "endChar": 20
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a72fae_5378c64e",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-07T12:20:55Z",
      "side": 1,
      "message": "nit: How about \"a packet can contain both padidng and other payload\" instead?",
      "range": {
        "startLine": 301,
        "startChar": 21,
        "endLine": 301,
        "endChar": 54
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f244538f_2a85412c",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 301,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-11T10:35:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8a72fae_5378c64e",
      "range": {
        "startLine": 301,
        "startChar": 21,
        "endLine": 301,
        "endChar": 54
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ded08cac_8e8cbd57",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-07T12:20:55Z",
      "side": 1,
      "message": "TODO(webrtc:9730)?",
      "range": {
        "startLine": 303,
        "startChar": 16,
        "endLine": 303,
        "endChar": 48
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d271732_e4816544",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-11T10:35:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ded08cac_8e8cbd57",
      "range": {
        "startLine": 303,
        "startChar": 16,
        "endLine": 303,
        "endChar": 48
      },
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "326375cd_3401cae2",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 730,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-07T12:20:55Z",
      "side": 1,
      "message": "This would not be needed if we keep the code in VerifyLoggedRtpHeader. If doing it this way, we need the same code in VerifyLoggedRtpPacketIncoming.",
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3fbac9e_dd513345",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 4
      },
      "lineNbr": 730,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-07T14:25:55Z",
      "side": 1,
      "message": "true, will do.",
      "parentUuid": "326375cd_3401cae2",
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85a512bc_e6c906b3",
        "filename": "modules/rtp_rtcp/source/rtp_utility.cc",
        "patchSetId": 4
      },
      "lineNbr": 280,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-09-07T12:20:55Z",
      "side": 1,
      "message": "Someone who\u0027s OWNER should review this file.",
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55c7b385_cabe02de",
        "filename": "modules/rtp_rtcp/source/rtp_utility.cc",
        "patchSetId": 4
      },
      "lineNbr": 280,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-09-11T10:35:39Z",
      "side": 1,
      "message": "added henrik.lundin@webrtc.org",
      "parentUuid": "85a512bc_e6c906b3",
      "revId": "dd31f2415a37116b244cac5379d20f4c671510df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}