{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "90bdbec8_77a29715",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-21T12:12:37Z",
      "side": 1,
      "message": "2 digit patch number, will we reach 3??",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4de9b2fb_cc5c976f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:17:43Z",
      "side": 1,
      "message": "Are you sure it doesn\u0027t make sense to put the field trials inside VideoDecoderFactory?\n\nThe only argument I can see against that is if there are cases where it makes sense to pass a null VideoDecoderFactory *and* a non-null field_trials.\n",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "413b2d95_75d7e3bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-21T12:29:12Z",
      "side": 1,
      "message": "the opposite, I\u0027m reasonably sure that it do make sense....\nit was more that this patch is big enough as it is...\n\nwhich file were you referring to specifically ?",
      "parentUuid": "4de9b2fb_cc5c976f",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af5b1267_a44312fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "Now with context (and a little more nitpicking)....\n",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f467a59_c6c1783a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "the two",
      "parentUuid": "413b2d95_75d7e3bb",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4638039f_ac8cfb48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "PTAL",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3143a8f8_b4596dd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T08:34:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9f467a59_c6c1783a",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d72273af_7730496a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T08:34:56Z",
      "side": 1,
      "message": "PTAL",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c1b783f_785ef522",
        "filename": "api/video/video_stream_decoder_create.cc",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "This passes a VideoDecoderFactory too.",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ba0cdc1_f10f3a09",
        "filename": "api/video/video_stream_decoder_create.cc",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "Do you think I should add field trials to VideoDecoderFactory ??",
      "parentUuid": "2c1b783f_785ef522",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aa06e7e_a09158ab",
        "filename": "api/video/video_stream_decoder_create.cc",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T08:34:56Z",
      "side": 1,
      "message": "I think I should add it to both VideoEncoder and VideoDecoder factory (and Audio)\nBut I plan to do this \"next\", it is hard work...\n\nAdded section in doc about the \"non optimal states\" that I find unavoidable,\nhttps://docs.google.com/document/d/1TNJPIVBpA3htVD-wUf2PcTTCvRisFDjAeAyaVW__rt4/edit#bookmark\u003did.quunykq9p2hu\n\nWDYT ?",
      "parentUuid": "1ba0cdc1_f10f3a09",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a75a4575_769c973c",
        "filename": "api/video/video_stream_decoder_create.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "This passes a VideoDecoderFactory too.",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "33256c93_6a584e33",
        "filename": "api/video/video_stream_decoder_create.h",
        "patchSetId": 5
      },
      "lineNbr": 33,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a75a4575_769c973c",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f058413_c6ae5a90",
        "filename": "modules/video_coding/deprecated/nack_module.h",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "Can we leave the DEPRECATED class alone? Or perhaps delete its field trials (if any)?",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7bdd49a_30e07000",
        "filename": "modules/video_coding/deprecated/nack_module.h",
        "patchSetId": 5
      },
      "lineNbr": 38,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3f058413_c6ae5a90",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e81908e_10b6e997",
        "filename": "modules/video_coding/frame_buffer3.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "Doing FrameBuffers with field trials seems like architecturally wrong (even though it\u0027s just a reference). These are objects that are created and destroyed throughout the lifetime of the connection.\n\nRemoving the existing field trials would require looking at the rest of the environment in which they are used and finding other objects that already have field trials, so may be a big effort (far from mechanical!)\n\nTODO?",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c797e059_1e94e3cb",
        "filename": "modules/video_coding/frame_buffer3.h",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e81908e_10b6e997",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85401199_74761d94",
        "filename": "modules/video_coding/nack_requester.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-21T12:46:32Z",
      "side": 1,
      "message": "\"Feels\" like at least one of the objects already passed should have field trials in them. (Alterntatively, the NackRequester should be owning them, and they should be passed via std::unique_ptr - different question).",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "635d2ef6_6e0f2300",
        "filename": "modules/video_coding/nack_requester.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-03-21T15:44:35Z",
      "side": 1,
      "message": "I think this is a question between allowing access to FT via other dependencies or prefer direct dependency.\n\nI don\u0027t have a clear choice here but I tend to prefer the direct dependency because it allows to clean a dependency on FT as soon they are not used anymore. For example, if NackPeriodicProcessor stops using FTs, we can remove its dep on them instead of having to keep it because NackRequester accesses them indirectly.\n\nDoes that make sense?",
      "parentUuid": "85401199_74761d94",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4463198c_a96008b3",
        "filename": "modules/video_coding/nack_requester.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-22T07:30:48Z",
      "side": 1,
      "message": "I kind of go the opposite way - if there is already a natural dependency of A on B, and B already needs to know about field trials, and field trials have to be consistent between A and B, then it makes sense for only B to store the pointer to the field trial. This minimizes the risk of inconsistent pointers at runtime.\n\nIf A and B can exist independently of each other, they need their own pointers, of course.\n\nAlso, objects that are created and destroyed while processing data (such as frames and buffers) should have constructors and destructors that are as simple as possible. Adding more arguments adds more cost (even though it\u0027s not that much overhead for storing a single pointer).",
      "parentUuid": "635d2ef6_6e0f2300",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da63756c_c8c823ba",
        "filename": "modules/video_coding/nack_requester.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "I think I prefer the same as hta@.\nBut that discussion is moot in this case,\nnone of the arguments to the constructor has field-trials yet.\n\nwe could add it to TaskQueueBase ??",
      "parentUuid": "4463198c_a96008b3",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "207218d2_a75ce392",
        "filename": "modules/video_coding/nack_requester.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-03-22T07:45:15Z",
      "side": 1,
      "message": "Ok, let\u0027s keep this pragmatic approach but adding them to TaskQueueBase when not needed there just to avoid them here it looks strange (for example, why TQB and not Clock?).",
      "parentUuid": "da63756c_c8c823ba",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "92400758_029e91aa",
        "filename": "modules/video_coding/nack_requester.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T08:34:56Z",
      "side": 1,
      "message": "😊\nAnyway, non of the other objects here has field trials.",
      "parentUuid": "207218d2_a75ce392",
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0492160e_85aaa473",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-03-21T15:44:35Z",
      "side": 1,
      "message": "This is similar to what hta@ was mentioning before.\n\nShould we allow indirect dependency on FT or is it better to avoid?",
      "range": {
        "startLine": 229,
        "startChar": 45,
        "endLine": 229,
        "endChar": 59
      },
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "16e9d766_8306e46b",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 5613
      },
      "writtenOn": "2022-03-22T07:36:13Z",
      "side": 1,
      "message": "better avoid.",
      "parentUuid": "0492160e_85aaa473",
      "range": {
        "startLine": 229,
        "startChar": 45,
        "endLine": 229,
        "endChar": 59
      },
      "revId": "bbc8aaaeb6ee1d27e4a7e77af3965759e93fc8ac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}