{
  "comments": [
    {
      "key": {
        "uuid": "fb8cfa06_ecad5f3d",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1431,
      "author": {
        "id": 5142
      },
      "writtenOn": "2018-05-31T10:35:38Z",
      "side": 1,
      "message": "What about receivers? In Plan B, only receivers are created for receiving remote media.",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75750299_ab143041",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1431,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T11:19:23Z",
      "side": 1,
      "message": "Good point! Will make tests and adjust accordingly.\nMaking the mark more than once is perfectly OK.",
      "parentUuid": "fb8cfa06_ecad5f3d",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72a18fc0_a8443e27",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5253,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T08:01:13Z",
      "side": 1,
      "message": "ICE_STATE_COMPLETED? or move the usage event up into the above conditional",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0e4e2b6_533ae0e3",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5253,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T09:01:29Z",
      "side": 1,
      "message": "There\u0027s a state machine jump here in cricket that jumps from \"checking\" to \"connected\", so we need to have a NoteUsageEvent in this path to cover all instances where it goes to connected.\nBut there\u0027s a bug that means it never gets to \"completed\" in some cases, so we have to be on the \"connected\" path too.\n\nAll we care about on these stats is whether it connects or not. Needs a comment?",
      "parentUuid": "72a18fc0_a8443e27",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18a172fb_81e82858",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5905,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T08:01:13Z",
      "side": 1,
      "message": "Use static_assert()",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce61688a_b25e36d1",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5905,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T09:01:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "18a172fb_81e82858",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0fbc5a1_f6a6f55d",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5907,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T08:01:13Z",
      "side": 1,
      "message": "If DEBUG, make it an RTC_DLOG?",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48757ab5_abffaa23",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5907,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T09:01:29Z",
      "side": 1,
      "message": "I\u0027ll delete it. Leftover!",
      "parentUuid": "d0fbc5a1_f6a6f55d",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf77bb00_b22630bd",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T08:01:13Z",
      "side": 1,
      "message": "Since these are effectively the usage bits in the information logged, I think it would be more straightforward to use an old-fashioned enum and set these as hex bit masks, instead of doing the conversion in code at run time.",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73f9ff20_fda281a7",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T09:01:29Z",
      "side": 1,
      "message": "I was in two minds about this - on the one hand, the representation as an integer is strictly a reporting-side thing and should be invisible at the calling site; on the other hand, hiding the integer-ness of the report is not a terribly important thing either.\n\nComes down to what\u0027s more readable; these operations are so rarely performed that performance doesn\u0027t matter at all.\nDo you want to give definite advice that you find enums with bit values more readable?",
      "parentUuid": "cf77bb00_b22630bd",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75c62b60_7dd24975",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T09:12:09Z",
      "side": 1,
      "message": "Just to check I didn\u0027t get the context wrong - here are my assumptions:\n  1. The concatenated bit field is logged as a UMA.\n  2. To interpret the UMA stat, the bit field must be parsed server side, or by the human looking at the stat.\n\nIf I understood correctly then having the masks right here in the enum would serve as documentation so unless there is something I\u0027m missing that\u0027d be my preference. (OTOH I did spend my adolescence poring over hardware reference sheets for chips so I may be biased :)",
      "parentUuid": "73f9ff20_fda281a7",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0fd6756_1db5a85c",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5142
      },
      "writtenOn": "2018-05-31T10:35:38Z",
      "side": 1,
      "message": "Prefer \"\u003d 0,\" on the first entry to highlight the fact that its value does matter.\nBecause it is uploaded to UMA, if someone were to add a new enum value in the middle the UMA reporting would become inconsistent across versions, \"\u003d 0,\" highlights that the enum is also used as a value, as opposed to other enums that are only used as names where insertion and changing order is safe.",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37679cc1_02c6f27a",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 59,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T11:19:23Z",
      "side": 1,
      "message": "Done as part of addressing solenberg\u0027s comment.",
      "parentUuid": "a0fd6756_1db5a85c",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a37bdd8_60de8770",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T08:01:13Z",
      "side": 1,
      "message": "nit: why not AUDIO_CHANNEL_ADDED, or DATA_ADDED, for consistency?",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f8f3a9b_d69d8a4c",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T09:01:29Z",
      "side": 1,
      "message": "AUDIO_CHANNEL is not good because AUDIO_{track, stream, channel} is inconsistent throughout the codebase (code of different generations of concepts). DATA_ADDED seems OK.",
      "parentUuid": "4a37bdd8_60de8770",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f257ade1_9d2823f2",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 176,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-05-31T08:01:13Z",
      "side": 1,
      "message": "I don\u0027t feel too good about repeating the loop to build the bit pattern. When interpreting the bits, order in the enum must stay the same for it to be useful. Can we just compare against a hard-coded constant instead?",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2acb003_87641007",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4479,
      "author": {
        "id": 5142
      },
      "writtenOn": "2018-05-31T10:35:38Z",
      "side": 1,
      "message": "Can you test this in both Plan B and Unified Plan?",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "101cd6e3_45af0954",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4479,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T11:19:23Z",
      "side": 1,
      "message": "That\u0027s what the PeerConnectionIntegrationTest iterates over, so we\u0027re good to go there.",
      "parentUuid": "e2acb003_87641007",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c5c521e_5ce685e4",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4486,
      "author": {
        "id": 5142
      },
      "writtenOn": "2018-05-31T10:35:38Z",
      "side": 1,
      "message": "How about one side use audio and one side use video to ensure both local and remote tracks count towards audio/video usage?",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a32ec835_351fa2e8",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4486,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-05-31T11:19:23Z",
      "side": 1,
      "message": "Good point. Will adjust.",
      "parentUuid": "2c5c521e_5ce685e4",
      "revId": "f5db98549f2500de648528982aabb2363ae3932f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}