{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9d9d1b7b_68867fc8",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 5492
      },
      "writtenOn": "2021-11-26T08:23:26Z",
      "side": 1,
      "message": "Or should there be a DCHECK that this is the last packet in the vector?",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fabccd83_6fe6e22b",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 13704
      },
      "writtenOn": "2021-11-26T12:35:24Z",
      "side": 1,
      "message": "Sure, but I still think the break should be there to prevent undefined behavior. \n\nI saw there\u0027s already a RTC_DCHECK(frame_boundary), but that\u0027s not testing the same thing. Do you want me to add a DCHECK for last packet in the vector as well?",
      "parentUuid": "9d9d1b7b_68867fc8",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9c8d7a0c_8032db68",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-11-26T14:11:24Z",
      "side": 1,
      "message": "I think this change will regress perf metrics where packetloss/reordering occurs. \n\nWhen receiving a stream where no information other than the RTP seq num is available to determine frame boundaries/continuity we can often have one late packet complete one or more frames. By breaking here you will basically throw away the later frame(s) which breaks continuity, which leads to a keyframe request.",
      "parentUuid": "fabccd83_6fe6e22b",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5602c447_09c15564",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 13704
      },
      "writtenOn": "2021-11-26T14:55:12Z",
      "side": 1,
      "message": "Right, I think I misunderstood what the vector actually contains. In that case the fix is to re-initialize packet_infos instead of breaking.",
      "parentUuid": "9c8d7a0c_8032db68",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc0d118c_28426e82",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 13704
      },
      "writtenOn": "2021-11-29T09:10:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5602c447_09c15564",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "753b54db_1ffba1b1",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-11-29T09:41:08Z",
      "side": 1,
      "message": "Clearing `packet_infos` already happens on line 735, it shouldn\u0027t be necessary here?",
      "parentUuid": "bc0d118c_28426e82",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1c5355f_be6acbc1",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 13704
      },
      "writtenOn": "2021-11-30T09:38:37Z",
      "side": 1,
      "message": "That of course assumes packet-\u003eis_last_packet_in_frame() is always followed by a packet-\u003eis_first_packet_in_frame(). This assumption is already documented.\n\nHowever, if `packet_infos` (and `payloads`) were cleared immediately after the frame is assembled it wouldn\u0027t leave room for any use after move. WDYT about moving the clears instead?\n\nIf you don\u0027t think that\u0027s necessary I\u0027ll just abandon the CL.",
      "parentUuid": "753b54db_1ffba1b1",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bfbc57b_94d0330f",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-11-30T09:55:16Z",
      "side": 1,
      "message": "Seems reasonable to me, WDYT Danil?",
      "parentUuid": "b1c5355f_be6acbc1",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "171419b8_95c2aedf",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 1
      },
      "lineNbr": 775,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-11-30T10:00:27Z",
      "side": 1,
      "message": "I like new version better: easier to read and safer: relies on less assumptions.",
      "parentUuid": "4bfbc57b_94d0330f",
      "range": {
        "startLine": 775,
        "startChar": 6,
        "endLine": 775,
        "endChar": 11
      },
      "revId": "b7140bb6f45639003f48be237f99ceb4d6ecfc54",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}