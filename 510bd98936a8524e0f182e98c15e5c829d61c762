{
  "comments": [
    {
      "key": {
        "uuid": "9ce10ea1_ccb05a3a",
        "filename": "rtc_base/logging.h",
        "patchSetId": 22
      },
      "lineNbr": 71,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T13:15:13Z",
      "side": 1,
      "message": "Is this necessary? (You don\u0027t need it for the friend declaration below.)",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e9072fd_04746936",
        "filename": "rtc_base/logging.h",
        "patchSetId": 22
      },
      "lineNbr": 71,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T13:43:18Z",
      "side": 1,
      "message": "Ah, thanks. This was leftover from a previous iteration. Done",
      "parentUuid": "9ce10ea1_ccb05a3a",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77e2eb09_4ab012ef",
        "filename": "rtc_base/logging_unittest.cc",
        "patchSetId": 22
      },
      "lineNbr": 59,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T13:15:13Z",
      "side": 1,
      "message": "It may be a good idea to use assignment syntax here:\n\n  std::string ret \u003d print_stream_.str();\n\nSee https://abseil.io/tips/88.",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33d8415d_b314e9a4",
        "filename": "rtc_base/logging_unittest.cc",
        "patchSetId": 22
      },
      "lineNbr": 59,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T13:43:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77e2eb09_4ab012ef",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a9fc1aa_bb42e3a8",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 94,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T13:15:13Z",
      "side": 1,
      "message": "You still don\u0027t check for negative values other than -1.",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 17
      },
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87ede404_b0689e19",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 94,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T13:43:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a9fc1aa_bb42e3a8",
      "range": {
        "startLine": 94,
        "startChar": 4,
        "endLine": 94,
        "endChar": 17
      },
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0cdddcb7_25907016",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T13:15:13Z",
      "side": 1,
      "message": "You shouldn\u0027t DCHECK(x), and then have code that handles the !x case (see https://cs.chromium.org/chromium/src/third_party/webrtc/rtc_base/checks.h?l\u003d60). Use CHECK if !x should never happen but you\u0027re worried that something worse than a clean crash could occur if you\u0027re wrong; and just handle it without [D]CHECK in case you do expect !x to happen sometimes.",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3af2484_0ec90b4c",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T13:43:18Z",
      "side": 1,
      "message": "I understand that, but:\n* RTC_CHECK is expensive. I don\u0027t want to inline that for ever call to operator\u003c\u003c() or AppendFormat().\n* I don\u0027t want a programmer to miss or ignore the error if it occurs.\n\nSo, I\u0027d like to make this an exception to the rule.",
      "parentUuid": "0cdddcb7_25907016",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbe895f2_488029ec",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T14:02:07Z",
      "side": 1,
      "message": "Would it be a good idea to not inline AppendFormat? At a guess, it\u0027s probably not less than a dozen instructions.\n\n...yes, experiment says ~40 instructions: https://godbolt.org/g/oUKTTK",
      "parentUuid": "e3af2484_0ec90b4c",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8178d6a1_cb9e6e6d",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T14:53:54Z",
      "side": 1,
      "message": "40 instructions isn\u0027t what would be inlined though. I added some more code to this and chained together a few AppendFormat calls:\n\nhttps://godbolt.org/g/LEkt8t",
      "parentUuid": "bbe895f2_488029ec",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccfb5f36_7d503736",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T17:55:59Z",
      "side": 1,
      "message": "Here\u0027s a quick comparison of stringstream and SimpleStringBuilder.\n\nhttps://godbolt.org/g/eFGvcx",
      "parentUuid": "8178d6a1_cb9e6e6d",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9c962de_970e2c1f",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T20:27:56Z",
      "side": 1,
      "message": "Right---I realized that (that a lot of the instructions are for the call setup) but didn\u0027t have time to follow up until now.\n\nIt looks like in this case, not inlining costs 6 instructions at each call site plus 39 in the non-inlined function, and inlining costs... exactly the same, since the compiler opts to not inline the function: https://godbolt.org/g/Ameu1Z\nI\u0027d say this is a sign that we ought to not try to inline it.\n\n(Interestingly, even if we call it just once, the compiler still doesn\u0027t inline. I guess maybe it doesn\u0027t like inlining vararg functions?)",
      "parentUuid": "ccfb5f36_7d503736",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "485c59fa_8ec30dbd",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T20:45:27Z",
      "side": 1,
      "message": "I modified your \"stringstream and SimpleStringBuilder comparison\" a bit. Appending a string was a no-op, and if we don\u0027t pretend to do something with the string after we build it, the compiler happily optimizes things away: https://godbolt.org/g/rQBvtu\n\nThe conclusion doesn\u0027t change, though: SimpleStringBuilder generates *much* less code than std::stringstream---40 instructions vs. 110---if you use -O2. With -Os, the situation is the opposite: 43 instructions vs. 26. And I\u0027m pretty sure we usually build with -Os.\n\nIt\u0027s probably still possible to beat std::stringstream in number of instructions, just not quite this easy. A good first step might be to de-inline the operator\u003c\u003c overloads, so that we don\u0027t end up emitting so many copies of the vararg call setup code.",
      "parentUuid": "a9c962de_970e2c1f",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ba9bf3b_bbbc39b8",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-26T21:09:17Z",
      "side": 1,
      "message": "I\u0027m pretty sure that there are ways to continue to improve this, but wdyt about doing that in a follow up cl? that is, unless there\u0027s a proposal?\n\noh and also, about the original question, RTC_DCHECK+if() exception? (I guess we\u0027ve seen the code size benefits at least)",
      "parentUuid": "485c59fa_8ec30dbd",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "267a3f2b_77b15403",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T22:12:39Z",
      "side": 1,
      "message": "Sure---it\u0027s probably good enough as-is; we can experiment with de-inlining later. (Although personally I would do it from the opposite direction: de-inline all the Append* and operator\u003c\u003c functions in this first version, and experiment with inlining later. A quick modification of the experiment gives a MyFoo with 19 instructions using no inlining, using either -O2 or -Os.)\n\nAnd yes, if a call to CHECK is too big and you really want to inline this function, go ahead.",
      "parentUuid": "2ba9bf3b_bbbc39b8",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd201f9e_0b902e1a",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 96,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-27T12:17:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "267a3f2b_77b15403",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0eb000d_c655086f",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 114,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-02-26T22:12:39Z",
      "side": 1,
      "message": "Hmm, I just noticed: you probably want either size_ \u003c buffer_size or size_ \u003c\u003d buffer_size - 1, not size_ \u003c buffer_size - 1 which is what the code does currently.",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad8bb2ac_ebc1d1ed",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 22
      },
      "lineNbr": 114,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-27T12:17:58Z",
      "side": 1,
      "message": "Indeed. I\u0027ve changed this now and added a few tests.",
      "parentUuid": "d0eb000d_c655086f",
      "revId": "510bd98936a8524e0f182e98c15e5c829d61c762",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}