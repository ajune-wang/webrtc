{
  "comments": [
    {
      "key": {
        "uuid": "0c15f9d7_429fa753",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "nit: I don\u0027t personally care, but usually we use () in the initializer list, you might want to do that just to avoid annoying people who like consistency.",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97d95f8a_88691a2a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Note that this pointer is only valid until the monitor_intervals_ vector is modified. std::vector does not guarantee pointer persistence. std::deque does.",
      "range": {
        "startLine": 185,
        "startChar": 10,
        "endLine": 185,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d99822e_3c80db98",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Please add a comment with a short description of this class?",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abab2290_1010acf6",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Not sure what it is trying to say, try to clarify the grammar.",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 37,
        "endChar": 49
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d8499f3_ab35d80b",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "It would be nice if the name could hint about the return value as well.",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 24
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba30c749_f83e5951",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "There\u0027s a lot of getters and setters. I don\u0027t know how it is used. But maybe it would make sense to use a struct for some/all of the data instead?",
      "range": {
        "startLine": 42,
        "startChar": 12,
        "endLine": 42,
        "endChar": 31
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2593a39b_8a8d5e19",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 7332
      },
      "writtenOn": "2018-07-10T12:28:04Z",
      "side": 1,
      "message": "What about returning a const reference? (to avoid superfluous copies of the vector when no race condition is to be feared).\nEven better: don\u0027t provide any getter on these vectors. Cf comment in https://webrtc-review.googlesource.com/c/src/+/87146.",
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9246fcfe_b0f1ca15",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Is this meant to apply for the constructor?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 54
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63fd7915_7c208822",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Nit: Commented code.",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab9c6a0e_c3a42ae6",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "If this could be split into a state updating void function and a const getter it would be nice. That would make it easier to name the function.\n\nA good name now would be something like: UpdateTimeAndGetSendingRate\n\nSplit it and it becomes: UpdateCurrentTime and GetSendingRate",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00f5cc3e_74ec78ee",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Spelling",
      "range": {
        "startLine": 80,
        "startChar": 11,
        "endLine": 80,
        "endChar": 27
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82f05762_7e54b840",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "How does the caller know the lifetime of the returned MonitorInterval? In general returning raw pointers is good to avoid. If it\u0027s not possible, add a comment describing proper usage.",
      "range": {
        "startLine": 88,
        "startChar": 25,
        "endLine": 88,
        "endChar": 43
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d15619d3_0bb6258a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "\"called r\"?",
      "range": {
        "startLine": 95,
        "startChar": 35,
        "endLine": 95,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "754a0c1d_da813453",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Try to avoid abbreviations if possible. It\u0027s usually easier to skim read code with fewer abbreviations.",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 14
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}