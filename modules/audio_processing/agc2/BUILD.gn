# Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

import("../../../webrtc.gni")

group("agc2") {
  deps = [
    ":adaptive_digital",
    ":fixed_digital",
  ]
}

rtc_source_set("adaptive_digital") {
  sources = [
    "adaptive_agc.cc",
    "adaptive_agc.h",
    "adaptive_mode_level_estimator.h",
    "apm_vad.cc",
    "apm_vad.h",
    "rms_level_estimator.cc",
    "rms_level_estimator.h",
    "saturation_protector.cc",
    "saturation_protector.h",
    "vad_with_level.h",
  ]

  # "peak_level_estimator.h",  # Add when written!
  configs += [ "..:apm_debug_dump" ]

  deps = [
    ":common",
    "..:apm_logging",
    "..:audio_frame_view",
    "../../../common_audio",
    "../vad",
  ]
}

rtc_source_set("fixed_digital") {
  sources = [
    "fixed_digital_level_estimator.cc",
    "fixed_digital_level_estimator.h",
    "fixed_gain_controller.cc",
    "fixed_gain_controller.h",
    "gain_curve_applier.cc",
    "gain_curve_applier.h",
    "interpolated_gain_curve.cc",
    "interpolated_gain_curve.h",
  ]

  configs += [ "..:apm_debug_dump" ]

  deps = [
    ":common",
    "..:apm_logging",
    "..:audio_frame_view",
    "../../../api:array_view",
    "../../../common_audio",
    "../../../rtc_base:checks",
    "../../../rtc_base:gtest_prod",
    "../../../rtc_base:rtc_base_approved",
  ]
}

rtc_source_set("common") {
  sources = [
    "agc2_common.h",
  ]
  deps = [
    "../../../rtc_base:rtc_base_approved",
  ]
}

rtc_source_set("fixed_digital_unittests") {
  testonly = true
  configs += [ "..:apm_debug_dump" ]

  sources = [
    "agc2_testing_common.cc",
    "agc2_testing_common.h",
    "agc2_testing_common_unittest.cc",
    "compute_interpolated_gain_curve.cc",
    "compute_interpolated_gain_curve.h",
    "fixed_digital_level_estimator_unittest.cc",
    "fixed_gain_controller_unittest.cc",
    "gain_curve_applier_unittest.cc",
    "interpolated_gain_curve_unittest.cc",
    "limiter.cc",
    "limiter.h",
    "limiter_unittest.cc",
    "vector_float_frame.cc",
    "vector_float_frame.h",
  ]
  deps = [
    ":common",
    ":fixed_digital",
    "..:apm_logging",
    "..:audio_frame_view",
    "../../../api:array_view",
    "../../../common_audio",
    "../../../rtc_base:checks",
    "../../../rtc_base:rtc_base_approved",
    "../../../rtc_base:rtc_base_tests_utils",
  ]
}
