{
  "comments": [
    {
      "key": {
        "uuid": "5d7993c4_855c5bb9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-10-26T11:08:07Z",
      "side": 1,
      "message": "Could you update the bug to be a bit more specific? I feel like almost anyone could reference that bug when refactoring/cleaning up.",
      "range": {
        "startLine": 14,
        "startChar": 5,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "601497b7_2a604558",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 14,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-10-26T11:34:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5d7993c4_855c5bb9",
      "range": {
        "startLine": 14,
        "startChar": 5,
        "endLine": 14,
        "endChar": 16
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3328ff2e_02236023",
        "filename": "modules/pacing/paced_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 291,
      "author": {
        "id": 5845
      },
      "writtenOn": "2018-10-26T08:44:27Z",
      "side": 1,
      "message": "I wonder: could there be negative effects of making the clock system call under the lock? I actually do not think there is a reason to do that here as all other clock reads in here are on same path.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 291,
        "endChar": 48
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e77dcb3_804bafe3",
        "filename": "modules/pacing/paced_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 291,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-10-26T11:08:07Z",
      "side": 1,
      "message": "I can think of two reasons for reading the timestamp while holding the lock:\n1. The timestamp will be more precise relative to when the logic actually executes.\n2. The timestamp will be monotonic when ordered by execution order of the functions requiring the lock.",
      "parentUuid": "3328ff2e_02236023",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 291,
        "endChar": 48
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "550e3e3d_3f6a924e",
        "filename": "modules/pacing/paced_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 291,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-10-26T11:34:05Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7e77dcb3_804bafe3",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 291,
        "endChar": 48
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7cd00d6_626d323c",
        "filename": "modules/pacing/paced_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 294,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-10-26T11:08:07Z",
      "side": 1,
      "message": "I think a more accurate CL description would be \"Make the PacedSender critsect_.Leave() more visible\", you had my hopes up :)",
      "range": {
        "startLine": 294,
        "startChar": 4,
        "endLine": 294,
        "endChar": 22
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76e27a3f_26b23d1b",
        "filename": "modules/pacing/paced_sender.cc",
        "patchSetId": 9
      },
      "lineNbr": 294,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-10-26T11:34:05Z",
      "side": 1,
      "message": "Yes, I agree, that\u0027s  the goal and that was the initial patchset and the refactorings here moves us closer to that. However, I chose to make the change smaller for now to ensure that behavior does not change.\n\nThe tricky part is that the current behavior is that we keep the lock between checking the paused state in the while loop and checking whether we should send pacing after the loop. A scoped lock can\u0027t both be released within a loop and held as the loop exits.\n\nNow, of course this might not be fundamental, but changing it risks changing behavior in flaky ways.",
      "parentUuid": "d7cd00d6_626d323c",
      "range": {
        "startLine": 294,
        "startChar": 4,
        "endLine": 294,
        "endChar": 22
      },
      "revId": "7659761a53127bd50551968eb7281684ddb2215d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}