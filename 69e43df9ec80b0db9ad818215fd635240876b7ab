{
  "comments": [
    {
      "key": {
        "uuid": "468e4eb5_b8346ff8",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 5492
      },
      "writtenOn": "2018-08-01T07:55:10Z",
      "side": 1,
      "message": "webrtc::field_trial::IsEnabled(kInitialFramedropFieldTrial)",
      "range": {
        "startLine": 94,
        "startChar": 9,
        "endLine": 94,
        "endChar": 42
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6bd9ed0_a878f372",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 94,
      "author": {
        "id": 5520
      },
      "writtenOn": "2018-08-01T10:06:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "468e4eb5_b8346ff8",
      "range": {
        "startLine": 94,
        "startChar": 9,
        "endLine": 94,
        "endChar": 42
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92672d1d_29600ef4",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 962,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-31T14:31:11Z",
      "side": 1,
      "message": "It\u0027s probably better to set a class constant to avoid incurring overhead due to checking the field trial repeatedly (the field trial logic is link time injected and therefore has unspecified performance overhead)",
      "range": {
        "startLine": 962,
        "startChar": 6,
        "endLine": 962,
        "endChar": 36
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edf437a9_f1be0567",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 962,
      "author": {
        "id": 5520
      },
      "writtenOn": "2018-08-01T10:06:41Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "92672d1d_29600ef4",
      "range": {
        "startLine": 962,
        "startChar": 6,
        "endLine": 962,
        "endChar": 36
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953a13e6_77281b4f",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 964,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-31T14:31:11Z",
      "side": 1,
      "message": "How about\nstd::abs(static_cast\u003cdouble\u003e(bitrate_bps)/encoder_start_bitrate_bps_-1) \u003e\u003dkFramedropThreshold\n?\n\nThat way you avoid the somewhat unnatural subtraction on unsigned numbers.",
      "range": {
        "startLine": 963,
        "startChar": 6,
        "endLine": 964,
        "endChar": 54
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "673bad13_711432f2",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 964,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-01T07:37:35Z",
      "side": 1,
      "message": "I think |encoder_start_bitrate_bps_| may be zero, so looks a bit dangerous to divide.",
      "parentUuid": "953a13e6_77281b4f",
      "range": {
        "startLine": 963,
        "startChar": 6,
        "endLine": 964,
        "endChar": 54
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9faa2532_3b162115",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 964,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-08-01T07:42:17Z",
      "side": 1,
      "message": "Good point. However, isn\u0027t that an odd case any way? This will always trigger in that situation, is this the desired behavior? Maybe we should explicitly check for that case?",
      "parentUuid": "673bad13_711432f2",
      "range": {
        "startLine": 963,
        "startChar": 6,
        "endLine": 964,
        "endChar": 54
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8252e563_7c6db458",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 964,
      "author": {
        "id": 5520
      },
      "writtenOn": "2018-08-01T10:06:41Z",
      "side": 1,
      "message": "Added explicit check for encoder_start_bitrate_bps_ \u003d\u003d 0.\n\nIdeally this should not be called with a bitrate of 0 but that\u0027s another matter.",
      "parentUuid": "9faa2532_3b162115",
      "range": {
        "startLine": 963,
        "startChar": 6,
        "endLine": 964,
        "endChar": 54
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24d0c6f3_fa7fe210",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 968,
      "author": {
        "id": 5492
      },
      "writtenOn": "2018-08-01T07:55:10Z",
      "side": 1,
      "message": "Should only be reset if the quality scaler is enabled, right? Otherwise it will not be possible to trigger adapt up again.",
      "range": {
        "startLine": 968,
        "startChar": 4,
        "endLine": 968,
        "endChar": 27
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a7a2658_d68b7f1d",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 968,
      "author": {
        "id": 5520
      },
      "writtenOn": "2018-08-01T10:06:41Z",
      "side": 1,
      "message": "Good catch! Done.\n\nThis is starting to look more and more hacky...",
      "parentUuid": "24d0c6f3_fa7fe210",
      "range": {
        "startLine": 968,
        "startChar": 4,
        "endLine": 968,
        "endChar": 27
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6ad0982_0ce3476b",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 997,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-31T14:31:11Z",
      "side": 1,
      "message": "Why change from \u003c to !\u003d?",
      "range": {
        "startLine": 997,
        "startChar": 25,
        "endLine": 997,
        "endChar": 27
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "046e3644_e1923a38",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 10
      },
      "lineNbr": 997,
      "author": {
        "id": 5520
      },
      "writtenOn": "2018-08-01T10:06:41Z",
      "side": 1,
      "message": "¯\\_(ツ)_/¯ \n\nchanged back.",
      "parentUuid": "d6ad0982_0ce3476b",
      "range": {
        "startLine": 997,
        "startChar": 25,
        "endLine": 997,
        "endChar": 27
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe41583e_2df52002",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 2247,
      "author": {
        "id": 5492
      },
      "writtenOn": "2018-08-01T07:55:10Z",
      "side": 1,
      "message": "This test (and the three below) should work without enabling the field trial, right?",
      "range": {
        "startLine": 2246,
        "startChar": 0,
        "endLine": 2247,
        "endChar": 42
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f5b899f_2b825570",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 2247,
      "author": {
        "id": 5520
      },
      "writtenOn": "2018-08-01T10:06:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe41583e_2df52002",
      "range": {
        "startLine": 2246,
        "startChar": 0,
        "endLine": 2247,
        "endChar": 42
      },
      "revId": "69e43df9ec80b0db9ad818215fd635240876b7ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}