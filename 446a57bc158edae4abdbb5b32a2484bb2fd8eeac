{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "20fc0b68_858fea84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 5525
      },
      "writtenOn": "2021-11-03T08:13:58Z",
      "side": 1,
      "message": "Nisse, it would be great if you could sanity check the interface changes here to make sure they align with the intended design of VideoStreamEncoder",
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d48197f_00351223",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 14
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T10:11:44Z",
      "side": 1,
      "message": "This is a bit tricky, but I\u0027m all in favor of trimming VSE down to it\u0027s core responsibilities, which is interfacing with the encoder(s).",
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a866478e_683a3274",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 5525
      },
      "writtenOn": "2021-11-03T08:26:54Z",
      "side": 1,
      "message": "I wonder if we should have two implementations of this, one for the zero hertz mode and one simpler version for the non-zero hertz mode, and create the right one depending on content type and whether the zero-hertz flag is enabled or not. That way I think it would be easier to follow the code, as you don\u0027t have to go into the zero-hertz code when you don\u0027t care about it.",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62c771fe_af718a81",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T15:15:22Z",
      "side": 1,
      "message": "It\u0027s a good suggestion, but in this CL there isn\u0027t any guts to place in the zero hertz mode yet. Would you be okay if I incorporate in a later CL?",
      "parentUuid": "a866478e_683a3274",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0832ccdb_e2d9577a",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 5525
      },
      "writtenOn": "2021-11-03T15:40:20Z",
      "side": 1,
      "message": "Sure, that\u0027s fine. What I\u0027d prefer in the end is that someone who wants to follow the default/simple path doesn\u0027t have to understand this implementation.",
      "parentUuid": "62c771fe_af718a81",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7859273b_64f4c30d",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 14
      },
      "lineNbr": 25,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T23:08:13Z",
      "side": 1,
      "message": "100% agree.",
      "parentUuid": "0832ccdb_e2d9577a",
      "range": {
        "startLine": 25,
        "startChar": 6,
        "endLine": 25,
        "endChar": 29
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b371975e_16fb7367",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 14
      },
      "lineNbr": 147,
      "author": {
        "id": 5525
      },
      "writtenOn": "2021-11-03T08:26:54Z",
      "side": 1,
      "message": "Pretty difficult to guess what we\u0027d use this for. Can you add a comment?",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 147,
        "endChar": 71
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99619bf5_5a5b6ca6",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 14
      },
      "lineNbr": 147,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T12:34:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b371975e_16fb7367",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 147,
        "endChar": 71
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ce6a4f8c_3e605b69",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 5525
      },
      "writtenOn": "2021-11-03T08:26:54Z",
      "side": 1,
      "message": "Should we not instead make sure it runs on a single task queue? Over time it\u0027s a risk this will get more complicated, and in the end difficult to get rid of the mutex.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf4f3c32_8a1d78b5",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T15:15:22Z",
      "side": 1,
      "message": "The three-context nature isn\u0027t any worse than what the situation is already is inside the VSE.\n\nI don\u0027t see a nice way to get rid of |encoder_queue_| invocations happening in a later CL, or requiring ctor/dtor on the |encoder_queue_|, or requiring a special queue for this class.\n\nWhat I was planning to do for later CLs is to improve the situation internally as per Niels suggestion on https://webrtc-review.googlesource.com/c/src/+/236523 in https://webrtc-review.googlesource.com/c/src/+/237142.\n\nDoes that sound acceptable enough?",
      "parentUuid": "ce6a4f8c_3e605b69",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd1a8721_66057c9d",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 5525
      },
      "writtenOn": "2021-11-03T15:40:20Z",
      "side": 1,
      "message": "Sounds OK then.",
      "parentUuid": "cf4f3c32_8a1d78b5",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2233a5e7_a10fd188",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 26,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T23:08:13Z",
      "side": 1,
      "message": "Resolving for now.",
      "parentUuid": "dd1a8721_66057c9d",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 25
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6388ef02_8510d6e8",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T10:11:44Z",
      "side": 1,
      "message": "Why not reuse VideoSinkInterface? It has the OnFrame and OnDiscardedFrame methods (plus OnConstraintsChanged, which I\u0027m not familair with).\n\nI think it would be nice if the downstream sink doesn\u0027t have to be aware of the specifics of this interface.",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08703558_68776579",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T12:34:15Z",
      "side": 1,
      "message": "See the response I gave to Ilya, 1) VSE isn\u0027t interested in the constraints piece, 2) I will change the Callback::OnFrame prototype to include frame duration in later CLs.",
      "parentUuid": "6388ef02_8510d6e8",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "395e8e16_2d8e93a3",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T13:31:35Z",
      "side": 1,
      "message": "I\u0027m not entirely convinced (e.g., maybe it\u0027s better to add frame duration to the other metadata part of VideoFrame). But ok for now, we can revisit that later.",
      "parentUuid": "08703558_68776579",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4aee5529_f3d71bc7",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 31,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T15:15:22Z",
      "side": 1,
      "message": "Yeah adding to the webrtc::VideoFrame is an option, but it has been quite abused as a general information carrier with loads of one-offs, because it takes a little more work to add the information in the context it\u0027s needed. Dale protects the media::VideoFrame by similar arguments and I agree with it.",
      "parentUuid": "395e8e16_2d8e93a3",
      "range": {
        "startLine": 31,
        "startChar": 2,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89a32805_7bd9b5af",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T10:11:44Z",
      "side": 1,
      "message": "If the class doesn\u0027t know anything about content type, I think just SetEnabled is a better name.",
      "range": {
        "startLine": 50,
        "startChar": 15,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0d81500_dcc1a781",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T12:34:15Z",
      "side": 1,
      "message": "Ilya suggested the same (sorry for missing your comment Ilya!)\nThe problem is that it\u0027s not the only criterion needed to turn on zero-hertz mode, and wanted to make the \"prerequisite\" piece clearer. Do you have another name suggestion?",
      "parentUuid": "89a32805_7bd9b5af",
      "range": {
        "startLine": 50,
        "startChar": 15,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35e3f602_1a301169",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T13:31:35Z",
      "side": 1,
      "message": "One option would be to move responsibility for recognizing relevant content types to this class, and replace it with a SetContentType method.\n\nSome other possible names: SetEnableZeroCaptureFrequency, SetEnalbEAutoCadence, SetEnableCadenceAdjustment. Ideally, the name should focus on what the method does on this class, rather than on what the call site looks like.\n\nLonger term, will it need to know the content type, or just figure out the right thing based on min capture frequency (not clear to me where that number comes from) and actual timing of incoming frames?",
      "parentUuid": "e0d81500_dcc1a781",
      "range": {
        "startLine": 50,
        "startChar": 15,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec3cd6ad_cf79005e",
        "filename": "video/frame_cadence_adapter.h",
        "patchSetId": 14
      },
      "lineNbr": 50,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T15:15:22Z",
      "side": 1,
      "message": "The feature shouldn\u0027t be enabled for regular camera capture, but it won\u0027t need to know the exact type. Fixed now in PS15.",
      "parentUuid": "35e3f602_1a301169",
      "range": {
        "startLine": 50,
        "startChar": 15,
        "endLine": 50,
        "endChar": 38
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81e8d3ce_e5b81484",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 14
      },
      "lineNbr": 602,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T10:11:44Z",
      "side": 1,
      "message": "Do you intend to add more processing here? Otherwise, to me it looks like an extra layer of complexity with little value.",
      "range": {
        "startLine": 589,
        "startChar": 0,
        "endLine": 602,
        "endChar": 2
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dc7bc2e_9ee8fbbb",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 14
      },
      "lineNbr": 602,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T12:34:15Z",
      "side": 1,
      "message": "It avoids the VSE inheriting from VideoSinkInterface which is arguably an improvement to the readability of the interface of this class. As you can see in the CL, the sink features of VSE was really only used in the initialization of it\u0027s VideoSourceSinkController. The VSE looks really not intended to be something you can just hook up ad hoc to a source.\n\nNo plans to extend the functionality of this adapter further.",
      "parentUuid": "81e8d3ce_e5b81484",
      "range": {
        "startLine": 589,
        "startChar": 0,
        "endLine": 602,
        "endChar": 2
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49127fce_5dfa4704",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 14
      },
      "lineNbr": 602,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T13:31:35Z",
      "side": 1,
      "message": "I think the VideoSourceSinkController was introduced in hbos\u0027 adaptation refactoring. I\u0027d like to hear his view. To me, it seems like it would be niceto take out the VideoSourceSinkConrtoller ownership from VSE, and delete VSE::SetSource, but not sure if that aligns with other\u0027s plans.",
      "parentUuid": "8dc7bc2e_9ee8fbbb",
      "range": {
        "startLine": 589,
        "startChar": 0,
        "endLine": 602,
        "endChar": 2
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae9478a2_622fcd24",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 14
      },
      "lineNbr": 602,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-11-04T09:24:27Z",
      "side": 1,
      "message": "Is the FrameCadenceAdapter supposed to do anything with the frames in the future? Or is this simply a \"ReportFrameRatesToUmaHandler\"? Because if so it could probably be a standalone class rather than an in-between layer.",
      "parentUuid": "49127fce_5dfa4704",
      "range": {
        "startLine": 589,
        "startChar": 0,
        "endLine": 602,
        "endChar": 2
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0944d7af_04938042",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 145,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T10:11:44Z",
      "side": 1,
      "message": "I would strongly prefer making methods public, rather than resorting to friend. Friend tends to expose a *lot* more than intended, e.g., direct access to all private members. And public methods just on the implementation class aren\u0027t widely exposed.",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e93d990_3a338bbc",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 145,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T12:34:15Z",
      "side": 1,
      "message": "This pattern is widely used in Chromium to cut down on the detail exposed in the header files. In this particular case the VSE is a \"god class\" and hiding the interface of this trival adapter is a good thing IMO. The cadence callback isn\u0027t used for more than transporting calls into private VSE methods and the fact is readily readable in the VSE implementation.",
      "parentUuid": "0944d7af_04938042",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1393f0a4_51bc0e66",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 145,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T13:31:35Z",
      "side": 1,
      "message": "I\u0027m afraid I\u0027m not at all familiar with the \"god class\" concept, I just don\u0027t want to see friend declarations unless there\u0027s a very good reason.\n\nIn this case, do you need it at all? I\u0027m no real C++ guru, but I think a private \"inner class\" gets access to the outer class\u0027s private members by default.\n\nThen a separate issue is the forward declaration. I don\u0027t have a strong opinion about that, but it seems abit unnecessary, since a proper declaration of this small class is just a few lines, and it would also let you make it a direct member without going via a pointer. In general, chromium and webrtc coding style disagree on forward declarations. In webrtc, they\u0027re generally discouraged, while chromium is a bit more liberal (possibly due to the much longer compile time).",
      "parentUuid": "3e93d990_3a338bbc",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84c2f5a6_da8996e3",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 145,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T15:15:22Z",
      "side": 1,
      "message": "https://en.wikipedia.org/wiki/God_object\n\nYoure quite right, no need for the friend declaration 😊\nPut it back in the declaration.",
      "parentUuid": "1393f0a4_51bc0e66",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ade7191e_09221ce0",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 248,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T10:11:44Z",
      "side": 1,
      "message": "I think inheriting VideoSinkInterface is reasonable (after all, that\u0027s the VSE\u0027s main role in the video pipeline). But independent of that issue, I think it\u0027s preferable to keep using VideoSinkInterface as the attachment surface between the new adapter and the VSE.\n\nIt\u0027s a bit unclear to me how the new adapter is wired in, and how that relates to the VSE::SetSource method. Ideally, I\u0027d like the VSE to be unaware of the source (requires adaptation decisions to be made upstream of the VSE), and act as a plain sink to the rest of the pipeline. I\u0027m not up-to-date with recent adaptation refactoring, so adding hbos@.\n\nMy ideal structure would be something like\n\nCamera (VideoSourceInterface)\n          |   ^\n  OnFrame |   | AddOrUpdateSink\n          |   |\n          |   VideoStreamEncoderResourceManager (adaptation decisions)\n          |   ^\n          |   |  qp, encode timing, and similar signals\n          V   |\nVideoStreamEncoder (VideoSinkInterface)\n          |\n          |\n          V\nRtpVideoSenderInterface\n\nThe VideoSendStream class would own VideoStreamEncoderResourceManager, VideoStreamEncoder, and RtpVideoSender, and hook them together.\n\nTo get the new cadence adapter into this picture, it should be inserted on the OnFrame path between camera and VSE, but less clear if it should also be attached to the VideoStreamEncoderManager in some way?",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 15
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23d6be80_59e573f2",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 248,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T12:34:15Z",
      "side": 1,
      "message": "\u003e It\u0027s a bit unclear to me how the new adapter is wired in\n\nHm wdym, all the details are in this CL? The adapter is wired in between the VSE frame entry and the source by means of the VSE\u0027s VideoSourceSinkController, see the colon list in vse.cc.\n\nFrom what I read in the implementation the VSE is really not currently meant to be a general sink in some frame progression graph as it currently aggregates the VSSC connecting the source \u0026 sink together. Some instance mutation of the VSSC is currently buried in encoder reconfiguration guts...\n\nWhat I mean is that it\u0027s possible that the current aggregation form is the wrong design but I\u0027m not sure I\u0027d want to scope that type of refactoring in this project, is this what you\u0027re suggesting or something else?\n\nJust a peek into further evolution of the cadence adapter: I will need to integrate with input Hz rate estimation, modify frame duration logic, monitor QP convergence per-layer and integrate with keyframe requests so I need a tight integration with the VSE. Other classes around them should have no need to concern themselves with these details.",
      "parentUuid": "ade7191e_09221ce0",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 15
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c9602a6_86b35672",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 248,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T13:31:35Z",
      "side": 1,
      "message": "\u003e \u003e It\u0027s a bit unclear to me how the new adapter is wired in\n\u003e \n\u003e Hm wdym, all the details are in this CL? The adapter is wired in between the VSE frame entry and the source by means of the VSE\u0027s VideoSourceSinkController, see the colon list in vse.cc.\n\nOk, I was a bit confused by the SetSource method being unchanged. But it seems it\u0027s done via the VideoSourceSinkController, so it\u0027s the adapter that is passed to AddOrUpdateSink, on that code path.\n\n\u003e What I mean is that it\u0027s possible that the current aggregation form is the wrong design but I\u0027m not sure I\u0027d want to scope that type of refactoring in this project, is this what you\u0027re suggesting or something else?\n\nI don\u0027t want to request a huge refactoring as a prerequisite, I just want to make sure that changes are in line with desired evolution of the VSE.",
      "parentUuid": "23d6be80_59e573f2",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 15
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2ec8e86_a92e15b3",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 248,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-11-03T15:15:22Z",
      "side": 1,
      "message": "I see. Are we resolved here or is there anything outstanding?",
      "parentUuid": "8c9602a6_86b35672",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 15
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "37b1c74b_3c6e45f1",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 14
      },
      "lineNbr": 248,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-11-03T18:40:04Z",
      "side": 1,
      "message": "There\u0027s more to discuss, but not for this cl. Still hope hbos can have a look too.",
      "parentUuid": "e2ec8e86_a92e15b3",
      "range": {
        "startLine": 247,
        "startChar": 0,
        "endLine": 248,
        "endChar": 15
      },
      "revId": "446a57bc158edae4abdbb5b32a2484bb2fd8eeac",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}