{
  "comments": [
    {
      "key": {
        "uuid": "df2bbbcc_e2ae36c7",
        "filename": "modules/video_coding/packet_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-02-21T13:40:48Z",
      "side": 1,
      "message": "You must assume that timestamps can jump, and since you don\u0027t check if transitivity hold if you were to insert the timestamp sad things can happen.\n\nI\u0027m not sure if using a std::set\u003cuint32_t, DescendingSeqNumComp\u003cuint32_t\u003e\u003e is the right data structure in this case, maybe it\u0027s easier to just have a set and a queue to keep track of which timestamps you have seen and which timestamp is the oldest seen.",
      "revId": "47679dcbfbdd0b8e4d89ff55026b6076497d9933",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bff83273_19c043d0",
        "filename": "modules/video_coding/packet_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 495,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-02-21T14:27:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df2bbbcc_e2ae36c7",
      "revId": "47679dcbfbdd0b8e4d89ff55026b6076497d9933",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f94a03c_ab1b660f",
        "filename": "modules/video_coding/packet_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 504,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-21T13:36:19Z",
      "side": 1,
      "message": "nit: --unique_frames_seen_\nmaybe also add a dcheck \u003e 0 before decrement",
      "range": {
        "startLine": 504,
        "startChar": 30,
        "endLine": 504,
        "endChar": 0
      },
      "revId": "47679dcbfbdd0b8e4d89ff55026b6076497d9933",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "285f6ff9_654a7e1b",
        "filename": "modules/video_coding/packet_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 504,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-02-21T14:27:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8f94a03c_ab1b660f",
      "range": {
        "startLine": 504,
        "startChar": 30,
        "endLine": 504,
        "endChar": 0
      },
      "revId": "47679dcbfbdd0b8e4d89ff55026b6076497d9933",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b2aeee1_8f07abc1",
        "filename": "modules/video_coding/video_packet_buffer_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 235,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-02-21T13:36:19Z",
      "side": 1,
      "message": "nit; s/int/size_t",
      "range": {
        "startLine": 235,
        "startChar": 42,
        "endLine": 235,
        "endChar": 0
      },
      "revId": "47679dcbfbdd0b8e4d89ff55026b6076497d9933",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b766111_d8ab46e7",
        "filename": "modules/video_coding/video_packet_buffer_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 235,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-02-21T14:27:51Z",
      "side": 1,
      "message": "Ack, breaks asserts below, type mismatch.",
      "parentUuid": "8b2aeee1_8f07abc1",
      "range": {
        "startLine": 235,
        "startChar": 42,
        "endLine": 235,
        "endChar": 0
      },
      "revId": "47679dcbfbdd0b8e4d89ff55026b6076497d9933",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}