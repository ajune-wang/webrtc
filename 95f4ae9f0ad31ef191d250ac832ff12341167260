{
  "comments": [
    {
      "key": {
        "uuid": "bc65cc8a_e3c6514c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "I would keep the title short and be more descriptive adding details.\nFor instance:\n\naudioproc_f: input AEC dump as string, output audio to vector\n\nThis CL adds the following options:\n- pass an input AEC dump as a string (currently, the tool can only accept a path to an AEC dump file)\n- write the processed capture samples to a given vector",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 110
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d622727_1f231748",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-26T13:06:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc65cc8a_e3c6514c",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 110
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5745e47_01370791",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "Why not adding the 2 new args here with default to nullptr? It won\u0027t break anything, not even any downstream projects.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 33
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0535b51b_a087bb1f",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "I think it might be better to keep the original function as well, as I think it makes it clear that the second one is a different functionality and API users might not be interested in it.",
      "parentUuid": "c5745e47_01370791",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 37,
        "endChar": 33
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b978680_df2e97fb",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "Optionally pass |input_aecdump| to provide the content of an AEC dump file as a string; pass nullptr to use WAV or AEC dump files as input (defined via the command line arguments). Crashes if both a path to an input file and |input_aecdump| are defined.\nOptionally pass |processed_capture_samples| to write the samples processed on the capture side.",
      "range": {
        "startLine": 42,
        "startChar": 26,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fa56f3d_2eed8288",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b978680_df2e97fb",
      "range": {
        "startLine": 42,
        "startChar": 26,
        "endLine": 44,
        "endChar": 22
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d7b4c3a_e2e6bbae",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "input_aecdump",
      "range": {
        "startLine": 48,
        "startChar": 37,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c3f9bbb_71600255",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d7b4c3a_e2e6bbae",
      "range": {
        "startLine": 48,
        "startChar": 37,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbf54711_29765d33",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "processed_capture_samples",
      "range": {
        "startLine": 49,
        "startChar": 39,
        "endLine": 49,
        "endChar": 45
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f05aaea1_02f9d203",
        "filename": "api/test/audioproc_float.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbf54711_29765d33",
      "range": {
        "startLine": 49,
        "startChar": 39,
        "endLine": 49,
        "endChar": 45
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fa87843_bdcaf5c9",
        "filename": "modules/audio_processing/test/audio_processing_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "buffer_array_writer_ \u003d absl::make_unique\u003cChannelBufferArrayWriter\u003e();\n\nnever use new",
      "range": {
        "startLine": 344,
        "startChar": 4,
        "endLine": 344,
        "endChar": 63
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d97b7029_85bf61a2",
        "filename": "modules/audio_processing/test/audio_processing_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 344,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fa87843_bdcaf5c9",
      "range": {
        "startLine": 344,
        "startChar": 4,
        "endLine": 344,
        "endChar": 63
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b6a97cb_7c0738ca",
        "filename": "modules/audio_processing/test/audio_processing_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 362,
        "startChar": 4,
        "endLine": 362,
        "endChar": 71
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8700df3c_c8eaad5c",
        "filename": "modules/audio_processing/test/audio_processing_simulator.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b6a97cb_7c0738ca",
      "range": {
        "startLine": 362,
        "startChar": 4,
        "endLine": 362,
        "endChar": 71
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "34eff10d_95ee676a",
        "filename": "modules/audio_processing/test/audio_processing_simulator.h",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "do we need both? this change only adds one output vector, which is that for the processed capture stream, so I\u0027d say you only need the 1st",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 73
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35d36883_cf35cc0a",
        "filename": "modules/audio_processing/test/audio_processing_simulator.h",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Yes, for this change we only need the first one. I added the second one just in case we might need to retrieve the reverse stream as well. For this change, though, it makes more sense to remove it. Thank you!",
      "parentUuid": "34eff10d_95ee676a",
      "range": {
        "startLine": 180,
        "startChar": 0,
        "endLine": 181,
        "endChar": 73
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1630812_78c6ac19",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 416,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "else statement to check that the input AEC dump string is not empty",
      "range": {
        "startLine": 416,
        "startChar": 2,
        "endLine": 416,
        "endChar": 3
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8612fa3f_59de8faa",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 416,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1630812_78c6ac19",
      "range": {
        "startLine": 416,
        "startChar": 2,
        "endLine": 416,
        "endChar": 3
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70338c08_d4a0b2e3",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 416,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-25T15:07:31Z",
      "side": 1,
      "message": "Try harder :) What I meant was the following (to be appended):\n\n} else {\n  ReportConditionalErrorAndExit(...)  // check that settings.input_string is not empty\n}",
      "parentUuid": "8612fa3f_59de8faa",
      "range": {
        "startLine": 416,
        "startChar": 2,
        "endLine": 416,
        "endChar": 3
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f96ee0d6_53481175",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 416,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-26T13:06:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "70338c08_d4a0b2e3",
      "range": {
        "startLine": 416,
        "startChar": 2,
        "endLine": 416,
        "endChar": 3
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "972696dc_97f1cd26",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 558,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "Does the style guide recommend this?\nI\u0027ve never seen it and I would anyway discourage this, since a change in the .h file requires a change in the .cc (easy to forget).",
      "range": {
        "startLine": 558,
        "startChar": 46,
        "endLine": 558,
        "endChar": 60
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f5811c1_9214a830",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 558,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "972696dc_97f1cd26",
      "range": {
        "startLine": 558,
        "startChar": 46,
        "endLine": 558,
        "endChar": 60
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3fb20027_45ddbe84",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 586,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "you\u0027re making a copy; why not writing directly into the vector given by the caller?\nit requires a bit more initialization code, but then you avoid this unnecessary copy",
      "range": {
        "startLine": 586,
        "startChar": 4,
        "endLine": 586,
        "endChar": 43
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e696a9c2_df515f6c",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 586,
      "author": {
        "id": 5607
      },
      "writtenOn": "2019-07-11T12:20:55Z",
      "side": 1,
      "message": "I think the compiler should be able to optimize this copy away. processor-\u003eGetOutputVector() returns a vector, which is an rvalue here. Assigning the rvalue vector should result in a move instead of a copy.",
      "parentUuid": "3fb20027_45ddbe84",
      "range": {
        "startLine": 586,
        "startChar": 4,
        "endLine": 586,
        "endChar": 43
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c7a99d5_decea3e7",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 586,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "I had the same concern, as at first I thought it will create a copy. However, I have found that Ivo is right and the vector is moved on return.",
      "parentUuid": "e696a9c2_df515f6c",
      "range": {
        "startLine": 586,
        "startChar": 4,
        "endLine": 586,
        "endChar": 43
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0ff7553_138227cb",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 586,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-25T15:07:31Z",
      "side": 1,
      "message": "Nope, it\u0027s a copy :) Look:\n\n1. processor is a AudioProcessingSimulator and AudioProcessingSimulator::GetOutputVector() is \"return buffer_array_writer_-\u003eGetOutputVector();\"\n\n2. AudioProcessingSimulator::buffer_array_writer_ is a ChannelBufferArrayWriter and it returns ChannelBufferArrayWriter::output_, which is owned by ChannelBufferArrayWriter\n\nThe compiler is smart and there is only one copy involved (luckily), but the rvalue case mentioned by Ivo happens when for instance we return a local member of a function, not a vector owned by another object.\n\nIf it were a copy-less op, then the ownership must be transferred from ChannelBufferArrayWriter::output_ to the caller, which would invalidate ChannelBufferArrayWriter::output_ - i.e., AudioProcessingSimulator::buffer_array_writer_ can\u0027t access to output_ anymore (undefined behavior).\n\nAnyways, I won\u0027t insist since this is not realtime code and solving as I proposed in my 1st comment requires extra work. I\u0027ll leave the decision up to you.",
      "parentUuid": "9c7a99d5_decea3e7",
      "range": {
        "startLine": 586,
        "startChar": 4,
        "endLine": 586,
        "endChar": 43
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "465888d7_5f9f90d4",
        "filename": "modules/audio_processing/test/audioproc_float_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 586,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-26T13:06:15Z",
      "side": 1,
      "message": "Thank you very much for clarifying this, Alessio! I will be more careful next time. After the discussion we had on this topic, I decided to avoid making the copy using your first suggestion, which is writing directly into the vector given by the caller.",
      "parentUuid": "f0ff7553_138227cb",
      "range": {
        "startLine": 586,
        "startChar": 4,
        "endLine": 586,
        "endChar": 43
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af86777f_1ede84d2",
        "filename": "modules/audio_processing/test/audioproc_float_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "- explain what the new args are in the docstring above since the context is that of a function (and not of an interface impl) hence the reader needs to read the doc string from audioproc_float.h to understand\n- adapt arg names according to the changes you\u0027ll make in audioproc_float.h\n- remove default values",
      "range": {
        "startLine": 25,
        "startChar": 23,
        "endLine": 26,
        "endChar": 59
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25cb74ac_162693f1",
        "filename": "modules/audio_processing/test/audioproc_float_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "af86777f_1ede84d2",
      "range": {
        "startLine": 25,
        "startChar": 23,
        "endLine": 26,
        "endChar": 59
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6abc610b_6e1943a9",
        "filename": "modules/audio_processing/test/audioproc_float_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 5607
      },
      "writtenOn": "2019-07-16T15:36:07Z",
      "side": 1,
      "message": "Looks like the default values are still there. It makes sense to remove them here, since this is not a function that is intended to be used externally.",
      "parentUuid": "25cb74ac_162693f1",
      "range": {
        "startLine": 25,
        "startChar": 23,
        "endLine": 26,
        "endChar": 59
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2722fc6_73f406f2",
        "filename": "modules/audio_processing/test/audioproc_float_impl.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-26T13:06:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6abc610b_6e1943a9",
      "range": {
        "startLine": 25,
        "startChar": 23,
        "endLine": 26,
        "endChar": 59
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "848fe2ea_fe2a8439",
        "filename": "modules/audio_processing/test/protobuf_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "use absl::make_unique (and also update line 51)",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8836cbab_1ce69b91",
        "filename": "modules/audio_processing/test/protobuf_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 29,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "848fe2ea_fe2a8439",
      "range": {
        "startLine": 29,
        "startChar": 2,
        "endLine": 29,
        "endChar": 34
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3a2d993_98fe7419",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "I wonder if we can initialize output_vector_ by reserving the necessary space (which is known since we know the input size). That\u0027s more efficient.",
      "range": {
        "startLine": 71,
        "startChar": 26,
        "endLine": 71,
        "endChar": 50
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4c72c8a_baf7d6bf",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 5607
      },
      "writtenOn": "2019-07-11T12:20:55Z",
      "side": 1,
      "message": "Do we know the input size? Don\u0027t we need to parse the whole AEC dump to get that?",
      "parentUuid": "d3a2d993_98fe7419",
      "range": {
        "startLine": 71,
        "startChar": 26,
        "endLine": 71,
        "endChar": 50
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0702c37_417bb436",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "We need to parse the whole AEC dump file to get the size, yes.",
      "parentUuid": "f4c72c8a_baf7d6bf",
      "range": {
        "startLine": 71,
        "startChar": 26,
        "endLine": 71,
        "endChar": 50
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8a5a4a9_60173280",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "Add a comment:\n// Account for sample rate changes throughout a simulation.",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc098bc6_da125cd0",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8a5a4a9_60173280",
      "range": {
        "startLine": 76,
        "startChar": 2,
        "endLine": 76,
        "endChar": 37
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce7d544b_ccde3f59",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "why do you need to work with 4096 bytes chunks?\n\nwhat you\u0027re doing in this function is:\n- getting an interleaved copy of the channel buffer\n- modifying it from [-1, 1] to the S16 range\n- extending output_ with the result of the last op\n\nif so, the impl can be simplified a lot:\n- no need to work with chunks of fixed size\n- no need to convert from float S16 to int_16\n- no need to convert again to float S16 (which happens when you write into output_vector_)",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 55
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4ca1b94_fd0c5abf",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "kChunkSize",
      "range": {
        "startLine": 83,
        "startChar": 19,
        "endLine": 83,
        "endChar": 29
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f25e475f_0f9587ef",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "int16_t (not unsigned)",
      "range": {
        "startLine": 83,
        "startChar": 46,
        "endLine": 83,
        "endChar": 54
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "291a53b7_ba3484f1",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ce7d544b_ccde3f59",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 55
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67ac501b_56aa1db6",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e4ca1b94_fd0c5abf",
      "range": {
        "startLine": 83,
        "startChar": 19,
        "endLine": 83,
        "endChar": 29
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69c73aab_b6e7bd00",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "f25e475f_0f9587ef",
      "range": {
        "startLine": 83,
        "startChar": 46,
        "endLine": 83,
        "endChar": 54
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ba114e0_11ad95a5",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "chunk",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3612064_feeabdd8",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 5607
      },
      "writtenOn": "2019-07-11T12:20:55Z",
      "side": 1,
      "message": "Do we need to convert to int16_t at all here? The function returns samples as floats now, so can\u0027t we just copy samples from interleaved_ to the output vector?",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 11
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ed8c91a_7f877aed",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d3612064_feeabdd8",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 11
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fae5886e_b4807f34",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 85,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2ba114e0_11ad95a5",
      "range": {
        "startLine": 85,
        "startChar": 12,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae6c4414_56e484a2",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "chunk_size",
      "range": {
        "startLine": 86,
        "startChar": 17,
        "endLine": 86,
        "endChar": 22
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6b3d669_2ad25cd8",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 86,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ae6c4414_56e484a2",
      "range": {
        "startLine": 86,
        "startChar": 17,
        "endLine": 86,
        "endChar": 22
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15a57791_179501c3",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "I\u0027ve never benchmarked myself, but calling push_back in a for loop is more efficient",
      "range": {
        "startLine": 88,
        "startChar": 19,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1e1019d_e8149473",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 5607
      },
      "writtenOn": "2019-07-11T12:20:55Z",
      "side": 1,
      "message": "I don\u0027t think there should be any difference, since we\u0027re inserting at the end of the vector, which is pretty much the same as calling push_back.",
      "parentUuid": "15a57791_179501c3",
      "range": {
        "startLine": 88,
        "startChar": 19,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afb1cfee_d2e4697a",
        "filename": "modules/audio_processing/test/test_utils.cc",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d1e1019d_e8149473",
      "range": {
        "startLine": 88,
        "startChar": 19,
        "endLine": 88,
        "endChar": 25
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "219ed0e0_1ca66975",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "not needed",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 10
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "227d757f_b7e2fc7f",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "219ed0e0_1ca66975",
      "range": {
        "startLine": 83,
        "startChar": 2,
        "endLine": 83,
        "endChar": 10
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44f7ae02_77811576",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "above this add:\nChannelBufferArrayWriter(const ChannelBufferArrayWriter\u0026) \u003d delete;\nChannelBufferArrayWriter\u0026 operator\u003d(const ChannelBufferArrayWriter\u0026) \u003d delete;\n\nthis will help detecting unwanted copies at compile time",
      "range": {
        "startLine": 84,
        "startChar": 2,
        "endLine": 84,
        "endChar": 30
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34dd4f4_bcc6b327",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44f7ae02_77811576",
      "range": {
        "startLine": 84,
        "startChar": 2,
        "endLine": 84,
        "endChar": 30
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc929899_0ded9f3b",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "const method",
      "range": {
        "startLine": 87,
        "startChar": 21,
        "endLine": 87,
        "endChar": 38
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc608109_d3470c98",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 87,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc929899_0ded9f3b",
      "range": {
        "startLine": 87,
        "startChar": 21,
        "endLine": 87,
        "endChar": 38
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d269467_dfb263d7",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "interleaved_buffer_",
      "range": {
        "startLine": 90,
        "startChar": 21,
        "endLine": 90,
        "endChar": 33
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ded34c3_f4ea1107",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d269467_dfb263d7",
      "range": {
        "startLine": 90,
        "startChar": 21,
        "endLine": 90,
        "endChar": 33
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "129f4056_6a482e0e",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 5122
      },
      "writtenOn": "2019-07-11T09:24:29Z",
      "side": 1,
      "message": "output_",
      "range": {
        "startLine": 91,
        "startChar": 21,
        "endLine": 91,
        "endChar": 35
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96ae9c31_f9276a6c",
        "filename": "modules/audio_processing/test/test_utils.h",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 9579
      },
      "writtenOn": "2019-07-12T08:15:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "129f4056_6a482e0e",
      "range": {
        "startLine": 91,
        "startChar": 21,
        "endLine": 91,
        "endChar": 35
      },
      "revId": "95f4ae9f0ad31ef191d250ac832ff12341167260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}