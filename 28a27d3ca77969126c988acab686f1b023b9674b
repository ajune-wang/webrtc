{
  "comments": [
    {
      "key": {
        "uuid": "e0f16413_a86560df",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-25T15:31:10Z",
      "side": 1,
      "message": "I know you\u0027re just moving this, but could we change this to be more descriptive?\nAdaptationDegrees? ReductionState? DegradationExtent? Something that better indicates that this his much we\u0027ve adapted quality due to some reason.\n\nI also think the fields could be named num_resolution_reductions and num_framerate_reductions or something along those lines to make it even more obvious.\n\nOh, and optional\u003csize_t\u003e instead of the -1 thing?\n\nwdyt?",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 20
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ea3c5d9_a160d918",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "I\u0027m not sure what these counters mean. They\u0027re not a number of events (since values are copied from the class VideoStreamEncoder::AdaptCounter, which includes Decrement methods), but the current number of steps? If so, something with \"steps\" sounds more appropriate than degrees, state or extent. How are the values named in the public stats api (C++ and js)?\n\nI\u0027ve changed to optional\u003cint\u003e (using size_t or some other unsigned type is discouraged by the style guide), and renamed the fields as you suggested. Still unclear what te name of the struct should be.",
      "parentUuid": "e0f16413_a86560df",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 20
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e148319_f7c80664",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-26T11:07:35Z",
      "side": 1,
      "message": "Yes, AdaptationSteps sounds good.\n\nso something like this?\n\nvoid OnAdaptationChange(\n  const AdaptationSteps\u0026 cpu_adaptation, \n  const AdaptationSteps\u0026 quality_adaptation, \n  AdaptationReason reason) \u003d 0;\n\nI don\u0027t think this level of detail is reported in external stats. Afaict we have three:\n* googAdaptationChanges, the number incremented by On.*AdaptationChanged()\n* googBandwidthLimitedResolution true if adapt_counts.resolution \u003e 0 for the quality_counts parameter (signaled as adapt reason \"bandwidth\" in some places)\n* googCpuLimitedResolution true if adapt_counts.resolution \u003e 0 for the cpu_counts parameter (signaled as adapt reason \"bandwidth\" in some places)\n\nThe frame rate degradations are reported in VideoSendStream::Stats, but it looks like it is not picked up by webrtcvideoengine and propagated further...\n\nThen there\u0027s googHasEnteredLowResolution is has to do with if resolution is low enough that we might consider sw encoder fallback.",
      "parentUuid": "9ea3c5d9_a160d918",
      "range": {
        "startLine": 38,
        "startChar": 9,
        "endLine": 38,
        "endChar": 20
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77113eef_6d114766",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 5525
      },
      "writtenOn": "2018-06-25T16:18:28Z",
      "side": 1,
      "message": "Would be really nice to align the Image/Frame names in this API. It\u0027s really not clear what the difference is. WDYT?",
      "range": {
        "startLine": 49,
        "startChar": 15,
        "endLine": 49,
        "endChar": 33
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bcb0ce7_483de093",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "I\u0027d prefer keeping name of this method as is until the poorly named EncodedImage class is replaced or renamed.",
      "parentUuid": "77113eef_6d114766",
      "range": {
        "startLine": 49,
        "startChar": 15,
        "endLine": 49,
        "endChar": 33
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e95f2192_54cac44d",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 5525
      },
      "writtenOn": "2018-06-25T16:18:28Z",
      "side": 1,
      "message": "If you do what Erik suggested below, I think we should do the same here.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5f9ab23_9204cdeb",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 56,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "Makes sense, but not done yet.",
      "parentUuid": "e95f2192_54cac44d",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 56,
        "endChar": 0
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65be626a_9f2a7689",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-25T15:31:10Z",
      "side": 1,
      "message": "Since we\u0027re making this an api surface, can we take the time to clean it up a little?\nI\u0027m thinking it\u0027s enough with a single OnAdaptationChanged() if we something like an enum AdaptReson { init, cpu, quality } as a paramter?",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 69,
        "endChar": 45
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94fd8268_ac93df21",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "We have some sort of matrix, \"reason\" on one dimension (quality or cpu) and \"type\" (scaling or framerate) on the other. An enum for the reason part should be straightforward. What\u0027s more odd is that both OnCpuAdaptationChanged and OnQualityAdaptationChanged pass counts for both cpu and quality. Where received, in SendStatisticsProxy, all values are assigned, and then one of two additional counters are incremented based on the reason.",
      "parentUuid": "65be626a_9f2a7689",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 69,
        "endChar": 45
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dcc21ec_ad388dff",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-26T11:07:35Z",
      "side": 1,
      "message": "Yeah, that feels unnecessary. We can just keep a state instead?\nActually, looking at the call hierarchy,  we get here from \n \nVideoStreamEncoder::UpdateAdaptationStats(AdaptReason reason)\n\nSo the AdaptReason already exists. We could just add an \"init\" value that prevents incrementing the counters.",
      "parentUuid": "94fd8268_ac93df21",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 69,
        "endChar": 45
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa9eb617_a84e5aaa",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T13:01:34Z",
      "side": 1,
      "message": "And stats are reported via VideoSenderInfo::adapt_reason (media/base/mediachannel.h) which is populated with values of the enum WebRtcVideoChannel::AdaptReason with constant values ADAPTREASON_*, used as bit masks, based in stream_-\u003eGetStats().\n\nI\u0027m not going to touch that part now...\n\nAnd the enum AdaptReason used by VideoStreamEncoder belongs to AdaptationObserverInterface, which for some reason is declared in modules/video_coding/utility/quality_scaler.h. I\u0027d prefer to not move AdaptationObserverInterface into api/. Maybe it\u0027s easiest to introduce yet another enum for the same thing.",
      "parentUuid": "4dcc21ec_ad388dff",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 69,
        "endChar": 45
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82d8af79_b5b88fe5",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 69,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-26T13:04:42Z",
      "side": 1,
      "message": "Probably, then we can replace the old one and/or do further cleanup in a follow-up instead.",
      "parentUuid": "fa9eb617_a84e5aaa",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 69,
        "endChar": 45
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "add7469e_862834de",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 5525
      },
      "writtenOn": "2018-06-25T16:18:28Z",
      "side": 1,
      "message": "I don\u0027t get what this API does. Why do we need it?",
      "range": {
        "startLine": 71,
        "startChar": 15,
        "endLine": 71,
        "endChar": 50
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c94427e_bb2cf66a",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 10
      },
      "lineNbr": 71,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "It looks like it\u0027s stats for the initial framedrop feature,https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d9176",
      "parentUuid": "add7469e_862834de",
      "range": {
        "startLine": 71,
        "startChar": 15,
        "endLine": 71,
        "endChar": 50
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb95201f_0c849887",
        "filename": "api/video/video_stream_encoder_settings.h",
        "patchSetId": 10
      },
      "lineNbr": 18,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-25T15:31:10Z",
      "side": 1,
      "message": "Unused includes?",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 18,
        "endChar": 53
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02169eb_9babf49d",
        "filename": "api/video/video_stream_encoder_settings.h",
        "patchSetId": 10
      },
      "lineNbr": 18,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "Deleted.",
      "parentUuid": "bb95201f_0c849887",
      "range": {
        "startLine": 14,
        "startChar": 0,
        "endLine": 18,
        "endChar": 53
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fca56ad5_8f0ae5cb",
        "filename": "call/video_send_stream.cc",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 5525
      },
      "writtenOn": "2018-06-25T16:18:28Z",
      "side": 1,
      "message": "No need to indicate that the factory is injected?",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 0
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e36b60_1a509a75",
        "filename": "call/video_send_stream.cc",
        "patchSetId": 10
      },
      "lineNbr": 77,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "I don\u0027t think so, it\u0027s not an optional setting.",
      "parentUuid": "fca56ad5_8f0ae5cb",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 77,
        "endChar": 0
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5529f1ae_1ef8ae92",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 189,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-06-25T15:31:10Z",
      "side": 1,
      "message": "nit: init in ctor",
      "range": {
        "startLine": 189,
        "startChar": 31,
        "endLine": 189,
        "endChar": 32
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41267d54_d1f53bb7",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 189,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "Do you really mean constructor (then I\u0027d add an explicit constructor just for this), or the SetUp method? Personally, I prefer initialization to go with the declaration.",
      "parentUuid": "5529f1ae_1ef8ae92",
      "range": {
        "startLine": 189,
        "startChar": 31,
        "endLine": 189,
        "endChar": 32
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bdd1a0a2_781bd3fe",
        "filename": "video/overuse_frame_detector_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 191,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-26T08:48:45Z",
      "side": 1,
      "message": "BTW, what does |auto| mean in this context?",
      "range": {
        "startLine": 191,
        "startChar": 15,
        "endLine": 191,
        "endChar": 19
      },
      "revId": "28a27d3ca77969126c988acab686f1b023b9674b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}