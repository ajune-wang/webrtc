# Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

import("../../webrtc.gni")

rtc_source_set("task_queue") {
  visibility = [ "*" ]
  public = [
    "queued_task.h",
  ]

  deps = [
    "//third_party/abseil-cpp/absl/base:core_headers",
    "//third_party/abseil-cpp/absl/memory",
  ]
}

# TODO(danilchap): Merge this target into task_queue when it doesn't need to
# depend on rtc_base:task_queue
rtc_source_set("task_queue_factory") {
  visibility = [ "*" ]
  public = [
    "task_queue_base.h",
    "task_queue_factory.h",
  ]
  sources = [
    "task_queue_base.cc",
    "task_queue_base_impl.cc",
    "task_queue_base_impl.h",
  ]

  deps = [
    ":task_queue",
    "../../rtc_base:checks",
    "../../rtc_base:rtc_task_queue_api",
    "//third_party/abseil-cpp/absl/base:core_headers",
    "//third_party/abseil-cpp/absl/memory",
  ]
}

rtc_source_set("task_queue_default_factory") {
  visibility = [ "*" ]
  sources = [
    "task_queue_default_factory.h",
  ]
  deps = [
    ":task_queue_factory",
  ]
  if (rtc_enable_libevent) {
    sources += [ "task_queue_default_factory_libevent.cc" ]
    deps += [ "../../rtc_base:rtc_task_queue_libevent" ]
  } else if (is_mac || is_os) {
    sources += [ "task_queue_default_factory_gcd.cc" ]
    deps += [ "../../rtc_base:rtc_task_queue_gcd" ]
  }
}
