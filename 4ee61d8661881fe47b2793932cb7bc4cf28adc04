{
  "comments": [
    {
      "key": {
        "uuid": "a0577509_fedf92ac",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-14T03:58:48Z",
      "side": 1,
      "message": "I wonder why we are not exposing this already? (it\u0027s a transitive dependency, but it\u0027s not public, and yet, we have plenty of interfaces that expose sigslots).\n\nIf this is not recommended, please let me know.",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c160534e_d04b64d6",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-14T10:36:39Z",
      "side": 1,
      "message": "I prefer using interface classes. Whether or not we should be migrating away from sigslot is under debate. One problem is that changing the signature of a signal is more painful than changing the signature of a method call.",
      "parentUuid": "a0577509_fedf92ac",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aff0338b_43538583",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-14T15:09:03Z",
      "side": 1,
      "message": "\u003e Whether or not we should be migrating away from sigslot is under debate.\n\nI have heard that before - are there any documents that discuss it pros/cons/next steps? If not, I would rather use it, because it makes the code much simpler (we discussed it briefly with Anton).",
      "parentUuid": "c160534e_d04b64d6",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a74b399b_a1601c3d",
        "filename": "api/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 191,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-15T15:36:38Z",
      "side": 1,
      "message": "Ack, changed to interface class, discussing sigslots offline.",
      "parentUuid": "aff0338b_43538583",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "297cc1a3_ad9c7762",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-14T10:36:39Z",
      "side": 1,
      "message": "Do I get it right, that for each received audio frame, we\u0027d get one call to this signal, and one call to the registered MediaTransportAudioSinkInterface?\n\nIt seems this interface would be simpler without an extra signal or callback, and then logging would have to be done by the audio sink instead?",
      "range": {
        "startLine": 452,
        "startChar": 0,
        "endLine": 455,
        "endChar": 54
      },
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "250ad7c3_085771db",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-14T15:09:03Z",
      "side": 1,
      "message": "We only allow one audio sink. \n1) if we allow multiple sinks, we can\u0027t use move semantics\n2) In the channel.cc we don\u0027t need an entire frame. If there are interfaces that only expect info upon first packet, they shouldn\u0027t need the entire frame.\n3) In addition, the first packet doesn\u0027t necessarily mean first frame. While it is the case for audio, it\u0027s not the case for video, and it doesn\u0027t have to be the case for audio (technically an audio frame could be split to multiple packets).\n\nSo the semantics are different.",
      "parentUuid": "297cc1a3_ad9c7762",
      "range": {
        "startLine": 452,
        "startChar": 0,
        "endLine": 455,
        "endChar": 54
      },
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e9bed6d_e581c7db",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 455,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-15T15:36:38Z",
      "side": 1,
      "message": "\u003e It seems this interface would be simpler without an extra signal or callback, and then logging would have to be done by the audio sink instead?\n\nYes, that would be simpler. But I couldn\u0027t find a link from ChannelReceive (webrtc/audio/channel_receive.cc) to BaseChannel/VoiceChannel. Let me know if it\u0027s possible to call from ChannelReceive to VoiceChannel (I think the other way round may be possible, and I did not want to add extra callbacks to channelreceive).",
      "parentUuid": "250ad7c3_085771db",
      "range": {
        "startLine": 452,
        "startChar": 0,
        "endLine": 455,
        "endChar": 54
      },
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e72b870_cf69524b",
        "filename": "pc/channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-01-14T21:41:38Z",
      "side": 1,
      "message": "Shouldn\u0027t this be done in the VoiceChannel subclass?",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a37e5f9e_667d5ee6",
        "filename": "pc/channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-14T23:23:54Z",
      "side": 1,
      "message": "Hmm, voice channel didn\u0027t have access to media transport, and init_w is not virtual... When you make Init_w virtual, all hell breaks loose... so I added OnInit_w called at the end of the actual base channel on init.",
      "parentUuid": "7e72b870_cf69524b",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "479e1698_23a983ac",
        "filename": "pc/channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-01-14T21:41:38Z",
      "side": 1,
      "message": "Maybe factor this out with the other MSG_FIRSTPACKETRECEIVED poster?",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4946c194_ce41bbb1",
        "filename": "pc/channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-14T23:23:54Z",
      "side": 1,
      "message": "now that it\u0027s down in the VoiceChannel, I won\u0027t :) It\u0027s 2 lines (because even the condition is different), it will take more code to factor it...",
      "parentUuid": "479e1698_23a983ac",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf1d2920_33b5ce4f",
        "filename": "pc/channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-15T15:36:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4946c194_ce41bbb1",
      "revId": "4ee61d8661881fe47b2793932cb7bc4cf28adc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}