{
  "comments": [
    {
      "key": {
        "uuid": "f3a4777d_5889e807",
        "filename": "call/fake_network_pipe.cc",
        "patchSetId": 3
      },
      "lineNbr": 366,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-07-06T13:39:20Z",
      "side": 1,
      "message": "Seems like this is the only place that would require mutable, would it be possible to unconst this, or do we depend on this being const?",
      "range": {
        "startLine": 366,
        "startChar": 36,
        "endLine": 366,
        "endChar": 41
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90ed3fbc_4afa4e8e",
        "filename": "call/fake_network_pipe.cc",
        "patchSetId": 3
      },
      "lineNbr": 366,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-06T13:44:22Z",
      "side": 1,
      "message": "Don\u0027t you think it\u0027s better to keep the methods const at the expense of the mutable keyword on the mutex? This should be a nop CL wrt changes like that.",
      "parentUuid": "f3a4777d_5889e807",
      "range": {
        "startLine": 366,
        "startChar": 36,
        "endLine": 366,
        "endChar": 41
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aa76ba2_f418db1d",
        "filename": "call/fake_network_pipe.cc",
        "patchSetId": 3
      },
      "lineNbr": 366,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-06T14:21:55Z",
      "side": 1,
      "message": "To answer your question, no we don\u0027t depend on it but. I would prefer not to as const signals useful information at the only expense of a mutable mutex.",
      "parentUuid": "90ed3fbc_4afa4e8e",
      "range": {
        "startLine": 366,
        "startChar": 36,
        "endLine": 366,
        "endChar": 41
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c12f15c_75a596ce",
        "filename": "call/fake_network_pipe.cc",
        "patchSetId": 3
      },
      "lineNbr": 366,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-07-06T15:15:20Z",
      "side": 1,
      "message": "I\u0027d prefer to avoid mutable keyword if possible, it\u0027s a bit of a code smell. Even though I agree that it\u0027s somewhat low risk here, presumably they made absl::Mutex non-const functional on purpose. The value of having a const method for this rather than mutable isn\u0027t that high either, if it still requires a lock IMO. In general, I think const mixed with mutable keyword diminishes the utility of marking things const in the first place.\n\nDo you have more context on why absl::Mutex is not internally mutable, is marking it as mutable a common and expected pattern?",
      "parentUuid": "4aa76ba2_f418db1d",
      "range": {
        "startLine": 366,
        "startChar": 36,
        "endLine": 366,
        "endChar": 41
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b79996a6_7cb93456",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 728,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-07-06T13:39:20Z",
      "side": 1,
      "message": "Again, do we need this to be const?",
      "range": {
        "startLine": 728,
        "startChar": 4,
        "endLine": 728,
        "endChar": 9
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f562f575_acd8ec2d",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 728,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-06T13:44:22Z",
      "side": 1,
      "message": "dito",
      "parentUuid": "b79996a6_7cb93456",
      "range": {
        "startLine": 728,
        "startChar": 4,
        "endLine": 728,
        "endChar": 9
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "16a5e65f_e99d733b",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 728,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-06T14:21:55Z",
      "side": 1,
      "message": "For this we definitely need to be const, it\u0027s an overridden method.",
      "parentUuid": "f562f575_acd8ec2d",
      "range": {
        "startLine": 728,
        "startChar": 4,
        "endLine": 728,
        "endChar": 9
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70f16557_b6bff6e2",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 728,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-07-06T15:15:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "16a5e65f_e99d733b",
      "range": {
        "startLine": 728,
        "startChar": 4,
        "endLine": 728,
        "endChar": 9
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa0783b7_e8b7012f",
        "filename": "call/simulated_network.cc",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-07-06T13:39:20Z",
      "side": 1,
      "message": "Drop const?",
      "range": {
        "startLine": 262,
        "startChar": 65,
        "endLine": 262,
        "endChar": 70
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa499a4a_4abdfd3a",
        "filename": "call/simulated_network.cc",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-06T13:44:22Z",
      "side": 1,
      "message": "dito",
      "parentUuid": "fa0783b7_e8b7012f",
      "range": {
        "startLine": 262,
        "startChar": 65,
        "endLine": 262,
        "endChar": 70
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "942322cd_5876b7b7",
        "filename": "call/simulated_network.cc",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-06T14:21:55Z",
      "side": 1,
      "message": "We don\u0027t depend on the method being const but I would prefer not drop it as const signals useful information at the only expense of a mutable mutex.",
      "parentUuid": "aa499a4a_4abdfd3a",
      "range": {
        "startLine": 262,
        "startChar": 65,
        "endLine": 262,
        "endChar": 70
      },
      "revId": "51e86d792a33cfffe5b80e57c0edb8b2b8f41dbc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}