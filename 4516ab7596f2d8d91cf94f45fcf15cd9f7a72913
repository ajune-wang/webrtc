{
  "comments": [
    {
      "key": {
        "uuid": "d6453e34_272fd49e",
        "filename": "modules/congestion_controller/delay_based_bwe.cc",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-11T13:57:14Z",
      "side": 1,
      "message": "Is this intentionally left here? Seems redundant with the reset below.",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 29
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa7ece54_a67ec1e9",
        "filename": "modules/congestion_controller/delay_based_bwe.cc",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-01-31T19:54:27Z",
      "side": 1,
      "message": "It is intentional in the sense that we\u0027ve previously initialized all members explicitly in this file, even if they are default constructed. I\u0027m keeping with this pattern.\n\nYou\u0027re right that it is redundant to initialize it to a nullptr since we immediately reset it anyway. However, we haven\u0027t yet read the trendline parameters,  so we can\u0027t construct it here. We could reorder the members, but the next CL will remove the trendline_xxx parameters anyway so it didn\u0027t seem worth the effort.",
      "parentUuid": "d6453e34_272fd49e",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 29
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f11f3493_ac168f63",
        "filename": "modules/congestion_controller/delay_based_bwe.cc",
        "patchSetId": 3
      },
      "lineNbr": 91,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-02-01T13:14:48Z",
      "side": 1,
      "message": "Ok, makes sense from the perspective that it\u0027s done for the other members as well, although it\u0027s a new pattern to me. unique_ptr is always default initialized to nullptr.",
      "parentUuid": "aa7ece54_a67ec1e9",
      "range": {
        "startLine": 91,
        "startChar": 6,
        "endLine": 91,
        "endChar": 29
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26b60e74_30b371fe",
        "filename": "modules/congestion_controller/delay_based_bwe.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-11T13:57:14Z",
      "side": 1,
      "message": "Should the name reflect that it\u0027s specifically a trendline estimator, or should it reflect the interface it fulfils?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 54
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fba9ce91_10aedad1",
        "filename": "modules/congestion_controller/delay_based_bwe.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-01-31T19:54:27Z",
      "side": 1,
      "message": "Done. However, for now it looks a bit strange since the parameters below still talk about a trendline.",
      "parentUuid": "26b60e74_30b371fe",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 54
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2469dbf_86c38bc6",
        "filename": "modules/congestion_controller/delay_based_bwe.h",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-02-01T13:14:48Z",
      "side": 1,
      "message": "I think this is fine., The parameters below reflect what the TrendlineEstimator implementation of DelayDetectorInterface is initialized with, they do that even if another implementation is used based on some configuration.",
      "parentUuid": "fba9ce91_10aedad1",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 54
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "028ccbf7_7cb782af",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-11T13:57:14Z",
      "side": 1,
      "message": "Just looking at the interface, it seems like such a class detects bandwidth usage (or more specifically, usage state in the set of underuse, normal, overuse) _based_ on delay, rather than detecting delay itself.\n\nMaybe naming it BandwidthUsageClassifier[Interface] or something in that spirit would make it clearer for the reader what it actually does?",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8ba6a96_0106d5d4",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-01-31T19:54:27Z",
      "side": 1,
      "message": "I think DelayDetector is clearer in the sense that it detects (congestion-related) delay increases. To me, it feels like almost any part of the congestion controller could be called a BandwidthUsageClassifier. I also find the BandwidthUsage enum itself a bit confusing, since kBwUnderusing doesn\u0027t mean that we should increase the bitrate. Better names might be IncreasingQueues, StableQueues, DrainingQueues.\n\nI agree with adding the -Interface though.",
      "parentUuid": "028ccbf7_7cb782af",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72c15f3a_f8c24fe9",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-02-01T13:14:48Z",
      "side": 1,
      "message": "Ok i see, good suggestion to fix the enum, I think that would make it much clearer.\n\nMaybe Delay[Behaviour|Trend|Increase][Detector|Classifier] then? Would make it much quicker to understand for me.",
      "parentUuid": "d8ba6a96_0106d5d4",
      "range": {
        "startLine": 20,
        "startChar": 6,
        "endLine": 20,
        "endChar": 19
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "652fa8ba_166c1262",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-11T13:57:14Z",
      "side": 1,
      "message": "Would be nice if the definition was repeated here, saving some indirection for the reader, also, keeping it persistent if, by chance, the InterArrival class is refactored later end the definition is removed.",
      "range": {
        "startLine": 26,
        "startChar": 48,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb07b8b6_3c38bb1f",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-01-31T19:54:27Z",
      "side": 1,
      "message": "The comment (along with the rest of this class) is copied from the OveruseEstimator and OveruseDetector. I don\u0027t even know what the current definition is. Also, I intend to create an experiment for removing the InterArrival class since I\u0027m not convinced that the grouping is necessary.",
      "parentUuid": "652fa8ba_166c1262",
      "range": {
        "startLine": 26,
        "startChar": 48,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ea36531_e282b5f5",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-02-01T13:14:48Z",
      "side": 1,
      "message": "Ok, I\u0027ll ignore it then.",
      "parentUuid": "bb07b8b6_3c38bb1f",
      "range": {
        "startLine": 26,
        "startChar": 48,
        "endLine": 26,
        "endChar": 67
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c5bd356_74b337a0",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-11T13:57:14Z",
      "side": 1,
      "message": "Some verbosity wouldn\u0027t hurt here, how about [Get][Current]BandwidthUsage[State]?",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b90da23_c063316f",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-01-31T19:54:27Z",
      "side": 1,
      "message": "This is preserved from the old OveruseDetector.",
      "parentUuid": "9c5bd356_74b337a0",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5b2c0c6_06d95a6c",
        "filename": "modules/congestion_controller/delay_detector.h",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-02-01T13:14:48Z",
      "side": 1,
      "message": "Maybe just adding the enum fix you suggested would make this less confusing?",
      "parentUuid": "7b90da23_c063316f",
      "range": {
        "startLine": 31,
        "startChar": 25,
        "endLine": 31,
        "endChar": 30
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec58840c_e6d9d0e3",
        "filename": "modules/congestion_controller/trendline_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-11T13:57:14Z",
      "side": 1,
      "message": "The return value doesn\u0027t seem to be used?",
      "range": {
        "startLine": 120,
        "startChar": 35,
        "endLine": 120,
        "endChar": 41
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a83ea154_0f4031eb",
        "filename": "modules/congestion_controller/trendline_estimator.cc",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-01-31T19:54:27Z",
      "side": 1,
      "message": "Done. Thanks.",
      "parentUuid": "ec58840c_e6d9d0e3",
      "range": {
        "startLine": 120,
        "startChar": 35,
        "endLine": 120,
        "endChar": 41
      },
      "revId": "4516ab7596f2d8d91cf94f45fcf15cd9f7a72913",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}