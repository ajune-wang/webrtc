{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "06abe033_334152e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-10-17T09:08:47Z",
      "side": 1,
      "message": "The point of the DCHECK is to detect when we are not handling all cases.\n\nRather than deleting the DCHECK, what is the case we are not handling? Why are we not handling it?",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a35df44d_46adf557",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-10-17T22:44:31Z",
      "side": 1,
      "message": "This can happen if unittest tries to create two peerconnections using `BasicNetworkManager`, exchange candidates, and then call GetStats.\n\nIn this case the candidate may have a network type other than `ADAPTER_TYPE_UNKNOWN`, but this code is not taking that into account.\n\nMost tests use `FakeNetworkManager` and by default `FakeNetworkManager.AddInterface` will add an fake network adapter with `ADAPTER_TYPE_UNKNOWN`, so it will not trigger this issue.\n\n\nInstead of deleting the whole else block, I\u0027m going to add a comment like below.\n```\n// network_type, relay_protocol, url, network_adapter_type are not defined\n// in the remote candidate.\n```",
      "parentUuid": "06abe033_334152e7",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4ba1ba6_7d3e70af",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-10-18T07:34:51Z",
      "side": 1,
      "message": "Does removing the DCHECK hide a bug (i.e. remote candidates should not have a value so the DCHECK is valid)?\n\nIn my mind, if it is a bug, we should fix the bug instead of hiding the bug. That is update the test so that we don\u0027t hit the DCHECK.\n\nIf it\u0027s not a bug, it sounds like we should be able to handle more adapter types.\n\nAlternatively we could do a LS_WARNING log or something, but just removing the DCHECK seems like hiding a real problem... +Harald for second opinion",
      "parentUuid": "a35df44d_46adf557",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1538bd9a_188fa2f9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-10-18T07:35:48Z",
      "side": 1,
      "message": "Removing the DCHECK does make sense if remote candidates can have an adapter type that we don\u0027t want to expose but I\u0027m guessing we added the DCHECK for a reason",
      "parentUuid": "c4ba1ba6_7d3e70af",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7cbc0eaa_fceadfb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-10-18T07:48:20Z",
      "side": 1,
      "message": "In the case of a test using BasicNetworkManager, what does the network type turn up as?\nThe remote network type being known is either a bug or a feature; if it\u0027s a bug, the DCHECK has alerted us to it and is good; if it is a feature, the DCHECK needs to accomodate it.",
      "parentUuid": "1538bd9a_188fa2f9",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aee97a4f_2ae8357e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-10-18T09:31:26Z",
      "side": 1,
      "message": "In normal cases, remote candidates doesn\u0027t have network_type values. However, in tests, it is common to pass SDP and remote candidates as a object. `SessionDescriptionInterface*` and `IceCandidateInterface*`.\nIn this case, network_type property is preserved, so it triggers DCHECK when GetStats called.\n\nI have opened another CL which eliminates the root cause of this issue.\nhttps://webrtc-review.googlesource.com/c/src/+/279680",
      "parentUuid": "7cbc0eaa_fceadfb2",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1443d36_5c2dc83e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-10-18T07:48:20Z",
      "side": 1,
      "message": "Agree with Henrik\u0027s concern.",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cead83fe_405ae910",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-10-18T09:31:26Z",
      "side": 1,
      "message": "In normal cases, remote candidates doesn\u0027t have network_type values. However, in tests, it is common to pass SDP and remote candidates as a object. `SessionDescriptionInterface*` and `IceCandidateInterface*`.\nIn this case, network_type property is preserved, so it triggers DCHECK when GetStats called.\n\nI have opened another CL which eliminates the root cause of this issue.\nhttps://webrtc-review.googlesource.com/c/src/+/279680",
      "revId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "5c6e837475710f6484a8f70c32dc6e4466ec9eb0",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}