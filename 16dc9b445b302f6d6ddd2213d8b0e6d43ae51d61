{
  "comments": [
    {
      "key": {
        "uuid": "6be3d7b8_626987b7",
        "filename": "p2p/base/fakeasyncresolver.h",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T22:45:25Z",
      "side": 1,
      "message": "Is this definitely necessary? Generally we try to avoid using threads in fakes to reduce test flakiness.",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6145b197_17fdd6d5",
        "filename": "p2p/base/fakeasyncresolver.h",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-07T21:37:36Z",
      "side": 1,
      "message": "This ended up uncovering a bug, but I will look in to other approaches before submitting.",
      "parentUuid": "6be3d7b8_626987b7",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fea7375_c171e078",
        "filename": "p2p/base/fakeasyncresolver.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T22:45:25Z",
      "side": 1,
      "message": "Suggest allowing IP addresses to be injected by the test\na) so that the test knows what to check for\nb) to allow simulating IPv4 only, IPv6 only, etc.",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d1e279b_baea7c95",
        "filename": "p2p/base/fakeasyncresolver.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-07T21:37:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fea7375_c171e078",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee7a56e7_98190a81",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1003,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T22:45:25Z",
      "side": 1,
      "message": "suggest breaking this out into a MaybeResolveHostnameCandidate method",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c5a18b7_62372db1",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1003,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee7a56e7_98190a81",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dfbd8a09_a1a9224f",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-08-03T22:22:22Z",
      "side": 1,
      "message": "Maybe add a TODO to remind us that we need to audit other log prints.",
      "range": {
        "startLine": 1015,
        "startChar": 44,
        "endLine": 1015,
        "endChar": 61
      },
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3f278f4_aa00f4be",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1015,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "I\u0027m tracking this elsewhere.",
      "parentUuid": "dfbd8a09_a1a9224f",
      "range": {
        "startLine": 1015,
        "startChar": 44,
        "endLine": 1015,
        "endChar": 61
      },
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18bb1a4c_82a8a8b9",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1041,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-08-03T22:22:22Z",
      "side": 1,
      "message": "Maybe use HostAsSensitiveURIString instead and also a few places below. ToSensitiveString will show the port.",
      "range": {
        "startLine": 1041,
        "startChar": 51,
        "endLine": 1041,
        "endChar": 68
      },
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "494c71c8_e889b641",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1041,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18bb1a4c_82a8a8b9",
      "range": {
        "startLine": 1041,
        "startChar": 51,
        "endLine": 1041,
        "endChar": 68
      },
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2b74903_821af039",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1043,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T22:45:25Z",
      "side": 1,
      "message": "You want to call erase() no matter what - suggest doing this before the if statement, and then you don\u0027t need to have 3 .erase() calls.",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "336a302a_d7b8432b",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1043,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "With the added calls to p-\u003eresolver_-\u003eDestroy, I don\u0027t think I can move these all to one place now (I don\u0027t want to destroy the resolver before calling GetResolvedAddress). I could do a \"goto CLEANUP\" with the Destory/erase once at the end of the function, but I suspect you wouldn\u0027t prefer that. I think the best thing to do would be to RAII-ify AsyncResolver, but I\u0027m not sure if that will require Chromium changes.",
      "parentUuid": "f2b74903_821af039",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b0b85be_872771d4",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1048,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T22:45:25Z",
      "side": 1,
      "message": "This logic won\u0027t work if you are IPv4 only and there is an AAAA DNS record for the candidate. I\u0027m not sure what the right solution is here, other than maybe adding a comment to help ensure that we handle this as part of the ICE DNS spec discussions.",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bd33cda_8be3ebff",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1048,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b0b85be_872771d4",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "666939b8_4d2d3dda",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1059,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-08-03T22:22:22Z",
      "side": 1,
      "message": "We have lots of log prints like this that show the IP fully or partly using the sensitive version. This is some potential leaking we discussed, and we may need notes on those when we audit them shortly.",
      "range": {
        "startLine": 1059,
        "startChar": 2,
        "endLine": 1059,
        "endChar": 56
      },
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cde9aff_5c65705f",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1059,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "666939b8_4d2d3dda",
      "range": {
        "startLine": 1059,
        "startChar": 2,
        "endLine": 1059,
        "endChar": 56
      },
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6e04184_f5fa7484",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1072,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T22:45:25Z",
      "side": 1,
      "message": "I don\u0027t think this logic is going to work properly, because the    \n|remote_candidate_.address() \u003d\u003d new_candidate.address()| test in this function will fail (IIRC).\n\nI think you\u0027re going to want to unit test this, e.g.:\n1) Add a remote candidate of a.com:5000 (resolution starts)\n2) Add a prflx remote candidate of 1.1.1.1:5000 (from a STUN ping)\n3) Resolution completes, this function is called\n4) Should result in a single remote candidate, e.g. a.com:5000 only, not a.com:5000 and 1.1.1.1:5000.",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9eb66bd_ac2c3428",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1072,
      "author": {
        "id": 7275
      },
      "writtenOn": "2018-08-03T23:28:37Z",
      "side": 1,
      "message": "I looked more closely and I think \u003d\u003d will in fact work correctly here. That said, we should still unit test that this works as expected (since it is an important part of the mDNS candidate solution).",
      "parentUuid": "a6e04184_f5fa7484",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3256d73_8e9c68f5",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1072,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-08-09T06:33:01Z",
      "side": 1,
      "message": "In the test you describe I think we end up with two candidates because they have different types. I don\u0027t think that is a problem now, but will be for the mDNS work. Does that sound right to you?",
      "parentUuid": "d9eb66bd_ac2c3428",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4eda538b_2f2d9565",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1072,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-08-09T17:51:55Z",
      "side": 1,
      "message": "I think the failed tests show the filter given by conn-\u003eMaybeUpdatePeerReflexiveCandidate is not sufficient. For example, P2PTransportChannelResolverTest.HostnameAndPrflxCandidateDeduplicate failed because there was no candidate pair formed (no local candidate gathered in the fixture). The above check was skipped and we end up with two candidates. This could happen in practice if this endpoint only gathers relay candidates and the TURN transactions take long RTT. Adding a similar filter for all remote candidates remembered should solve the problem I think.",
      "parentUuid": "d3256d73_8e9c68f5",
      "revId": "16dc9b445b302f6d6ddd2213d8b0e6d43ae51d61",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}