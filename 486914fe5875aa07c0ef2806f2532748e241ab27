{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f290462a_3b010152",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-01T07:37:37Z",
      "side": 1,
      "message": "Could consider breaking this out to a separate file to simplify testing.",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 33
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22445409_2a4e26fb",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 19269
      },
      "writtenOn": "2024-08-05T06:05:41Z",
      "side": 1,
      "message": "I don\u0027t mind moving this to a separate file. However, given this class is internal to channel_send, is simple/small, and testing integration with channel_send seems more useful than testing AudioBitrateUsageAccountant behavior (which is rather trivial). Your thoughts?",
      "parentUuid": "f290462a_3b010152",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 33
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "940fe786_00f49120",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-05T08:41:32Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "22445409_2a4e26fb",
      "range": {
        "startLine": 60,
        "startChar": 6,
        "endLine": 60,
        "endChar": 33
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00f0921f_79a0fc7f",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-01T07:37:37Z",
      "side": 1,
      "message": "IMO, it\u0027s a bit easier to work with DataSize and TimeDelta instead of integers.",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 47
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "212862fa_2c46472f",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 74,
      "author": {
        "id": 19269
      },
      "writtenOn": "2024-08-05T06:05:41Z",
      "side": 1,
      "message": "Great idea. Changed accordingly.",
      "parentUuid": "00f0921f_79a0fc7f",
      "range": {
        "startLine": 74,
        "startChar": 21,
        "endLine": 74,
        "endChar": 47
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28c1bf0e_08ccbaa9",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-01T07:37:37Z",
      "side": 1,
      "message": "Won\u0027t this significantly overcount the bitrate during DTX? Even if the DTX packets are 1-2 byte payload, the headers are usually 50-60 bytes, so the bitrate calculated here would be \u003e20kbps while the actual bitrate is \u003c5kbps.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "600c37f3_b44620e7",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 19269
      },
      "writtenOn": "2024-08-05T06:05:41Z",
      "side": 1,
      "message": "With frame size \u003e\u003e 20 ms at low-bitrate, reported used bitrate during silence is actually 5kbps (per logcat print). Eventually in bitrate_allocator, the used bitrate is going to be compared to the allocated audio bitrate. The per-packet-overhead is subtracted from allocated audio bitrate to become payload bitrate, so we should add it back. Otherwise, allocated audio bitrate will always be higher than reported media bitrate (verified in logcat).\n\nAlso, it appears that redundancy would be accounted in the per-packet-overhead as well?",
      "parentUuid": "28c1bf0e_08ccbaa9",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8812c50c_246934d4",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-05T08:41:32Z",
      "side": 1,
      "message": "I agree that the overhead should be included here.\nWhen I test this with DTX, the estimated bitrate is \u003e20kbps (not 5kbps)?",
      "parentUuid": "600c37f3_b44620e7",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aeee7ad8_9b0af87a",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 19269
      },
      "writtenOn": "2024-08-05T22:20:59Z",
      "side": 1,
      "message": "Your test is probably using 20ms frames, in which case 72 bytes overhead @50Hz is above 20kbps. At lower bitrates, like 50/70 kbps bottleneck, Add10MsData would produce payload-size and duration sequence that looks like: 1 byte (120ms), 60 bytes (240ms), 1 byte (120ms), 66 bytes (360ms), 1 byte (120ms), 58 bytes (240ms)...\n\nWith 72 bytes of overhead, this equates to instantaneous rates of 4.86k, 4.4k, 4.86k, 3.07k, 4.86k, 4.33k. And the \"larger of two rates\" logic essentially puts it flat at 4.86k (besides filtering spurious silence frames during speech).",
      "parentUuid": "8812c50c_246934d4",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f35c2c0_d783f4cb",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-06T07:34:58Z",
      "side": 1,
      "message": "Alright, thanks for explaining. I don\u0027t have any immediate suggestion for how it can be improved, so let\u0027s start with this.",
      "parentUuid": "aeee7ad8_9b0af87a",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 85,
        "endChar": 58
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe9c484b_b6f965ce",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-08-01T07:37:37Z",
      "side": 1,
      "message": "How about storing this in AudioBitrateUsageAccountant instead? :)\n\n(Call GetBpsEstimate UpdateBpsEstimate or something and then have a separate const getter.)",
      "range": {
        "startLine": 293,
        "startChar": 2,
        "endLine": 293,
        "endChar": 20
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2eb697ce_d7fa1793",
        "filename": "audio/channel_send.cc",
        "patchSetId": 2
      },
      "lineNbr": 293,
      "author": {
        "id": 19269
      },
      "writtenOn": "2024-08-05T06:05:41Z",
      "side": 1,
      "message": "Great idea. Done.",
      "parentUuid": "fe9c484b_b6f965ce",
      "range": {
        "startLine": 293,
        "startChar": 2,
        "endLine": 293,
        "endChar": 20
      },
      "revId": "486914fe5875aa07c0ef2806f2532748e241ab27",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}