{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0c51d1ab_57f7e34f",
        "filename": "modules/video_coding/frame_scheduler.h",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 5527
      },
      "writtenOn": "2022-01-18T11:03:54Z",
      "side": 1,
      "message": "Could we avoid injecting the FrameBuffer into the scheduler and just let the buffer and scheduler live side by side, glued together by the video receive stream instead?",
      "range": {
        "startLine": 68,
        "startChar": 17,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "9092c7158ac7b70a91f9cd77261b4839c2d2a5b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff1bad02_01d265c8",
        "filename": "modules/video_coding/frame_scheduler.h",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-18T12:07:18Z",
      "side": 1,
      "message": "How do you mean? Something like splitting the scheduling parts from the \"which frame should be decoded next\" using a function like \"ScheduleFrameWithRtpTimestamp\" and moving the frame decision stuff to video receive stream (or FrameBufferProxy in the followups) is feasible but moves the complexity. \n\nWhat would be the advantages be doing it in video receive stream versus in here do you think? Would it be equally worth splitting FrameScheduler into two parts - one that does the task and timeout scheduling, and a second that manages the frame buffer?",
      "parentUuid": "0c51d1ab_57f7e34f",
      "range": {
        "startLine": 68,
        "startChar": 17,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "9092c7158ac7b70a91f9cd77261b4839c2d2a5b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5d3091f_d67dd619",
        "filename": "modules/video_coding/frame_scheduler.h",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 18444
      },
      "writtenOn": "2022-01-19T09:02:07Z",
      "side": 1,
      "message": "Taken offline.\n\nI will try out a solution where the frame buffer management will be moved into the VideoReceiveStream2 (FrameBufferProxy) and the scheduler will purely handle the timing of the decoding.",
      "parentUuid": "ff1bad02_01d265c8",
      "range": {
        "startLine": 68,
        "startChar": 17,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "9092c7158ac7b70a91f9cd77261b4839c2d2a5b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}