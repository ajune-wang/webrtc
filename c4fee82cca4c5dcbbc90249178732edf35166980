{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "22d93e17_deafc0e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5578
      },
      "writtenOn": "2023-11-16T12:04:41Z",
      "side": 1,
      "message": "ok, seems ready now.",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5a2fcbc8_95de2ab2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5578
      },
      "writtenOn": "2023-11-16T12:06:12Z",
      "side": 1,
      "message": "FYI socket_unittest and nat_unittest are changed to use ensure sockets are used on the \"correct\" thread. Notice that nat_unittest creat multiple threads and attach the socket server on different threads.",
      "parentUuid": "22d93e17_deafc0e6",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3aa95f5f_8a26ed9e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T06:34:43Z",
      "side": 1,
      "message": "A few points I don\u0027t understand here.",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df5c0cc0_dd179c1e",
        "filename": "rtc_base/nat_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T06:34:43Z",
      "side": 1,
      "message": "This is a hidden BlockingCall(). Can you use BlockingCall() instead?",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1965d134_e4fbdc37",
        "filename": "rtc_base/nat_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 5578
      },
      "writtenOn": "2023-11-17T09:21:09Z",
      "side": 1,
      "message": "ah, much better idea - thanks. Hope the explanations are more understandable now.",
      "parentUuid": "df5c0cc0_dd179c1e",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4efe28bb_bb6cdece",
        "filename": "rtc_base/nat_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 55,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T09:30:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1965d134_e4fbdc37",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3e98783_62494261",
        "filename": "rtc_base/nat_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T06:34:43Z",
      "side": 1,
      "message": "The changes in this file seem to be mostly that you run a lot of functions on th_int rather than on the main thread. Is this cleanup, or is there a reason why this is now necessary?",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abdaf714_05680c03",
        "filename": "rtc_base/nat_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 5578
      },
      "writtenOn": "2023-11-17T09:21:09Z",
      "side": 1,
      "message": "So it is a \"bug\" in the current code. When I start to use AsyncUDPSocket::NotifyPacketReceived I hit a DCHECK  in NotifyPacketReceived that  ensure NotifyReceivedPacket is called on the same thread as RegisterReceivedPacketCallback on the \"network thread\". This test is kind of complicated because it uses 3 threads. One main thread, and thr_int and thr_ext for two separate socket servers. \nSo this change is needed to ensure each client socket only access the socket on one thread. \nI have not tried to rewrite the test, only try to ensure each TestClient lives on the correct thread.",
      "parentUuid": "b3e98783_62494261",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a72e21d_1fd5148c",
        "filename": "rtc_base/nat_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T09:30:17Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "abdaf714_05680c03",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41bb9354_eaed17fd",
        "filename": "rtc_base/test_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T06:34:43Z",
      "side": 1,
      "message": "This seems a bit bizarre - you make an ownership-claiming pointer to something that was passed to you as a const reference. Is there a copy call in there that I\u0027m not seeing?",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "53eafe49_cee5d481",
        "filename": "rtc_base/test_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 5578
      },
      "writtenOn": "2023-11-17T09:21:09Z",
      "side": 1,
      "message": "yes, it is two different types, TestClient::Packet do make a copy of packet.payload(). Same as it used to take a copy of *buf.",
      "parentUuid": "41bb9354_eaed17fd",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfabec52_538138e5",
        "filename": "rtc_base/test_client.cc",
        "patchSetId": 5
      },
      "lineNbr": 155,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-17T09:30:17Z",
      "side": 1,
      "message": "My bad reading ... it\u0027s make_unique, not WrapUnique ... that implies a copy, of course.",
      "parentUuid": "53eafe49_cee5d481",
      "revId": "c4fee82cca4c5dcbbc90249178732edf35166980",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}