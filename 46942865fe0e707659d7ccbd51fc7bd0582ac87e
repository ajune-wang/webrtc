{
  "comments": [
    {
      "key": {
        "uuid": "234938c1_a1460ac1",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "Maybe add this logic as an custom Match method for RtpCodecParameters?",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2601e57a_2d6aae0f",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "234938c1_a1460ac1",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f68efd0_4f1c5cfa",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-08T20:59:11Z",
      "side": 1,
      "message": "I think you forgot to use MatchesCapability() here after adding it.",
      "parentUuid": "2601e57a_2d6aae0f",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5cd271c_a52de58c",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-09T15:26:35Z",
      "side": 1,
      "message": "This is a RtpCodecParameters, not a RtpCodecCapability.",
      "parentUuid": "6f68efd0_4f1c5cfa",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa80744b_d1d8a222",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-09T16:13:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a5cd271c_a52de58c",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f19ca43e_ab302654",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-16T16:46:41Z",
      "side": 1,
      "message": "Wait - isn\u0027t MatchesCapability for matching a Codec to a RtpCodecCapability, which is what\u0027s happening here? If you don\u0027t convert it to a RtpCodecParameter you could just do:\n\nreturn codec.MatchesCapability(codec_preference);",
      "parentUuid": "fa80744b_d1d8a222",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bae6e0ab_31290642",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-16T17:11:09Z",
      "side": 1,
      "message": "No, this is a different type, one is a webrtc::RtpCodecParameters, the function take a webrtc::RtpCodecCapability. They are similar, but different.\nIt could be possible to extract the common fields in another class and use that, but that\u0027d be out of scope for this.\n\nAlso, MatchCapacity will match RTX indiscriminately, which isn\u0027t wanted there.",
      "parentUuid": "f19ca43e_ab302654",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4ef9377_3810cf81",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 973,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-16T17:17:06Z",
      "side": 1,
      "message": "Okay sorry for the confusion.",
      "parentUuid": "bae6e0ab_31290642",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2423c16c_fe09ba0c",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "It looks like this will include RTX for every codec if one of them is in the codec_preferences list.\n\nDoes that satisfy the spec\u0027s explanation?\n\n    This method allows applications to disable the negotiation of specific codecs (including RTX/RED/FEC).",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e53f57_6b8a12fb",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Yes, it does.\nThe capabilities reported are just \"video/rtx\" with no specific codec. If it\u0027s present, then we should add a PT for each real codec entry.",
      "parentUuid": "2423c16c_fe09ba0c",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c095767c_5509dcac",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-09T16:13:10Z",
      "side": 1,
      "message": "Is there a test for this case? I see one for vpx \u0026 rtx, but not rtx for multiple codecs.",
      "parentUuid": "f4e53f57_6b8a12fb",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b59e974_641701c5",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-16T14:41:54Z",
      "side": 1,
      "message": "Updated that test to include VP8 and VP9 profiles to ensure we have RTX entries for each.",
      "parentUuid": "c095767c_5509dcac",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "196dfc00_45110dbd",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 990,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-16T16:46:41Z",
      "side": 1,
      "message": "Thanks for adding that!",
      "parentUuid": "6b59e974_641701c5",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "48f9e245_1aa8185b",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 992,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-27T17:58:11Z",
      "side": 1,
      "message": "Should this be a const?",
      "range": {
        "startLine": 992,
        "startChar": 38,
        "endLine": 992,
        "endChar": 41
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fe58477_615c3489",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 992,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48f9e245_1aa8185b",
      "range": {
        "startLine": 992,
        "startChar": 38,
        "endLine": 992,
        "endChar": 41
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b784af6e_531014a9",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 992,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-08T20:59:11Z",
      "side": 1,
      "message": "I meant putting a \"apt\" const with a comment at the top of the file. This way a new reader, like me ;), wouldn\u0027t have to search the internet to understand the significance of \"apt\"",
      "parentUuid": "8fe58477_615c3489",
      "range": {
        "startLine": 992,
        "startChar": 38,
        "endLine": 992,
        "endChar": 41
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d7a432e_e48cc0ba",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 992,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-09T15:26:35Z",
      "side": 1,
      "message": "Ah, I misunderstood you. Done",
      "parentUuid": "b784af6e_531014a9",
      "range": {
        "startLine": 992,
        "startChar": 38,
        "endLine": 992,
        "endChar": 41
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12228fba_9b465e83",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 2063,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-27T17:58:11Z",
      "side": 1,
      "message": "Why are the audio_codecs being used, and not the filtered_codecs (after filtering below)? Wouldn\u0027t this change the codecs that you\u0027re filtering/preferring?",
      "range": {
        "startLine": 2063,
        "startChar": 53,
        "endLine": 2063,
        "endChar": 65
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65cd72f6_927a27d6",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 2063,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "It should actually be supported_audio_codecs.",
      "parentUuid": "12228fba_9b465e83",
      "range": {
        "startLine": 2063,
        "startChar": 53,
        "endLine": 2063,
        "endChar": 65
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c1a052_c4590b56",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 2063,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-08T20:59:11Z",
      "side": 1,
      "message": "Could you explain why? I want to be sure here and the available offered codecs is confusing to follow (explained below).\n\nIf you look below the filtered_codecs are created from two parts:\n1) Added from the current content (SDP) if they exist in audio_codecs\n2) Added from supported_codecs if they exist in audio_codecs\n\nIf you are just taking from supported_audio_codecs you won\u0027t be including the codecs that come from the current description. Are you doing this on purpose? Otherwise I would suggest instead of doing if/else you can just use the filtered_codecs instead of supported_codecs.",
      "parentUuid": "65cd72f6_927a27d6",
      "range": {
        "startLine": 2063,
        "startChar": 53,
        "endLine": 2063,
        "endChar": 65
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb4665e0_05e765a5",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 2063,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-09T15:26:35Z",
      "side": 1,
      "message": "Yes, that is literally the point of setCodecPreferences, to chose what codecs you want to offer or receive. Those are filtered after the codec preferences.\n\nIt is only incompatible in a sense with SDP munging of local descriptions for codecs, but that\u0027s not supported by the standard. If you want to munge codecs, don\u0027t use setCodecPreferences as they will override anything that might have been there before.",
      "parentUuid": "31c1a052_c4590b56",
      "range": {
        "startLine": 2063,
        "startChar": 53,
        "endLine": 2063,
        "endChar": 65
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aec3634f_b47e7025",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 2063,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-04-09T16:13:10Z",
      "side": 1,
      "message": "Makes sense, thanks for the explanation. Could you add a comment about this in the code to clarify?",
      "parentUuid": "eb4665e0_05e765a5",
      "range": {
        "startLine": 2063,
        "startChar": 53,
        "endLine": 2063,
        "endChar": 65
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35a2ec5e_105cdf1d",
        "filename": "pc/media_session.cc",
        "patchSetId": 1
      },
      "lineNbr": 2063,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-16T14:41:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aec3634f_b47e7025",
      "range": {
        "startLine": 2063,
        "startChar": 53,
        "endLine": 2063,
        "endChar": 65
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e50f7be1_c796f94e",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "nit: absl::c_any_of(capabilities, \u003clambda\u003e)",
      "range": {
        "startLine": 163,
        "startChar": 6,
        "endLine": 163,
        "endChar": 17
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a29449c1_23955460",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 163,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e50f7be1_c796f94e",
      "range": {
        "startLine": 163,
        "startChar": 6,
        "endLine": 163,
        "endChar": 17
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "165c59f6_3265cd5d",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "nit: absl::c_copy_if(codecs, \u003cback inserter\u003e)",
      "range": {
        "startLine": 172,
        "startChar": 2,
        "endLine": 172,
        "endChar": 14
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4c10c53_b764ae3c",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 172,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "165c59f6_3265cd5d",
      "range": {
        "startLine": 172,
        "startChar": 2,
        "endLine": 172,
        "endChar": 14
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7518132_fb128e82",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "nit: absl::c_equal(capabilities, codecs_no_rtx, \u003clambda\u003e)\n\nCan then also remove the size check since c_equal will do that",
      "range": {
        "startLine": 185,
        "startChar": 9,
        "endLine": 185,
        "endChar": 19
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f9fd714_3523b56d",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7518132_fb128e82",
      "range": {
        "startLine": 185,
        "startChar": 9,
        "endLine": 185,
        "endChar": 19
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49cdddb0_d03e0441",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4401,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "The PeerConnection integration tests are intended to test everything end to end including media flow. It doesn\u0027t look like these tests need all that capabilities, so I think these would be better as unit tests.\n\nI recommend moving some of the tests that verify the SDP to media_session_unittest.cc and the ones that verify the behavior of SetCodecPreferences (e.g., error conditions) to peer_connection_media_unittests. Both of those also have infrastructure to change the MediaEngine\u0027s offered audio/video codecs.",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f61d65d_00cf4916",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4401,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "I moved the error cases to peer_connection_media_unittests as suggested, but I\u0027m not sure that writing the other tests for media_session_unittest would actually improve the coverage or be simpler and kept them there.\nAn integration test shouldn\u0027t necessarily have to check for media flowing, but for all the APIs working together too, and making sure we have \"real\" tests and not just testing the mocks.\nIs this acceptable? Note that there will be about the same tests in WPT for Chrome when the feature lands there.",
      "parentUuid": "49cdddb0_d03e0441",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8139377a_6ba73ac7",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4421,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "I\u0027d like if each of these blocks was written as its own TEST_F case.",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91f526c1_0802dd62",
        "filename": "pc/peer_connection_integrationtest.cc",
        "patchSetId": 1
      },
      "lineNbr": 4421,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8139377a_6ba73ac7",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd73cc38_97d9b2f7",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "DCHECK(unified_plan_)",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6275eee8_a4ba0b78",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 232,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd73cc38_97d9b2f7",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "235b159e_93373caf",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-03-26T18:15:24Z",
      "side": 1,
      "message": "I\u0027m not sure this is the right approach. Given that the direction can change later, I would expect the preferences to be stored with respect to the union of the send and receive codecs. That\u0027s also how I interpret the spec algorithm:\n\n    The codecs sequence passed into setCodecPreferences can only contain codecs that are returned by RTCRtpSender.getCapabilities(kind) or RTCRtpReceiver.getCapabilities(kind), where kind is the kind of the RTCRtpTransceiver on which the method is called.",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eea50f67_78d3755e",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-27T17:58:11Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "235b159e_93373caf",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "781775b3_09041087",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "I just store the preferences after removing duplicates and validating them (there should be at least 1 send and 1 recv codec) and proper directional filtering happening on SDP generation as we actually decided in Lyon.",
      "parentUuid": "eea50f67_78d3755e",
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c85bcb12_17486ea8",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-27T17:58:11Z",
      "side": 1,
      "message": "Would c_all_of without the double negative be easier to interpret?",
      "range": {
        "startLine": 334,
        "startChar": 13,
        "endLine": 334,
        "endChar": 21
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddb3820f_f6e21cec",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 334,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c85bcb12_17486ea8",
      "range": {
        "startLine": 334,
        "startChar": 13,
        "endLine": 334,
        "endChar": 21
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "341a9341_cc6dd6b1",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-03-27T17:58:11Z",
      "side": 1,
      "message": "The spec mentions checking for an empty set of the intersection:\nIf the intersection between codecs and RTCRtpSender.getCapabilities(kind).codecs or the intersection between codecs and RTCRtpReceiver.getCapabilities(kind).codecs only contains RTX, RED or FEC codecs or is an empty set, throw InvalidModificationError.\n\nI was looking through your code trying to find this and then realized, it\u0027s a spec issue :).\n\nI think the \"empty set\" part here is invalid. It can only be an empty set in two cases:\n1) The given preferred codecs is empty (this is handled by step 3.)\n2) The preferred codec is not included in the codecCapabilities (this is handled in step 8.)\n\nI think you can file a spec issue to remove this if you\u0027d like.",
      "range": {
        "startLine": 344,
        "startChar": 2,
        "endLine": 344,
        "endChar": 20
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adab3153_1055385d",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 344,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-04-04T18:53:26Z",
      "side": 1,
      "message": "This just means there should be at least 1 real send and 1 real recv codec. This should be handled properly now.",
      "parentUuid": "341a9341_cc6dd6b1",
      "range": {
        "startLine": 344,
        "startChar": 2,
        "endLine": 344,
        "endChar": 20
      },
      "revId": "46942865fe0e707659d7ccbd51fc7bd0582ac87e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}