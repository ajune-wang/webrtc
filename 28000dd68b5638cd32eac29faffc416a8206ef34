{
  "comments": [
    {
      "key": {
        "uuid": "bd8bfa97_7ab5c2d4",
        "filename": "system_wrappers/source/field_trial.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-12-05T12:31:53Z",
      "side": 1,
      "message": "Any good reason to not have an unconditional\n\nRTC_DCHECK(FieldTrialsStringIsValidInternal(trials_string)) \n\n?",
      "range": {
        "startLine": 90,
        "startChar": 6,
        "endLine": 90,
        "endChar": 16
      },
      "revId": "28000dd68b5638cd32eac29faffc416a8206ef34",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e08e4cf1_3e174a8d",
        "filename": "system_wrappers/source/field_trial.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 8385
      },
      "writtenOn": "2019-12-05T12:53:36Z",
      "side": 1,
      "message": "Yes. The reason is I still want to have the tests under\nTEST(FieldTrialMergingTest, DiscardsBadInput) {...}\ntesting the output, and not just RTC_EXPECT_DEATH",
      "parentUuid": "bd8bfa97_7ab5c2d4",
      "range": {
        "startLine": 90,
        "startChar": 6,
        "endLine": 90,
        "endChar": 16
      },
      "revId": "28000dd68b5638cd32eac29faffc416a8206ef34",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f34df10f_13e086b8",
        "filename": "system_wrappers/source/field_trial.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-12-05T13:03:11Z",
      "side": 1,
      "message": "Hmm. If that is behavior that is important in production, then it shouldn\u0027t trigger a DCHECK. One reason for that, is precisely to make it straightforward to write tests for the behavior.\n\nMy preference would be to have an unconditional DCHECK here, in effect requiring applications to only ever call MergeFieldTrialStrings with valid input strings.\n\nApplications that want some more sophisticated error handling for invalid strings can then call FieldTrialsStringIsValidInternal themselves and do something other than calling MergeFieldTrialStrings if one of the inputs are invalid.",
      "parentUuid": "e08e4cf1_3e174a8d",
      "range": {
        "startLine": 90,
        "startChar": 6,
        "endLine": 90,
        "endChar": 16
      },
      "revId": "28000dd68b5638cd32eac29faffc416a8206ef34",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d8bba4_6fc88543",
        "filename": "system_wrappers/source/field_trial.cc",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 8385
      },
      "writtenOn": "2019-12-05T13:37:14Z",
      "side": 1,
      "message": "OK, removed the TEST(FieldTrialMergingTest, DiscardsBadInput) and added into doctstring that inputs must be valid. Simply for the purpose of defensive programming I will keep discarding bad input though.",
      "parentUuid": "f34df10f_13e086b8",
      "range": {
        "startLine": 90,
        "startChar": 6,
        "endLine": 90,
        "endChar": 16
      },
      "revId": "28000dd68b5638cd32eac29faffc416a8206ef34",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}