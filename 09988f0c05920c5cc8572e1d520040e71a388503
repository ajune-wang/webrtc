{
  "comments": [
    {
      "key": {
        "uuid": "d11d8025_369b3782",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-08-03T16:23:17Z",
      "side": 1,
      "message": "nit: time_delta?",
      "range": {
        "startLine": 66,
        "startChar": 11,
        "endLine": 66,
        "endChar": 15
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75fdb06f_a1248cc9",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-08-03T16:23:17Z",
      "side": 1,
      "message": "How about using seconds since it\u0027s the SI unit for time? .seconds\u003cdouble\u003e() ensures that you won\u0027t lose precision.",
      "range": {
        "startLine": 66,
        "startChar": 70,
        "endLine": 66,
        "endChar": 72
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21e237df_1ea1fb9b",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-08-09T13:38:25Z",
      "side": 1,
      "message": "Actually, it did lost some precision because of division by 1000.",
      "parentUuid": "75fdb06f_a1248cc9",
      "range": {
        "startLine": 66,
        "startChar": 70,
        "endLine": 66,
        "endChar": 72
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d256048b_1aa676ad",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-08-09T13:38:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d11d8025_369b3782",
      "range": {
        "startLine": 66,
        "startChar": 11,
        "endLine": 66,
        "endChar": 15
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cae49d3f_2dc41d34",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-08-09T13:40:57Z",
      "side": 1,
      "message": "If you are using the \u003cdouble\u003e method it should not lose precision.",
      "parentUuid": "21e237df_1ea1fb9b",
      "range": {
        "startLine": 66,
        "startChar": 70,
        "endLine": 66,
        "endChar": 72
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d3b8412_9f2088c1",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-08-09T14:04:42Z",
      "side": 1,
      "message": "It loses when converts us to seconds because us/1000 is a infinite fractional number in binary system. My tests failed because of it.",
      "parentUuid": "cae49d3f_2dc41d34",
      "range": {
        "startLine": 66,
        "startChar": 70,
        "endLine": 66,
        "endChar": 72
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0cc316d7_8da3c466",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 66,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-08-09T14:11:53Z",
      "side": 1,
      "message": "Ah, I see. Can you update the tests to be less sensitive? In general it\u0027s good to avoid testing floating point values for exact values. I think we have some helper macros for this. This also prevents the tests from failing due to future refactoring of the code that could conceivably introduce a similar error.",
      "parentUuid": "1d3b8412_9f2088c1",
      "range": {
        "startLine": 66,
        "startChar": 70,
        "endLine": 66,
        "endChar": 72
      },
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "504066e0_2fdc3c9a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 70,
      "author": {
        "id": 7332
      },
      "writtenOn": "2018-08-03T16:49:15Z",
      "side": 1,
      "message": "This way of computing variance is notoriously unstable. So you should either explain why it is good enough here (and add test with real life samples) or switch to a more stable method.\n\nCf Welford, Knuth or https://www.johndcook.com/blog/2008/10/20/comparing-two-ways-to-fit-a-line-to-data/",
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8e1e750_b594b71d",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 70,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-08-09T13:38:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "504066e0_2fdc3c9a",
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62c8a9bf_2e8255d9",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 7332
      },
      "writtenOn": "2018-08-03T15:19:32Z",
      "side": 1,
      "message": "What if size() \u003e 1 but receive_time_of_last_packet \u003d\u003d receive_time_of_first_packet?",
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc87aae0_65a7acd0",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 14
      },
      "lineNbr": 102,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-08-09T13:38:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "62c8a9bf_2e8255d9",
      "revId": "09988f0c05920c5cc8572e1d520040e71a388503",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}