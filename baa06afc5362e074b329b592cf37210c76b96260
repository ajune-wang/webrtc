{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "86bbeba9_9401bca2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "Looks good, but main question is about the std::vectors.",
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33505504_edcae426",
        "filename": "modules/rtp_rtcp/source/flexfec_header_reader_writer.cc",
        "patchSetId": 4
      },
      "lineNbr": 198,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "I think it might be cleaner to assign instead:\n fec_packet-\u003eprotected_ssrc \u003d {protected_ssrc};",
      "range": {
        "startLine": 198,
        "startChar": 30,
        "endLine": 198,
        "endChar": 39
      },
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbbaa1c8_b84b63f8",
        "filename": "modules/rtp_rtcp/source/flexfec_header_reader_writer_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 145,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "Since this is a void function called directly from the TESTs, I\u0027d ASSERT_EQ here.\n\nhttp://google.github.io/googletest/advanced.html#assertion-placement",
      "range": {
        "startLine": 145,
        "startChar": 2,
        "endLine": 145,
        "endChar": 11
      },
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f16e1cb5_26d8b97d",
        "filename": "modules/rtp_rtcp/source/forward_error_correction.cc",
        "patchSetId": 4
      },
      "lineNbr": 410,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "Let\u0027s make these CHECKs instead.",
      "range": {
        "startLine": 410,
        "startChar": 6,
        "endLine": 410,
        "endChar": 12
      },
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc18ca55_11cb69b7",
        "filename": "modules/rtp_rtcp/source/forward_error_correction.h",
        "patchSetId": 4
      },
      "lineNbr": 137,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "Is there a limit on how long these vectors can be, and if so, should we use https://github.com/abseil/abseil-cpp/blob/master/absl/container/inlined_vector.h instead?",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 15
      },
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f507b50f_8c4b4234",
        "filename": "modules/rtp_rtcp/source/ulpfec_header_reader_writer.cc",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "Same here.",
      "range": {
        "startLine": 74,
        "startChar": 30,
        "endLine": 74,
        "endChar": 39
      },
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feb91c11_902d04b9",
        "filename": "modules/rtp_rtcp/source/ulpfec_header_reader_writer_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 82,
      "author": {
        "id": 5023
      },
      "writtenOn": "2023-04-25T04:27:24Z",
      "side": 1,
      "message": "Same here",
      "range": {
        "startLine": 82,
        "startChar": 2,
        "endLine": 82,
        "endChar": 11
      },
      "revId": "baa06afc5362e074b329b592cf37210c76b96260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}