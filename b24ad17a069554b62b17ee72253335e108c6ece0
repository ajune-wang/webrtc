{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7282b98e_25ea8ae2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5122
      },
      "writtenOn": "2020-11-27T15:01:49Z",
      "side": 1,
      "message": "Hi Per,\nCould you PTAL?\nAlessio",
      "revId": "b24ad17a069554b62b17ee72253335e108c6ece0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3906f95e_844e75bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-12-03T11:21:23Z",
      "side": 1,
      "message": "Thanks for the CL!",
      "revId": "b24ad17a069554b62b17ee72253335e108c6ece0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "002302d8_66932cf7",
        "filename": "modules/audio_processing/agc2/rnn_vad/rnn_gru.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-12-03T11:21:23Z",
      "side": 1,
      "message": "Please explicitly add the type here since it is not obvious for the reader.\nAlso, in more places below",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 6
      },
      "revId": "b24ad17a069554b62b17ee72253335e108c6ece0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b5b001d_8fd75dda",
        "filename": "modules/audio_processing/agc2/rnn_vad/rnn_gru.cc",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 5122
      },
      "writtenOn": "2020-12-03T16:29:39Z",
      "side": 1,
      "message": "if you have a strong opinion on that, I\u0027ll change\nbut my view is that auto fits perfectly here:\n- easy to guess the return type of `subview()` for an `ArrayView` variable\n- the type for bias, weigths, recurrent_weights is just a bunch of lines away (everything packed into a bit more than 20 lines)\nWDYT?",
      "parentUuid": "002302d8_66932cf7",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 98,
        "endChar": 6
      },
      "revId": "b24ad17a069554b62b17ee72253335e108c6ece0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4292dece_17ff2a43",
        "filename": "modules/audio_processing/agc2/rnn_vad/test_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-12-03T11:21:23Z",
      "side": 1,
      "message": "I would prefer not to have this using statement. How these methods work is so tied to the specifics of the type and abstracting that away to a place far away from the code using it makes the code more difficult to read.",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 80
      },
      "revId": "b24ad17a069554b62b17ee72253335e108c6ece0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b91e1a89_3b5929b5",
        "filename": "modules/audio_processing/agc2/rnn_vad/test_utils.cc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-12-03T11:21:23Z",
      "side": 1,
      "message": "I don\u0027t see how this wrapping of data_length() adds any value.\nWhy not instead just return the unique pointer, and have the caller call data_length() directly instead of accessing the second item in the pair?",
      "range": {
        "startLine": 79,
        "startChar": 9,
        "endLine": 79,
        "endChar": 46
      },
      "revId": "b24ad17a069554b62b17ee72253335e108c6ece0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}