{
  "comments": [
    {
      "key": {
        "uuid": "d807883c_731bab7d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "Commit message could be clearer.\n\nFor example, add \"for the PCC congestion control algorithm.\"\nAlso add a couple of sentences explaining what a monitor interval is and what it is used for in the algorithm.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7cbe46e5_b3a8edad",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "nit: IsFeedbackCollectionDone?",
      "range": {
        "startLine": 64,
        "startChar": 22,
        "endLine": 64,
        "endChar": 46
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "797320bd_efd22b4a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7cbe46e5_b3a8edad",
      "range": {
        "startLine": 64,
        "startChar": 22,
        "endLine": 64,
        "endChar": 46
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "181d3554_80d489a9",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "It\u0027s usually easier to read if the variables are named the same as their getter functions. I suggest renaming to feedback_collection_done_.",
      "range": {
        "startLine": 65,
        "startChar": 9,
        "endLine": 65,
        "endChar": 31
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0764a319_8a2ea870",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "181d3554_80d489a9",
      "range": {
        "startLine": 65,
        "startChar": 9,
        "endLine": 65,
        "endChar": 31
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c15f9d7_429fa753",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "nit: I don\u0027t personally care, but usually we use () in the initializer list, you might want to do that just to avoid annoying people who like consistency.",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9fd69a6_58940806",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0c15f9d7_429fa753",
      "range": {
        "startLine": 101,
        "startChar": 22,
        "endLine": 101,
        "endChar": 23
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68b6bcc7_f9c1af48",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "I wonder if there could be an issue with missing feedback here?\n\nWhat happens if one RTCP feedback message contains feedbacks about packets that belong to different monitor intervals? (E.g if packets 1-10 belong to MI 1 and packets 11-20 belong to MI 2, but we first receive feedbacks covering for packets 1-5, then 6-15, then 16-20).\n\nWhat happens if feedback messages are reordered on the network? (E.g if packets 1-10 belong to MI 1 and packets 11-20 belong to MI 2, but we first receive feedback for packets 11-20 and then for packets 1-10.) Imo, it would be reasonable to count all packets from the first interval as lost. However, I worry that they might be counted as part of the second interval.",
      "range": {
        "startLine": 151,
        "startChar": 6,
        "endLine": 152,
        "endChar": 26
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7852a16f_5cf453d1",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "68b6bcc7_f9c1af48",
      "range": {
        "startLine": 151,
        "startChar": 6,
        "endLine": 152,
        "endChar": 26
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e3f78ad_b99e53be",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "I dont understand this function. complete_feedback_mi_number_ \u003e\u003d monitor_intervals_.size() should be equivalent to IsFeedbackCollectingDone(), no? So the function is supposed to return true precisely if the timeout has elapsed without collecting all the feedback? If so, please  add a comment.",
      "range": {
        "startLine": 168,
        "startChar": 19,
        "endLine": 168,
        "endChar": 35
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "757c6028_4ef22b4e",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "IsFeedbackCollectingDone returns true only if last monitor_interval has finished to collect feedback, while IsTimeoutExpited should return true if for some (not necessary the last) monitor interval we didn\u0027t get complete feedback during special amount of time. In my implementation, monitor_intervals_ vector changes size through time that\u0027s why complete_feedback_mi_number_ \u003e\u003d monitor_intervals_.size() is not equivalent to IsFeedbackCollectingDone.",
      "parentUuid": "6e3f78ad_b99e53be",
      "range": {
        "startLine": 168,
        "startChar": 19,
        "endLine": 168,
        "endChar": 35
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97d95f8a_88691a2a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Note that this pointer is only valid until the monitor_intervals_ vector is modified. std::vector does not guarantee pointer persistence. std::deque does.",
      "range": {
        "startLine": 185,
        "startChar": 10,
        "endLine": 185,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32c89769_117a8fe6",
        "filename": "modules/congestion_controller/pcc/monitor_interval.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97d95f8a_88691a2a",
      "range": {
        "startLine": 185,
        "startChar": 10,
        "endLine": 185,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6617e386_9d9c23a6",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "It should be sufficient to include vector (and maybe cstddef for size_t) in the header file.",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "327d3c70_1cda3c39",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6617e386_9d9c23a6",
      "range": {
        "startLine": 14,
        "startChar": 10,
        "endLine": 14,
        "endChar": 17
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d99822e_3c80db98",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Please add a comment with a short description of this class?",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c055f5e4_28272c7e",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d99822e_3c80db98",
      "range": {
        "startLine": 28,
        "startChar": 6,
        "endLine": 28,
        "endChar": 21
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abab2290_1010acf6",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Not sure what it is trying to say, try to clarify the grammar.",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 37,
        "endChar": 49
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0882769c_c093275e",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "abab2290_1010acf6",
      "range": {
        "startLine": 36,
        "startChar": 5,
        "endLine": 37,
        "endChar": 49
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d8499f3_ab35d80b",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "It would be nice if the name could hint about the return value as well.",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 24
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7238283_608e0d95",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d8499f3_ab35d80b",
      "range": {
        "startLine": 38,
        "startChar": 7,
        "endLine": 38,
        "endChar": 24
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba30c749_f83e5951",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "There\u0027s a lot of getters and setters. I don\u0027t know how it is used. But maybe it would make sense to use a struct for some/all of the data instead?",
      "range": {
        "startLine": 42,
        "startChar": 12,
        "endLine": 42,
        "endChar": 31
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4686573d_9bf0b915",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba30c749_f83e5951",
      "range": {
        "startLine": 42,
        "startChar": 12,
        "endLine": 42,
        "endChar": 31
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "630ccd64_bde2662a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "nit: s/were/was",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 23
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7c9b320_a85c876c",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "The difference between \"bitrate used to send packets\" and \"actual bitrate\" isn\u0027t clear unless you have previous experience with related code. How about a reformulation like\n\"Target bitrate used to generate and pace the outgoing packets. Actually sent bitrate might not match the target exactly.\"",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 69
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da60486c_b25e5afa",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "630ccd64_bde2662a",
      "range": {
        "startLine": 51,
        "startChar": 19,
        "endLine": 51,
        "endChar": 23
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7a40c42_c38dfdfc",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f7c9b320_a85c876c",
      "range": {
        "startLine": 51,
        "startChar": 46,
        "endLine": 51,
        "endChar": 69
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2593a39b_8a8d5e19",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 7332
      },
      "writtenOn": "2018-07-10T12:28:04Z",
      "side": 1,
      "message": "What about returning a const reference? (to avoid superfluous copies of the vector when no race condition is to be feared).\nEven better: don\u0027t provide any getter on these vectors. Cf comment in https://webrtc-review.googlesource.com/c/src/+/87146.",
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de232bad_34086972",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 58,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2593a39b_8a8d5e19",
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ad7cba7_11d82fec",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "Please add a comment for this class. E.g. \"A MonitorBlock represents a sequence of bitrates to be tested. In the typical case there will be exactly two bitrates; (1-epsilon)*r and (1+epsilon)*r where r is the best bitrate found so far.\"",
      "range": {
        "startLine": 66,
        "startChar": 6,
        "endLine": 66,
        "endChar": 18
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85ed6ecd_f41ce546",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "MonitorBlock has been deleted.",
      "parentUuid": "0ad7cba7_11d82fec",
      "range": {
        "startLine": 66,
        "startChar": 6,
        "endLine": 66,
        "endChar": 18
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9246fcfe_b0f1ca15",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Is this meant to apply for the constructor?",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 54
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e4708b5_4c13fa24",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "nit: s/immideatly/immediately/",
      "range": {
        "startLine": 68,
        "startChar": 43,
        "endLine": 68,
        "endChar": 53
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "644f5723_cc939c96",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e4708b5_4c13fa24",
      "range": {
        "startLine": 68,
        "startChar": 43,
        "endLine": 68,
        "endChar": 53
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e323eaf2_56f9e813",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "MonitorBlock was deleted.",
      "parentUuid": "9246fcfe_b0f1ca15",
      "range": {
        "startLine": 68,
        "startChar": 0,
        "endLine": 68,
        "endChar": 54
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63fd7915_7c208822",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Nit: Commented code.",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39d5dc03_6092d924",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63fd7915_7c208822",
      "range": {
        "startLine": 76,
        "startChar": 0,
        "endLine": 76,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab9c6a0e_c3a42ae6",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "If this could be split into a state updating void function and a const getter it would be nice. That would make it easier to name the function.\n\nA good name now would be something like: UpdateTimeAndGetSendingRate\n\nSplit it and it becomes: UpdateCurrentTime and GetSendingRate",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e1dc7cc_6b50349c",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab9c6a0e_c3a42ae6",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00f5cc3e_74ec78ee",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Spelling",
      "range": {
        "startLine": 80,
        "startChar": 11,
        "endLine": 80,
        "endChar": 27
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59c6abb5_5100566d",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00f5cc3e_74ec78ee",
      "range": {
        "startLine": 80,
        "startChar": 11,
        "endLine": 80,
        "endChar": 27
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42fdcabb_24b7c158",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "Does this function have to be public? Where is it called?",
      "range": {
        "startLine": 83,
        "startChar": 7,
        "endLine": 83,
        "endChar": 20
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01c803a7_a161fbcb",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42fdcabb_24b7c158",
      "range": {
        "startLine": 83,
        "startChar": 7,
        "endLine": 83,
        "endChar": 20
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e05d56da_7e8e2811",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "It is not clear what size of a monitor block means. Maybe rename the function to make it clear that it returns the number of bitrates to be tested?",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca18c7a_b6711c84",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e05d56da_7e8e2811",
      "range": {
        "startLine": 86,
        "startChar": 9,
        "endLine": 86,
        "endChar": 13
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82f05762_7e54b840",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "How does the caller know the lifetime of the returned MonitorInterval? In general returning raw pointers is good to avoid. If it\u0027s not possible, add a comment describing proper usage.",
      "range": {
        "startLine": 88,
        "startChar": 25,
        "endLine": 88,
        "endChar": 43
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b849c3b4_1d45ce3a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82f05762_7e54b840",
      "range": {
        "startLine": 88,
        "startChar": 25,
        "endLine": 88,
        "endChar": 43
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac79afc1_0ed48214",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "It is not clear to me what last_known_time_ represents. Could we get rid of it by passing in the current time to GetTargetBitrate and IsTimeoutExpired?",
      "range": {
        "startLine": 91,
        "startChar": 12,
        "endLine": 91,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06730b24_5b5e3794",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 91,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac79afc1_0ed48214",
      "range": {
        "startLine": 91,
        "startChar": 12,
        "endLine": 91,
        "endChar": 28
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d15619d3_0bb6258a",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "\"called r\"?",
      "range": {
        "startLine": 95,
        "startChar": 35,
        "endLine": 95,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4669a56_d06e08e2",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d15619d3_0bb6258a",
      "range": {
        "startLine": 95,
        "startChar": 35,
        "endLine": 95,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "754a0c1d_da813453",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-07-09T10:30:38Z",
      "side": 1,
      "message": "Try to avoid abbreviations if possible. It\u0027s usually easier to skim read code with fewer abbreviations.",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 14
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db4b43bb_47645783",
        "filename": "modules/congestion_controller/pcc/monitor_interval.h",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "754a0c1d_da813453",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 14
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7f5f732_9266c60c",
        "filename": "modules/congestion_controller/pcc/monitor_interval_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-07-10T23:06:23Z",
      "side": 1,
      "message": "Monitor",
      "range": {
        "startLine": 186,
        "startChar": 38,
        "endLine": 186,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6bab2339_ea43728a",
        "filename": "modules/congestion_controller/pcc/monitor_interval_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 7296
      },
      "writtenOn": "2018-07-18T14:19:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b7f5f732_9266c60c",
      "range": {
        "startLine": 186,
        "startChar": 38,
        "endLine": 186,
        "endChar": 45
      },
      "revId": "e16cbf4a9d009a848f0e21257430027e6798266c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}