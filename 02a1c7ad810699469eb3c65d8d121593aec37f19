{
  "comments": [
    {
      "key": {
        "uuid": "8c814e01_350ba90f",
        "filename": "video/buffered_frame_decryptor.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-03-29T09:58:04Z",
      "side": 1,
      "message": "I think we need to stash the frames here? Otherwise we will lose the frames that come in between the stream is set up and when we get the FrameDecryptor, meaning that we need to issue a keyframe request.",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 31
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b0bb390_4e865d74",
        "filename": "video/buffered_frame_decryptor.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-03-29T14:52:40Z",
      "side": 1,
      "message": "By starting to stash here, we should get rid of this hack at the same time:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/call/call.cc?l\u003d1415\u0026rcl\u003db118d428499844749df6dd28aa3dbc8d5e1484fe\nCan you do that in the same CL?\n\nBasically, the end result would be that we use the WebRtcVideoChannel buffer to handle the case of late signaling, and the buffer here to handle the case of late FrameDecryptor/late key. That seems like a good separation.",
      "parentUuid": "8c814e01_350ba90f",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 31
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e649afae_0a4080b4",
        "filename": "video/buffered_frame_decryptor.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 6930
      },
      "writtenOn": "2019-03-29T22:42:19Z",
      "side": 1,
      "message": "Done, I also removed the stashing code from call.",
      "parentUuid": "4b0bb390_4e865d74",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 31
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4d51024_a516a530",
        "filename": "video/buffered_frame_decryptor.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-04-01T11:38:31Z",
      "side": 1,
      "message": "Thanks. \n\nWe should also change this line:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/media/engine/webrtc_video_engine.cc?l\u003d2530\u0026rcl\u003d89cd0c045035b56d570afa2671faf7151d01d2a0\nto always backfill on recreations.",
      "parentUuid": "e649afae_0a4080b4",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 31
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b569f1c2_7ccd5a81",
        "filename": "video/buffered_frame_decryptor.cc",
        "patchSetId": 1
      },
      "lineNbr": 62,
      "author": {
        "id": 5023
      },
      "writtenOn": "2019-04-02T09:25:42Z",
      "side": 1,
      "message": "Would be good to do that change in this CL :)",
      "parentUuid": "e4d51024_a516a530",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 31
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24e4f6c8_6ec98f04",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-03-29T12:05:26Z",
      "side": 1,
      "message": "This should be something like:\n\n    if (config_.crypto_options.sframe.require_frame_encryption) {\n      buffered_frame_decryptor_ \u003d\n          absl::make_unique\u003cBufferedFrameDecryptor\u003e(this, this);\n\n      if (frame_decryptor)\n        buffered_frame_decryptor_-\u003eSetFrameDecryptor(std::move(frame_decryptor));\n    }\n\nright?",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 183,
        "endChar": 3
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "289e9c53_b0a8284d",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 183,
      "author": {
        "id": 6930
      },
      "writtenOn": "2019-03-29T22:42:19Z",
      "side": 1,
      "message": "Yep this is a cleaner design. Fixed.",
      "parentUuid": "24e4f6c8_6ec98f04",
      "range": {
        "startLine": 178,
        "startChar": 0,
        "endLine": 183,
        "endChar": 3
      },
      "revId": "02a1c7ad810699469eb3c65d8d121593aec37f19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}