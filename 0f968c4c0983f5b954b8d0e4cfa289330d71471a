{
  "comments": [
    {
      "key": {
        "uuid": "7b49b9e8_34bdea2c",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 4
      },
      "lineNbr": 823,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-10-11T14:49:29Z",
      "side": 1,
      "message": "Although this is functionally correct, I would like to let it read easily too, say\n\npacket_loss_rate_slope_, max_packet_loss_rate_, min_packet_loss_rate_ should better be wrapped into a new_packet_loss_optimizer, and not be used if use_new_packet_loss_optimization_ is false.\n\nOtherwise, it feels to me that the old optimizer and new optimizer are too much coupled.",
      "range": {
        "startLine": 818,
        "startChar": 0,
        "endLine": 823,
        "endChar": 55
      },
      "revId": "0f968c4c0983f5b954b8d0e4cfa289330d71471a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49fec1cf_53b0dd69",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 4
      },
      "lineNbr": 823,
      "author": {
        "id": 8038
      },
      "writtenOn": "2018-10-11T15:22:56Z",
      "side": 1,
      "message": "I agree. Refactored new logic to separate function. However, I still need to use min_packet_loss_rate after old optimization since it is also set in another field trial.",
      "parentUuid": "7b49b9e8_34bdea2c",
      "range": {
        "startLine": 818,
        "startChar": 0,
        "endLine": 823,
        "endChar": 55
      },
      "revId": "0f968c4c0983f5b954b8d0e4cfa289330d71471a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d263737e_cffdddae",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 4
      },
      "lineNbr": 823,
      "author": {
        "id": 7015
      },
      "writtenOn": "2018-10-11T19:58:41Z",
      "side": 1,
      "message": "I think we\u0027d better let min_packet_loss_rate_ be lower bound on the current algorithm,\n\nthen introduce\nstruct NewPacketLossRateOptimizerConfig which contains another min_packet_loss_rate.\n\nsame as struct PacketLossConfig you introduced, but we can make it a public struct of the class.",
      "parentUuid": "49fec1cf_53b0dd69",
      "range": {
        "startLine": 818,
        "startChar": 0,
        "endLine": 823,
        "endChar": 55
      },
      "revId": "0f968c4c0983f5b954b8d0e4cfa289330d71471a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ad6beb8_b53b517d",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 4
      },
      "lineNbr": 823,
      "author": {
        "id": 8038
      },
      "writtenOn": "2018-10-12T10:36:33Z",
      "side": 1,
      "message": "Do you think it would be even better to define a class NewPacketLossRateOptimizer that also contains the optimization logic?",
      "parentUuid": "d263737e_cffdddae",
      "range": {
        "startLine": 818,
        "startChar": 0,
        "endLine": 823,
        "endChar": 55
      },
      "revId": "0f968c4c0983f5b954b8d0e4cfa289330d71471a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}