{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "db35d85b_19b6240c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-07T09:26:01Z",
      "side": 1,
      "message": "Adding hbos@ to the reviewer list - he designed the operations chain, which is the core of the apply-description operation sequencing; there may be dragons.\n\nI\u0027d like to find a model of what\u0027s happening that\u0027s easier to explain than this version before committing (and before diving into the nitty-gritty). Suggestions in comment.\n\nObFrust: Something appears to have reformatted many of the otherwise untouched multiline comments, making the diff hard to read. Is this a formatter bug?",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93482a59_738cc380",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-07T14:00:07Z",
      "side": 1,
      "message": "thanks for taking a look",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "12bbafe7_4fc51fd3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-07T14:25:44Z",
      "side": 1,
      "message": "Continuing the dialog.\n",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3337a6f1_2dfb03cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-11T10:17:46Z",
      "side": 1,
      "message": "Yes `git cl format` seems to have formatted much more than I expected. Not sure how that happened.",
      "parentUuid": "db35d85b_19b6240c",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da49ed80_10bc82f8",
        "filename": "pc/sdp_offer_answer.cc",
        "patchSetId": 8
      },
      "lineNbr": 753,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-07T09:26:01Z",
      "side": 1,
      "message": "Hm.\nI do worry about the naming / modeling. \"ApplyingRemoteDescription\" looks like a verb, it\u0027s not clear what object, state or task it is supposed to represent.\n\nWhat we actually do here is to create an object to contain the data relevant to an operation, and chain the call to DoSetRemoteDescription on the operations chain. I wonder if we should make the conceptual model simpler by renaming this class to RemoteDescriptionOperation, put all of DoSetRemoteDescription inside the object\u0027s Apply method, and replace all of DoSetRemoteDescription with a lambda invoking RemoteDescriptionOperation::Apply that is put on the operations chain.",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fa7069f_59d72c49",
        "filename": "pc/sdp_offer_answer.cc",
        "patchSetId": 8
      },
      "lineNbr": 753,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-07T14:00:07Z",
      "side": 1,
      "message": "Yes suggestions for a better name are welcome of course. What I was thinking about when I came up with this one was that I didn\u0027t want it to be confused with SetRemoteDescription/DoSetRemoteDescription/ApplyRemoteDescription.\n\nThe goal of the class is to hold the state and offer methods to process it, during the operation. The object\u0027s lifetime is bound to the operation itself, only exists while the description is being applied, hence the verb. But that was clearly not obvious, so RemoteDescriptionOperation sounds good to me.\n\nA key thing that I want to get away from is having 100+ line functions (in some cases several hundreds of LOC) that aren\u0027t focused on solving a particular part of the algorithm but rather do everything. That has resulted in copy/pasted code because it\u0027s hard to take a look at the function at a glance and understand what corner cases apply and set and meet preconditions for a particular part in isolation.\n\nI in particular want to avoid having a function that does everything and returns an error value based on how everything went. That puts us back into the position of not being able to complete the work asynchronously.\n\nI think that the operations chain class is a cool concept and initially I was wondering if the right thing would be to set up a few items in the chain for applying the description, but that could potentially conflict with other operations that might get added in between steps. I.e. I think that the way we\u0027re using the chain now, is the right level.",
      "parentUuid": "da49ed80_10bc82f8",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a3a4ed3_6fbc9003",
        "filename": "pc/sdp_offer_answer.cc",
        "patchSetId": 8
      },
      "lineNbr": 753,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-07T14:25:44Z",
      "side": 1,
      "message": "The operations chain was firstly an exposition tool for the spec - so that we could say \"the operations have to be performed in the order they\u0027re requested\" in a reasonable manner. Then it got retrofitted in Chrome as an implementation device - easier to implement exactly what the spec said to do than to find some other way of achieving the same effect.\n\nI\u0027d like to make it so that the RemoteDescriptionOperation takes full responsibility for either doing the complete apply-description steps or failing (returning an error) and ensuring that no change happens. So it has to guarantee some kind of atomicity - but it could be in the form of Promise.all(....) (spin off a bunch of tasks and wait for them all to succeed).\n\nAgree on the need to break up long functions - even if a function is only called once, it\u0027s an improvement if we can break out a set of related actions into a named operation. Needs to be done with taste.... and takes time to (re)write.",
      "parentUuid": "7fa7069f_59d72c49",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d6e6742_0054c500",
        "filename": "pc/sdp_offer_answer.cc",
        "patchSetId": 8
      },
      "lineNbr": 753,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-07T14:57:07Z",
      "side": 1,
      "message": "Yes, agree and that sounds like what I\u0027m aiming for. As you say, it takes time and this CL is a step in that direction. I\u0027m starting by taking the state off the stack and into a class, but keeping the existing behavior to not rock the boat too much. Subsequent CLs hopefully will be possible to do incrementally. As the steps that make up the algorithm get broken down into smaller functions, we can tackle each one that represents a thread block of some sort, in isolation from the others.",
      "parentUuid": "1a3a4ed3_6fbc9003",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78b7f348_03539e74",
        "filename": "pc/sdp_offer_answer.cc",
        "patchSetId": 8
      },
      "lineNbr": 764,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-06T21:59:32Z",
      "side": 1,
      "message": "the order of these checks and member methods, is currently the same order in which they were as part of DoSetRemoteDescription. So it could be helpful to simply look at this class side by side with DoSetRemoteDescription.",
      "revId": "9b9e2207b93a8cc20c2d44fe11346313993066b7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}