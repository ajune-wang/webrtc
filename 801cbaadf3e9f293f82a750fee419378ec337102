{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5530d8da_2c73a60b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-01-04T09:18:06Z",
      "side": 1,
      "message": "Could you pls file a webrtc bug covering the intent \u0026 update Bug: here?",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e5616c_54b44fdd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 9405
      },
      "writtenOn": "2023-01-04T11:20:07Z",
      "side": 1,
      "message": "The main goal of this CL was to share the results of implementing os_unfair_lock, and to discuss going further. That\u0027s why I haven\u0027t created an issue yet. Do you think it\u0027s worth spending more time for evaluating this implementation?\n\nIf so, how can I determine if this implementation has a performance advantage? Since I\u0027m not a Googler, I don\u0027t think I can do A/B tests like Google Scale or performance checks per commit.",
      "parentUuid": "5530d8da_2c73a60b",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a5910de_b135a5b2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 15,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-01-04T12:51:44Z",
      "side": 1,
      "message": "Don\u0027t get me wrong I find this API interesting ðŸ˜Š\n\nLooks to me like this mutex type has a small advantage in uncontended performance, which is by far the most common case AFAIK. But it\u0027s diluted by the mutex usage % in a real product scenario (this % can be found with Instruments profiling). Does the new mutex have a performance impact in your local product test rig?\n\nIf we\u0027d want to switch to this implementation, the safest is to switch in an experiment and that would also give power impact from the field at least from Chromium. The CL structure would have to be different for that though, but can happen in a later CL.\n\nFrom Google searches I notice\n- Some trash talk on https://mjtsai.com/blog/2022/10/10/improving-firefox-responsiveness-on-macos/\n- Some reports on Firefox migration from OSSpinLock to os_unfair_lock. Seems it was a good move as it turned out OSSpinLock doesn\u0027t wait for unlockers, but not that relevant for WebRTC/Chromium. https://bugzilla.mozilla.org/show_bug.cgi?id\u003d1670885",
      "parentUuid": "e5e5616c_54b44fdd",
      "range": {
        "startLine": 15,
        "startChar": 5,
        "endLine": 15,
        "endChar": 9
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fc8ab27_74ebf128",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2023-01-04T07:38:32Z",
      "side": 1,
      "message": "Thanks for the CL!\n\nAdding handellm@ as a reviewer.\n\nSince this is behind a flag, I am fine landing this but let\u0027s wait for Markus review as well.",
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33009e26_edea31ee",
        "filename": "rtc_base/synchronization/mutex_benchmark.cc",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 10557
      },
      "writtenOn": "2023-01-04T09:10:41Z",
      "side": 1,
      "message": "Can you add hardware/OS details next to the results, and also re-create using `--benchmark_repetitions\u003d10` so we get variance information?",
      "range": {
        "startLine": 95,
        "startChar": 18,
        "endLine": 95,
        "endChar": 23
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "689fd3a2_f21853b4",
        "filename": "rtc_base/synchronization/mutex_benchmark.cc",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 9405
      },
      "writtenOn": "2023-01-04T11:20:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "33009e26_edea31ee",
      "range": {
        "startLine": 95,
        "startChar": 18,
        "endLine": 95,
        "endChar": 23
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7451c233_71e63086",
        "filename": "rtc_base/synchronization/mutex_benchmark.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 10557
      },
      "writtenOn": "2023-01-04T09:10:41Z",
      "side": 1,
      "message": "Can you append these details?\n\n```\n1/4 2023 macOS Ventura 13.1 M1 Pro (14\u0027\u0027, 2021) results.\n---------------------------------------------------------------------------\nThis is a big.LITTLE 6/2 machine, and there\u0027s no control over CPU affinity\nor power management, take these results with a grain of salt.\nConditions on the machine were otherwise idle.\nNote that the results show slower execution/higher variance for 2 threads.\nThis does not necessarily mean the implementation is worse there, it could\nbe the case that the test conditions cause placement on the E-cores and thus\ngiving better power efficiency.\nWe should measure placement with the dtrace sched provider in the future.\n\nos_unfair_lock:\nRun on (8 X 24.1213 MHz CPU s)\nCPU Caches:\n  L1 Data 64 KiB (x8)\n  L1 Instruction 128 KiB (x8)\n  L2 Unified 4096 KiB (x4)\nLoad Average: 1.28, 1.57, 2.73\n----------------------------------------------------------------------------\nBenchmark                                  Time             CPU   Iterations\n----------------------------------------------------------------------------\nBM_LockWithMutex/threads:1              7.87 ns         7.87 ns     75444855\nBM_LockWithMutex/threads:1              7.85 ns         7.85 ns     75444855\nBM_LockWithMutex/threads:1              7.84 ns         7.84 ns     75444855\nBM_LockWithMutex/threads:1              7.86 ns         7.86 ns     75444855\nBM_LockWithMutex/threads:1              7.86 ns         7.86 ns     75444855\nBM_LockWithMutex/threads:1              7.85 ns         7.85 ns     75444855\nBM_LockWithMutex/threads:1              7.85 ns         7.85 ns     75444855\nBM_LockWithMutex/threads:1              7.86 ns         7.86 ns     75444855\nBM_LockWithMutex/threads:1              7.86 ns         7.86 ns     75444855\nBM_LockWithMutex/threads:1              7.85 ns         7.85 ns     75444855\nBM_LockWithMutex/threads:1_mean         7.85 ns         7.85 ns           10\nBM_LockWithMutex/threads:1_median       7.85 ns         7.85 ns           10\nBM_LockWithMutex/threads:1_stddev      0.008 ns        0.007 ns           10\nBM_LockWithMutex/threads:1_cv           0.10 %          0.09 %            10\nBM_LockWithMutex/threads:2               114 ns          228 ns      3505872\nBM_LockWithMutex/threads:2               119 ns          239 ns      3505872\nBM_LockWithMutex/threads:2               116 ns          232 ns      3505872\nBM_LockWithMutex/threads:2               111 ns          221 ns      3505872\nBM_LockWithMutex/threads:2               105 ns          210 ns      3505872\nBM_LockWithMutex/threads:2               110 ns          219 ns      3505872\nBM_LockWithMutex/threads:2               103 ns          206 ns      3505872\nBM_LockWithMutex/threads:2              95.9 ns          192 ns      3505872\nBM_LockWithMutex/threads:2              98.6 ns          197 ns      3505872\nBM_LockWithMutex/threads:2               133 ns          265 ns      3505872\nBM_LockWithMutex/threads:2_mean          111 ns          221 ns           10\nBM_LockWithMutex/threads:2_median        110 ns          220 ns           10\nBM_LockWithMutex/threads:2_stddev       10.8 ns         21.7 ns           10\nBM_LockWithMutex/threads:2_cv           9.81 %          9.84 %            10\nBM_LockWithMutex/threads:4              32.7 ns          128 ns      4000000\nBM_LockWithMutex/threads:4              33.4 ns          131 ns      4000000\nBM_LockWithMutex/threads:4              29.3 ns          117 ns      4000000\nBM_LockWithMutex/threads:4              33.4 ns          131 ns      4000000\nBM_LockWithMutex/threads:4              32.4 ns          127 ns      4000000\nBM_LockWithMutex/threads:4              35.6 ns          140 ns      4000000\nBM_LockWithMutex/threads:4              33.4 ns          131 ns      4000000\nBM_LockWithMutex/threads:4              35.1 ns          138 ns      4000000\nBM_LockWithMutex/threads:4              28.9 ns          115 ns      4000000\nBM_LockWithMutex/threads:4              27.8 ns          111 ns      4000000\nBM_LockWithMutex/threads:4_mean         32.2 ns          127 ns           10\nBM_LockWithMutex/threads:4_median       33.0 ns          129 ns           10\nBM_LockWithMutex/threads:4_stddev       2.65 ns         9.73 ns           10\nBM_LockWithMutex/threads:4_cv           8.25 %          7.66 %            10\nBM_LockWithMutex/threads:8              26.9 ns          206 ns      3483736\nBM_LockWithMutex/threads:8              26.6 ns          206 ns      3483736\nBM_LockWithMutex/threads:8              27.3 ns          209 ns      3483736\nBM_LockWithMutex/threads:8              26.6 ns          205 ns      3483736\nBM_LockWithMutex/threads:8              26.4 ns          203 ns      3483736\nBM_LockWithMutex/threads:8              26.3 ns          204 ns      3483736\nBM_LockWithMutex/threads:8              27.2 ns          208 ns      3483736\nBM_LockWithMutex/threads:8              26.9 ns          208 ns      3483736\nBM_LockWithMutex/threads:8              26.6 ns          206 ns      3483736\nBM_LockWithMutex/threads:8              29.6 ns          216 ns      3483736\nBM_LockWithMutex/threads:8_mean         27.0 ns          207 ns           10\nBM_LockWithMutex/threads:8_median       26.7 ns          206 ns           10\nBM_LockWithMutex/threads:8_stddev      0.962 ns         3.67 ns           10\nBM_LockWithMutex/threads:8_cv           3.56 %          1.77 %            10\n\n\npthread:\nRun on (8 X 24.1216 MHz CPU s)\nCPU Caches:\n  L1 Data 64 KiB (x8)\n  L1 Instruction 128 KiB (x8)\n  L2 Unified 4096 KiB (x4)\nLoad Average: 0.98, 1.39, 2.48\n----------------------------------------------------------------------------\nBenchmark                                  Time             CPU   Iterations\n----------------------------------------------------------------------------\nBM_LockWithMutex/threads:1              8.50 ns         8.50 ns     71190302\nBM_LockWithMutex/threads:1              8.50 ns         8.50 ns     71190302\nBM_LockWithMutex/threads:1              8.51 ns         8.51 ns     71190302\nBM_LockWithMutex/threads:1              8.50 ns         8.50 ns     71190302\nBM_LockWithMutex/threads:1              8.49 ns         8.49 ns     71190302\nBM_LockWithMutex/threads:1              8.53 ns         8.53 ns     71190302\nBM_LockWithMutex/threads:1              8.50 ns         8.50 ns     71190302\nBM_LockWithMutex/threads:1              8.49 ns         8.49 ns     71190302\nBM_LockWithMutex/threads:1              8.49 ns         8.49 ns     71190302\nBM_LockWithMutex/threads:1              8.63 ns         8.58 ns     71190302\nBM_LockWithMutex/threads:1_mean         8.52 ns         8.51 ns           10\nBM_LockWithMutex/threads:1_median       8.50 ns         8.50 ns           10\nBM_LockWithMutex/threads:1_stddev      0.041 ns        0.028 ns           10\nBM_LockWithMutex/threads:1_cv           0.49 %          0.32 %            10\nBM_LockWithMutex/threads:2              21.9 ns         39.5 ns     17133556\nBM_LockWithMutex/threads:2              29.5 ns         55.3 ns     17133556\nBM_LockWithMutex/threads:2              29.8 ns         56.2 ns     17133556\nBM_LockWithMutex/threads:2              20.6 ns         37.5 ns     17133556\nBM_LockWithMutex/threads:2              27.4 ns         51.4 ns     17133556\nBM_LockWithMutex/threads:2              23.8 ns         44.2 ns     17133556\nBM_LockWithMutex/threads:2              44.1 ns         85.1 ns     17133556\nBM_LockWithMutex/threads:2              23.9 ns         44.2 ns     17133556\nBM_LockWithMutex/threads:2              94.2 ns          186 ns     17133556\nBM_LockWithMutex/threads:2              85.0 ns          167 ns     17133556\nBM_LockWithMutex/threads:2_mean         40.0 ns         76.7 ns           10\nBM_LockWithMutex/threads:2_median       28.5 ns         53.4 ns           10\nBM_LockWithMutex/threads:2_stddev       27.1 ns         54.5 ns           10\nBM_LockWithMutex/threads:2_cv          67.60 %         71.12 %            10\nBM_LockWithMutex/threads:4              26.6 ns         73.3 ns      9404148\nBM_LockWithMutex/threads:4              26.2 ns         72.2 ns      9404148\nBM_LockWithMutex/threads:4              27.2 ns         75.3 ns      9404148\nBM_LockWithMutex/threads:4              26.0 ns         71.4 ns      9404148\nBM_LockWithMutex/threads:4              25.3 ns         69.3 ns      9404148\nBM_LockWithMutex/threads:4              26.3 ns         72.5 ns      9404148\nBM_LockWithMutex/threads:4              25.3 ns         69.8 ns      9404148\nBM_LockWithMutex/threads:4              24.9 ns         68.8 ns      9404148\nBM_LockWithMutex/threads:4              25.9 ns         71.1 ns      9404148\nBM_LockWithMutex/threads:4              25.6 ns         70.4 ns      9404148\nBM_LockWithMutex/threads:4_mean         25.9 ns         71.4 ns           10\nBM_LockWithMutex/threads:4_median       25.9 ns         71.3 ns           10\nBM_LockWithMutex/threads:4_stddev      0.673 ns         1.99 ns           10\nBM_LockWithMutex/threads:4_cv           2.60 %          2.78 %            10\nBM_LockWithMutex/threads:8              21.0 ns          136 ns      4937184\nBM_LockWithMutex/threads:8              21.4 ns          139 ns      4937184\nBM_LockWithMutex/threads:8              20.7 ns          138 ns      4937184\nBM_LockWithMutex/threads:8              21.4 ns          138 ns      4937184\nBM_LockWithMutex/threads:8              21.8 ns          140 ns      4937184\nBM_LockWithMutex/threads:8              22.5 ns          142 ns      4937184\nBM_LockWithMutex/threads:8              22.7 ns          145 ns      4937184\nBM_LockWithMutex/threads:8              22.0 ns          141 ns      4937184\nBM_LockWithMutex/threads:8              21.2 ns          136 ns      4937184\nBM_LockWithMutex/threads:8              22.1 ns          139 ns      4937184\nBM_LockWithMutex/threads:8_mean         21.7 ns          139 ns           10\nBM_LockWithMutex/threads:8_median       21.6 ns          139 ns           10\nBM_LockWithMutex/threads:8_stddev      0.650 ns         2.72 ns           10\nBM_LockWithMutex/threads:8_cv           3.00 %          1.95 %            10\n\nabsl:\nRun on (8 X 24.1233 MHz CPU s)\nCPU Caches:\n  L1 Data 64 KiB (x8)\n  L1 Instruction 128 KiB (x8)\n  L2 Unified 4096 KiB (x4)\nLoad Average: 1.24, 1.37, 2.12\n----------------------------------------------------------------------------\nBenchmark                                  Time             CPU   Iterations\n----------------------------------------------------------------------------\nBM_LockWithMutex/threads:1              8.19 ns         8.19 ns     72725762\nBM_LockWithMutex/threads:1              8.21 ns         8.20 ns     72725762\nBM_LockWithMutex/threads:1              8.18 ns         8.18 ns     72725762\nBM_LockWithMutex/threads:1              8.18 ns         8.18 ns     72725762\nBM_LockWithMutex/threads:1              8.20 ns         8.20 ns     72725762\nBM_LockWithMutex/threads:1              8.19 ns         8.19 ns     72725762\nBM_LockWithMutex/threads:1              8.22 ns         8.21 ns     72725762\nBM_LockWithMutex/threads:1              8.19 ns         8.19 ns     72725762\nBM_LockWithMutex/threads:1              8.20 ns         8.20 ns     72725762\nBM_LockWithMutex/threads:1              8.18 ns         8.18 ns     72725762\nBM_LockWithMutex/threads:1_mean         8.19 ns         8.19 ns           10\nBM_LockWithMutex/threads:1_median       8.19 ns         8.19 ns           10\nBM_LockWithMutex/threads:1_stddev      0.012 ns        0.011 ns           10\nBM_LockWithMutex/threads:1_cv           0.15 %          0.13 %            10\nBM_LockWithMutex/threads:2              76.1 ns          152 ns     12599332\nBM_LockWithMutex/threads:2              78.9 ns          157 ns     12599332\nBM_LockWithMutex/threads:2              84.0 ns          168 ns     12599332\nBM_LockWithMutex/threads:2              81.9 ns          164 ns     12599332\nBM_LockWithMutex/threads:2              83.5 ns          167 ns     12599332\nBM_LockWithMutex/threads:2              77.9 ns          155 ns     12599332\nBM_LockWithMutex/threads:2              86.3 ns          173 ns     12599332\nBM_LockWithMutex/threads:2              66.1 ns          131 ns     12599332\nBM_LockWithMutex/threads:2              69.9 ns          139 ns     12599332\nBM_LockWithMutex/threads:2              76.2 ns          152 ns     12599332\nBM_LockWithMutex/threads:2_mean         78.1 ns          156 ns           10\nBM_LockWithMutex/threads:2_median       78.4 ns          156 ns           10\nBM_LockWithMutex/threads:2_stddev       6.37 ns         13.2 ns           10\nBM_LockWithMutex/threads:2_cv           8.15 %          8.47 %            10\nBM_LockWithMutex/threads:4              24.9 ns         57.3 ns     12202456\nBM_LockWithMutex/threads:4              25.0 ns         62.0 ns     12202456\nBM_LockWithMutex/threads:4              25.1 ns         59.1 ns     12202456\nBM_LockWithMutex/threads:4              23.0 ns         56.0 ns     12202456\nBM_LockWithMutex/threads:4              23.6 ns         64.6 ns     12202456\nBM_LockWithMutex/threads:4              26.5 ns         55.6 ns     12202456\nBM_LockWithMutex/threads:4              22.7 ns         51.6 ns     12202456\nBM_LockWithMutex/threads:4              21.6 ns         56.5 ns     12202456\nBM_LockWithMutex/threads:4              25.0 ns         50.7 ns     12202456\nBM_LockWithMutex/threads:4              27.2 ns         57.8 ns     12202456\nBM_LockWithMutex/threads:4_mean         24.4 ns         57.1 ns           10\nBM_LockWithMutex/threads:4_median       24.9 ns         56.9 ns           10\nBM_LockWithMutex/threads:4_stddev       1.74 ns         4.21 ns           10\nBM_LockWithMutex/threads:4_cv           7.10 %          7.38 %            10\nBM_LockWithMutex/threads:8              22.9 ns         56.1 ns     18038736\nBM_LockWithMutex/threads:8              22.3 ns         56.6 ns     18038736\nBM_LockWithMutex/threads:8              21.7 ns         57.2 ns     18038736\nBM_LockWithMutex/threads:8              19.9 ns         46.6 ns     18038736\nBM_LockWithMutex/threads:8              18.2 ns         47.9 ns     18038736\nBM_LockWithMutex/threads:8              17.2 ns         37.7 ns     18038736\nBM_LockWithMutex/threads:8              19.8 ns         56.3 ns     18038736\nBM_LockWithMutex/threads:8              18.5 ns         49.1 ns     18038736\nBM_LockWithMutex/threads:8              16.2 ns         38.3 ns     18038736\nBM_LockWithMutex/threads:8              16.5 ns         38.4 ns     18038736\nBM_LockWithMutex/threads:8_mean         19.3 ns         48.4 ns           10\nBM_LockWithMutex/threads:8_median       19.2 ns         48.5 ns           10\nBM_LockWithMutex/threads:8_stddev       2.42 ns         8.08 ns           10\nBM_LockWithMutex/threads:8_cv          12.50 %         16.68 %            10\n```",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 2
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59134c01_9527850a",
        "filename": "rtc_base/synchronization/mutex_benchmark.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 9405
      },
      "writtenOn": "2023-01-04T11:20:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7451c233_71e63086",
      "range": {
        "startLine": 144,
        "startChar": 0,
        "endLine": 144,
        "endChar": 2
      },
      "revId": "801cbaadf3e9f293f82a750fee419378ec337102",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}