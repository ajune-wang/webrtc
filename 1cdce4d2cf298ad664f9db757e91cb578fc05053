{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "623de89b_4fac7f86",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 576,
      "author": {
        "id": 5023
      },
      "writtenOn": "2022-08-15T13:21:44Z",
      "side": 1,
      "message": "Was that the case before this change as well? I\u0027m not an expert on SDP, but I believe it could be valid to change RTX SSRC mid-stream?",
      "range": {
        "startLine": 575,
        "startChar": 66,
        "endLine": 576,
        "endChar": 43
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "642a3918_89c2073f",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 576,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-16T08:33:05Z",
      "side": 1,
      "message": "It\u0027s based on the current implementation in the class:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/video_receive_stream2.cc;l\u003d269-275?q\u003dVideoReceiveStream2\u0026ss\u003dchromium\n\nI figured I\u0027d call this out explicitly in a comment in case someone (like myself) changes the implementation at some point in the future to make rtx_ssrc() non-const.",
      "parentUuid": "623de89b_4fac7f86",
      "range": {
        "startLine": 575,
        "startChar": 66,
        "endLine": 576,
        "endChar": 43
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0ec4617_bc7e7cb0",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 578,
      "author": {
        "id": 5023
      },
      "writtenOn": "2022-08-15T13:21:44Z",
      "side": 1,
      "message": "rtx_receive_stream_",
      "range": {
        "startLine": 578,
        "startChar": 51,
        "endLine": 578,
        "endChar": 64
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bbdab8c_c9c42e8f",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 578,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-16T08:33:05Z",
      "side": 1,
      "message": "this refers to the reference that `rtx_receiver_` has from here:\n\n```\n    rtx_receiver_ \u003d receiver_controller-\u003eCreateReceiver(\n        rtx_ssrc(), rtx_receive_stream_.get());\n```\n\nThe reason I call it out here is to make sure that any potential changes to the code in the future that might recreate `rtx_receive_stream_` take into account that `rtx_receiver_` also has a reference and would need to be updated too.",
      "parentUuid": "f0ec4617_bc7e7cb0",
      "range": {
        "startLine": 578,
        "startChar": 51,
        "endLine": 578,
        "endChar": 64
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "222b38fe_ec4c47f7",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 578,
      "author": {
        "id": 5023
      },
      "writtenOn": "2022-08-16T08:51:21Z",
      "side": 1,
      "message": "Yeah, it makes sense to me now.",
      "parentUuid": "1bbdab8c_c9c42e8f",
      "range": {
        "startLine": 578,
        "startChar": 51,
        "endLine": 578,
        "endChar": 64
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ad1d2c_e65effab",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 582,
      "author": {
        "id": 5023
      },
      "writtenOn": "2022-08-15T13:21:44Z",
      "side": 1,
      "message": "Is this approach preferable, compared to checking if rtx_receive_stream_ !\u003d nullptr?\n\nIf it is preferable, maybe we should RTC_CHECK on the pointer below, to defend against future changes where the construction of the object changes, but not this member function?",
      "range": {
        "startLine": 581,
        "startChar": 1,
        "endLine": 582,
        "endChar": 11
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adcf22d9_cb717dbe",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 582,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-16T08:33:05Z",
      "side": 1,
      "message": "It\u0027s the same logic as is used on the constructor so my preference is to apply the same check/logic.\n\nThe way I reasoned about it is that checking the pointer avoids dereferencing nullptr if there\u0027s a bug in the logic but we won\u0027t know about it and it could leave the door open to subtle regressions. So I\u0027d rather make sure that the logic is correct and consistent and if it doesn\u0027t hold, we crash (null deref, so I don\u0027t think we need an additional RTC_CHECK).",
      "parentUuid": "b7ad1d2c_e65effab",
      "range": {
        "startLine": 581,
        "startChar": 1,
        "endLine": 582,
        "endChar": 11
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8b0f015_aec8bbd2",
        "filename": "video/video_receive_stream2.cc",
        "patchSetId": 9
      },
      "lineNbr": 582,
      "author": {
        "id": 5023
      },
      "writtenOn": "2022-08-16T08:51:21Z",
      "side": 1,
      "message": "Sounds good. Thanks for explaining!",
      "parentUuid": "adcf22d9_cb717dbe",
      "range": {
        "startLine": 581,
        "startChar": 1,
        "endLine": 582,
        "endChar": 11
      },
      "revId": "1cdce4d2cf298ad664f9db757e91cb578fc05053",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}