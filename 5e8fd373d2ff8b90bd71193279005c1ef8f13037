{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c7704836_d9ac0862",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-07-27T15:49:50Z",
      "side": 1,
      "message": "Harald, are you ok with keeping the \"old\" approach natively?",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "939a180b_394c541b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-07-27T16:45:30Z",
      "side": 1,
      "message": "Didn\u0027t see the oldness of the API....",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dca978d_7b183303",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-07-27T16:45:30Z",
      "side": 1,
      "message": "I\u0027d prefer to switch to the new one, the arguments for that approach at the JS API also apply to the C++ API.",
      "parentUuid": "c7704836_d9ac0862",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "624f9984_0697ed39",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-07-28T05:58:03Z",
      "side": 1,
      "message": "We don\u0027t have symmetry in a lot of other places and adding this will require a lot of back and forth since rtp_sender is an interface. Even RtpEncodingParameters contains a ton of stuff that isn\u0027t in the W3C spec.\n\nThe alternative would be to not update RtpEncodingParameters  and call the still-public GenerateKeyFrame method directly from Chromium.",
      "parentUuid": "1dca978d_7b183303",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29d537f8_cedce2a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-07-28T16:07:27Z",
      "side": 1,
      "message": "Isn\u0027t the alternative to add a new SetRtpParameters method that takes the \"action\" struct (current and only member generate_keyframe) with a default implementation of \"be grumpy\" (to avoid link errors), and let the current SetRtpParameters call the new SetRtpParameters method with generate_keyframe \u003d false?",
      "parentUuid": "624f9984_0697ed39",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a446db3e_0b31fe60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-07-28T17:05:14Z",
      "side": 1,
      "message": "Yes but the amount of plumbing required...\n\nNote (I just did, yay \"old\" code) that the change is in WebRtcVideoChannel::WebRtcVideoSendStream::SetRtpParameters\nwhich gets called from\nRtpSenderBase::SetParametersInternal\nso we are quite far away from the sender interface\u0027s setParameters.\n\nModifying this adds a variant to the \"internal\" method of the \"base\" object so it is already a mess and it will get an even bigger mess with the additional options.\n\n(and hey, this shows why I prefer writing the code first ;-)",
      "parentUuid": "29d537f8_cedce2a3",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34191de6_0d62f0c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-08-02T05:53:17Z",
      "side": 1,
      "message": "thought .... I\u0027m not sure if the API of SetParameters is sync or async as seen from the C++ API .... could Chrome \"just\" bind the two calls together (setParameters and requestKeyframe)? Less API change, at the cost of cognitive dissonance between C++ and JS.",
      "parentUuid": "a446db3e_0b31fe60",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb06257_f4b1fdc2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-02T08:00:20Z",
      "side": 1,
      "message": "oh we have two variants of setParameters...\n\nWe also have a generate key frame on the video rtp sender:\nhttps://source.chromium.org/chromium/chromium/src/+/refs/heads/main:third_party/webrtc/pc/rtp_sender.cc;l\u003d822;drc\u003d2d2b9b660aaaa89018ad12bf053075bba58ce787;bpv\u003d1;bpt\u003d1\nfrom the stage when we thought this would be a separate API call.\nBut using that would mean two hops to the worker thread and the dreaded \"what if the first call gets executed on a different frame than the second\" problem?",
      "parentUuid": "34191de6_0d62f0c1",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29237a68_71b6395c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-08-03T12:34:07Z",
      "side": 1,
      "message": "So it\u0027s async, we can\u0027t depend on them being executed together. Dead idea.\nSo the api/ has to change. Could we change only the API down to the threadjump and ensure a single threadjump at that level? Does that help?",
      "parentUuid": "deb06257_f4b1fdc2",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7143deee_7e21b683",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-07T12:41:08Z",
      "side": 1,
      "message": "The thread jump is here:\nhttps://source.chromium.org/chromium/chromium/src/+/refs/heads/main:third_party/webrtc/pc/rtp_sender.cc;l\u003d821;drc\u003ddf097ef9b722789243248f807ad66c7085a14099;bpv\u003d1;bpt\u003d1 but that is for the \"public\" version which is on the old spec.\n\nVideoMediaSendChannelInterface::GenerateSendKeyFrame is already on the right thread since it gets called from here:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/pc/rtp_sender.cc;l\u003d284?q\u003drtp_sender.cc\u0026ss\u003dchromium%2Fchromium%2Fsrc\n\nI can try moving the call to GenerateKeyFrame from WebRtcVideoSendStream::SetRtpParameters to there but removing the boolean from the rtp parameters would still require a lot of plumbing that I\u0027d like to avoid.",
      "parentUuid": "29237a68_71b6395c",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dacbb6ae_648c6fb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-07T12:42:06Z",
      "side": 1,
      "message": "ah, the other tricky thing about splitting that up is when the setParameters callback is executed. We want generateKeyFrame to run before that.",
      "parentUuid": "7143deee_7e21b683",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c07a6663_7e1fcdf4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-17T09:11:40Z",
      "side": 1,
      "message": "Ilya, can we ask you for a second opinion?",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef06ad88_49132926",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-08-17T09:43:38Z",
      "side": 1,
      "message": "So, is the argument about including `request_key_frame` in RtpEncodingParameters vs. plumbing a new argument to SetParameters?\n\nI think webrtc SetParameters isn\u0027t required to be 1:1 image of the PeerConnection api. I\u0027m OK with the current change.",
      "parentUuid": "dacbb6ae_648c6fb2",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eda0acbf_46725811",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-17T10:15:24Z",
      "side": 1,
      "message": "Yeah. Long-term I agree that we need to align JS and C++ but *after* we got rid of \"Channel\" and \"SendStream\" (I am hoping we will manage that)",
      "parentUuid": "ef06ad88_49132926",
      "revId": "5e8fd373d2ff8b90bd71193279005c1ef8f13037",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}