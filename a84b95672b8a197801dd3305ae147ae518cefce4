{
  "comments": [
    {
      "key": {
        "uuid": "1a8720e9_26d6434d",
        "filename": "api/rtpparameters.h",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "Are these being used in this CL?",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 312,
        "endChar": 40
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4b54608_6a2a9dcc",
        "filename": "api/rtpparameters.h",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "no, they are not.",
      "parentUuid": "1a8720e9_26d6434d",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 312,
        "endChar": 40
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "374a64ee_c07ba243",
        "filename": "api/rtpparameters.h",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "You can leave this in here if you\u0027d like, but generally I would suggest breaking apart CLs if you can. It helps:\n-Reduce the complexity and size of CLs which is easier to review\n-More easily submit smaller changes\n\nEven when you have multiple changes that are dependent on one another you can break it apart and chain the CLs in review. It usually helps the review process go faster. But of course rules can be broken and sometimes it makes sense to have a larger CL.",
      "parentUuid": "e4b54608_6a2a9dcc",
      "range": {
        "startLine": 311,
        "startChar": 0,
        "endLine": 312,
        "endChar": 40
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "56f898da_85ae3426",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "nit: Should we name these variables something that describes them better? simulcast_layers? same in the other \u003c\u003c overload.",
      "range": {
        "startLine": 71,
        "startChar": 57,
        "endLine": 71,
        "endChar": 61
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72b12265_aac52638",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "nit:\"Alternative simulcast layer list is empty\"?",
      "range": {
        "startLine": 100,
        "startChar": 25,
        "endLine": 100,
        "endChar": 51
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cef87d6e_81dc3b21",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 106,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "This is the alternatives list right? So should it be \"Alternatives simulcast layer list is malformed.\"?\n\nI guess we could name things \"alternative rids\" as another option if you like that.",
      "range": {
        "startLine": 106,
        "startChar": 25,
        "endLine": 106,
        "endChar": 49
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7636d074_d9ebc430",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "(optional) I prefer enclosing boolean operators on the right hand of an assignment with parenthesis.",
      "range": {
        "startLine": 115,
        "startChar": 20,
        "endLine": 115,
        "endChar": 62
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "811cfea4_04008b33",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 116,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "(optional) I would also enclose this with parenthesis.",
      "range": {
        "startLine": 116,
        "startChar": 24,
        "endLine": 116,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2cdfd2d0_d6b07a47",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "You could put the bug reference here too.",
      "range": {
        "startLine": 118,
        "startChar": 14,
        "endLine": 118,
        "endChar": 20
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d4b2e73_e6bd100c",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 119,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "I think it will be required since the client could munge the RID to something illegal. Some layer will need to validate it and return an error.",
      "range": {
        "startLine": 119,
        "startChar": 44,
        "endLine": 119,
        "endChar": 59
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8d6f1b00_ece45e34",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "Do we always want to serialize send then receive? The examples in the spec show recv being first when responding with an answer. I don\u0027t see any specification what\u0027s required.",
      "range": {
        "startLine": 138,
        "startChar": 7,
        "endLine": 138,
        "endChar": 28
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80109d0d_afa5c28f",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "Overloading tje \u003c\u003c is awesome ðŸŽ‰",
      "range": {
        "startLine": 145,
        "startChar": 7,
        "endLine": 145,
        "endChar": 34
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4daacb8_c7287bb0",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "We should probably specify that this function doesn\u0027t deserialize a line that includes \"a:simulcast:\" It deserializes everything after this.",
      "range": {
        "startLine": 152,
        "startChar": 3,
        "endLine": 152,
        "endChar": 15
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d0cb0fc_f0f351e4",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "If both layers are errors shouldn\u0027t the return value be an error too?",
      "range": {
        "startLine": 205,
        "startChar": 23,
        "endLine": 205,
        "endChar": 32
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb796c6_8a5dbf26",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 205,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:06:03Z",
      "side": 1,
      "message": "nevermind this comment. I read wrong.",
      "parentUuid": "4d0cb0fc_f0f351e4",
      "range": {
        "startLine": 205,
        "startChar": 23,
        "endLine": 205,
        "endChar": 32
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41c4718d_061d4347",
        "filename": "pc/sdpserializer.cc",
        "patchSetId": 2
      },
      "lineNbr": 207,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "nit: Could do MoveValue()",
      "range": {
        "startLine": 207,
        "startChar": 36,
        "endLine": 207,
        "endChar": 41
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a855125_956d4850",
        "filename": "pc/sdpserializer.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "nit: newline after standard header includes",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "816af614_89216164",
        "filename": "pc/sdpserializer.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "I\u0027m confused how this hides implementation details from callers of webrtcsdp.h? Isn\u0027t it really hiding implementation details from webrtcsdp.h itself?",
      "range": {
        "startLine": 30,
        "startChar": 38,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4296ad2c_37e593a0",
        "filename": "pc/sdpserializer.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "it doesn\u0027t hide details from webrtcsdp because it is aware of the class. it might \"hide\" the exact implementation, but that is not the point of the comment.\nIt does hide details from callers of webrtcsdp because those callers are not aware that there are (public) methods to deserialize parts of the SDP. the callers only see two methods:\nSerialize(JSEP) -\u003e SDP\nDeserialize(SDP) -\u003e JSEP",
      "parentUuid": "816af614_89216164",
      "range": {
        "startLine": 30,
        "startChar": 38,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a438d8f5_33e36b47",
        "filename": "pc/sdpserializer.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "I see. I was confusing \"exact implementation\" with what you mean by implementation details (that there is a serialization specifically for simulcast).",
      "parentUuid": "4296ad2c_37e593a0",
      "range": {
        "startLine": 30,
        "startChar": 38,
        "endLine": 30,
        "endChar": 35
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e603c6e_2eab47bb",
        "filename": "pc/sdpserializer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "absl::string_view\n\nhttps://abseil.io/tips/1",
      "range": {
        "startLine": 39,
        "startChar": 6,
        "endLine": 39,
        "endChar": 24
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abd64fae_924f5c7e",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "nit: Not that important, but the convention I\u0027ve seen is (expected, value). You could do the same in your parameters here.",
      "range": {
        "startLine": 30,
        "startChar": 6,
        "endLine": 31,
        "endChar": 42
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34f19d72_466330c9",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "What do you think about inlining this function into the test cases? The benefit would that the test can be understood without needing to look at the helper methods. The main con would be more typing.",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c6dc9af_479babb2",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "A problem with putting EXPECT* macros inside functions is that the line number doesn\u0027t give any context if the expectation fails.\n\nFor example, it\u0027d be impossible to know when element did not match rid.\n\nI think the best way to improve the failure message is to define an operator\u003d\u003d for your types then teach gtest how to print the types: https://github.com/abseil/googletest/blob/master/googletest/docs/advanced.md#teaching-googletest-how-to-print-your-values\n\nAnother option is to use gmock matchers: https://github.com/abseil/googletest/blob/master/googlemock/docs/CheatSheet.md",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65c5d17f_d8e72a57",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "SimulcastLayerList",
      "range": {
        "startLine": 58,
        "startChar": 25,
        "endLine": 58,
        "endChar": 56
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ad690b2_81f675dd",
        "filename": "pc/sdpserializer_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "nit: prefix with k",
      "range": {
        "startLine": 163,
        "startChar": 12,
        "endLine": 163,
        "endChar": 37
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "09da5674_1e5e133c",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "You don\u0027t have to do this, but generally with changes that aren\u0027t going to get changed right away we link it to the bug instead of an owner. This way if someone else picks up on it they have context. You could put:\n\n// TODO(bugs.webrtc.org/10055): Validate rid format.",
      "range": {
        "startLine": 34,
        "startChar": 10,
        "endLine": 34,
        "endChar": 16
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9247c81a_4233efb6",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "In general i will adopt this convention, but in this case, this is a placeholder for me for work that i still need to do on the feature.",
      "parentUuid": "09da5674_1e5e133c",
      "range": {
        "startLine": 34,
        "startChar": 10,
        "endLine": 34,
        "endChar": 16
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cef7f481_77a1b2af",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "As we said offline, I think it\u0027s more important for something that might not be addressed in follow up CLs right away.",
      "parentUuid": "9247c81a_4233efb6",
      "range": {
        "startLine": 34,
        "startChar": 10,
        "endLine": 34,
        "endChar": 16
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e55362e3_9377fc95",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "If you want (I think) you can do an emplace_back to turn these 2 lines into 1.",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 40,
        "endChar": 17
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40aff18f_92a9930d",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "they can already be a 1 liner, i\u0027m just not used to the syntax.\nlist_.push_back({RidDescription(rid, is_paused)});\ni don\u0027t like the syntax for emplace_back:\nlist_.emplace_back(rid, is_paused);\nwhile it is shorter, it seems less natural that i am passing arguments intended for the constructor. also, i believe that with c++11 and the \u0026\u0026 stuff, it is now redundant.",
      "parentUuid": "e55362e3_9377fc95",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 40,
        "endChar": 17
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56148536_5abd0955",
        "filename": "pc/sessiondescription.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "40aff18f_92a9930d",
      "range": {
        "startLine": 40,
        "startChar": 8,
        "endLine": 40,
        "endChar": 17
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a451abbc_e4c52e99",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 284,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 284,
        "startChar": 20,
        "endLine": 284,
        "endChar": 31
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b139bee_a9db185c",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 284,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a451abbc_e4c52e99",
      "range": {
        "startLine": 284,
        "startChar": 20,
        "endLine": 284,
        "endChar": 31
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbc5df78_27f82a80",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 285,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "Should we specify here that stream 1 is preferred? Same with 4 over 5?\n\nShould we also specify somewhere that 1/2 are preferred over 3 and 3 is preferred over 4/5?",
      "range": {
        "startLine": 285,
        "startChar": 10,
        "endLine": 285,
        "endChar": 30
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df7d2d15_329a6892",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 285,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "that is mentioned in the documentation above:\n// Simulcast layers are specified in order of preference.\n// Each layer can have a list of alternatives (in order of preference).",
      "parentUuid": "fbc5df78_27f82a80",
      "range": {
        "startLine": 285,
        "startChar": 10,
        "endLine": 285,
        "endChar": 30
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd2e9337_118ecb87",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 285,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "Yeah that\u0027s fine. What I was envisioning was explicitly describing exactly the preference of these Streams, and then seeing how that is translated to code. It might describing in too great of detail (that\u0027s why I phrased it as a question).",
      "parentUuid": "df7d2d15_329a6892",
      "range": {
        "startLine": 285,
        "startChar": 10,
        "endLine": 285,
        "endChar": 30
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80754499_acbcdeea",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "nit: Should we specify what a rid is here? RtpStreamId/RepairedRtpStreamId and how it is the identifier for a layer in the SDP? For someone reading this code w/o looking at the spec they wouldn\u0027t know.",
      "range": {
        "startLine": 296,
        "startChar": 32,
        "endLine": 296,
        "endChar": 35
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "979f8119_e58d8f48",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "in a few weeks there will be a RidDescription class that will explain it. is it ok to add a \"See RidDescription class\" for now even though the class doesn\u0027t exists?\nNote: i renamed the current RidDescription class to SimulcastLayer because that matches what it is exactly, and rid descriptions should be something else.",
      "parentUuid": "80754499_acbcdeea",
      "range": {
        "startLine": 296,
        "startChar": 32,
        "endLine": 296,
        "endChar": 35
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a566adb_99d3b8e9",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "I don\u0027t mind leaving it for now. You could write a TODO for later if you\u0027d like.",
      "parentUuid": "979f8119_e58d8f48",
      "range": {
        "startLine": 296,
        "startChar": 32,
        "endLine": 296,
        "endChar": 35
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27ee974a_c31e0509",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "I\u0027m curious - why name these variables different? I\u0027ve seen in other parts of the code using .*_in for constructor parameters for a struct. For example - rid_in, is_paused_in.",
      "range": {
        "startLine": 298,
        "startChar": 47,
        "endLine": 298,
        "endChar": 62
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f802ad14_cddd930b",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "i can use the _in suffix, i can also use the correct name + this-\u003e which i haven\u0027t seen in the code:\nthis-\u003erid \u003d rid;\nthis-\u003eis_paused \u003d is_paused;",
      "parentUuid": "27ee974a_c31e0509",
      "range": {
        "startLine": 298,
        "startChar": 47,
        "endLine": 298,
        "endChar": 62
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9583d6cc_1ef724b1",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 298,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "I usually lean towards being consistent with the codebase. I\u0027ll let you make the call though if you feel strongly about using this-\u003e.",
      "parentUuid": "f802ad14_cddd930b",
      "range": {
        "startLine": 298,
        "startChar": 47,
        "endLine": 298,
        "endChar": 62
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1de9b34_7e79f82e",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "Do you want:\nvoid AddLayer(const std:string\u0026 rid);\nand\nvoid AddLayer(const RidDescription\u0026 stream);\n?\n\nOtherwise the last comment above \"class SimulcastLayerList final {\" woudln\u0027t be true",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6996ea68_78b8cc8d",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "i have decided against the default value for is_paused and against the methods that accept string + bool in favor of methods that accept SimulcastLayer.\nThis makes it more clear, and the syntactic sugar is only used by the unit tests anyway (and i am paying the iron price).",
      "parentUuid": "e1de9b34_7e79f82e",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7117edd5_18f7e3bc",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 308,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "6996ea68_78b8cc8d",
      "range": {
        "startLine": 308,
        "startChar": 0,
        "endLine": 308,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e7111c4a_2fccb9e9",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 310,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "nit: Should we specify that the alternatives are in order of preference here?",
      "range": {
        "startLine": 310,
        "startChar": 5,
        "endLine": 310,
        "endChar": 38
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19559fa7_4f91f457",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 310,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7111c4a_2fccb9e9",
      "range": {
        "startLine": 310,
        "startChar": 5,
        "endLine": 310,
        "endChar": 38
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4de2e5e7_acb5eceb",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "Is there a reason you don\u0027t add this validation helper now and call it when adding a layer?",
      "range": {
        "startLine": 330,
        "startChar": 0,
        "endLine": 330,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4028b2fe_74bea4a6",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "i am contemplating the best way to achieve this. i need to validate:\n1. rid format\n2. rids don\u0027t duplicate in a list\n3. rids don\u0027t duplicate in a description\n4. rids match streams\n\nuntil i add the code that can call it i am holding off on the implementation.\nthis could be a DCHECK in AddLayer*, but it could also be something softer in SDP parsing.\n\nBTW, this is something that i really miss from C# - LINQ. this would be so easy:\nrids.Select(x \u003d\u003e x.rid).Distinct().Count() !\u003d rids.Count()",
      "parentUuid": "4de2e5e7_acb5eceb",
      "range": {
        "startLine": 330,
        "startChar": 0,
        "endLine": 330,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e4944f5_da6f457c",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 330,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "That\u0027s a nifty feature. I\u0027ve never programmed C# (gasp), so I haven\u0027t been exposed this beautiful world ;).\n\nSounds good on adding it later. Steve has mentioned that SessionDescription structures like this should be more \"dummy containers\" and then we actually enforce things like not have duplication in other code like the parser/serializer.",
      "parentUuid": "4028b2fe_74bea4a6",
      "range": {
        "startLine": 330,
        "startChar": 0,
        "endLine": 330,
        "endChar": 64
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1ee9e40_dffdbbe0",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "nit: period at end",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "362bd67c_1c5dc5a3",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "Ok, but it is not an actual sentence, it\u0027s just a noun (+ adjective). \n:).",
      "parentUuid": "b1ee9e40_dffdbbe0",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dd1d71c_26a4ad9a",
        "filename": "pc/sessiondescription.h",
        "patchSetId": 2
      },
      "lineNbr": 363,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "It\u0027s unclear to me what to do with short comments like this. For cases like this consistency is what the style guide says:\n\"Shorter comments, such as comments at the end of a line of code, can sometimes be less formal, but you should be consistent with your style.\"\nhttps://google.github.io/styleguide/cppguide.html#Punctuation,_Spelling_and_Grammar",
      "parentUuid": "362bd67c_1c5dc5a3",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b79fbca7_a0804e85",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2769,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "redundant comment",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b2b7925_43171241",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2769,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b79fbca7_a0804e85",
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0d364a0_b9c1b238",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2770,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "I think you could make this optional and wouldn\u0027t need the two variables.",
      "range": {
        "startLine": 2770,
        "startChar": 2,
        "endLine": 2770,
        "endChar": 32
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b570154c_b0ee2192",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2770,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "this was already fixed in patch 3. basically added an empty() method to simulcast so that i can tell if it needs to be set.\ni might need to use a similar boolean to check if it was reported more than once, because then all of it needs to be discarded (+ future lines).",
      "parentUuid": "a0d364a0_b9c1b238",
      "range": {
        "startLine": 2770,
        "startChar": 2,
        "endLine": 2770,
        "endChar": 32
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "516fba4b_a93a89ea",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2771,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "has_simulcast",
      "range": {
        "startLine": 2771,
        "startChar": 7,
        "endLine": 2771,
        "endChar": 19
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2146bd34_b63fefd7",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2771,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "was removed",
      "parentUuid": "516fba4b_a93a89ea",
      "range": {
        "startLine": 2771,
        "startChar": 7,
        "endLine": 2771,
        "endChar": 19
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f62e748_e2784f4d",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2978,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "nit: period at end",
      "range": {
        "startLine": 2978,
        "startChar": 55,
        "endLine": 2978,
        "endChar": 63
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8e3edf2_b3e6056b",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2978,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "was removed to allow all sections",
      "parentUuid": "5f62e748_e2784f4d",
      "range": {
        "startLine": 2978,
        "startChar": 55,
        "endLine": 2978,
        "endChar": 63
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8d2a8ae_5ce67203",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 2989,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "maybe prefix with \"Malformed simulcast line: \" ?",
      "range": {
        "startLine": 2989,
        "startChar": 35,
        "endLine": 2989,
        "endChar": 69
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd86f179_e35c8aea",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 3076,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "bug here? Also the line needs capitalization and a period.",
      "range": {
        "startLine": 3076,
        "startChar": 12,
        "endLine": 3076,
        "endChar": 18
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc478671_a77b49ef",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 3076,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "this is a placeholder and will be done as part of the current project. if it remains in the code, i will add a bug.\nThere is no specific bug for the little \"TODOs\" using the general bug for this change doesn\u0027t really add value.\nIn a world with branches, i would only merge the work after all TODOs have been taken care of. perhaps i need to find a better way to accomplish this.",
      "parentUuid": "fd86f179_e35c8aea",
      "range": {
        "startLine": 3076,
        "startChar": 12,
        "endLine": 3076,
        "endChar": 18
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c22dbaea_37b5defb",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 3076,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "I think TODOs with your username are fine if it will be done as part of the work.",
      "parentUuid": "bc478671_a77b49ef",
      "range": {
        "startLine": 3076,
        "startChar": 12,
        "endLine": 3076,
        "endChar": 18
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc85529_219ee6f3",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 3078,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-27T21:48:13Z",
      "side": 1,
      "message": "Can also do media_desc-\u003eas_video()",
      "range": {
        "startLine": 3078,
        "startChar": 8,
        "endLine": 3078,
        "endChar": 57
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5190e56_02b0bf6a",
        "filename": "pc/webrtcsdp.cc",
        "patchSetId": 2
      },
      "lineNbr": 3078,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "was removed",
      "parentUuid": "bdc85529_219ee6f3",
      "range": {
        "startLine": 3078,
        "startChar": 8,
        "endLine": 3078,
        "endChar": 57
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f713629e_46e5438a",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3919,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "nit: period.",
      "range": {
        "startLine": 3919,
        "startChar": 46,
        "endLine": 3919,
        "endChar": 52
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f2e1ce3_414cc4cf",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3919,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f713629e_46e5438a",
      "range": {
        "startLine": 3919,
        "startChar": 46,
        "endLine": 3919,
        "endChar": 52
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "13f8d0ad_ba13b8d5",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3945,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-27T22:03:29Z",
      "side": 1,
      "message": "This test serializes then deserializes and tests that they are equivalent. The precondition is that you\u0027ve tested deserialization and it works as intended for this test to be \"valid.\"",
      "range": {
        "startLine": 3945,
        "startChar": 2,
        "endLine": 3945,
        "endChar": 15
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26a6cb06_1dee383d",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3945,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-29T00:56:30Z",
      "side": 1,
      "message": "correct, serialization and deserialization are more thoroughly tested in a separate class (there is a comment above this test method). so the test assumes that those are working (or breaking a different test). this is also why the equality check is so \"shallow\" (just counting the number of streams).",
      "parentUuid": "13f8d0ad_ba13b8d5",
      "range": {
        "startLine": 3945,
        "startChar": 2,
        "endLine": 3945,
        "endChar": 15
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "453bf00d_225b9754",
        "filename": "pc/webrtcsdp_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3945,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-29T21:01:11Z",
      "side": 1,
      "message": "I think you\u0027re right that it\u0027s probably fine to leave it as is, although it does potentially leave an untested place for a bug if we didn\u0027t deserialize the \"a\u003dsimulcast:\" line correctly, because this is an added functionality that webrtcsdp.cc does.",
      "parentUuid": "26a6cb06_1dee383d",
      "range": {
        "startLine": 3945,
        "startChar": 2,
        "endLine": 3945,
        "endChar": 15
      },
      "revId": "a84b95672b8a197801dd3305ae147ae518cefce4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}