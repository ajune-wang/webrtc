{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8905f4e3_d6c57f04",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-22T06:36:19Z",
      "side": 1,
      "message": "The bug does not talk about a TaskQueueStdlib experiment in any of the comments. Can you update this description with a pointer to a description of the experiment (or with a bug number that points to a description of the experiment)?",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17003278_88d85b43",
        "filename": "/COMMIT_MSG",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-08-23T10:26:07Z",
      "side": 1,
      "message": "Done. Opened webrtc:14389 and the CL is now linked to that bug instead.",
      "parentUuid": "8905f4e3_d6c57f04",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a85314dd_0196faa5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-22T06:36:19Z",
      "side": 1,
      "message": "Want to figure out where we\u0027re telling people what we\u0027re doing with this.\n\nNote the policy for field trials here:\n\nhttps://webrtc.googlesource.com/src/+/lkgr/g3doc/field-trials.md\n",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c001b92e_b165aad3",
        "filename": "api/create_peerconnection_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-19T09:23:59Z",
      "side": 1,
      "message": "any reason for moving this down? I kinda like having the non-conditional initialization where the instance is declared. In fact we might want to update to something along the lines of:\n\n```\nPeerConnectionFactoryDependencies dependencies \u003d {\n    .network_thread \u003d network_thread,\n    .worker_thread \u003d worker_thread,\n    ...\n```\n\nI guess you could even do that with the condition inline, using `?:`",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79067ba5_656b29d9",
        "filename": "api/create_peerconnection_factory.cc",
        "patchSetId": 10
      },
      "lineNbr": 49,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-08-23T10:26:07Z",
      "side": 1,
      "message": "Fixed. This was moved only in order to reuse the field_trials field, but I agree that your suggestion is stylistically better.\n\nI changed the initialization order, but wasn\u0027t able to use the designated initializer syntax since the PeerConnectionFactoryDependencies struct doesn\u0027t conform to the requirements (it has \"user-provided\" constructors).",
      "parentUuid": "c001b92e_b165aad3",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fe6b697f_5c9bf225",
        "filename": "api/task_queue/default_task_queue_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-19T09:23:59Z",
      "side": 1,
      "message": "do we have an option of using a weak_ptr or scoped_refptr here rather than a raw pointer? Is the ownership/lifetime clearly documented?",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fcce4d5_8d067d63",
        "filename": "api/task_queue/default_task_queue_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-08-23T10:26:07Z",
      "side": 1,
      "message": "This usage of FieldTrialsView* is a rather common pattern in WebRTC\u0027s codebase at the moment: Accepting a raw pointer in cases where we don\u0027t need/want to change all call sites (for example in tests). My understanding is that using a raw pointer clearly documents that the ownership is not passed to the function (which is what we do mean in this case).",
      "parentUuid": "fe6b697f_5c9bf225",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7407e33_cb1367cc",
        "filename": "api/task_queue/default_task_queue_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-24T07:15:24Z",
      "side": 1,
      "message": "I wouldn\u0027t say that it \"clearly\" does it since that\u0027s where we\u0027ve had problems. I think that weak_ptr/scoped_refptr/unique_ptr are more clear, but for sure we do have places where we use raw pointers. We\u0027ve been trying to clarify those however and in some cases such as in the Connection/Port family of classes we\u0027ve uncovered lifetime issues (non consistent and not safe), circular dependencies and uaf issues as we\u0027ve done so.\n\nIn any case, if this is a convention already for field trials, we don\u0027t need to solve in this CL.",
      "parentUuid": "6fcce4d5_8d067d63",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94ff70b2_f10ca4e0",
        "filename": "api/task_queue/default_task_queue_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-08-24T07:19:56Z",
      "side": 1,
      "message": "Field trials (and the FieldTrialsView that points to it) are intended to be set at program startup and never changed at runtime. So a pointer is supposed to be a safe way of referring to them.\n\nIt\u0027s possible we could do better in showing that this is safe; if so, that goes to @jonaso for comment, I think.",
      "parentUuid": "f7407e33_cb1367cc",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6503c55_4541035e",
        "filename": "api/task_queue/default_task_queue_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-08-24T08:50:17Z",
      "side": 1,
      "message": "Thanks for clarifying Tommi. I\u0027ll land this one as is for now.",
      "parentUuid": "94ff70b2_f10ca4e0",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a77fb2c_20836ddf",
        "filename": "rtc_tools/video_replay.cc",
        "patchSetId": 10
      },
      "lineNbr": 345,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-19T09:23:59Z",
      "side": 1,
      "message": "nit: make_unique?",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02086af8_e3be5c9b",
        "filename": "rtc_tools/video_replay.cc",
        "patchSetId": 10
      },
      "lineNbr": 345,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-08-23T10:26:07Z",
      "side": 1,
      "message": "call_config.trials is a plain pointer type (also note that FieldTrialBasedConfig has no data members. its Lookup() function simply calls the global webrtc::field_trial::FindFullName() function.)",
      "parentUuid": "9a77fb2c_20836ddf",
      "revId": "332e6ea78bc6c05bc8d8e53b05f3700e86963186",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}