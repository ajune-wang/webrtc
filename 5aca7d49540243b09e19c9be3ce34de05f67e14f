{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cba1ddb2_ea8335c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-12T22:18:27Z",
      "side": 1,
      "message": "Hey Mark,\n\nI\u0027d appreciate if you had a chance to review at least the naming scheme on Monday before I push to land some of the related chromium changes (which won\u0027t necessarily need your review, just some of the other WebRTC folks).",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bfa29f4_0a03d515",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "Naming looks good - mostly some comments on comments :-)",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cccc65ba_50960aaf",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "Does the capture client need to call GetSourceList() to determine what was selected?  Please document that.",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4701a21d_bc76c0c4",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-17T19:49:01Z",
      "side": 1,
      "message": "Yes they will. Done.",
      "parentUuid": "cccc65ba_50960aaf",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a00369dc_f4432a19",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "How is \"dismissed without selection\" different from the cancelled case?",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ebdb32bb_ee28c4d0",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-17T19:49:01Z",
      "side": 1,
      "message": "A user choice to dismiss versus either a rejection or an error. I intended the next two lines to clarify this, but if you have a better proposal for the comment I\u0027ll happily change it.",
      "parentUuid": "a00369dc_f4432a19",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "edaaa07f_b0c8fc70",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-19T18:23:56Z",
      "side": 1,
      "message": "What is the difference between \"rejection\" and \"dismissal\"?\n\nOne way to make this clearer:\n\n// Any user action to cancel the source selection.\nOnDelegatedSourceListCancelled();\n\n// Any system error that causes source selection to fail.\nOnDelegatedSourceListError();",
      "parentUuid": "ebdb32bb_ee28c4d0",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6f3f501b_cdb5c8ce",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T17:54:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edaaa07f_b0c8fc70",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66c7a6a8_57ef8978",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "I wonder if the client would want more details on the error that occurred, although then we would have to come up with some capturer-specific mapping to a generic error enum.  Or pass through an integer error code that comes from the implementation.\n\nThe reason I ask is that even if Chrome doesn\u0027t use it now, adding the error value later would be a breaking change.",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3b13152_54a52a22",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 76,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-17T19:49:01Z",
      "side": 1,
      "message": "Spoke offline that it would likely make more sense to expand DesktopCapturer if we truly need this in the future. Most logging can/should probably be done internally to the capturer. Consumers don\u0027t necessarily care *what* went wrong, they just need to surface to the user that something did.",
      "parentUuid": "66c7a6a8_57ef8978",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c72f2a9_3ffc6f8d",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "Returns true if the capturer displays its own source list and ...",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4706c33f_c92e3b5a",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-17T19:49:01Z",
      "side": 1,
      "message": "Thinking a little about our discussion yesterday; and the fact that I\u0027ll likely be adding an Ensure/Hide DelegatedSourceList method; I\u0027m thinking of maybe converting this method to something like:\n\n`virtual DelegatedSourceListController* GetDelegatedSourceListController() const;`\n\nCapturers that do not support/have a delegated source list will return nullptr; while others will return the controller which may keep the interface a bit cleaner.\nI *could* move the methods down to an observer there that would need to be separately registered, or leave alone.\n\nThoughts before I go forward with that implementation?",
      "parentUuid": "8c72f2a9_3ffc6f8d",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b70d8c90_6aae35cf",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-19T18:23:56Z",
      "side": 1,
      "message": "Is the idea that the caller would obtain a pointer to the controller, and then register its own client/observer to get notified when events take place on the controller?\n\nI like organizing all of the \"delegated source list\" APIs into one class/interface.   The downside is that the client has a raw pointer to a (presumably) unowned object it has to keep track of, and I don\u0027t see a good way to pass a WeakPtr across the WebRTC boundary.\n\nI wonder if there is a way that ownership of the controller object could stay with the caller and the controller becomes a \"handle\"?  E.g. the methods become no-ops if the underlying delegate goes away?",
      "parentUuid": "4706c33f_c92e3b5a",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a5905ee_84706dd7",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-19T19:55:14Z",
      "side": 1,
      "message": "My intention was that the caller wouldn\u0027t/shouldn\u0027t take ownership of it at all. Or perhaps the Capturer guarantees that it will be alive as long as the capturer is, so that things can stash a reference for the duration of a method. Returning a reference would be one way to do this; but given we need to indicate when it\u0027s not supported, we can\u0027t do that...\n\nIn general in our code base, raw pointer means \"don\u0027t take ownership of this, it\u0027s not yours\"",
      "parentUuid": "b70d8c90_6aae35cf",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "89e25960_09d361a2",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-19T20:25:25Z",
      "side": 1,
      "message": "\u003e Capturer guarantees that it will be alive as long as the capturer is,\n\nIn lieu of ownership passing, that\u0027s OK.  The lifetime expectations should be documented, and ideally the controller pointer is managed by the same object(s) that own the capturer and it\u0027s used on the same sequences as the capturer.\n\nThe scenario I was thinking of is where the system decides to tear down the actual dialog the controller is working with, in that case we can\u0027t destroy the controller yet if the capturer is still alive.  That seems somewhat independent of who owns the controller itself.\n\n\u003e In general in our code base, raw pointer means \"don\u0027t take ownership of this, it\u0027s not yours\"\n\nRight, if you decide to pass ownership instead, you\u0027d return by value or unique_ptr.",
      "parentUuid": "4a5905ee_84706dd7",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "905a1eec_10126b64",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-19T21:03:12Z",
      "side": 1,
      "message": "I\u0027m re-working the ordering of how I\u0027m going to land things; I\u0027ll probably send a new change to make it less confusing.",
      "parentUuid": "89e25960_09d361a2",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99cd4c7b_48682694",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-22T17:54:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "905a1eec_10126b64",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c9b1758_8783a48a",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "Nit: Add a paragraph break before \"Note\"",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5f3ae70_e2403ecb",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 109,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-17T19:49:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c9b1758_8783a48a",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6188ddf_3da24c3c",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 14134
      },
      "writtenOn": "2022-08-16T22:37:02Z",
      "side": 1,
      "message": "Nit: I might move the comment about the non-empty SourceList to the documentation for GetSourceList(), and the comment about source IDs to the documentation for SelectSource().\n\nHere you could just mention that delegated source lists also change the behavior of those methods and to look there for more details.",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa687c79_fc761e3c",
        "filename": "modules/desktop_capture/desktop_capturer.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-08-17T19:49:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6188ddf_3da24c3c",
      "revId": "5aca7d49540243b09e19c9be3ce34de05f67e14f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}