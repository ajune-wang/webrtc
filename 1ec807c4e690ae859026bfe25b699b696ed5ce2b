{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "53d473e4_169c3357",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 5122
      },
      "writtenOn": "2021-03-05T15:48:03Z",
      "side": 1,
      "message": "how did you benchmark? could you add a brief summary in the CL description as done for instance in https://webrtc-review.googlesource.com/c/src/+/195001/11//COMMIT_MSG ?",
      "range": {
        "startLine": 11,
        "startChar": 45,
        "endLine": 11,
        "endChar": 57
      },
      "revId": "1ec807c4e690ae859026bfe25b699b696ed5ce2b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7bfcd1d_07de52e5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9741
      },
      "writtenOn": "2021-03-03T05:40:54Z",
      "side": 1,
      "message": "Alessio, by removing the SSE intrinsic code in avx2 code, the performance has been improved a lot, PTAL",
      "revId": "1ec807c4e690ae859026bfe25b699b696ed5ce2b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f3603760_45fefc19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5122
      },
      "writtenOn": "2021-03-05T15:48:03Z",
      "side": 1,
      "message": "Thanks for the CL Zhaoliang!\nI have some comments.",
      "revId": "1ec807c4e690ae859026bfe25b699b696ed5ce2b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c699e582_e373b62b",
        "filename": "common_audio/fir_filter_avx2.cc",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 5122
      },
      "writtenOn": "2021-03-05T15:48:03Z",
      "side": 1,
      "message": "Is this the recommended approach to reduce a SIMD register by sum?\n\nFirst of all, `reinterpret_cast\u003cT*\u003e` is highly discouraged by our style guide\nif the pointer doesn\u0027t meet the memory alignment requirements of T, the behavior is undefined (see https://google.github.io/styleguide/cppguide.html#Casting).\n\nI also wonder if this implementation is actually faster. As you recommended in one of your comments in https://webrtc-review.googlesource.com/c/src/+/209062, we could instead use _mm256_add_ps etc. I believe that the number of ops will be lower.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 80,
        "endChar": 71
      },
      "revId": "1ec807c4e690ae859026bfe25b699b696ed5ce2b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}