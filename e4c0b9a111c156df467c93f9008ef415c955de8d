{
  "comments": [
    {
      "key": {
        "uuid": "bc3051e1_a18ccac7",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T10:23:30Z",
      "side": 1,
      "message": "int64_t? https://google.github.io/styleguide/cppguide.html#Integer_Types",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 32,
        "endChar": 10
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bb47a47_82d523fc",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:59:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc3051e1_a18ccac7",
      "range": {
        "startLine": 32,
        "startChar": 2,
        "endLine": 32,
        "endChar": 10
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "611f51e4_eadda9eb",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T10:23:30Z",
      "side": 1,
      "message": "dchecked_cast?",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f2cc037_d81a96f0",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:59:55Z",
      "side": 1,
      "message": "That\u0027s actually a little tricky, got into dependency cycle. Since we actually check the range two lines above maybe we can omit that?\n\nERROR Dependency cycle:\n  //rtc_base:rtc_base_approved -\u003e\n  //rtc_base:rtc_base_approved_generic -\u003e\n  //:webrtc_common -\u003e\nninja: error: rebuilding \u0027build.ninja\u0027: subcommand failed\n  //api:video_bitrate_allocation -\u003e\n  //rtc_base:rtc_base_approved",
      "parentUuid": "611f51e4_eadda9eb",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab91224e_0dbf3c40",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T12:56:16Z",
      "side": 1,
      "message": "Hmm. This file is in api:video_bitrate_allocation; how did adding a dependency on rtc_base:safe_conversions to that target cause that dependency cycle?",
      "parentUuid": "2f2cc037_d81a96f0",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14470472_9f3b92ec",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T13:31:46Z",
      "side": 1,
      "message": "Ah right, there\u0027s a safe_conversion target. I just looked something else that included rtc_base_approved and copied that...",
      "parentUuid": "ab91224e_0dbf3c40",
      "range": {
        "startLine": 40,
        "startChar": 9,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c8fe119_efc6190c",
        "filename": "api/video_bitrate_allocation.cc",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T10:23:30Z",
      "side": 1,
      "message": "signed?",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 10
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32789d15_f552d65f",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T10:23:30Z",
      "side": 1,
      "message": "Consider changing these to constexpr int.",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "363ffa72_b9f3d393",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "Right, these were just moved from common_types (and will be moved back). Is there any risk changing the type? I vaguely remember someone having trouble with that api surface.",
      "parentUuid": "32789d15_f552d65f",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c97f2e97_2a30bb66",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T12:56:16Z",
      "side": 1,
      "message": "You\u0027ll have to provide backing storage in the .cc file, but that\u0027s it.",
      "parentUuid": "363ffa72_b9f3d393",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73b91108_d6c12c40",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T13:31:46Z",
      "side": 1,
      "message": "I\u0027m note sure how to do that. If in the header I do:\nconstexpr int kMaxSimulcastStreams \u003d 4;\n\nthen adding \"constexpr int kMaxSimulcastStreams;\" will cause the compiler to complain about redefinition.\nAnd I can\u0027t just declare in there and then define it in the cc...",
      "parentUuid": "c97f2e97_2a30bb66",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a453e297_c55994fc",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-04-19T13:54:21Z",
      "side": 1,
      "message": "you may want to check http://go/totw/140#within-a-header-file-beware\ndo this constants have to be at namespace level. If yes, is there any place where you take an address of the constant?\n\ndefining in .cc works when constant is inside class, not namespace.\n.h\nclass VideoBitrateAllocation {\n  static constexpr int kMaxSimulcastStreams \u003d 4;\n}\n.cc\nconstexpr VideoBitrateAllocation::kMaxSimulcastStreams;",
      "parentUuid": "73b91108_d6c12c40",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b746c3f_d168abd7",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T14:07:04Z",
      "side": 1,
      "message": "Maybe you could move them inside the class, and add a\n\nusing kMaxSimulcastStreams \u003d VideoBitrateAllocation::kMaxSimulcastStreams;\n\nin common_types.h, for temporary backwards compatibility?",
      "parentUuid": "a453e297_c55994fc",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1ea21a6_55e98c85",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T14:30:14Z",
      "side": 1,
      "message": "I really don\u0027t want to move those constants into this file at all, so moving them into the class seems counterproductive.\nThey\u0027re only here since I don\u0027t want to have this file and common_types.h include each other...\n\nI don\u0027t think we have a good place for video-related constants that should be public right now?",
      "parentUuid": "8b746c3f_d168abd7",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a26fcad5_2988c62b",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "Needs a comment on overall purpose of the class.\n\nAlso clarify unit used, (I guess everything is is bits per second here?)",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc4a7d11_c68596a0",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a26fcad5_2988c62b",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 28
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be2dda64_a1d6e965",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T10:23:30Z",
      "side": 1,
      "message": "constexpr?",
      "range": {
        "startLine": 28,
        "startChar": 9,
        "endLine": 28,
        "endChar": 14
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6eca4d83_00fb63b8",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 28,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "It\u0027s set to std::numeric_limits\u003cuint32_t\u003e::max(), then we\u0027d have to include \u003climits\u003e here. Is that ok?",
      "parentUuid": "be2dda64_a1d6e965",
      "range": {
        "startLine": 28,
        "startChar": 9,
        "endLine": 28,
        "endChar": 14
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc3e9b1c_f59dcf19",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "Where is this used? If applications aren\u0027t expected to use it, consider if we could remove it from the api.",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61df4b3f_af97e74a",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "This is the only was to set the bitrates.",
      "parentUuid": "dc3e9b1c_f59dcf19",
      "range": {
        "startLine": 31,
        "startChar": 7,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2b5ed36_da799076",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "Do we really need both these methods?",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b6a24cc_a162ad10",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "These are both used in many places. Unfortunately also already in downstream projects.",
      "parentUuid": "c2b5ed36_da799076",
      "range": {
        "startLine": 57,
        "startChar": 2,
        "endLine": 58,
        "endChar": 33
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30eaf772_c0df8393",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "Do we really need comparison operators? There seems to be one use:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/video_coding/generic_encoder.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026l\u003d108",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 68,
        "endChar": 3
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e147e26_569c8c62",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "True, I\u0027ll move this functionality there are stop using memcmp.\nNow can also void including both \u003cstring.h\u003e and \u003cstring\u003e ...",
      "parentUuid": "30eaf772_c0df8393",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 68,
        "endChar": 3
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d26f54c_3a21557a",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "Can this be removed from the interface?",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "683c2368_28593c45",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "There\u0027s pending code that uses it, externally as well, in logging. It has been rewritten be a bit cheaper so I\u0027ll remove the comment and let people use common sense.",
      "parentUuid": "8d26f54c_3a21557a",
      "range": {
        "startLine": 70,
        "startChar": 0,
        "endLine": 72,
        "endChar": 0
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e639fd5_796e5851",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T10:23:30Z",
      "side": 1,
      "message": "Can these be signed instead? https://google.github.io/styleguide/cppguide.html#Integer_Types",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "459fd2b8_39a2bb83",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "The problem is that this will clash with a lot of places in the video stack. The VideoCodec, TemporalLayers, etc all use uint32_t. This already very large CL will grow a lot more and have potential functional differences as well...",
      "parentUuid": "4e639fd5_796e5851",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f017c74_b0364bc2",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-04-19T12:56:16Z",
      "side": 1,
      "message": "I was afraid of that. :-/ Well, it\u0027s worth keeping in mind for the future at least.",
      "parentUuid": "459fd2b8_39a2bb83",
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bff21de9_94653672",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "Leave this in common_types.h instead, since that\u0027s what old code is using?",
      "range": {
        "startLine": 79,
        "startChar": 1,
        "endLine": 80,
        "endChar": 49
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69900adf_1855f2ab",
        "filename": "api/video_bitrate_allocation.h",
        "patchSetId": 4
      },
      "lineNbr": 80,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bff21de9_94653672",
      "range": {
        "startLine": 79,
        "startChar": 1,
        "endLine": 80,
        "endChar": 49
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1ac8a06_b272bb73",
        "filename": "common_types.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-19T07:31:22Z",
      "side": 1,
      "message": "I take it this should only be for the transition, and a TODO about deleting this?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 41
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2a2e808_73935c8a",
        "filename": "common_types.h",
        "patchSetId": 4
      },
      "lineNbr": 21,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-04-19T11:47:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1ac8a06_b272bb73",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 21,
        "endChar": 41
      },
      "revId": "e4c0b9a111c156df467c93f9008ef415c955de8d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}