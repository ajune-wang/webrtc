{
  "comments": [
    {
      "key": {
        "uuid": "9ffb8a5d_5a025724",
        "filename": "sdk/android/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 1173,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "These headers are unused.",
      "range": {
        "startLine": 1172,
        "startChar": 0,
        "endLine": 1173,
        "endChar": 43
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7709cd0_1c6d4a4b",
        "filename": "sdk/android/BUILD.gn",
        "patchSetId": 6
      },
      "lineNbr": 1173,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-05T00:05:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ffb8a5d_5a025724",
      "range": {
        "startLine": 1172,
        "startChar": 0,
        "endLine": 1173,
        "endChar": 43
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7506f29e_0b5291ad",
        "filename": "sdk/android/api/org/webrtc/FrameDecryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "Okay but this doesn\u0027t describe at all what this interface is about.",
      "range": {
        "startLine": 14,
        "startChar": 3,
        "endLine": 14,
        "endChar": 54
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e3d346d_7d07a91d",
        "filename": "sdk/android/api/org/webrtc/FrameDecryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-04T23:00:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7506f29e_0b5291ad",
      "range": {
        "startLine": 14,
        "startChar": 3,
        "endLine": 14,
        "endChar": 54
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8392e325_a013750c",
        "filename": "sdk/android/api/org/webrtc/FrameDecryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "JavaDoc syntax @note",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 8
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9209ba5a_4875d0f0",
        "filename": "sdk/android/api/org/webrtc/FrameDecryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 17,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-04T23:00:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8392e325_a013750c",
      "range": {
        "startLine": 17,
        "startChar": 3,
        "endLine": 17,
        "endChar": 8
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddca0d9f_d8116c17",
        "filename": "sdk/android/api/org/webrtc/FrameDecryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "I see this interface returns a reference counted object. I would prefer if the returned object had a reference already and the caller would take ownership of it.",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 47
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "466eb883_82f4f4a8",
        "filename": "sdk/android/api/org/webrtc/FrameDecryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-05T01:12:12Z",
      "side": 1,
      "message": "Still thinking about the best way to approach this.",
      "parentUuid": "ddca0d9f_d8116c17",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 47
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01ea989a_6a9b8067",
        "filename": "sdk/android/api/org/webrtc/FrameEncryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "Not called by native?",
      "range": {
        "startLine": 24,
        "startChar": 2,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c75c950_e490b617",
        "filename": "sdk/android/api/org/webrtc/FrameEncryptor.java",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-04T23:00:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "01ea989a_6a9b8067",
      "range": {
        "startLine": 24,
        "startChar": 2,
        "endLine": 24,
        "endChar": 17
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "937ef13c_d2c2f1e0",
        "filename": "sdk/android/api/org/webrtc/RtpReceiver.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "I don\u0027t see why this is needed?",
      "range": {
        "startLine": 29,
        "startChar": 35,
        "endLine": 29,
        "endChar": 54
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d132ba4f_9c255c12",
        "filename": "sdk/android/api/org/webrtc/RtpReceiver.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-05T00:05:37Z",
      "side": 1,
      "message": "The FrameDecryptor Java object is cached so that when you call GetFrameDecryptor you retrieve the Java implementation. The Java interface only requires a native pointer is provided. The native interface FrameDecryptorInterface only requires two functions Decrypt and GetMaxPlaintextSize.\n\nIn reality functionality such as SetKey will also be required, however this isn\u0027t present in the API as it is not directly required by WebRTC to function. As a result implementers will need a way to cast back from FrameDecryptor to their concrete implementation and this seemed like the simplest way. In practice this to the user just looks like:\n\nFrameDecryptorCustomImpl frameDecryptor \u003d (FrameDecryptorCustomImpl)rtpReceiver.getFrameDecryptor();\nframeDecryptor.setKey(...);",
      "parentUuid": "937ef13c_d2c2f1e0",
      "range": {
        "startLine": 29,
        "startChar": 35,
        "endLine": 29,
        "endChar": 54
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f4c1db6_5e30a191",
        "filename": "sdk/android/api/org/webrtc/RtpReceiver.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-05T00:06:14Z",
      "side": 1,
      "message": "Resolving this, please reopen if you have any more questions.",
      "parentUuid": "d132ba4f_9c255c12",
      "range": {
        "startLine": 29,
        "startChar": 35,
        "endLine": 29,
        "endChar": 54
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64d13853_fba94c9c",
        "filename": "sdk/android/api/org/webrtc/RtpReceiver.java",
        "patchSetId": 6
      },
      "lineNbr": 29,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-05T09:20:35Z",
      "side": 1,
      "message": "Would it be hard for the client to just keep a separate reference to the interface? This would also avoid the unsafe cast that is always nice.\n\nBecause these objects don\u0027t correlate 1:1 to C++ objects (a new object is created for example when triggering callbacks), this logic seems very brittle. The new object passed to for example callbacks is not going to have the field set.\n\nAlso, if the object changes on the C++ side, the Java object is not going to know about this.",
      "parentUuid": "9f4c1db6_5e30a191",
      "range": {
        "startLine": 29,
        "startChar": 35,
        "endLine": 29,
        "endChar": 54
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9b678c6_8e929fe3",
        "filename": "sdk/android/api/org/webrtc/RtpReceiver.java",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-09-03T14:43:12Z",
      "side": 1,
      "message": "Java methods start with a lower case letter",
      "range": {
        "startLine": 73,
        "startChar": 14,
        "endLine": 73,
        "endChar": 31
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82f4012e_70a04475",
        "filename": "sdk/android/api/org/webrtc/RtpReceiver.java",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 6930
      },
      "writtenOn": "2018-09-04T23:00:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9b678c6_8e929fe3",
      "range": {
        "startLine": 73,
        "startChar": 14,
        "endLine": 73,
        "endChar": 31
      },
      "revId": "8075a07508f63048ebead0c5884f153533d66f09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}