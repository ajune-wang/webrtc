{
  "comments": [
    {
      "key": {
        "uuid": "b41a4672_29376176",
        "filename": "test/frame_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-24T15:40:23Z",
      "side": 1,
      "message": "super nitpicky: consider submitting it in the separate change (this file and its .cc counterpart have nothing to do with your change).",
      "range": {
        "startLine": 59,
        "startChar": 15,
        "endLine": 59,
        "endChar": 31
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3ca09e1_ab590863",
        "filename": "test/frame_generator.h",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-24T15:53:58Z",
      "side": 1,
      "message": "Yep, I agree, that it is not related, but its compilation failed after these changes and it wasn\u0027t caught, so it makes sense to put it together to justify these changes in the generator",
      "parentUuid": "b41a4672_29376176",
      "range": {
        "startLine": 59,
        "startChar": 15,
        "endLine": 59,
        "endChar": 31
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c736502_4823eb13",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-24T14:03:37Z",
      "side": 1,
      "message": "passes",
      "range": {
        "startLine": 24,
        "startChar": 35,
        "endLine": 24,
        "endChar": 39
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3747972d_fa7b61fa",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-24T15:53:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c736502_4823eb13",
      "range": {
        "startLine": 24,
        "startChar": 35,
        "endLine": 24,
        "endChar": 39
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5083480e_80b4f86e",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-24T15:40:23Z",
      "side": 1,
      "message": "nit: taking const std::string\u0026 in the constructor param and creating a copy here may be preferred by some (instead of creating a copy and than moving a copy). I think it\u0027s a matter of preference, and I certainly implemented both in the past :)",
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a3b8a58_e6fe5d91",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-24T15:53:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5083480e_80b4f86e",
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5401f166_4ae48c24",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-01-24T14:03:37Z",
      "side": 1,
      "message": "forwards",
      "range": {
        "startLine": 62,
        "startChar": 35,
        "endLine": 62,
        "endChar": 42
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2067f968_b7effa0f",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-24T15:53:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5401f166_4ae48c24",
      "range": {
        "startLine": 62,
        "startChar": 35,
        "endLine": 62,
        "endChar": 42
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "626ffb0f_057e8352",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-01-24T15:40:23Z",
      "side": 1,
      "message": "nit: another way to avoid null checks, is to provide a \"null implementation\".\nso you would have a VideoFrameWriter and a NullWriter (possibly implementing \u0027FrameObserver\u0027);\nThe caller would then always pass a writer, but one of the writers is a no-op, and you essentially don\u0027t have a null check in the implementation.\n\nFor some reason it seems like the c++ world (that I\u0027ve seen so far) likes null checks over null objects, so this is more \u0027FYI\u0027 than actionable feedback.",
      "range": {
        "startLine": 50,
        "startChar": 22,
        "endLine": 51,
        "endChar": 26
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e425a83_3ac534d1",
        "filename": "test/pc/e2e/analyzer/video/video_quality_analyzer_injection_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 51,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-01-24T15:53:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "626ffb0f_057e8352",
      "range": {
        "startLine": 50,
        "startChar": 22,
        "endLine": 51,
        "endChar": 26
      },
      "revId": "8c3a1c98119442bfabc1e0872f98ec4fea586e94",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}