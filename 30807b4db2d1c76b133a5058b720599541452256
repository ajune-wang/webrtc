{
  "comments": [
    {
      "key": {
        "uuid": "d12072a7_af7dfe4c",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-20T12:57:17Z",
      "side": 1,
      "message": "As far as I understand, C++11 guarantees that the initialization is thread safe,\nif several threads race to call this function first, only the winner of the race will execute the initialization, and the others will wait until initialization is complete.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 38
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97be010d_61c5d830",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5029
      },
      "writtenOn": "2017-10-20T17:33:11Z",
      "side": 1,
      "message": "Yes, this is true. And you can declare this variable as \"static const\".",
      "parentUuid": "d12072a7_af7dfe4c",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 38
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c76a603_ddd6467f",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-23T06:01:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97be010d_61c5d830",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 38
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac6ee08d_bf5564be",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-10-20T21:09:55Z",
      "side": 1,
      "message": "Since the initialization in GetTlsIndex() is thread safe, each call is going to have to pay for the use of a mutex or similar. So maybe it\u0027s better to call it once in the constructor, and store the result in a const member variable?",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37a4aae_f05b2e33",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5029
      },
      "writtenOn": "2017-10-20T21:19:36Z",
      "side": 1,
      "message": "I think here the problem is that this variable (the return value of GetTlsIndex()) needs to be used across different ScreenCapturerWinMagnifier instances.",
      "parentUuid": "ac6ee08d_bf5564be",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bed1663_db39311e",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-10-20T21:28:33Z",
      "side": 1,
      "message": "That shouldn\u0027t be a problemâ€”it\u0027s a constant whose value is the same everywhere in the process, right? The member variables are just to give each object its own copy, so that we can read it without mutexes or atomics.",
      "parentUuid": "c37a4aae_f05b2e33",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42bd952e_8bf45412",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5029
      },
      "writtenOn": "2017-10-20T21:39:25Z",
      "side": 1,
      "message": "Oh, I misunderstood your meaning at the first place. Yes, that looks like a very simple and reliable optimization we can use. But I am also OK without it. (ScreenCapturer is much more expensive operation comparing to mutex acquirements.)",
      "parentUuid": "4bed1663_db39311e",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f120000_22138425",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5126
      },
      "writtenOn": "2017-10-20T22:13:11Z",
      "side": 1,
      "message": "In that case, I\u0027ll LGTM this to signal that I\u0027m OK with this landing with or without the optimization, at the author\u0027s discretion.",
      "parentUuid": "42bd952e_8bf45412",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f2cdfb0_ca449284",
        "filename": "modules/desktop_capture/win/screen_capturer_win_magnifier.cc",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-23T09:09:24Z",
      "side": 1,
      "message": "Tried caching it in a member.\n\nBut since the main use is in the static method OnMagImageScalingCallback, benefit is small, the member variable can be used in only one place, ScreenCapturerWinMagnifier::CaptureImage. So I\u0027m going to back out that change.",
      "parentUuid": "7f120000_22138425",
      "range": {
        "startLine": 189,
        "startChar": 14,
        "endLine": 189,
        "endChar": 27
      },
      "revId": "30807b4db2d1c76b133a5058b720599541452256",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}