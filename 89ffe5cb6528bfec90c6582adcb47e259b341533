{
  "comments": [
    {
      "key": {
        "uuid": "522d82cd_1ea34f73",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-04-10T14:14:49Z",
      "side": 1,
      "message": "Needs to be mutable in order to set_timestamp_us.",
      "revId": "89ffe5cb6528bfec90c6582adcb47e259b341533",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76e77c5a_a6133988",
        "filename": "video/video_stream_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 252,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-16T11:55:35Z",
      "side": 1,
      "message": "This is a bit confusing. First, decoded_image is passed as a non-const reference argument to this method, something which is strongly discouraged. Then it\u0027s captured by value in the lambda, which I imagine implies an extra copy? I\u0027d prefer to not even have to know what mutable means when attached to a lambda, or why it makes the compiler happier...\n\nIn any case, VideoFrame is a small and cheap object (with a refcounted pointer to the heavier VideoFrameBuffer). I would recommend not calling set_timestamp_us on the input VideoFrame, but instead simply create another instance,\n\nVideoFrame another(decoded_image.video_frame_buffer(), decoded_image.rotation(), frame_info-\u003erender_time_ms * 1000);\n\nAnd if you *really* need rtp time downstream, copy it with \n\n  another.set_timestamp(decoded_image.timestamp());\n\nIf possible, it\u0027s even better if you don\u0027t need to name this temporary object, but instead construct it where it is used, as the argument to OnDecodedFrame.",
      "parentUuid": "522d82cd_1ea34f73",
      "revId": "89ffe5cb6528bfec90c6582adcb47e259b341533",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9df576bb_e508c1e9",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-04-10T14:14:49Z",
      "side": 1,
      "message": "As I was looking around at the different timestamps in VideoFrame and found that we have to save/set the render time as well.",
      "revId": "89ffe5cb6528bfec90c6582adcb47e259b341533",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e39a69_f262577c",
        "filename": "video/video_stream_decoder_impl.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-04-16T11:55:35Z",
      "side": 1,
      "message": "Can you name it timestamp_us, for consistency with VideoFrame? And maybe timestamp_rtp or timestamp_90kHz for the rtp timestamp?",
      "parentUuid": "9df576bb_e508c1e9",
      "revId": "89ffe5cb6528bfec90c6582adcb47e259b341533",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}