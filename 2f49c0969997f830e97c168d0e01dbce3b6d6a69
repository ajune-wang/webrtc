{
  "comments": [
    {
      "key": {
        "uuid": "58429dd6_f6174f7f",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 441,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-15T11:43:03Z",
      "side": 1,
      "message": "nit: Don\u0027t think you need this get()?\nsame below",
      "range": {
        "startLine": 441,
        "startChar": 16,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d55b11e_e6c330c5",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 4
      },
      "lineNbr": 441,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-16T08:42:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "58429dd6_f6174f7f",
      "range": {
        "startLine": 441,
        "startChar": 16,
        "endLine": 441,
        "endChar": 21
      },
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "222a6d86_989954a1",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-15T20:32:01Z",
      "side": 1,
      "message": "nit: no need for else",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e7ef5b_2b5ff87d",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 147,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-16T08:42:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "222a6d86_989954a1",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6607b150_0c3db0f4",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 652,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-15T20:32:01Z",
      "side": 1,
      "message": "nit: would it make sense to have little \u0027smart\u0027 helper classes for making these sort of things happen automatically at the end of a scope?",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e04171e_322d26d1",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 652,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-16T08:42:11Z",
      "side": 1,
      "message": "I have never wrote anything like that, any hint where I can get some inspiration?",
      "parentUuid": "6607b150_0c3db0f4",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36151cec_7853d5e5",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 652,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-16T12:15:26Z",
      "side": 1,
      "message": "I now used g_autoptr and g_autofree, which does this. One thing I\u0027m not sure about is whether I\u0027m allowed to use them in first place. They require GLib 2.44 and I was told Chromium is supposed to still support Ubuntu 14.04 where the version of GLib is older, however Ubuntu 14.04 is already unsupported for a year or so.",
      "parentUuid": "9e04171e_322d26d1",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7197f1f9_ca1578d5",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 652,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-20T14:03:29Z",
      "side": 1,
      "message": "ah, let\u0027s not use g_autofree. The additional dependency isn\u0027t good, the fact that they\u0027re actually macros isn\u0027t good for two reasons, the misleading lowercase naming and being macros ðŸ˜Š\n\nWhat I was thinking about is something like a simple \u0027Scoped\u0027 class in an anonymous namespace at the top of this file.",
      "parentUuid": "36151cec_7853d5e5",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2085efd1_dad14b80",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.cc",
        "patchSetId": 4
      },
      "lineNbr": 652,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-20T14:30:10Z",
      "side": 1,
      "message": "Do you mean something like [1]? \n\n[1] - https://source.chromium.org/chromium/chromium/src/+/master:ui/base/glib/scoped_gobject.h?q\u003dui%2Fbase%2Fglib%2Fscoped_gobject.h",
      "parentUuid": "7197f1f9_ca1578d5",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd48b780_de3170f9",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-01-15T11:43:03Z",
      "side": 1,
      "message": "Got a bit confused by \"All\". If that means we would accept either screen or window, maybe it should be named \"Any\"?\n\nAlso, if this is a bit-mask of uint32_t values, the code is a bit confusing. I would do something like:\n\nenum class CaptureSourceType : uint32_t {\n  kScreen \u003d 0b01,\n  kWindow \u003d 0b10,\n  kAny \u003d 0b11 };\n\n..and then cast it to int where we actually want the numeric value.",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 53
      },
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6ffa7db_0a4f3014",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-15T20:32:01Z",
      "side": 1,
      "message": "+1 (also on coding guideline suggestion)",
      "parentUuid": "dd48b780_de3170f9",
      "range": {
        "startLine": 34,
        "startChar": 1,
        "endLine": 34,
        "endChar": 53
      },
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d78faaf_04bac281",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-15T20:32:01Z",
      "side": 1,
      "message": "shared_ptr isn\u0027t used in webrtc. You could look into using scoped_refptr instead. Being super clear on the threading model would also be useful so if you do that route and if the usage is single threaded, then you could avoid locks and DCHECK the correct threading/sequencing in that implementation.",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fac26aed_1397865a",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 4
      },
      "lineNbr": 56,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-16T08:42:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d78faaf_04bac281",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "128bd8ca_7424ae31",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-01-15T20:32:01Z",
      "side": 1,
      "message": "update name ... pw_callback_?",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba06f376_1e5f8573",
        "filename": "modules/desktop_capture/linux/xdg_desktop_portal_base.h",
        "patchSetId": 4
      },
      "lineNbr": 143,
      "author": {
        "id": 8046
      },
      "writtenOn": "2020-01-16T08:42:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "128bd8ca_7424ae31",
      "revId": "2f49c0969997f830e97c168d0e01dbce3b6d6a69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}