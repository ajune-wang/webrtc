{
  "comments": [
    {
      "key": {
        "uuid": "67e39f28_2d24832c",
        "filename": "sdk/android/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 993,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Redundant. (In GN, path/to/foo:foo and path/to/foo are the same target.)",
      "range": {
        "startLine": 993,
        "startChar": 21,
        "endLine": 993,
        "endChar": 30
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23e8e141_086fa093",
        "filename": "sdk/android/BUILD.gn",
        "patchSetId": 2
      },
      "lineNbr": 993,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "67e39f28_2d24832c",
      "range": {
        "startLine": 993,
        "startChar": 21,
        "endLine": 993,
        "endChar": 30
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d21bd6c_f581872d",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "You don\u0027t need `static` inside an unnamed namespace. And use constexpr?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 12
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d572d815_79dce790",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d21bd6c_f581872d",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 38,
        "endChar": 12
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "095505a9_465be234",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Here too.",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b36dccb_5f9d070a",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "095505a9_465be234",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "080b4363_627c0e9f",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-01-18T08:07:44Z",
      "side": 1,
      "message": "Can we use std::atomic? We are (really really slowly) trying to remove rtc::AtomicOps. :)\n\nThis one can become:\n\n  std::atomic_store_explicit(\u0026futex_, 0, std::memory_order_release)\n\n(same on line 66).",
      "range": {
        "startLine": 49,
        "startChar": 29,
        "endLine": 49,
        "endChar": 70
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "367359b9_1cf8c36e",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Sure, didn\u0027t know std::atomic was allowed :)",
      "parentUuid": "080b4363_627c0e9f",
      "range": {
        "startLine": 49,
        "startChar": 29,
        "endLine": 49,
        "endChar": 70
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9975810c_ac4f5327",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Spend a sentence documenting this function and its return value?",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96b1cf83_ed35b342",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9975810c_ac4f5327",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6de4b8d_38fa4665",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-01-18T08:07:44Z",
      "side": 1,
      "message": "This will become:\n\n  std::atomic_load_explicit(\u0026futex_, std::memory_order_acquire)",
      "range": {
        "startLine": 58,
        "startChar": 10,
        "endLine": 58,
        "endChar": 46
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7830fffd_356ba51a",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "note also that this doesn\u0027t reset the value, so the event seems to now be indefinitely signaled and no guarantee that if Wait() is called again that it won\u0027t be immediately satisfied.\nCould use CompareAndSwap here instead to avoid more than one wait to be satisfied.\nAnother thing you could do is to conditionally decrement for every wait, and increment for every signal.\nI also don\u0027t see thread checks, so if considerations for what happens if Wait() is called from multiple threads either need to be taken into account or document the fact that we don\u0027t expect Wait() to be called on multiple threads (i.e. single \"waiter\").",
      "parentUuid": "e6de4b8d_38fa4665",
      "range": {
        "startLine": 58,
        "startChar": 10,
        "endLine": 58,
        "endChar": 46
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01649e7c_3b6f55ba",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Like you commented below, this class is for the simplified use case of a single Wait() and a single Signal(), followed by discarding the object (never reused). \n\nI added a disclaimer at the top of the class. I hope that is enough and that we can keep the implementation as simple as possible.",
      "parentUuid": "e6de4b8d_38fa4665",
      "range": {
        "startLine": 58,
        "startChar": 10,
        "endLine": 58,
        "endChar": 46
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eed952a1_507d090e",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "in case two threads were to call Signal back to back, without a wait being satisfied, two signals could result in a single wait being satisfied.\n\nIs that OK and am I understanding it correctly that the AsyncSafeWaitableEvent class is meant to be used only for a single Wait() and then discarded (never reused)?\n\nIf so, that\u0027s probably good to document.",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6a3380f_1053b4af",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Answered above, but yes you understand correctly that AsyncSafeWaitableEvent is meant to be used with a single Wait().",
      "parentUuid": "eed952a1_507d090e",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a30f7f90_f800dd50",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5087
      },
      "writtenOn": "2019-01-18T08:07:44Z",
      "side": 1,
      "message": "And this:\n\n  std::atomic\u003cint\u003e futex_;",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 13
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730b46fb_0a8d37db",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a30f7f90_f800dd50",
      "range": {
        "startLine": 72,
        "startChar": 2,
        "endLine": 72,
        "endChar": 13
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edb54bee_6e330051",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "nit: stack_size_counter",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b60d97cd_f5cab5e4",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edb54bee_6e330051",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0365d7ad_48b3b856",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edb54bee_6e330051",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c383d82e_1ff35777",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Not needed.",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 6
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2e6a908_e52766db",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c383d82e_1ff35777",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 90,
        "endChar": 6
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc0c1104_8195a5d1",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "FYI - RTC_LOG on android might do blocking IO operations. I don\u0027t know how relevant that is in this case, but holding a lock while logging doesn\u0027t feel good knowing that, just fyi. Sprinkling that pattern around the code base is bound to have a trickling effect on pretty much everything.",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70e0674_3a415bd0",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 142,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done, I moved the RTC_LOG out of the scope of the lock.",
      "parentUuid": "fc0c1104_8195a5d1",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc7af465_04e0ef18",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Just {} will work too.",
      "range": {
        "startLine": 143,
        "startChar": 13,
        "endLine": 143,
        "endChar": 45
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00c37cac_06c415c6",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 143,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Cool, done.",
      "parentUuid": "bc7af465_04e0ef18",
      "range": {
        "startLine": 143,
        "startChar": 13,
        "endLine": 143,
        "endChar": 45
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "119c1ac1_3530545f",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "\u003c\u003c \"for thread \" \u003c\u003c tid;",
      "range": {
        "startLine": 157,
        "startChar": 24,
        "endLine": 157,
        "endChar": 31
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "734242e8_ba2aa6a7",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "does that not generate more code + more and longer strings?",
      "parentUuid": "119c1ac1_3530545f",
      "range": {
        "startLine": 157,
        "startChar": 24,
        "endLine": 157,
        "endChar": 31
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2c04cec_7d162309",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-18T09:21:00Z",
      "side": 1,
      "message": "Well, yes, but with the current code you get messages like \"Failed to wait for thread to finish stack trace 4711\". The grammar is actively misleading, in a way that it isn\u0027t for the other messages in this file.",
      "parentUuid": "734242e8_ba2aa6a7",
      "range": {
        "startLine": 157,
        "startChar": 24,
        "endLine": 157,
        "endChar": 31
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19cf3d94_f42bac9c",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 157,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "119c1ac1_3530545f",
      "range": {
        "startLine": 157,
        "startChar": 24,
        "endLine": 157,
        "endChar": 31
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4241422f_5ab0e856",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Use Release() instead, to avoid making a copy of the string.",
      "range": {
        "startLine": 210,
        "startChar": 24,
        "endLine": 210,
        "endChar": 27
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61d4ebd8_eaaf1168",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.cc",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4241422f_5ab0e856",
      "range": {
        "startLine": 210,
        "startChar": 24,
        "endLine": 210,
        "endChar": 27
      },
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc728f67_8d2fc309",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Is the pc always 32 bits?",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9176989d_e71272b5",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "looks like this is an address offset rather than representing the instruction pointer. rename variable? for an offset, I think 32bits is OK for now :)",
      "parentUuid": "fc728f67_8d2fc309",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e52447c0_e5cd766d",
        "filename": "sdk/android/native_api/stacktrace/stacktrace.h",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Yes, this is a relative address. The reason I went with 32 bits is because this is what the official Android libdebuggerd uses. ndk-stack seems to expect that addresses are printed with %08x. I guess we have to revisit this once our .so files becomes bigger than 4 GB...\n\nI renamed it to \u0027relative_address\u0027 and I agree \u0027program_counter\u0027 makes it sound like an absolute address. The reason I have to convert it into relative-addressing is to make it work with tools such as nm, objdump, and ndk-stack.",
      "parentUuid": "fc728f67_8d2fc309",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50e97430_6f51993e",
        "filename": "sdk/android/native_unittests/stacktrace/stacktrace_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-01-18T08:49:36Z",
      "side": 1,
      "message": "nit: \"GetAddress()\" is a little ambiguous as a function name. Could call this GetCurrentModuleRelativeExecutionAddress() :D",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d30b667_e38f11c8",
        "filename": "sdk/android/native_unittests/stacktrace/stacktrace_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done, renamed it to GetCurrentRelativeExecutionAddress().",
      "parentUuid": "50e97430_6f51993e",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17efbdb5_6d975304",
        "filename": "sdk/android/native_unittests/stacktrace/stacktrace_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T21:11:01Z",
      "side": 1,
      "message": "Use std::atomic\u003cbool\u003e instead; volatile doesn\u0027t give you atomic instructions.",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f094136b_951519c1",
        "filename": "sdk/android/native_unittests/stacktrace/stacktrace_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 5098
      },
      "writtenOn": "2019-01-18T12:47:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17efbdb5_6d975304",
      "revId": "85c518e807b37aea3c3a47271b40fa45ae99e9d3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}