{
  "comments": [
    {
      "key": {
        "uuid": "2b9dfb42_c547f573",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp.h",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-14T08:56:02Z",
      "side": 1,
      "message": "How can you be sure audio modules are configured with different default?\n(e.g. audio/ChannelReceive should use different interval)\n\nMay be complicated a bit: use default value 0 and in RtpRtcpImpl do a check:\nrtcp_report_interval_ms \u003e 0 ? rtcp_report_interval_ms : (audio ? 5000 : 1000);",
      "range": {
        "startLine": 98,
        "startChar": 39,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6828caed_9c81ebb6",
        "filename": "modules/rtp_rtcp/include/rtp_rtcp.h",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 6278
      },
      "writtenOn": "2018-11-15T08:00:35Z",
      "side": 1,
      "message": "Done. I moved this in the constructor of `ModuleRtpRtcpImpl`",
      "parentUuid": "2b9dfb42_c547f573",
      "range": {
        "startLine": 98,
        "startChar": 39,
        "endLine": 99,
        "endChar": 0
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00fd8448_4478a757",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 779,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-14T07:40:38Z",
      "side": 1,
      "message": "Could perhaps be simplified to something like\n\n  if (audio_) {\n    minIntervalMs \u003d report_interval_ms_;\n  } else {\n    minIntervalMs \u003d max(report_interval_ms_, ... );\n  }\n\nAnd can we use int64_t throughout, without casting to uint32_t? It looks like next_time_to_send_rtcp_, the member ultimately updated, is an int64_t.",
      "range": {
        "startLine": 769,
        "startChar": 0,
        "endLine": 779,
        "endChar": 5
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d3b3b89_40d39d24",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 779,
      "author": {
        "id": 6278
      },
      "writtenOn": "2018-11-15T08:00:35Z",
      "side": 1,
      "message": "Good point, I don\u0027t think we need int64_t. Looks like int32_t should be enough and result in minimal amount of casts.",
      "parentUuid": "00fd8448_4478a757",
      "range": {
        "startLine": 769,
        "startChar": 0,
        "endLine": 779,
        "endChar": 5
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c277a468_30931b13",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 779,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-15T08:18:34Z",
      "side": 1,
      "message": "If you don\u0027t need 64 bits, I think plain int is preferable over int32_t. See https://google.github.io/styleguide/cppguide.html#Integer_Types",
      "parentUuid": "0d3b3b89_40d39d24",
      "range": {
        "startLine": 769,
        "startChar": 0,
        "endLine": 779,
        "endChar": 5
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3bbd6d87_da1f6d04",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 779,
      "author": {
        "id": 6278
      },
      "writtenOn": "2018-11-15T18:58:58Z",
      "side": 1,
      "message": "Done. That was a good read about the reason behind it.",
      "parentUuid": "c277a468_30931b13",
      "range": {
        "startLine": 769,
        "startChar": 0,
        "endLine": 779,
        "endChar": 5
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c68d7c74_d43f103e",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-14T07:40:38Z",
      "side": 1,
      "message": "Do we need this getter at all? It\u0027s a construction time const, and method used in only one place, ModuleRtpRtcpImpl::Process. \n\nRtpRtcp could pass the config value when constructing RtcpReceiver, and delete arguments to RtcpReceiver::RtcpRrTimeout and RtcpReceiver::RtcpRrSequenceNumberTimeout.\n\n(And method name is mis-spelled).",
      "range": {
        "startLine": 965,
        "startChar": 0,
        "endLine": 967,
        "endChar": 1
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d582533f_cd402f94",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 967,
      "author": {
        "id": 6278
      },
      "writtenOn": "2018-11-15T08:00:35Z",
      "side": 1,
      "message": "Done.\n\nProvide interval to the RtcpReceiver constructor. Because RtcpReceiver does not have the is `audio_` flag, so the default value will be computed in RtpRtcpModule",
      "parentUuid": "c68d7c74_d43f103e",
      "range": {
        "startLine": 965,
        "startChar": 0,
        "endLine": 967,
        "endChar": 1
      },
      "revId": "d016aa5c596a157de7c8515ee86e6a8b68ff62e2",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}