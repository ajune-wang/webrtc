{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c71c4b91_06dbdeca",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-03-18T21:52:24Z",
      "side": 1,
      "message": "NIT: Can you add hard wraps at 72? A few look to  be off by just one character.",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 13
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9abe24b_f4dfeae2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 18829
      },
      "writtenOn": "2022-03-21T16:15:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c71c4b91_06dbdeca",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 13
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e46f84c_70b76f24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-03-18T21:52:24Z",
      "side": 1,
      "message": "Would it make sense to split the \"SelectSources\" code into a helper class that can trigger a passed-in callback when a source is selected?",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 75
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b402e6a_96dc871d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 24,
      "author": {
        "id": 18829
      },
      "writtenOn": "2022-03-21T16:15:09Z",
      "side": 1,
      "message": "SelectSources has to be called on the screencast interface so it makes sense to keep it tied to the existing screencast portal class. The callback has been parameterized in this method so that both remote desktop portal and screencast portal can keep on making use of this common code.",
      "parentUuid": "1e46f84c_70b76f24",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 24,
        "endChar": 75
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e252874c_dffbd8b2",
        "filename": "modules/desktop_capture/linux/wayland/screencast_portal.cc",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-03-18T21:52:24Z",
      "side": 1,
      "message": "I think you can/should call the other constructor just with these values as needed?",
      "range": {
        "startLine": 42,
        "startChar": 5,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "810145ed_9a5f6d2a",
        "filename": "modules/desktop_capture/linux/wayland/screencast_portal.cc",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 18829
      },
      "writtenOn": "2022-03-21T16:15:09Z",
      "side": 1,
      "message": "That is correct. This existing constructor configures defaults for the hooks that are being exposed in this change. If the client doesn\u0027t want to override this class\u0027s behavior then they keep on using this constructor, otherwise they use the one at L48.",
      "parentUuid": "e252874c_dffbd8b2",
      "range": {
        "startLine": 42,
        "startChar": 5,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48f51786_930504ef",
        "filename": "modules/desktop_capture/linux/wayland/screencast_portal.cc",
        "patchSetId": 6
      },
      "lineNbr": 46,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-03-21T20:02:23Z",
      "side": 1,
      "message": "Sorry, what I meant was that I think you should modify this constructor to be:\n\n```\nScreenCastPortal::ScreenCastPortal(...) \n: ScreenCastPortal(source_type, \n                   notifier, \n                   OnProxyRequested, \n                   OnSourcesRequestResponseSignal, \n                   this) {}\n```",
      "parentUuid": "810145ed_9a5f6d2a",
      "range": {
        "startLine": 42,
        "startChar": 5,
        "endLine": 46,
        "endChar": 25
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28340bdf_3ff5e851",
        "filename": "modules/desktop_capture/linux/wayland/screencast_portal.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-03-18T21:52:24Z",
      "side": 1,
      "message": "Are these expected to all/mostly all be set together? Would it make sense to have a method named something like \"SetSessionConfiguration\" that either took all of these values or a struct containing them? (With nulls allowed where needed)?",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 107,
        "endChar": 28
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0fdc3a64_0c3d24cb",
        "filename": "modules/desktop_capture/linux/wayland/screencast_portal.h",
        "patchSetId": 6
      },
      "lineNbr": 107,
      "author": {
        "id": 18829
      },
      "writtenOn": "2022-03-21T16:15:09Z",
      "side": 1,
      "message": "L101-L103 are called independently for setting data but since they are called sequentially, it is possible to have a single (somewhat wider) API instead.\n\nL105 is a getter.\n\nL106, L107 are existing methods. I have changed there access type since they are invoked out of this class in subsequent changes.",
      "parentUuid": "28340bdf_3ff5e851",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 107,
        "endChar": 28
      },
      "revId": "62f40cf4275f1794046ccbf484968d8db18747ba",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}