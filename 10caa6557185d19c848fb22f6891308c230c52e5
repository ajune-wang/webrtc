{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "de36abb4_f0b00c44",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 1
      },
      "lineNbr": 818,
      "author": {
        "id": 5607
      },
      "writtenOn": "2022-11-21T19:17:31Z",
      "side": 1,
      "message": "Would it make sense to just return a single default frame length instead of nullopt? I\u0027m not sure how the calling code should handle nullopt.",
      "range": {
        "startLine": 818,
        "startChar": 13,
        "endLine": 818,
        "endChar": 26
      },
      "revId": "10caa6557185d19c848fb22f6891308c230c52e5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7861ccdf_1c608a05",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 1
      },
      "lineNbr": 818,
      "author": {
        "id": 8038
      },
      "writtenOn": "2022-11-21T19:55:37Z",
      "side": 1,
      "message": "Yes it is unfortunate that this API returns optional.\nI think we can make two follow up changes: handle nullopt at the caller and make sure that supoprted_frame_lenghts is non-empty (instead of providing a default here).",
      "parentUuid": "de36abb4_f0b00c44",
      "range": {
        "startLine": 818,
        "startChar": 13,
        "endLine": 818,
        "endChar": 26
      },
      "revId": "10caa6557185d19c848fb22f6891308c230c52e5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9aac165f_79f7869e",
        "filename": "modules/audio_coding/codecs/opus/audio_encoder_opus.cc",
        "patchSetId": 1
      },
      "lineNbr": 818,
      "author": {
        "id": 5607
      },
      "writtenOn": "2022-11-21T20:18:22Z",
      "side": 1,
      "message": "Sounds good",
      "parentUuid": "7861ccdf_1c608a05",
      "range": {
        "startLine": 818,
        "startChar": 13,
        "endLine": 818,
        "endChar": 26
      },
      "revId": "10caa6557185d19c848fb22f6891308c230c52e5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "10caa6557185d19c848fb22f6891308c230c52e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "10caa6557185d19c848fb22f6891308c230c52e5",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}