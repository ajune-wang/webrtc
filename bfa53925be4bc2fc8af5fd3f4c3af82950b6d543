{
  "comments": [
    {
      "key": {
        "uuid": "222b7991_b5582ca1",
        "filename": "audio/voip/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Nit: space after #",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c3fd3d3_cf0419b3",
        "filename": "audio/voip/BUILD.gn",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "222b7991_b5582ca1",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ed5cfc1_2ab6baca",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Use absl::WrapUnique when taking ownership of a raw pointer; that makes it easier to see what\u0027s happening.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a98fbd88_cdfc27d3",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5ed5cfc1_2ab6baca",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11b07825_a8d484cd",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-11T10:17:43Z",
      "side": 1,
      "message": "It doesn\u0027t seem done?",
      "parentUuid": "a98fbd88_cdfc27d3",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eef096d3_b0e2caf3",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-11T22:33:52Z",
      "side": 1,
      "message": "I have uploaded series of patch sets.  Please check the latest. Thanks.",
      "parentUuid": "11b07825_a8d484cd",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a795183_7312574d",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "This looks odd to me. Could we use consistent terminology here? I guess we are talking about the rtp payload type in both cases? So maybe rtp_payload_type_ \u003d rtp_payload_type; Possibly current_codec_rtp_payload_type_ if you want to be more explicit?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 32
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c1ed48f_e4e980a9",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I removed the variable since it wasn\u0027t used. Not sure how I still kept it.",
      "parentUuid": "3a795183_7312574d",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 60,
        "endChar": 32
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54519919_1b170eca",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Similar concern here as above, I\u0027d like them to be more similar in naming.",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86f41500_2dbaeb9e",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "changed to encoder_format_",
      "parentUuid": "54519919_1b170eca",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 36
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee35abdc_5f5d59c2",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "inline?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 0
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cffe52da_fed4c12c",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I added RTC_DCHECK_RUN_ON and turned the member into optional. Please check the new code. Thanks.",
      "parentUuid": "ee35abdc_5f5d59c2",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 81,
        "endChar": 0
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52075226_b0183d4d",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Variables should have snake_case names: https://google.github.io/styleguide/cppguide.html#Variable_Names",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58a7751d_0cbd64cc",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Sorry, I copied it from channel_send and didn\u0027t notice it. Changed now. Thanks.",
      "parentUuid": "52075226_b0183d4d",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a25c133_422aa870",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Nice use of ArrayView.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af152435_0a13fad4",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5a25c133_422aa870",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f266cd7_e618e82d",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Declare a descriptive name for the dummy time?",
      "range": {
        "startLine": 94,
        "startChar": 36,
        "endLine": 97,
        "endChar": 39
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cde24666_3971c7f2",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 97,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f266cd7_e618e82d",
      "range": {
        "startLine": 94,
        "startChar": 36,
        "endLine": 97,
        "endChar": 39
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "443601af_032974f1",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "This looks confusing to me in this context.",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 106,
        "endChar": 47
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "249d0deb_a5c2a9fc",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Yeah, it does look out of place as we are using RTP sender not RTCP sender. I copied the logic in same SendData in channel_send.cc and I will need to dig more to understand the detail.  I will change the comment that it needs to reflect the same logic here for now.",
      "parentUuid": "443601af_032974f1",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 106,
        "endChar": 47
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a31b17c4_54482fc7",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Per the DCHECK above, this cannot happen.",
      "range": {
        "startLine": 123,
        "startChar": 2,
        "endLine": 125,
        "endChar": 3
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab944d40_b208858c",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a31b17c4_54482fc7",
      "range": {
        "startLine": 123,
        "startChar": 2,
        "endLine": 125,
        "endChar": 3
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6e933c4_844ca7e3",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Don\u0027t add blocking on task queue. We only have the in the code base for legacy reasons, if you need the caller to be able to continue when the operation is finished, add a callback parameter to StopSend.\n\nNote that this also means that you\u0027ll have to ensure that the destructor is save to run without requiring blocking on the task queue. Typically this is not a problem to achieve for new code, but it can be an issue if you have some action that must run on the task queue just before destruction.",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "042c84f6_d41513dc",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "ok thanks. Would you happen to know the legacy reason for this case?  This is almost same logic as channel_send.cc in https://cs.corp.google.com/piper///depot/google3/third_party/webrtc/files/stable/webrtc/audio/channel_send.cc?rcl\u003d291705042\u0026l\u003d549.\n\nI like to follow your suggestion but converting synchronous operation into asynchronous one seems to require more thinking. Would you think ignoring encoder_queue_ is good way to handle it?  After all, when we are stopping, we don\u0027t really worry about missing last a few RTPs in the end.  Not sure how crucial it is for not sending RTCP BYE and perhaps that may be the reason for wait here?",
      "parentUuid": "c6e933c4_844ca7e3",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee8bb455_d57b8277",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-06T08:55:49Z",
      "side": 1,
      "message": "Missed this, if we need to send RTCP BYE at the end based on a signal from the encoder queue, then we will need to ensure that the class is stopped before destruction, with a async Stop call. For en example of how this can be designed, see RtcEventLogImpl::StopLogging(std::function\u003cvoid()\u003e callback)\n\nNote that it will be up to the caller to ensure that the callback has been called before calling the destructor.",
      "parentUuid": "042c84f6_d41513dc",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ab567e0_de28062e",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-06T16:41:18Z",
      "side": 1,
      "message": "I understand that but I do wonder if I am missing other reasons by turning into asynchronous flow as I don\u0027t have the whole scope the user cases and flow yet. IMHO, I think it\u0027s fine to be synchronous for this logic like channe_send.cc as some codes are expected to operate in synchronous mode when dealing with lower level code (e.g microphone/speaker init/start in OS device layer) and the nature of RTP stack is that it runs in real time and do not anticipate it will prolong the operation by keeping this synchronous. It does simplify logic for application and also internally.",
      "parentUuid": "ee8bb455_d57b8277",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4c79b8e_6e6ac492",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-09T08:04:01Z",
      "side": 1,
      "message": "An option if you don\u0027t need the async behavior is to skip the task queue completely, and run the encoder on the same thread as the rest. That simplifies things a lot, in particular for running on servers, depending on the run environment it might even be more efficient.",
      "parentUuid": "8ab567e0_de28062e",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47344c5e_71afff76",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-10T16:31:39Z",
      "side": 1,
      "message": "Added thread assumption/requirement on class level comment as requested by Niels.  I think we need to keep encoder_queue_ to protect the OS input thread\u0027s real time operation.  Let\u0027s keep this as it is as turning this into asynchronous mode (which is putting the onus on caller) would complicate the API usage.  I wouldn\u0027t think this will cause any issue as it has been designed and used this way for a while already and don\u0027t any foreseeable issue with it.",
      "parentUuid": "e4c79b8e_6e6ac492",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c638f090_96f7857e",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-10T17:12:26Z",
      "side": 1,
      "message": "Making an API simple but dangerous (can cause deadlocks if it\u0027s not called correctly) seems less preferable compared to making it slightly more complex while putting the onus on the app to handle the potentially dangerous parts.\n\nIt\u0027s fine if the client app handles this in the same way, by posting a task and blocking, then the assumption is not built into the API itself. This makes it easy for the app to change the behaviour in the future to handle everything on task queues, using a post-back rather than a blocking event.",
      "parentUuid": "47344c5e_71afff76",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5831dafd_e59b890a",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-11T02:41:51Z",
      "side": 1,
      "message": "Thanks. Please take a look at this logic below which is the immediate layer one above this AudioEgress::StopSend. \n\nhttps://webrtc-review.googlesource.com/c/src/+/169023/2/audio/voip/voip_core.cc#234.\n\nThere is some post logic that is somewhat involved which needs to run after every AudioEgress::StopSend() occurrence.  Currently AudioEgress::IsSending() status is tracked via RtpRtcp::SendingMedia() and as we convert AudioEgress::StopSend() into asynchronous mode, now status of RTP Stack also needs to be queried asynchronously to know the real status as we would need to incorporate RtpRtcp::SetSendingMediaStatue(false) within encoder_queue_ thread context.  Therefore, we need to create a post VoipCore::StopSend() method that must be invoked once by application as it receives its callback as shutting off audio device module must happen after queue is drained.  I don\u0027t think this is a slight change but rather somewhat involved process even on API usage itself.  I would prefer to set reasonable boundary on rtc::Event::Wait() (about 1 second) instead of rtc::Event::Forever with some error logging if it doesn\u0027t occur within expected time frame.",
      "parentUuid": "c638f090_96f7857e",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35f66e6d_c234d1d4",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-11T03:59:59Z",
      "side": 1,
      "message": "Actually on second thought, I take it back.  It could be done by wrapping the application callback within a new callback in VoipCore::StopSend which can later be sequenced to be called together.\n\nI actually gave a second thought on why we are using encoder_queue_ here and I checked the old legacy webrtc::voe::channel.cc and it doesn\u0027t use any sort of queue for OS audio thread but rather we let it serve from APM/ACM all the way up to RTP stack and even socket transmission.  It does make sense as audio encoding shouldn\u0027t take much load.\n\nI tried to see when this encoder_queue_ was introduced and I found this in the changeset log.\n\n45 237453569 rtc-webrtc-importer-jobs 2019-03-08 08:28:08 (local) Import range e01857cca4..62c7b39c71 (27037:27039)\n\n* Adds ChannelSend specific encoder task queue. (srte@webrtc.org)\n\nDo you remember the context for adding the task queue? :) It would indeed be better to remove the queue to simplify it as original voe::channel.cc implementation.",
      "parentUuid": "5831dafd_e59b890a",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ea5691a2_2e692e5f",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-11T10:17:43Z",
      "side": 1,
      "message": "\u003e [...]  It does make sense as audio encoding shouldn\u0027t take much load.\n\nAudio encoding (specifically, Opus encoding) is rather CPU intensive.",
      "parentUuid": "35f66e6d_c234d1d4",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "732bb620_7b40c550",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-11T22:33:52Z",
      "side": 1,
      "message": "I agree but I think it should be doable as I wouldn\u0027t expect it cause processing delay for periodical 10 ms input sample.  We can introduce the queue back if we observe issues with it.  I will prepare a new patch set without using encoder_queue_.",
      "parentUuid": "ea5691a2_2e692e5f",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69ace132_902cd0bf",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-12T01:10:03Z",
      "side": 1,
      "message": "I wasn\u0027t involved in the details, but I seem to recall problems with occasional audio stuttering being caused by failure to poll the microphone input buffer often enough. Moving audio encoding (which is usually the single most CPU intensive thing that WebRTC does, unless a software video codec is in use) back into the time critical audio input polling loop seems like a step backwards.\n\nIIRC the problem wasn\u0027t that encoding 10 ms of audio in itself takes more than 10 ms, it\u0027s that (1) audio encoding is more bursty than that, since we may accumulate up to 120 ms of audio that we then encode in one go; and (2) we may be sharing the CPU with some other process, and the tighter our margins, the higher the risk that that contention will push us over the edge and cause us to drop incoming audio.",
      "parentUuid": "732bb620_7b40c550",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fa7b5af_1ca63798",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-12T06:27:30Z",
      "side": 1,
      "message": "Thanks, Karl.  Would you happen to know the ticket on that issue? If not, I will try to dig and find that as well.  It does make sense that when both audio and video are involved plus we are doing ptime with 120 ms, we may hit that kind of issue.  From my experience of using old voice engine without task queue in the middle, it was fine to use opus with 20 ms ptime and didn\u0027t hear any audio stutter issues on mobile devices.  I am curious to know the CPU impact on using longer ptime as 120 ms.  However, what I heard of 120 ms use case is for fairly low bandwidth network where we already reduce bit rate to the minimum and to even reduce further on bit rate, we are adjusting ptime to save more bytes from IP/RTP headers. IMHO, in that kind of environment, audio quality impact may have been easily due to other network factors (e.g jitter, packet loss).  But I would agree that we should do more investigation on that and make sure we don\u0027t make the same mistake if that is the root cause.",
      "parentUuid": "69ace132_902cd0bf",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03f1ab20_bfc1cab0",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 149,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-12T08:06:33Z",
      "side": 1,
      "message": "Sorry, no, all I remember is a coworker spending one or a few weeks getting to the bottom of why we were unable to reliably poll the mic input often enough to keep its ring buffer from wrapping, which produced a curious stuttering sound when input data from time t was overwritten with input data from time t + k before we got around to reading it. (This was in Chromium on one of the desktop platforms IIRC.) It left me with the impression that trying to live with less than generous margins in the polling might land you with very hard to debug audio dropout bugs that manifest only sporadically.\n\nThus my gut feeling that offloading the encoding to a different thread is a splendid idea...",
      "parentUuid": "8fa7b5af_1ca63798",
      "range": {
        "startLine": 149,
        "startChar": 0,
        "endLine": 149,
        "endChar": 35
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "422a3932_0db18d1b",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Can you use rtc::dchecked_cast?",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 33
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19403c26_a647aae1",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "422a3932_0db18d1b",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 33
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccd19925_f99eb567",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 181,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-11T10:17:43Z",
      "side": 1,
      "message": "Thanks. Please use it often; it\u0027s a static_cast in production builds, but in debug builds it checks that the conversion was non-lossy.",
      "parentUuid": "19403c26_a647aae1",
      "range": {
        "startLine": 181,
        "startChar": 22,
        "endLine": 181,
        "endChar": 33
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b4d0c7e_fbff78b6",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Inline this instead, it\u0027s only called once, and it\u0027s only two lines if you skip the extra assignment.",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 34
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1b432ec_3d2b32dc",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "It was originally inlined but I extracted for better testing on mute state as seen in unit test. I would need to come up with different way to testing mute it seems.",
      "parentUuid": "6b4d0c7e_fbff78b6",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 34
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c8c8c91_fe857171",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 185,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T21:17:01Z",
      "side": 1,
      "message": "This is removed and inline-d now.",
      "parentUuid": "f1b432ec_3d2b32dc",
      "range": {
        "startLine": 185,
        "startChar": 18,
        "endLine": 185,
        "endChar": 34
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38ecf6e9_ad3b1ec5",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "If you document the member variables where they\u0027re declared as I suggested, this comment will likely become superfluous.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85768f1f_641bbbbb",
        "filename": "audio/voip/audio_egress.cc",
        "patchSetId": 1
      },
      "lineNbr": 223,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "38ecf6e9_ad3b1ec5",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "445d22e4_8df8e9ec",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "General comment for this file: Ensure that methods are documented (except for the interface methods you implement; just document that they implement the interface).",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "971b8168_2112fe16",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "will do. thanks.",
      "parentUuid": "445d22e4_8df8e9ec",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90b0b672_65674fd9",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "971b8168_2112fe16",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5b46bff4_be890ec9",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Document this class.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "515f0a08_d051537d",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b46bff4_be890ec9",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2419392e_f3fa0fb3",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "final?",
      "range": {
        "startLine": 31,
        "startChar": 17,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35d88810_cf949c43",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "It looks like a lot of this is based on channel send? It would be nice with an explanation of how these relate in the class documentation. Would it be possible to share parts of the code to avoid having to maintain duplicate functionality?",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a115913b_1aa5a8f1",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "I am planning to have AudioChannel inherit this as to avoid the need to add accessors for each AudioEgress/Ingress API.  Hope the comment helps in the link.\n\nhttps://webrtc-review.googlesource.com/c/src/+/169023/2/audio/voip/audio_channel.h",
      "parentUuid": "2419392e_f3fa0fb3",
      "range": {
        "startLine": 31,
        "startChar": 17,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ecaed84_925beff6",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "Yes, originally we considered refactoring so that we don\u0027t need to deal with duplicate codes but as I was working closely to remove all unwanted to logic and examine the use case, it became clear that it would be better to keep this separate. I have put some comment around https://webrtc-review.googlesource.com/c/src/+/169023/2/audio/voip/audio_channel.h but I will try to add more comment around the relationship here as well.",
      "parentUuid": "35d88810_cf949c43",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "74491595_fca4c117",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ecaed84_925beff6",
      "range": {
        "startLine": 31,
        "startChar": 6,
        "endLine": 31,
        "endChar": 17
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acfbd51f_edc5ef66",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 31,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a115913b_1aa5a8f1",
      "range": {
        "startLine": 31,
        "startChar": 17,
        "endLine": 31,
        "endChar": 18
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70f7765b_8ab7dfca",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "shared_ptr is banned in WebRTC and Chromium, unfortunately.",
      "range": {
        "startLine": 33,
        "startChar": 14,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4f2f20e_14f82b84",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5087
      },
      "writtenOn": "2020-03-02T08:31:01Z",
      "side": 1,
      "message": "Alternative: https://cs.chromium.org/chromium/src/third_party/webrtc/api/scoped_refptr.h",
      "parentUuid": "70f7765b_8ab7dfca",
      "range": {
        "startLine": 33,
        "startChar": 14,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b41c8408_14361021",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Using shared pointers should be avoided, instead, figure out where the module should be owned and provide raw pointer to non-owning classes.",
      "parentUuid": "b4f2f20e_14f82b84",
      "range": {
        "startLine": 33,
        "startChar": 14,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7b37647_c7c36521",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "ok thanks.  I will go with scoped_refprt.  The issue is with AudioChannel inheriting both AudioIngress and AudioEgress and they all share one instance of RTP stack.  As virtual destruction sequence will remove in sequence of AudioChannel -\u003e AudioEgress -\u003e AudioIngress, AudioChannel no longer couldn\u0027t manage the scope of rtp stack anymore.  I could have AudioIngress holds the unique_ptr\u003cRtpRtcp\u003e but rather thought it would be ideal to use shared ptr to handle this to avoid future confusion.",
      "parentUuid": "b41c8408_14361021",
      "range": {
        "startLine": 33,
        "startChar": 14,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4698eff_ea2cb207",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-03T08:26:42Z",
      "side": 1,
      "message": "I see, my suggestion to solve this is that you use composition, make rtprtcp, egress, ingress members of AudioChannel. this has other readability benefits as well, but will solve the destruction order problem and make it much easier for the reader to understand where rtprtcp is destroyed.",
      "parentUuid": "d7b37647_c7c36521",
      "range": {
        "startLine": 33,
        "startChar": 14,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fc3a66d_d66d0f1e",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Thanks. That was the first approach I started out with.  But then I realized that I need to add an public API on AudioChannel for each API in AudioEgress/Ingress as other class will be interfacing AudioChannel and AudioChannel looked unnecessarily complicated.  To reduce API opening up in AudioChannel, I initially returned non-const pointer to AudioEgress/Ingress from AudioChannel which seemed not elegant.  Finally, it seems to work much simpler by inheriting AudioEgress/Ingress directly thus we don\u0027t have any need to write another accessing API in AudioChannel.  I had to work two things on this approach.\n\n- Use virtual on Start*/Stop* operation as that would need to orchestrated by AudioChannel level to correctly handle send-only/sendrecv/recv-only semantics for rtp stack.\n- Control the rtp stack life scope by using shared_ptr as destruction order started out with AudioChannel.\n\nWhile I was looking at using scoped_refprt with RtpRtcp, it\u0027s not possible unless RtpRtcp inherits rtc::RefCountInterface.  Since I don\u0027t want to make RtpRtcp rtc::RefCountInterface and shared_ptr is banned (is there a wiki page explaining this?), I will need to use composition and expose non const reference of egress/ingress from audio channel to implement this.",
      "parentUuid": "b4698eff_ea2cb207",
      "range": {
        "startLine": 33,
        "startChar": 14,
        "endLine": 33,
        "endChar": 29
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e8d700d_2df22e46",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "I don\u0027t understand. Will you be subclassing AudioEgress and overriding these?",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24649774_ff11cd0a",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "Yes, that\u0027s the plan as shown here https://webrtc-review.googlesource.com/c/src/+/169023/2/audio/voip/audio_channel.h.\n\nThe main reason is to avoid providing additional accessor API in audio channel for this.",
      "parentUuid": "8e8d700d_2df22e46",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e49a2448_e1206813",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I think this is same discussion as above on shared_ptr usage.",
      "parentUuid": "24649774_ff11cd0a",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0719783a_f0c90ec1",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Consider `IsSending`, `SetMuted`.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11b24f19_1cd87efa",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "Will do thanks.",
      "parentUuid": "0719783a_f0c90ec1",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c42094_515ae4e5",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11b24f19_1cd87efa",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6995dec7_635171ce",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "What is the meaning of frequency in this context and is this in hz?",
      "range": {
        "startLine": 54,
        "startChar": 56,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26395755_974830f6",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Is this the rtp payload type?",
      "range": {
        "startLine": 54,
        "startChar": 38,
        "endLine": 54,
        "endChar": 50
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9b4350f_b004986c",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "yea they are.",
      "parentUuid": "26395755_974830f6",
      "range": {
        "startLine": 54,
        "startChar": 38,
        "endLine": 54,
        "endChar": 50
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7889dc87_786b2e92",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "It\u0027s the sampling rate so yes in hz.  \n\nhttps://cs.corp.google.com/piper///depot/google3/third_party/webrtc/files/stable/webrtc/audio/channel_send.cc?rcl\u003d291705042\u0026l\u003d114",
      "parentUuid": "6995dec7_635171ce",
      "range": {
        "startLine": 54,
        "startChar": 56,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd9d869d_23756222",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-03T08:26:42Z",
      "side": 1,
      "message": "Then I suggest sample_rate_hz as the parameter name.",
      "parentUuid": "7889dc87_786b2e92",
      "range": {
        "startLine": 54,
        "startChar": 56,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21aad8ac_1c9e1990",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-03T08:26:42Z",
      "side": 1,
      "message": "Then I suggest rtp_payload_type for clarity.",
      "parentUuid": "e9b4350f_b004986c",
      "range": {
        "startLine": 54,
        "startChar": 38,
        "endLine": 54,
        "endChar": 50
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3054caf2_c0e66aff",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21aad8ac_1c9e1990",
      "range": {
        "startLine": 54,
        "startChar": 38,
        "endLine": 54,
        "endChar": 50
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "739220c5_ced68bf9",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cd9d869d_23756222",
      "range": {
        "startLine": 54,
        "startChar": 56,
        "endLine": 54,
        "endChar": 73
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "912f801f_f4f0dc4c",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "It would be nice if some of the signature were better explained. What is event, and what values are valid? What does the return value represent? How is the duration used? What does \"Outband\" mean?",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 61
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8fcf47f_5ca15e5c",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "I will add some more detail comment on DTMF usage.",
      "parentUuid": "912f801f_f4f0dc4c",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 61
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a2fceea_48e68587",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I added more comment and removed \u0027outband\u0027 word from method as it was incorrectly used in ChannelSend.h\n\nhttps://cs.corp.google.com/piper///depot/google3/third_party/webrtc/files/stable/webrtc/audio/channel_send.cc?rcl\u003d291705042\u0026l\u003d113\n\nThough we are sending DTMF as separate RTP packets (not using audio codec), we are still using same \u0027band\u0027 so technically this should be named \u0027inband\u0027.\n\nhttps://en.wikipedia.org/wiki/In-band_signaling\n\nFor now I removed the outband word to remove the confusion and comment on RFC4733 should be clear for readers on what these methods will do.",
      "parentUuid": "f8fcf47f_5ca15e5c",
      "range": {
        "startLine": 55,
        "startChar": 2,
        "endLine": 55,
        "endChar": 61
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa85cabd_752e6b5a",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Why is this private, but the interface is public? Also for method below.",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 6
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e99391_f32c3652",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "These are inherited method from AudioSender and SendData.  Yes, these will be accessible as public to AudioSender/AudioPacketizationCallback users and we could place this under public section of this class as well but I thought it would be less confusing for AudioEgress user as they are more of internal communication method (meaning actual AudioEgress user shouldn\u0027t be accessing these interfaces directly as they were inherited for the purpose of interacting with other internal class). I hope it makes sense.",
      "parentUuid": "aa85cabd_752e6b5a",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 6
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3aaf83b_982c2455",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-03T08:26:42Z",
      "side": 1,
      "message": "As long as the inheritance is kept public I think it\u0027s appropriate to keep these public as well. An alternative would be to have a GetAudioSender() method that returns an upcasted this (but allow changing the implementation in the future) and use private inheritance.",
      "parentUuid": "e1e99391_f32c3652",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 6
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bfbbe4c_cac0c77b",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "ok, I will move them under public for clarity.",
      "parentUuid": "e3aaf83b_982c2455",
      "range": {
        "startLine": 61,
        "startChar": 2,
        "endLine": 61,
        "endChar": 6
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f04d259_b0785808",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "In a class where you handle concurrency explicitly, (1) ensure that every member variable is a constant, is GUARDED_BY something, or has a comment that explains why no synchronization is needed; and (2) since you protect subsets of the state differently (with the thread checker and the encoder queue), lead with a comment that explains this high level split.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da4e4c69_fd20a0ab",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f04d259_b0785808",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcdded85_2dc5212b",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "It seems like these don\u0027t change during the lifetime of the object, make the pointers const to indicate this. You can still operate on the pointer target as mutable.",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 75,
        "endChar": 0
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a53d6419_5cb1b6e0",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "Do you mean like this?  std::unique_ptr\u003cconst RTPSenderAudio\u003e",
      "parentUuid": "fcdded85_2dc5212b",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 75,
        "endChar": 0
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b355e8c1_5a669b7a",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-03T08:26:42Z",
      "side": 1,
      "message": "No, that would make the member const, I meant like: const std::unique_ptr\u003cRTPSenderAudio\u003e (and RtpRtcp* const rtp_rtcp_ for raw pointer)",
      "parentUuid": "a53d6419_5cb1b6e0",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 75,
        "endChar": 0
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33d65631_7cee2ae8",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b355e8c1_5a669b7a",
      "range": {
        "startLine": 72,
        "startChar": 1,
        "endLine": 75,
        "endChar": 0
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5e04d15_ba4a8c92",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Please add some indication of the unit to the name. Also try to add some indication of what it represents, is it the time of creating the class, last send packet, last capture?",
      "range": {
        "startLine": 77,
        "startChar": 11,
        "endLine": 77,
        "endChar": 21
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a8c8f89_07a4312c",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5e04d15_ba4a8c92",
      "range": {
        "startLine": 77,
        "startChar": 11,
        "endLine": 77,
        "endChar": 21
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ac018c5_9defd5ae",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "I think \"muted_\" would be clearer in relation to previous_frame_muted_\n\nOr \"mute_incoming_frames_\" if you want to elaborate.",
      "range": {
        "startLine": 79,
        "startChar": 7,
        "endLine": 79,
        "endChar": 18
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "640035f6_474fb918",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 79,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ac018c5_9defd5ae",
      "range": {
        "startLine": 79,
        "startChar": 7,
        "endLine": 79,
        "endChar": 18
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95fd9f0b_21721871",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "could this be rephrased in a more behavioral way? AFAICT it essentially indicates whether we are encoding or not? Maybe encoder_stopped_/encoder_running_?",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 31
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2f2ced5_1ff547b3",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I will change it to active_encoder_queue",
      "parentUuid": "95fd9f0b_21721871",
      "range": {
        "startLine": 81,
        "startChar": 7,
        "endLine": 81,
        "endChar": 31
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acf6c76b_61f0a3b0",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "This doesn\u0027t seem to be entirely try, accident?",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 17
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b2ed21b_707488c2",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "It\u0027s same comment from channel_send.  I will put it the last.",
      "parentUuid": "acf6c76b_61f0a3b0",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 17
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5638ebd_3d7a2140",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b2ed21b_707488c2",
      "range": {
        "startLine": 83,
        "startChar": 5,
        "endLine": 83,
        "endChar": 17
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cf11b799_10c6f219",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "I suggest using absl::optional\u003cint\u003e so you can indicate unset value in a more explicit way.",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06a30fd8_ff0d51f6",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "agree.",
      "parentUuid": "cf11b799_10c6f219",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a028d7fa_ec2dcb0e",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "06a30fd8_ff0d51f6",
      "range": {
        "startLine": 87,
        "startChar": 2,
        "endLine": 87,
        "endChar": 5
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6e49c63_b15a0dfd",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "Maybe absl::optional\u003cSdpAudioFormat\u003e?",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1c62a30_c5f8c0bc",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "agree.",
      "parentUuid": "e6e49c63_b15a0dfd",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb0f7053_127c4c41",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1c62a30_c5f8c0bc",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4dc8cd00_702c40ce",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-02T19:28:33Z",
      "side": 1,
      "message": "It\u0027s quite unfortunate if we need to access internals to be able to test the code, this might indicate that the tests are testing the implementation rather than the functionality.\n\nSee https://abseil.io/tips/135 for more info on this",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 92,
        "endChar": 32
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd2755fa_23d7cb18",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-03T01:32:33Z",
      "side": 1,
      "message": "This is mainly due to placing inherited public APIs into private.  Let me see if I can use upcast to remove these usage.",
      "parentUuid": "4dc8cd00_702c40ce",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 92,
        "endChar": 32
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81704a88_a65129f8",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5531
      },
      "writtenOn": "2020-03-03T08:26:42Z",
      "side": 1,
      "message": "I think the value of that information hiding is questionable (it\u0027s still indirectly public anyway), prefer to leave them exposed.",
      "parentUuid": "dd2755fa_23d7cb18",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 92,
        "endChar": 32
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e5fe5ad_51c9f358",
        "filename": "audio/voip/audio_egress.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81704a88_a65129f8",
      "range": {
        "startLine": 90,
        "startChar": 0,
        "endLine": 92,
        "endChar": 32
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec51e75f_aad29391",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Move these into the unnamed namespace. https://abseil.io/tips/119",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c1ac796f_147ee5ed",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I removed some and inlined some.",
      "parentUuid": "ec51e75f_aad29391",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6dcf205_3e4b64c1",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "SdpAudioFormat has a nontrivial destructor, so isn\u0027t allowed as a global variable. https://google.github.io/styleguide/cppguide.html#Static_and_Global_Variables",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaac8e49_9ded12b0",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T21:17:01Z",
      "side": 1,
      "message": "Thanks. forgot they had std::map inside. moved them into AudioEgressTest.",
      "parentUuid": "c6dcf205_3e4b64c1",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e521480_c0172811",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "IIRC nothing prevents you from extending the unnamed namespace to the end of this file.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cda7ba6_648eb3e9",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "AudioEgressTest is friending AudioEgress.  I am thinking about a way to have better mute to avoid that.",
      "parentUuid": "9e521480_c0172811",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "209067f1_354c4c1f",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "This is a nontrivial test harness, which can be problematic: https://abseil.io/tips/122\n\nAt the very least, document its methods and members as if it were any other class.",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd5de5e5_7d8eaf0f",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T21:17:01Z",
      "side": 1,
      "message": "I tried to make it as simple as possible but since AudioEgress is made of other heavy duty modules, this is the best I could do for now event after consulting through other previous unit tests.  I will add some comments.",
      "parentUuid": "209067f1_354c4c1f",
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c8063c1_47c14699",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "int?",
      "range": {
        "startLine": 82,
        "startChar": 44,
        "endLine": 82,
        "endChar": 52
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1aad963e_77c2b175",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 82,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c8063c1_47c14699",
      "range": {
        "startLine": 82,
        "startChar": 44,
        "endLine": 82,
        "endChar": 52
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "80e045d8_c6b8b2c0",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "int?",
      "range": {
        "startLine": 92,
        "startChar": 21,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c26e048_e76d78a6",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "it\u0027s inlined now.",
      "parentUuid": "80e045d8_c6b8b2c0",
      "range": {
        "startLine": 92,
        "startChar": 21,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad9869a6_55f915df",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 5087
      },
      "writtenOn": "2020-03-02T08:31:01Z",
      "side": 1,
      "message": "Karl, should we talk about this (maybe at today\u0027s meeting)?\n\nA common pattern in WebRTC code is to use rtc::Event for this, see https://cs.chromium.org/chromium/src/third_party/webrtc/audio/channel_send.cc?l\u003d556-561\u0026rcl\u003dff0e4dbd1f0b5549c9cd90687b8599131e909b10.",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 56
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72d149b7_56ceef51",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-02T08:52:41Z",
      "side": 1,
      "message": "Right, I missed this. Sloppy of me---I was assuming some automation would catch it, I guess...\n\nI don\u0027t think much discussion is needed; absl::Notification looks very nice, but uses absl::Time, which we banned because it bloats our binaries with timezone data and whatnot.",
      "parentUuid": "ad9869a6_55f915df",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 56
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "102794d1_d85e052f",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 5087
      },
      "writtenOn": "2020-03-02T08:59:55Z",
      "side": 1,
      "message": "Yes, the only thing in favor of allowing it is that this is testing code so we don\u0027t really measure binary size bloat.\n\nOn the other hand it is better to use the same utilities in production and test code. So I guess the decision here is just to switch to rtc::Event.\n\nYes, the tool caught this one (see the exception in the audio/voip/test/DEPS file).",
      "parentUuid": "72d149b7_56ceef51",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 56
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f69acbc_dd048881",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "I will use rtc::Event. Thanks.",
      "parentUuid": "102794d1_d85e052f",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 56
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23b1db44_7ab0f3da",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T21:17:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2f69acbc_dd048881",
      "range": {
        "startLine": 100,
        "startChar": 38,
        "endLine": 100,
        "endChar": 56
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15d4851e_7334b06f",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-01T21:10:53Z",
      "side": 1,
      "message": "Try something like\n\n  EXPECT_THAT(rtc::ArrayView(audio_frame-\u003edata(), length),\n              ElementsAreArray(copy_frame.data(), length));\n\ngmock matchers are flexible and have good error messages when the expectation fails. https://github.com/google/googletest/blob/master/googlemock/docs/cheat_sheet.md#matchers-matcherlist",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 11
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ddca1d08_298e43d9",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T06:17:30Z",
      "side": 1,
      "message": "ok, let me incorporate that as I rework on unit test file.",
      "parentUuid": "15d4851e_7334b06f",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 11
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad761b93_adec091e",
        "filename": "audio/voip/test/audio_egress_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 10558
      },
      "writtenOn": "2020-03-04T21:17:01Z",
      "side": 1,
      "message": "I changed the way to test mute using pcmu encoder result.",
      "parentUuid": "ddca1d08_298e43d9",
      "range": {
        "startLine": 136,
        "startChar": 2,
        "endLine": 136,
        "endChar": 11
      },
      "revId": "bfa53925be4bc2fc8af5fd3f4c3af82950b6d543",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}