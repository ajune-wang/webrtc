{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f7b13c90_4925a281",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-11-21T18:14:35Z",
      "side": 1,
      "message": "It looks a bit strange that this change doesn\u0027t change behavior, given the number of rearranged functions.\n\nAdding jonaso@ to the review to verify that there isn\u0027t a corner case where behavior is changed.\n",
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc10ebff_3939fbf8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-11-21T20:24:07Z",
      "side": 1,
      "message": "Added some more context to explain the changes in case that helps.",
      "parentUuid": "f7b13c90_4925a281",
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64eb0a09_a5635eb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-11-21T22:29:51Z",
      "side": 1,
      "message": "Those comments helped. They also make it clear that ScopedTaskSafety is a more subtle and more powerful construct than its documentation currently makes it look like.\n",
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc3a0bc4_2754e206",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2020-11-23T06:55:44Z",
      "side": 1,
      "message": "LGTM,\nexcept that I propose a more descriptive name than \"task_safety_\"",
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf9e919e_48d9215d",
        "filename": "p2p/base/regathering_controller.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-11-21T20:24:07Z",
      "side": 1,
      "message": "the content of the lambda is what RegatherOnFailedNetworksIfDoneGathering did before.\nThe difference is using a lambda instead of rtc::Bind + member function.",
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8820f86_e9e57f97",
        "filename": "p2p/base/regathering_controller.h",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5613
      },
      "writtenOn": "2020-11-23T06:55:44Z",
      "side": 1,
      "message": "How about a more descriptive name?\ne.g has_pending_regathering_\n\nAnd a comment that it it has a value, there is a pending lambda,\nand that lambda can be cancelled by deleteing the object...",
      "range": {
        "startLine": 86,
        "startChar": 36,
        "endLine": 86,
        "endChar": 48
      },
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d3fb3b4_7452e724",
        "filename": "p2p/base/regathering_controller.h",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-11-23T08:33:28Z",
      "side": 1,
      "message": "Comment added. Does pending_regathering_ work? Since it\u0027s a pointer I\u0027m thinking that the \"has_\" prefix may indicate that it\u0027s only a bool.",
      "parentUuid": "f8820f86_e9e57f97",
      "range": {
        "startLine": 86,
        "startChar": 36,
        "endLine": 86,
        "endChar": 48
      },
      "revId": "a617fad73951ae7e0df46b9b03bbb09145bbf7e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}