{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "369c9a29_8a0de7bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-01-21T19:48:54Z",
      "side": 1,
      "message": "Not sure how risky this change is? I guess it makes sense to reset the overuse detection when the underlying encoder changes but maybe it happens often and would make the detection ineffective?",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc8a0006_71923440",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-01-21T21:00:27Z",
      "side": 1,
      "message": "lgtm, but I\u0027d like hbos@ to have a go too as expert in this area",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d7104ae8_ae859f46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-01-22T08:35:49Z",
      "side": 1,
      "message": "Also, please add a unittest",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b2124d8_cbd925cf",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1533,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-01-22T08:34:17Z",
      "side": 1,
      "message": "We already do this at VideoStreamEncoder::ReconfigureEncoder() if the encoder is recreated, but in this case the underlying encoder changes from HW to SW on the fly?\n\nWhat if we called this function inside of OnEncoderSettingsChanged() instead? This function is called from both this place and from ReconfigureEncoder() so perhaps we can do all encode usage resource restarts at a single place (and then remove the call from ReconfigureEncoder)?\n\nIt is my understanding that it is OK to restart the EncodeUsageResource as long as it is allowed to live long enough to have enough samples to be able to detect overuse or underuse (e.g. it would break if restarted every frame) but as long as this is not too frequent it should be fine. Can you ensure that info is never spammed?",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d58ae7a_83933021",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1533,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-01-22T08:36:39Z",
      "side": 1,
      "message": "I meant just check that it doesn\u0027t get spammed in practise, I don\u0027t think you need the code to ensure this",
      "parentUuid": "7b2124d8_cbd925cf",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5761fe8_7c59a0d9",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1533,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-01-22T09:48:50Z",
      "side": 1,
      "message": "Yes, this can happen when using the simulcast encoder adapter where sub-encoders are created on the fly and thus changes the settings.\n\nWhen manually checking, it seems like ReconfigureEncoder is called the same amount as the encoder settings are changing when using simulcast encoder adapter (one leads to another). However, some tests started failing when I tried restarting in OnEncoderSettingsChanged, see Patchset 2: https://webrtc-review.googlesource.com/c/src/+/203140/2\n\nBut maybe the tests are wrong and they should be re-written :) I can give it a try.",
      "parentUuid": "5d58ae7a_83933021",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96cc0987_c2293f78",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1533,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-01-22T14:03:24Z",
      "side": 1,
      "message": "So this change means that the overuse detector will be restarted each time the resolution changes (which should be fine since it \u0027resets\u0027 internally anyway). However, that doesn\u0027t play nice with WebRTC-ForceSimulatedOveruseIntervalMs (\u0027OverdoseInjector\u0027) since it will be recreated after each adaptation. Added a hack to avoid recreating the ProcessingUsage.",
      "parentUuid": "e5761fe8_7c59a0d9",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d6d3cd3_585f6da2",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1533,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-01-22T14:45:38Z",
      "side": 1,
      "message": "I don\u0027t know, that sounds a bit aggressive. What if we only trigger reconfiguring the encode usage resource when info.is_hardware_accelerated changes instead of in response to any info change? That would allow you to get rid of that usage_ hack and have a minimal amount of side-effects.",
      "parentUuid": "96cc0987_c2293f78",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da3eff88_4f559d7d",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1533,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-01-22T14:56:09Z",
      "side": 1,
      "message": "Then we are back to where we started and check for if the encoder settings changed  (Patchset 6) :D Or do you have something else in mind?",
      "parentUuid": "9d6d3cd3_585f6da2",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b93cf10_facb677f",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1534,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-01-22T08:34:17Z",
      "side": 1,
      "message": "Also EnsureEncodeUsageResourceStarted() seems like a bad name for something that reconfigures it if it is already started - can we rename this method to ConfigureEncodeUsageResource()?",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08c43c37_9365c832",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 6
      },
      "lineNbr": 1534,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-01-22T14:03:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9b93cf10_facb677f",
      "revId": "fbf9c4f99cb20045e730559fe9dd935a76a3f3fe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}