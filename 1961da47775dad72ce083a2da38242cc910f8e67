{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "025d50db_cd5ef413",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-14T10:46:36Z",
      "side": 1,
      "message": "Here\u0027s a removal cl, do you think this makes sense?\n\nThere\u0027s a slight conflict between \n\n1. Keeping implementation of rtc::Ref and rtc::make_ref_counted together, because they should stay consistent, and reuse the same HasAddRefAndRelease utility.\n\n2. Move rtc::make_ref_counted but not rtc::Ref to api/.",
      "revId": "1961da47775dad72ce083a2da38242cc910f8e67",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e85ef665_78f85a5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-14T11:03:38Z",
      "side": 1,
      "message": "I\u0027m thinking that if avoiding explicit scoped_ref_ptr\u003cFinalRefCountedObject\u003cEvent\u003e\u003e declaration is a good thing in the AsyncInvoker usecase, it\u0027s likely a good thing to have also for other users of make_ref_counted, and then it should be moved to api/ together with make_ref_counted.\n\nWe probably don\u0027t want users to refer to FinalRefCountedObject directly.",
      "parentUuid": "025d50db_cd5ef413",
      "revId": "1961da47775dad72ce083a2da38242cc910f8e67",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ac805df_7f026c34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-06-14T11:29:58Z",
      "side": 1,
      "message": "Why can\u0027t this be just scoped_refptr\u003cEvent\u003e?\n\nEven with FinalRefCountedObject, I find it more readable than Ref, which is likely to be an abstraction that the user has never seen before (it\u0027s very rare), and is such a generic term that it doesn\u0027t give you much of a clue of what its semantics are supposed to be.\n\n(Note - Event is an object that is defined in webrtc, but overridden in the Chrome import of webrtc.)",
      "parentUuid": "e85ef665_78f85a5e",
      "revId": "1961da47775dad72ce083a2da38242cc910f8e67",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52d54ee2_3d65e245",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-06-14T11:35:20Z",
      "side": 1,
      "message": "it needs to be FinalRefCountedObject\u003c Event \u003e because Event doesn\u0027t implement reference counting.\n\nmake_ref_counted does this behind the scenes and the idea with Ref\u003c\u003e was to have a utility for declaring types that match with what make_ref_counted produces.\n\nHowever, this code (async invoker) is deprecated and not used by webrtc (hopefully we can delete it soon), so I\u0027m not too worried about it.",
      "parentUuid": "0ac805df_7f026c34",
      "revId": "1961da47775dad72ce083a2da38242cc910f8e67",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31a5d490_8f7b5987",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-06-14T12:06:10Z",
      "side": 1,
      "message": "\u003e it needs to be FinalRefCountedObject\u003c Event \u003e because Event doesn\u0027t implement reference counting.\n\u003e \n\u003e make_ref_counted does this behind the scenes and the idea with Ref\u003c\u003e was to have a utility for declaring types that match with what make_ref_counted produces.\n\nIf we like to, I think it would be possible to let rtc::scoped_ref_ptr do the same thing behind the scenes (with the drawback that it gets more tightly coupled to FinalRefCountedObject).",
      "parentUuid": "52d54ee2_3d65e245",
      "revId": "1961da47775dad72ce083a2da38242cc910f8e67",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "104b8dc2_4b62cddc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-06-14T12:11:01Z",
      "side": 1,
      "message": "then scoped_refptr would be doing essentially the same thing as make_ref_counted ðŸ¤”\nhmm... maybe we don\u0027t need to cross that bridge just yet.",
      "parentUuid": "31a5d490_8f7b5987",
      "revId": "1961da47775dad72ce083a2da38242cc910f8e67",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}