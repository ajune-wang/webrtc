{
  "comments": [
    {
      "key": {
        "uuid": "7603d294_94ca7947",
        "filename": ".gn",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-11T09:33:35Z",
      "side": 1,
      "message": "nit: add a newline. otherwise it looks like this flag is related to libvpx flag above.\n\nAlso, should it really be enabled by default?",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 2
      },
      "revId": "149971a062e53b0b62985c6ce25a9a7b19b60532",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa9e76de_a2a2d496",
        "filename": ".gn",
        "patchSetId": 7
      },
      "lineNbr": 74,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-03-11T09:52:06Z",
      "side": 1,
      "message": "Added the new line.\n\nIf it is not set to true here, it is not tested. That is one of my reasons to enable it by default.\nwhat is a reason to disable it by default?",
      "parentUuid": "7603d294_94ca7947",
      "range": {
        "startLine": 74,
        "startChar": 1,
        "endLine": 74,
        "endChar": 2
      },
      "revId": "149971a062e53b0b62985c6ce25a9a7b19b60532",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d2d3366_acb7dd09",
        "filename": "media/engine/internal_decoder_factory.cc",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-11T09:33:35Z",
      "side": 1,
      "message": "Please move it near cricket::kVp8CodecName in/media/base/media_constants.h",
      "range": {
        "startLine": 28,
        "startChar": 15,
        "endLine": 28,
        "endChar": 28
      },
      "revId": "149971a062e53b0b62985c6ce25a9a7b19b60532",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbf1277f_df7da17c",
        "filename": "media/engine/internal_decoder_factory.cc",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-03-11T09:52:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8d2d3366_acb7dd09",
      "range": {
        "startLine": 28,
        "startChar": 15,
        "endLine": 28,
        "endChar": 28
      },
      "revId": "149971a062e53b0b62985c6ce25a9a7b19b60532",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "621cf76d_182b2017",
        "filename": "media/engine/internal_decoder_factory.cc",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-11T09:33:35Z",
      "side": 1,
      "message": "This is strange way of checking if a feature is present.\nI would go with #ifdef or at least put this constant behind a IsLibaomAv1DecoderSupported() helper function in libaom_av1_decoder.h",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 34
      },
      "revId": "149971a062e53b0b62985c6ce25a9a7b19b60532",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0060dc_941268ea",
        "filename": "media/engine/internal_decoder_factory.cc",
        "patchSetId": 7
      },
      "lineNbr": 53,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-03-11T09:52:06Z",
      "side": 1,
      "message": "I prefer to avoid #ifdef when possible (https://google.github.io/styleguide/cppguide.html#Preprocessor_Macros)\n\nI tried to rely on a macro, but that adds extra dependencies and public configs to BUILD files. I found that discouraging.\nUnlike preprocessor checking this boolean adds a bit of extra binary size even when feature is not used, but my understanding is that extra size is negligible (one static constant bool and one function that always returns nullptr)\n\nwhy IsLibaomAv1DecoderSupported() function is better than a constant?\n(constant makes it clear it doesn\u0027t change at runtime. both to human and compiler)",
      "parentUuid": "621cf76d_182b2017",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 34
      },
      "revId": "149971a062e53b0b62985c6ce25a9a7b19b60532",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}