{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7787776d_30231b03",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2020-10-21T07:19:45Z",
      "side": 1,
      "message": "This actually made things easier to understand :-)",
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3e9f3362_5093c2ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "Thanks for this CL. I have just some minor suggestions for avoiding to allocate memory for every packet (potentially, every 20 ms). ",
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5476ce95_58f02ebf",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "For this constexpr we were writing a comment explaining the variable in one line and the variable definition in the next line. I think that it would be nicer if we keep that format.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 32,
        "endChar": 59
      },
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6159151e_a6eccef3",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red.cc",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "I understand that this is not part of this CL but having this as a local variable will make us to allocate memory every 20 ms. We would ideally move it to the class and Clear() it at the beginning of this method.",
      "range": {
        "startLine": 75,
        "startChar": 2,
        "endLine": 75,
        "endChar": 30
      },
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d56e38e_a919e9dc",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red.cc",
        "patchSetId": 2
      },
      "lineNbr": 120,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "This is also allocating memory every 20 ms but I do not think that we can avoid it without massive refactoring. This was also not part of this CL.",
      "range": {
        "startLine": 120,
        "startChar": 4,
        "endLine": 120,
        "endChar": 40
      },
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56799625_ffa8e982",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red.cc",
        "patchSetId": 2
      },
      "lineNbr": 138,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "This is also allocating memory for making that copy, it would be better to avoid those allocations and try to allocate all the needed memory at the constructor.",
      "range": {
        "startLine": 138,
        "startChar": 2,
        "endLine": 138,
        "endChar": 44
      },
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5de52897_843852bf",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "it looks like using std::list and push_front will trigger a memory allocations that will make the code slower. I will suggest to not use a list and use an array or a vector (which size is preallocated at construction time).",
      "range": {
        "startLine": 139,
        "startChar": 23,
        "endLine": 139,
        "endChar": 34
      },
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad087043_a5c1ca51",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red.h",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "Maybe we can re-format this comment so we have nicer line breaks.",
      "range": {
        "startLine": 30,
        "startChar": 1,
        "endLine": 33,
        "endChar": 73
      },
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06eb94ae_33137f4d",
        "filename": "modules/audio_coding/codecs/red/audio_encoder_copy_red_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 195,
      "author": {
        "id": 6876
      },
      "writtenOn": "2020-10-27T12:50:01Z",
      "side": 1,
      "message": "Unintentional line break?",
      "revId": "ad3e80b9650dac508ba5916b0a3cb10da444c276",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}