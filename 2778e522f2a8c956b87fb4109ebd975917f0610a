{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "73ad6145_b9e04f9d",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "const?",
      "range": {
        "startLine": 87,
        "startChar": 46,
        "endLine": 87,
        "endChar": 47
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dd03709_e7d5f6d7",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 90,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "What is a use case for this endpoint? Can you describe it in comment? Also please document that returned pointer is guaranteed to be not-null.",
      "range": {
        "startLine": 89,
        "startChar": 2,
        "endLine": 90,
        "endChar": 52
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e12f3713_ad7f6a3d",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Maybe \"Returns socket address, which client should use to connect to TURN server and do TURN allocation\"?",
      "range": {
        "startLine": 92,
        "startChar": 2,
        "endLine": 92,
        "endChar": 34
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c2dbf52_5dfc7065",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "const?",
      "range": {
        "startLine": 93,
        "startChar": 55,
        "endLine": 93,
        "endChar": 56
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aae1bbec_1528458f",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "What is a use case for this endpoint? Can you describe it in comment? Also please document that returned pointer is guaranteed to be not-null.",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 96,
        "endChar": 50
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b46dba6a_2d33a44b",
        "filename": "api/test/network_emulation_manager.h",
        "patchSetId": 2
      },
      "lineNbr": 247,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Please document ownership of returned object and it\u0027s lifetime",
      "range": {
        "startLine": 247,
        "startChar": 39,
        "endLine": 247,
        "endChar": 55
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2da91aa_fa62db4d",
        "filename": "test/network/emulated_turn_server.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Maybe put it into field to avoid creating new address for each packet?",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 70
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "216e058c_67bed2d3",
        "filename": "test/network/emulated_turn_server.cc",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Should unbind receiver from endpoint here? Or we should unbind it in the destructor.",
      "range": {
        "startLine": 55,
        "startChar": 25,
        "endLine": 55,
        "endChar": 34
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61ac882f_08362535",
        "filename": "test/network/emulated_turn_server.cc",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Can we post with move of packet here? Otherwise you block emulated network main thread for processing this packet inside TURN server",
      "range": {
        "startLine": 66,
        "startChar": 13,
        "endLine": 66,
        "endChar": 19
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "decfd5fd_7eb50a54",
        "filename": "test/network/emulated_turn_server.cc",
        "patchSetId": 2
      },
      "lineNbr": 78,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "As I see it can be struct and `turn_server_` can be private",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 78,
        "endChar": 6
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "deb38801_c8184823",
        "filename": "test/network/emulated_turn_server.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "The comment looks unrelated",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 26,
        "endChar": 76
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8813b508_9967329b",
        "filename": "test/network/emulated_turn_server.h",
        "patchSetId": 2
      },
      "lineNbr": 30,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Please document what is `thread` and why we need it. Also maybe pass `client` and `peer` by reference to explicitly show that they should be non-null, WDYT?",
      "range": {
        "startLine": 30,
        "startChar": 2,
        "endLine": 30,
        "endChar": 20
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "320bc507_a707e773",
        "filename": "test/network/network_emulation_manager.cc",
        "patchSetId": 2
      },
      "lineNbr": 341,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-11-17T11:21:39Z",
      "side": 1,
      "message": "Maybe add some number, like turn_servers_.size() at the end to distinguish different turn server\u0027s threads?",
      "range": {
        "startLine": 341,
        "startChar": 48,
        "endLine": 341,
        "endChar": 49
      },
      "revId": "2778e522f2a8c956b87fb4109ebd975917f0610a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}