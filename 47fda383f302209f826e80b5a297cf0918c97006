{
  "comments": [
    {
      "key": {
        "uuid": "cfd93d5e_b2fff399",
        "filename": "call/resource.h",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-12-06T14:44:17Z",
      "side": 1,
      "message": "Will be used/useful in practice?",
      "range": {
        "startLine": 45,
        "startChar": 22,
        "endLine": 45,
        "endChar": 45
      },
      "revId": "47fda383f302209f826e80b5a297cf0918c97006",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ec43b8f_7ad106bd",
        "filename": "call/resource_adaptation_processor.cc",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-12-06T14:44:17Z",
      "side": 1,
      "message": "this feels like something the can done with some map-reduce magic, but not sure it would make it more readable",
      "range": {
        "startLine": 23,
        "startChar": 31,
        "endLine": 23,
        "endChar": 61
      },
      "revId": "47fda383f302209f826e80b5a297cf0918c97006",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81e4667c_190e87c6",
        "filename": "call/resource_adaptation_processor.cc",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-12-06T14:44:17Z",
      "side": 1,
      "message": "I know a comment in the api says that Preference() should not return negative numbers. Can we dcheck that? This feels a little fragile.\nIf you loop over the indices of the array instead you can just initialize this to configurations[0]-\u003ePreference() in order to avoid relying on a defined min-value.",
      "range": {
        "startLine": 26,
        "startChar": 51,
        "endLine": 26,
        "endChar": 55
      },
      "revId": "47fda383f302209f826e80b5a297cf0918c97006",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f114082_9a00bec7",
        "filename": "call/resource_adaptation_processor.h",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-12-06T14:44:17Z",
      "side": 1,
      "message": "we might want to revisit this (in case the resources are orthogonal), but should be a good start!",
      "range": {
        "startLine": 45,
        "startChar": 32,
        "endLine": 45,
        "endChar": 35
      },
      "revId": "47fda383f302209f826e80b5a297cf0918c97006",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efd4b0c8_fe4ca160",
        "filename": "call/resource_adaptation_processor.h",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-12-06T14:44:17Z",
      "side": 1,
      "message": "nit: guess you could inline these getters?",
      "range": {
        "startLine": 61,
        "startChar": 48,
        "endLine": 61,
        "endChar": 57
      },
      "revId": "47fda383f302209f826e80b5a297cf0918c97006",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}