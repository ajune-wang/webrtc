{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d56b0a3b_114adcfe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-10-10T04:41:35Z",
      "side": 1,
      "message": "What\u0027s the consequence of starting a stream without source_?\nIn particular, what calls should error out when called without source_?\nDo we have tests for those?",
      "revId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2173f8ab_9b0ed645",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-10-10T13:52:58Z",
      "side": 1,
      "message": "WebRTCVoiceEngine is AudioSource::Sink and it uses source_ to keep track of which source it is connected to. The only check that is done on source_ in the code is to make sure there is only one valid source connected to WebRTCVoiceEngine at a time.\n\nI tried adding a test for that but since it is a DCHECK error, I\u0027m not able to include that in a test.",
      "parentUuid": "d56b0a3b_114adcfe",
      "revId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7b84656_a3ac3902",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-10-10T15:46:53Z",
      "side": 1,
      "message": "EXPECT_DEBUG_DEATH is the tool if you really feel like writing a test for it :-)\n\nI was more worried about code that goes \"source_-\u003esomeaction\" without checking that source_ is non-null.",
      "parentUuid": "2173f8ab_9b0ed645",
      "revId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a8e6519_a117359a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-10-11T07:48:20Z",
      "side": 1,
      "message": "I think we can skip that test then. But no there\u0027s no \"source_-\u003esomeaction\" in the code.",
      "parentUuid": "f7b84656_a3ac3902",
      "revId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "60b07aad_1101b122",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-10-11T10:19:40Z",
      "side": 1,
      "message": "OK, let\u0027s try.",
      "revId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "bf456e973acbabb7fb47762cc7f875d937b92d09",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}