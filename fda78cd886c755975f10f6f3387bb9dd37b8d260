{
  "comments": [
    {
      "key": {
        "uuid": "2254bd2c_ebf4971d",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 10
      },
      "lineNbr": 259,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-02-10T13:31:05Z",
      "side": 1,
      "message": "This is (almost, there\u0027s also a -\u003eframe_type reference below) the only use of rtp_video_header in this function. I think it would be nicer to have it create and return a GenericDescriptorInfo, or if it really needs an output parameter for efficiency, pass a GenericDescriptorInfo*.\n\nAnd in either case, leave to the caller to put it into the right place in the RTPVideoHeader. \n\nAlso, if it doesn\u0027t need to access any member variables, can you move it to the anonymous namespace as a utility function?",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 259,
        "endChar": 0
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb49e252_254c545b",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 10
      },
      "lineNbr": 259,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-02-10T15:04:42Z",
      "side": 1,
      "message": "removed output parameter. (and renamed, because function doesn\u0027t really \u0027Set\u0027 anything now)\n\nIt does need access to the member dependencies_calculator_\nmoreover, it is a non-const access (in particular it stores current frame_id in some of the buffers for future frames to reference)",
      "parentUuid": "2254bd2c_ebf4971d",
      "range": {
        "startLine": 257,
        "startChar": 0,
        "endLine": 259,
        "endChar": 0
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b5c679c_3df0cd1c",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 10
      },
      "lineNbr": 266,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-02-10T12:31:15Z",
      "side": 1,
      "message": "Maybe not for this CL, but maybe we could remove GenericDescriptorInfo::discardable and just move this logic to AddRtpHeaderExtensions in rtp_sender_video.cc?",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 21
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4715de7_de4b0ecf",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 10
      },
      "lineNbr": 266,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-02-10T13:16:55Z",
      "side": 1,
      "message": "this flag is also [or mostly] used at the receive side: to pass that bool from RtpGenericFrameDescriptor v1 to the loss notification controller.\nStill replaceable with dti though, just in a less nicer way.\n\nI would suggest to postpone removing this flag to the task of removing\nRtpGenericFrameDescriptor v1",
      "parentUuid": "8b5c679c_3df0cd1c",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 21
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc838138_5d4cb169",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 10
      },
      "lineNbr": 266,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-02-10T13:44:18Z",
      "side": 1,
      "message": "\u003e I would suggest to postpone removing this flag to the task of removing\n\u003e RtpGenericFrameDescriptor v1\n\nGood idea",
      "parentUuid": "d4715de7_de4b0ecf",
      "range": {
        "startLine": 266,
        "startChar": 2,
        "endLine": 266,
        "endChar": 21
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2faaf07f_2776485a",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 10
      },
      "lineNbr": 271,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-02-10T13:31:05Z",
      "side": 1,
      "message": "This one also looks more like a utility function than a method, but no need to change in this cl.",
      "range": {
        "startLine": 271,
        "startChar": 5,
        "endLine": 271,
        "endChar": 34
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f122909_c51da6f8",
        "filename": "modules/video_coding/frame_dependencies_calculator.cc",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-02-10T13:44:18Z",
      "side": 1,
      "message": "If we go for some minor cleanup of this class in this CL we could remove the frame_type argument and skip this check. Or maybe in some other CL...",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 55
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9da6f3d2_41fa542f",
        "filename": "modules/video_coding/frame_dependencies_calculator.cc",
        "patchSetId": 10
      },
      "lineNbr": 40,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-02-10T15:04:42Z",
      "side": 1,
      "message": "I failed to guess your idea: I do not see how to avoid frame_type (without requiring caller to generate a dedicated buffers_usage array for key frames)\ncan you elaborate? (or we can leave it for some other CL)",
      "parentUuid": "6f122909_c51da6f8",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 55
      },
      "revId": "fda78cd886c755975f10f6f3387bb9dd37b8d260",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}