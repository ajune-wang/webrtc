{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1265b2fd_c33740a0",
        "filename": "infra/specs/PRESUBMIT.py",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 12234
      },
      "writtenOn": "2022-12-06T12:39:48Z",
      "side": 1,
      "message": "I\u0027m not familiar with shlex, why not simply \u0027 \u0027.join(cmd) ?",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 61
      },
      "revId": "6c77022d36114077b0e170a9b03bfa4ecf853302",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e4aef57_3babb100",
        "filename": "infra/specs/PRESUBMIT.py",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-12-06T12:50:20Z",
      "side": 1,
      "message": "`shlex.join` concatenates shell-escaped commands, so users can more easily copy and paste them into the terminal.\n\n```\n\u003e\u003e\u003e import shlex\n\u003e\u003e\u003e shlex.join([\u0027yapf\u0027, \u0027-i\u0027, \u0027/Users/Foo Bar/baz\u0027])\n\"yapf -i \u0027/Users/Foo Bar/baz\u0027\"\n\u003e\u003e\u003e \u0027 \u0027.join([\u0027yapf\u0027, \u0027-i\u0027, \u0027/Users/Foo Bar/baz\u0027])\n\u0027yapf -i /Users/Foo Bar/baz\u0027\n```\n\nThe former is properly escaped, the latter is not.",
      "parentUuid": "1265b2fd_c33740a0",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 61
      },
      "revId": "6c77022d36114077b0e170a9b03bfa4ecf853302",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8defdf7_47a9fdd2",
        "filename": "infra/specs/PRESUBMIT.py",
        "patchSetId": 1
      },
      "lineNbr": 33,
      "author": {
        "id": 12234
      },
      "writtenOn": "2022-12-06T12:52:42Z",
      "side": 1,
      "message": "I think both commands would work but ok to use shlex",
      "parentUuid": "1e4aef57_3babb100",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 61
      },
      "revId": "6c77022d36114077b0e170a9b03bfa4ecf853302",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "6c77022d36114077b0e170a9b03bfa4ecf853302",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "6c77022d36114077b0e170a9b03bfa4ecf853302",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}