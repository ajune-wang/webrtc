{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c5a6dad3_b5bf6449",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-12T13:38:22Z",
      "side": 1,
      "message": "PTAL. I\u0027m not that familiar with the wiring of YuvConverter and toI420Handler, so not sure if we risk getting scaling artifacts if we let the java classes scale down more than a factor of 2. But this cl in itself shouldn\u0027t have much effect, since it looks like the method isn\u0027t called for kNative frames. But I hope we can move towards deleting the special handling of kNative in VideoStreamEncoder.\n\nThen, for software encoding of textures, we should be able to do scaling prior to I420 conversion (or rather, CropAndScale method call prior to ToI420 call, but scaling and conversion actually done together on the GPU). And avoid software scaling with libyuv.",
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83e05db5_0b4051ae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5112
      },
      "writtenOn": "2020-10-12T13:51:02Z",
      "side": 1,
      "message": "The default downscaling method in ToI420 is nearest neighbour. So it may cause artifacts when downscaling a lot. This CL looks good to me though.",
      "parentUuid": "c5a6dad3_b5bf6449",
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cec4cf59_5d001d93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-12T14:07:03Z",
      "side": 1,
      "message": "Hmm. I would expect a simple use of YuvConverter with a scaling transformation matrix to sample the texture by interpolating linearly between nearest neighbors. Which should give reasonable results when scaling down by a small factor (say, 1-1.5). But not adequate for down-scaling by a larger factor.",
      "parentUuid": "83e05db5_0b4051ae",
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "080298fa_3d6e87d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5112
      },
      "writtenOn": "2020-10-12T14:19:28Z",
      "side": 1,
      "message": "Yes, in practice it can \"sample\" a few pixels depending on how the math works out.",
      "parentUuid": "cec4cf59_5d001d93",
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c217f31_71c1e19e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-10-12T14:31:22Z",
      "side": 1,
      "message": "The code looks good. But I would appreciate if Sami could test this with e.g. patched Duo groups.\nOr trigger the adaptation with debug tools, if possible. ",
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8292357b_6169ae65",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-13T08:20:47Z",
      "side": 1,
      "message": "Sami, let me know if I should wait for some more manual testing.",
      "parentUuid": "8c217f31_71c1e19e",
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfb8af50_50345b44",
        "filename": "sdk/android/src/jni/video_frame.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-10-12T14:31:22Z",
      "side": 1,
      "message": "const\n\nI\u0027m uploading the Cl for the interface now.",
      "range": {
        "startLine": 50,
        "startChar": 69,
        "endLine": 50,
        "endChar": 70
      },
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec7a326f_2794800b",
        "filename": "sdk/android/src/jni/video_frame.h",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-10-12T14:41:40Z",
      "side": 1,
      "message": "Sorry, it\u0027s complicated. Land away without const.",
      "parentUuid": "cfb8af50_50345b44",
      "range": {
        "startLine": 50,
        "startChar": 69,
        "endLine": 50,
        "endChar": 70
      },
      "revId": "11b6a57e4716542c1d85018c0f69a7b1669b952b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}