# Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

import("../../webrtc.gni")
assert(rtc_enable_protobuf)
import("//third_party/protobuf/proto_library.gni")

group("rnn_vad") {
  testonly = true
  deps = [
    ":rnn_vad_tool",
  ]
}

rtc_executable("rnn_vad_tool") {
  testonly = true
  sources = [
    "rnn_vad_tool.cc",
  ]
  deps = [
    ":lib",
    ":lib_test",
    "../../api:array_view",
    "../../common_audio:common_audio",
    "../../rtc_base:rtc_base_approved",
    "../../test:test_support",
  ]
}

rtc_static_library("lib") {
  sources = [
    "biquad.cc",
    "biquad.h",
    "common.h",
    "downsample.cc",
    "downsample.h",
    "features_extraction.cc",
    "features_extraction.h",
    "lp_residual.cc",
    "lp_residual.h",
    "pitch_search.cc",
    "pitch_search.h",
    "ring_buffer.h",
    "rnn_vad.cc",
    "rnn_vad.h",
    "rnn_vad_fft.cc",
    "rnn_vad_fft.h",
    "rnn_vad_weights.h",
    "sequence_buffer.h",
    "spectral_features.cc",
    "spectral_features.h",
  ]
  deps = [
    "../..:webrtc_common",
    "../../:typedefs",
    "../../api:array_view",
    "../../common_audio",
    "../../rtc_base:checks",
    "../../rtc_base:rtc_base_approved",
    "//system_wrappers:system_wrappers",
  ]
}

if (rtc_include_tests) {
  rtc_static_library("lib_test") {
    testonly = true
    sources = [
      "test_utils.cc",
      "test_utils.h",
    ]
    deps = [
      "../..:webrtc_common",
      "../../:typedefs",
      "../../api:array_view",
      "../../rtc_base:checks",
      "../../rtc_base:rtc_base_approved",
      "../../test:fileutils",
      "../../test:test_support",
      "//system_wrappers:system_wrappers",
    ]
    visibility = [ ":*" ]
  }

  group("unittest_data") {
    testonly = true
    data = [
      "../../resources/common_audio/rnn_vad/band_energies.dat",
      "../../resources/common_audio/rnn_vad/features.out",
      "../../resources/common_audio/rnn_vad/fft.dat",
      "../../resources/common_audio/rnn_vad/lp_res.dat",
      "../../resources/common_audio/rnn_vad/samples.pcm",
      "../../resources/common_audio/rnn_vad/vad_prob.out",
    ]
  }

  if (is_ios) {
    bundle_data("rnn_vad_unittests_bundle_data") {
      testonly = true
      sources = ":unittest_data"
      outputs = [
        "{{bundle_resources_dir}}/{{source_file_part}}",
      ]
    }
  }

  rtc_source_set("unittest") {
    testonly = true
    sources = [
      "biquad_unittest.cc",
      "features_extraction_unittest.cc",
      "lp_residual_unittest.cc",
      "pitch_search_unittest.cc",
      "ring_buffer_unittest.cc",
      "rnn_vad_fft_unittest.cc",
      "rnn_vad_unittest.cc",
      "sequence_buffer_unittest.cc",
      "spectral_features_unittest.cc",
    ]
    deps = [
      ":lib",
      ":lib_test",
      ":unittest_data",
      "../..:webrtc_common",
      "../../:typedefs",
      "../../api:array_view",
      "../../api:optional",
      "../../common_audio",
      "../../rtc_base:checks",
      "../../rtc_base:rtc_base_approved",
      "../../test:floating_point_except_observer",
      "../../test:test_support",
    ]

    if (is_ios) {
      deps += [ ":rnn_vad_unittests_bundle_data" ]
    }
  }
}
