{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "90fa5942_4f1ad63e",
        "filename": "sdk/objc/components/video_codec/RTCVideoDecoderH264.mm",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 5249
      },
      "writtenOn": "2022-01-19T07:25:09Z",
      "side": 1,
      "message": "If we want to use metal for simulator, don\u0027t we also want to use it on device?\n\nThere\u0027s also an identical condition in RTCVideoEncoderH264.mm, do we want to update that as well for symmetry?",
      "range": {
        "startLine": 212,
        "startChar": 53,
        "endLine": 212,
        "endChar": 72
      },
      "revId": "00614cd182ceafb38e762ba47fc08eed32300fb3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55cf39bd_a75dcccd",
        "filename": "sdk/objc/components/video_codec/RTCVideoDecoderH264.mm",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 17904
      },
      "writtenOn": "2022-01-19T19:28:15Z",
      "side": 1,
      "message": "At one point WebRTC supported versions of iOS that didn\u0027t have Metal, and if that\u0027s still true we might need a more complicated condition here. That isn\u0027t true for Catalyst, which is good because neither OpenGL or OpenGLES are available in Catalyst.\n\nHowever, I updated this for Catalyst just so that we\u0027d pass *something* but I don\u0027t actually know how any of it works. It\u0027s definitely underdocumented, and from what I could glean I don\u0027t think WebRTC is using it in a meaningful way at all. I didn\u0027t want to rock the boat more than I needed to, though. (Anders, if you\u0027re still at Apple maybe you can poke the right people?)",
      "parentUuid": "90fa5942_4f1ad63e",
      "range": {
        "startLine": 212,
        "startChar": 53,
        "endLine": 212,
        "endChar": 72
      },
      "revId": "00614cd182ceafb38e762ba47fc08eed32300fb3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edd83e69_56c2c989",
        "filename": "sdk/objc/components/video_codec/RTCVideoDecoderH264.mm",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 17629
      },
      "writtenOn": "2022-01-19T21:42:25Z",
      "side": 1,
      "message": "The Metal surface renders on device regardless of these compiler directives, for some reason.\n\nAdded the change to RTCVideoEncoderH264.mm.",
      "parentUuid": "55cf39bd_a75dcccd",
      "range": {
        "startLine": 212,
        "startChar": 53,
        "endLine": 212,
        "endChar": 72
      },
      "revId": "00614cd182ceafb38e762ba47fc08eed32300fb3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77f46b64_dd592b5a",
        "filename": "sdk/objc/components/video_codec/RTCVideoDecoderH264.mm",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 17904
      },
      "writtenOn": "2022-01-19T22:22:36Z",
      "side": 1,
      "message": "Right, I would *not* expect this change to affect whether or not you can use Metal in the simulator. From what I understand it\u0027s controlling what format the pixel buffer is in, but the underlying renderer knows how to convert it anyway. The comment right above all this says\n\n  // Set keys for OpenGL and IOSurface compatibilty, which makes the encoder\n  // create pixel buffers with GPU backed memory. The intent here is to pass\n  // the pixel buffers directly so we avoid a texture upload later during\n  // rendering. This currently is moot because we are converting back to an\n  // I420 frame after decode, but eventually we will be able to plumb\n  // CVPixelBuffers directly to the renderer.\n  // TODO(tkchin): Maybe only set OpenGL/IOSurface keys if we know that that\n  // we can pass CVPixelBuffers as native handles in decoder output.\n\n...and I\u0027m not sure how much of that WebRTC is taking advantage of.",
      "parentUuid": "edd83e69_56c2c989",
      "range": {
        "startLine": 212,
        "startChar": 53,
        "endLine": 212,
        "endChar": 72
      },
      "revId": "00614cd182ceafb38e762ba47fc08eed32300fb3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}