{
  "comments": [
    {
      "key": {
        "uuid": "ae35db03_8a496a2a",
        "filename": "api/audio/audio_frame.h",
        "patchSetId": 10
      },
      "lineNbr": 110,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-10T10:33:40Z",
      "side": 1,
      "message": "Can this be made to only receive an int64_t?\n\nIf feels a bit wrong to set the timestamp without knowing. Also, looking at where there is used, there is actually a comment saying that we want to enforce the timestamp to be set. Therefore I don\u0027t see a good reason for passing an optional to this method.",
      "range": {
        "startLine": 107,
        "startChar": 1,
        "endLine": 110,
        "endChar": 3
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6f0e835_bf56cbeb",
        "filename": "api/audio/audio_frame.h",
        "patchSetId": 10
      },
      "lineNbr": 166,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-10T10:33:40Z",
      "side": 1,
      "message": "On line 133 in this file there is a comment saying that \"Also, absl::optional is not used since it will cause a \"complex\n  // class/struct needs an explicit out-of-line destructor\" build error.\"\n\nDoes that apply here? If not, is that comment outdated (and if it is, please remove that comment as well in this CL)?",
      "range": {
        "startLine": 166,
        "startChar": 2,
        "endLine": 166,
        "endChar": 57
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58be9b7d_49bdb07a",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 10
      },
      "lineNbr": 886,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-10T10:33:40Z",
      "side": 1,
      "message": "If the intention is that in the future absolute_capture_timestamp_ms always receives a value, I think it is better to already now implement absolute_capture_timestamp_ms so that it receives an int64_t and not an optional.",
      "range": {
        "startLine": 885,
        "startChar": 4,
        "endLine": 886,
        "endChar": 39
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e91ee62_c73b645e",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 10
      },
      "lineNbr": 886,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-02-10T14:42:40Z",
      "side": 1,
      "message": "Hi Per, absolute_capture_timestamp_ms is supposed to always receive a value only on this call. \n\nIt won\u0027t have any value during, e.g. mixing, see https://cs.chromium.org/chromium/src/third_party/webrtc/modules/audio_mixer/frame_combiner.cc?type\u003dcs\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d42\n\nAnd that is the reason why the member variable is made an optional",
      "parentUuid": "58be9b7d_49bdb07a",
      "range": {
        "startLine": 885,
        "startChar": 4,
        "endLine": 886,
        "endChar": 39
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "052c9a27_99339cee",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 10
      },
      "lineNbr": 886,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-12T11:33:09Z",
      "side": 1,
      "message": "Thanks! I see.\nHowever, in that case the comment on the line 879 should be changed since it is misleading.",
      "parentUuid": "8e91ee62_c73b645e",
      "range": {
        "startLine": 885,
        "startChar": 4,
        "endLine": 886,
        "endChar": 39
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cfa5e89_cbb46b49",
        "filename": "modules/audio_coding/acm2/audio_coding_module.cc",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-10T10:33:40Z",
      "side": 1,
      "message": "On line 347 a  value of -1 is used to specify that a time-stamp is not available.\n\nWhat is the reason for not using an optional here as well? Or alternatively, would it make sense to use -1 instead of the optional in the other places?",
      "range": {
        "startLine": 234,
        "startChar": 46,
        "endLine": 234,
        "endChar": 75
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d9a24af_c9728ac8",
        "filename": "modules/audio_coding/acm2/audio_coding_module.cc",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 8392
      },
      "writtenOn": "2020-02-11T10:05:38Z",
      "side": 1,
      "message": "I agree with Per on that using -1 (or any other sentinel value) is quite iffy. The value will end up being transformed to gibberish before being sent over the wire:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/source/rtp_sender_audio.cc?l\u003d282\u0026rcl\u003dd4c3c3a454215b21f02d2a772a729b4c87d6b33e\n\nI think it\u0027s better to either:\n\n1) Replace all `absl::optional\u003cint64_t\u003e` with `int64_t` and then explicitly add the hack to set it to 0 at the origins that truly cannot provide a proper value for it.\n\n2) Plumb `absl::optional\u003cint64_t\u003e` all the way down. `AbsoluteCaptureTimeSender` and `AbsoluteCaptureTimeReceiver` are unfortunately not designed to properly handle the transition from \"absolute_capture_timestamp_ms is provided\" to \"absolute_capture_timestamp_ms is no longer provided\".",
      "parentUuid": "2cfa5e89_cbb46b49",
      "range": {
        "startLine": 234,
        "startChar": 46,
        "endLine": 234,
        "endChar": 75
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0369f0c7_edf11be7",
        "filename": "modules/audio_coding/acm2/audio_coding_module.cc",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-02-11T10:30:38Z",
      "side": 1,
      "message": "I don\u0027t think plumbing absl::optional\u003cint64_t\u003e all the way is needed.\n\nWhen the whole chain is finished (in blink etc.) the absolute capture time should always contain a valid value.\n\nThe reason that optional\u003c\u003e is need only because some struct and APIs are designed for both capture and render, then we have to allow it nullopt if the struct or API is used for rendering.\n\nThe value_or(-1) on line 347 is only to handle the transition period, before the whole chain gets finished.",
      "parentUuid": "4d9a24af_c9728ac8",
      "range": {
        "startLine": 234,
        "startChar": 46,
        "endLine": 234,
        "endChar": 75
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6377569b_e4820074",
        "filename": "modules/audio_coding/acm2/audio_coding_module.cc",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-02-12T11:33:09Z",
      "side": 1,
      "message": "I don\u0027t really understand that argument.\nUsing -1 during the transition period is basically acting as a replacement for an optional.\n\nThere are some good arguments for not using magic values (-1) to signal that a value is not set, but I definitely agree that all such cases can be discussed.\n\nHowever, I don\u0027t see any reason for in one place using an optional, and then converting it to using a magic value instead. I think that is misleading affects the readability.\n\nWhat is the reason for not using an optional here as well?",
      "parentUuid": "0369f0c7_edf11be7",
      "range": {
        "startLine": 234,
        "startChar": 46,
        "endLine": 234,
        "endChar": 75
      },
      "revId": "5f348b6e0e9a0bac8a952d3f870c7e0b80ad1c6b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}