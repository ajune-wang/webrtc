{
  "comments": [
    {
      "key": {
        "uuid": "f84b46b5_7064ca19",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-08T08:40:34Z",
      "side": 1,
      "message": "thanks for fixing the iwyu issues",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53bb71ce_a3f53e2f",
        "filename": "rtc_base/async_invoker.h",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-08T08:40:34Z",
      "side": 1,
      "message": "I think we can simply remove this class and then you don\u0027t need to modify async_invoker.* (right?)\nuploaded a change here: https://webrtc-review.googlesource.com/c/src/+/178864/",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd76d477_69c33a80",
        "filename": "rtc_base/async_invoker.h",
        "patchSetId": 3
      },
      "lineNbr": 179,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-08T09:32:55Z",
      "side": 1,
      "message": "OK! Will be fixed after rebase.",
      "parentUuid": "53bb71ce_a3f53e2f",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f7e3af90_b29f62e7",
        "filename": "sdk/android/native_api/jni/java_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-08T15:32:33Z",
      "side": 1,
      "message": "ah, I see - yeah this is a bit strange. Could we instead, not move the thread checker and instead add this here:\n\n... {\n  RTC_DCHECK_RUN_ON(\u0026thread_checker_);\n}\n\nWhich will both initialize the thread checker as well as ensure that we move the state on the right thread?",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f8e383d_caab7ff2",
        "filename": "sdk/android/native_api/jni/java_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-08T15:56:15Z",
      "side": 1,
      "message": "That assumes the iterator is created on the same context that uses ++ and AtEnd(). Let me try.",
      "parentUuid": "f7e3af90_b29f62e7",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2cdc2c2_913ebce6",
        "filename": "sdk/android/native_api/jni/java_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-08T15:32:33Z",
      "side": 1,
      "message": "do you mind changing these to RTC_DCHECK_RUN_ON?\nThey shouldn\u0027t be CHECKs since that\u0027ll just be dead code.",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 11
      },
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f00847c8_3117604a",
        "filename": "sdk/android/native_api/jni/java_types.cc",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-08T15:56:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2cdc2c2_913ebce6",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 11
      },
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "068406cc_c0c7331b",
        "filename": "sdk/android/native_api/jni/java_types.h",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-08T08:40:34Z",
      "side": 1,
      "message": "why is this needed?",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a176549e_fb85b1fb",
        "filename": "sdk/android/native_api/jni/java_types.h",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-08T09:32:55Z",
      "side": 1,
      "message": "Because it aggregates a mutex and they can\u0027t be moved, so this seems to have been an extremely bad idea before.",
      "parentUuid": "068406cc_c0c7331b",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da7b051a_c9f42125",
        "filename": "sdk/android/native_api/jni/java_types.h",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-07-08T17:19:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a176549e_fb85b1fb",
      "revId": "b1aa7fe5dd3a191ca48cc70746c0e1f7038b962c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}