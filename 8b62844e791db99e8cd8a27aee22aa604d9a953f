{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f5afbb0_69cfd0c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-20T03:42:06Z",
      "side": 1,
      "message": "Dear Silkin,\nNow HardwareVideoEncoder class checks whether input frames are 16x16-aligned.\nRegards,\nJung",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc1917a5_085446e3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5825
      },
      "writtenOn": "2021-08-20T10:00:10Z",
      "side": 1,
      "message": "Asa, Xavier, what do you think about this change?",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9eb37baa_cccb9596",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-23T01:49:07Z",
      "side": 1,
      "message": "Added CC to get advice from similar issue in chromium.",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "27308ca2_cc17e843",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6008
      },
      "writtenOn": "2021-08-23T17:11:14Z",
      "side": 1,
      "message": "I suspect you want to apply this everywhere by default and then add devices to an allow list as time goes on if you find the performance requires it.",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "173ecfcb_9f278ab2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-26T01:25:49Z",
      "side": 1,
      "message": "Please share any predictable side effects when we apply this patchset by default. ",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38e2ef35_ebe311fd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-26T01:25:49Z",
      "side": 1,
      "message": "I think it\u0027s quite inefficient to run an additional allow list since we have tons of Android devices to deal with.\n\nAs we can see in the similar patch like this(https://chromium.googlesource.com/chromium/src/+/719b4cde1d74ba5364d74538a35809eca3de8250), I think we\u0027d better apply this patchset by default for all Android devices using HardwareEncoder with MediaCodec.\n\nWould please you explain any problems you concern about when we apply this by default?",
      "parentUuid": "27308ca2_cc17e843",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24df7540_e7ce8714",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6008
      },
      "writtenOn": "2021-08-26T05:27:15Z",
      "side": 1,
      "message": "Sorry if I wasn\u0027t clear, I\u0027m agreeing with you. I think you should just set this as the default and if some critical cases occur later add an allow list.",
      "parentUuid": "38e2ef35_ebe311fd",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1ffdc12_d9a89e4f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-26T05:56:18Z",
      "side": 1,
      "message": "Sorry for misunderstanding. I though you had some doubts about setting it as default.\n\nI agree with you that we\u0027d better enable this feature as default and see if any unpredicted cases occur. However, I\u0027m bit worried if ordinary users would accept the limitation of alignment although Android CTS only tests 16 x 16 alignment frames already.\n\nYou\u0027ve applied patchset similar to this one, so all of you have agreed to apply limitations by default in chromium, Right?",
      "parentUuid": "24df7540_e7ce8714",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f938cca9_2121fd0b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6008
      },
      "writtenOn": "2021-08-26T06:04:18Z",
      "side": 1,
      "message": "Since the alignment is the difference between it working at all and a slightly reduced resolution, the consequences seem worthwhile.\n\nThe change hasn\u0027t reached stable channel yet, so I can\u0027t say if we\u0027ll see any outcry, but given that it took years for folks to even report the broken case, it seems unlikely we\u0027ll get any push back.",
      "parentUuid": "e1ffdc12_d9a89e4f",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f4a995e_5846c4c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-26T06:11:24Z",
      "side": 1,
      "message": "Thanks for your answers and even some history :)",
      "parentUuid": "f938cca9_2121fd0b",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b61334f_3a268449",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5825
      },
      "writtenOn": "2021-08-26T08:46:27Z",
      "side": 1,
      "message": "We discussed this with asapersson@, mirtad@ and ilnik@ and identified at least two undesired consequences:\n\n1. This change increases alignment requirement for the top spatial layer up to \u003d16\u003c\u003c(N-1) pixels, where N is number of simulcast streams. For example, for 1280x720 capture resolution and N\u003d3, we will get: 1280x704, 640x352 and 320x176. I.e., we lose 16 pixels on the top layer and get non standard resolutions which may break downstream projects;\n\n2. This change cancels downscaling when layer scaling factors (RTCRtpEncodingParameters::scaleResolutionDownBy) are set explicitly. For example, for N\u003d3 and scaleResolutionDownBy\u003d[1,2,4] we will get final scaleResolutionDownBy\u003d[1,1,1].\n\nBoth (1) and (2) refer to the logic in https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/alignment_adjuster.cc;l\u003d67-125;drc\u003dab30d72b724b185c6d3404d5f52096ce0b1f76a0.\n\nTo minimize the potential negative impact, we recommend to implement this in a different way:\n1. Add API to query EncodeInfo to VideoEncoder;\n2. Fetch EncoderInfo from Java encoder in VideoEncoderWrapper;\n3. Hardcode EncodeInfo::requested_resolution_alignment\u003d16 in HardwareVideoEncoder;\n4. Set apply_alignment_to_all_simulcast_layers in SimucastEncoderAdapter based on alignment requirements of underlaying encoders.",
      "parentUuid": "3f4a995e_5846c4c1",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9808718_c3b4e0b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-26T10:54:25Z",
      "side": 1,
      "message": "Dear @ssilkin,\n\n\u003e 1. Add API to query EncodeInfo to VideoEncoder;\n\u003e 2. Fetch EncoderInfo from Java encoder in VideoEncoderWrapper;\n\u003e 3. Hardcode EncodeInfo::requested_resolution_alignment\u003d16 in HardwareVideoEncoder;\n\nAbove 3 comments are not quite related to the scaling issues in simulcast encoding, right? Because in patchset I set requested_resolution_alignment\u003d16 in VideoEncoderWrapper::UpdateEncoderInfo() and VideoEncoderWrapper is used only if  when HardwareVideoEncoder in JAVA is get initialized.\n\nI think defining a new variable to save requested_resolution_alignment in VideoEncoder in JAVA and adding an additional API to retrieve it from native are bit redundant. But you\u0027re pointing out potential negative threats of my implementation, am I right?",
      "parentUuid": "9b61334f_3a268449",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e7d2e69_faa6e2f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5825
      },
      "writtenOn": "2021-08-26T12:31:21Z",
      "side": 1,
      "message": "VideoEncoderWrapper is used with Java encoder which can be HardwareVideoEncoder or other (injected) implementation. Setting alignment requirement in VideoEncoderWrapper will affect all Java encoders. We want to avoid that and restrict the change to HardwareVideoEncoder.",
      "parentUuid": "e9808718_c3b4e0b2",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1e2ccfe_66b9f697",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-26T13:31:33Z",
      "side": 1,
      "message": "Got it. I\u0027ll change the implementation not to ruin the intended concept.",
      "parentUuid": "0e7d2e69_faa6e2f6",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4fdda424_ae886f13",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-30T06:44:29Z",
      "side": 1,
      "message": "Dear @Silkin\n\nI\u0027ve uploaded new implementation of this issue. Please check if it meets the requirements you mentioned.",
      "parentUuid": "c1e2ccfe_66b9f697",
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df892310_be469aa4",
        "filename": "sdk/android/src/jni/video_encoder_wrapper.cc",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 5825
      },
      "writtenOn": "2021-08-20T09:17:59Z",
      "side": 1,
      "message": "I\u0027m not sure we should do this for all encoders. Exynos encoders, for example, can handle resolutions non-multiple to 16.",
      "range": {
        "startLine": 117,
        "startChar": 11,
        "endLine": 117,
        "endChar": 14
      },
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b699e01e_473a9710",
        "filename": "sdk/android/src/jni/video_encoder_wrapper.cc",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 18194
      },
      "writtenOn": "2021-08-23T01:49:07Z",
      "side": 1,
      "message": "This patch was originally inspired from \"Issue 1084702: Mobile Chrome on Pixel 3 has video corruption for non-16-aligned resolutions in WebRTC calls : Hardware VP8 encoder bug\" (https://bugs.chromium.org/p/chromium/issues/detail?id\u003d1084702)\n\nSince Android CTS only guarantees normal behavior with 16 x 16 aligned input frames, following patchset has been applied to chormium to use aligned sizes when using H/W Encoders.\n\nhttps://webrtc-review.googlesource.com/c/src/+/225881\nhttps://chromium-review.googlesource.com/c/chromium/src/+/2995112",
      "parentUuid": "df892310_be469aa4",
      "range": {
        "startLine": 117,
        "startChar": 11,
        "endLine": 117,
        "endChar": 14
      },
      "revId": "8b62844e791db99e8cd8a27aee22aa604d9a953f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}