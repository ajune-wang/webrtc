{
  "comments": [
    {
      "key": {
        "uuid": "c17c5f05_530042a1",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-23T13:04:16Z",
      "side": 1,
      "message": "Do we need to keep any of these checks?",
      "range": {
        "startLine": 346,
        "startChar": 0,
        "endLine": 362,
        "endChar": 3
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c89de12e_649aa097",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-23T13:44:30Z",
      "side": 1,
      "message": "payload_type \u003e 0 might be [more than] enough as DCHECK\nit should be catched with check for unregistered payload type anyway.\n\nunregistered payload type looks like reasonable check. You shouldn\u0027t packetize a frame when you do not know how.\nkeeping track of last_payload_type_.... is it used?",
      "parentUuid": "c17c5f05_530042a1",
      "range": {
        "startLine": 346,
        "startChar": 0,
        "endLine": 362,
        "endChar": 3
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42239b80_6406788d",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 4
      },
      "lineNbr": 362,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-23T14:17:19Z",
      "side": 1,
      "message": "Deleted this. Added payloadtype check in RTPSenderVideo. Should I do it for audio as well? Seems a bit useless to add a mapping there, only to be able to reject unregister payload types.\n\nRegarding last_payload_type_, that appears used in SendPadData.",
      "parentUuid": "c89de12e_649aa097",
      "range": {
        "startLine": 346,
        "startChar": 0,
        "endLine": 362,
        "endChar": 3
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8a1c2fc_adee2d0b",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.h",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-23T13:04:16Z",
      "side": 1,
      "message": "Does this need protection by this lock? It is accessed in RegisterPayloadType, called from RTPSender::RegisterPayload, and SendVideo, called from RTPSender::SendOutgoingData. \n\nRTPSender has its own lock, RTPSender::send_critsect_. It\u0027s held over the call to RTPSenderVideo::RegisterPayloadType, but not over the all to RTPSenderVideo::SendVideo.",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 80
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26e9a24c_0ddf3b4d",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.h",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-23T13:29:45Z",
      "side": 1,
      "message": "Not sure what other things crit_ are intended for. To avoid lock-order problems, could add a separate lock for this map, which would then be a leaf in the lock-order graph.",
      "parentUuid": "c8a1c2fc_adee2d0b",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 80
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1443283_de015d54",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.h",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-23T13:44:30Z",
      "side": 1,
      "message": "is it possible to register all payloads during construction?\n\nintroducing extra lock I guess works too, though not optimal.",
      "parentUuid": "26e9a24c_0ddf3b4d",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 80
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab9d2181_6d706537",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.h",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-23T14:17:19Z",
      "side": 1,
      "message": "I\u0027ll try with a separate lock for now. Agree it\u0027s desirable with a construction time const mapping, but that would require larger changes.",
      "parentUuid": "d1443283_de015d54",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 133,
        "endChar": 80
      },
      "revId": "bb9e2409358031cee83986329bfde8a7ded35416",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}