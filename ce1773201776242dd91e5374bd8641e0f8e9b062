{
  "comments": [
    {
      "key": {
        "uuid": "56657db1_93777107",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-12-03T18:07:44Z",
      "side": 1,
      "message": "A difference between the Message/MessageHandler and PostTask is that the MessageHandler will delete any pending tasks targeting that handler when it destructs. PostTask doesn\u0027t have that feature so you need some way to guarantee the object will live long enough, or a way to signal to tasks that the object was deleted. A common pattern in Chrome is to use a WeakPtr for these kinds of tasks.",
      "range": {
        "startLine": 352,
        "startChar": 36,
        "endLine": 352,
        "endChar": 40
      },
      "revId": "ce1773201776242dd91e5374bd8641e0f8e9b062",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f170aa64_c74041ff",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-12-03T18:25:01Z",
      "side": 1,
      "message": "PostTask documentation says:\n\n  // Destruction of the functor/task mimics what TaskQueue::PostTask does: If\n  // the task is run, it will be destroyed on |this| thread. However, if there\n  // are pending tasks by the time the Thread is destroyed, or a task is posted\n  // to a thread that is quitting, the task is destroyed immediately, on the\n  // calling thread.\n\nI don\u0027t care where this particular functor is destroyed, as long as it is either called while |this| is valid or not called at all. Do I need to pass a weak pointer to |this| rather than just capturing it in the lambda?",
      "parentUuid": "56657db1_93777107",
      "range": {
        "startLine": 352,
        "startChar": 36,
        "endLine": 352,
        "endChar": 40
      },
      "revId": "ce1773201776242dd91e5374bd8641e0f8e9b062",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "053416b6_14534cc4",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-12-03T18:27:19Z",
      "side": 1,
      "message": "Yes, you want WeakPtr\u003cDataChannelController\u003e here.",
      "parentUuid": "f170aa64_c74041ff",
      "range": {
        "startLine": 352,
        "startChar": 36,
        "endLine": 352,
        "endChar": 40
      },
      "revId": "ce1773201776242dd91e5374bd8641e0f8e9b062",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a9dea544_bfcb36c3",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-12-03T19:25:22Z",
      "side": 1,
      "message": "Like this?",
      "parentUuid": "053416b6_14534cc4",
      "range": {
        "startLine": 352,
        "startChar": 36,
        "endLine": 352,
        "endChar": 40
      },
      "revId": "ce1773201776242dd91e5374bd8641e0f8e9b062",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15d05143_e6bf7d36",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 352,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-12-03T20:34:00Z",
      "side": 1,
      "message": "Yep, just that like. Chrome makes it a little easier since base::Bind will automatically check the WeakPtr target before invoking the method. rtc::Bind doesn\u0027t support that, though we could always add it.",
      "parentUuid": "a9dea544_bfcb36c3",
      "range": {
        "startLine": 352,
        "startChar": 36,
        "endLine": 352,
        "endChar": 40
      },
      "revId": "ce1773201776242dd91e5374bd8641e0f8e9b062",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}