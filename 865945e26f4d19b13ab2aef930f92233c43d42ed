{
  "comments": [
    {
      "key": {
        "uuid": "c8454700_3426d716",
        "filename": "rtc_base/task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5578
      },
      "writtenOn": "2018-02-07T16:17:33Z",
      "side": 1,
      "message": "We can also make this ctor protected to hide it and let an implementation on a platform that needs a factory method inherit TaskQueue just to be able to call this ctor... or if we inherit, just change impl_ here to be protected.\nwdyt?\n\nTaskQueue {\nprotected:\n impl_;\n}\n\nclass CustomTq: rtc::TaskQueue \nCustomTq(impl): impl_(impl)\n\nstd::unique_ptr\u003cTaskQueu\u003e Create(,,,)\n  scoped_refptr\u003c\u003e impl(...)\n  return std::make_unique\u003cCustomTq\u003e(impl);",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 20
      },
      "revId": "865945e26f4d19b13ab2aef930f92233c43d42ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b8631b2_1fa84884",
        "filename": "rtc_base/task_queue.h",
        "patchSetId": 2
      },
      "lineNbr": 170,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-02-07T16:43:20Z",
      "side": 1,
      "message": "using protect section is nice indication it is for implementers of the TaskQueue, not for users.\n\nit would also allow to avoid wrapping TaskQueue inside unique_ptr:\nclass CustomTaskQueue : rtc::TaskQueue {\n public:\n  CustomTaskQueue(name, custom_parameter) : TaskQueue(CreateImpl(name, custom_parameter)) {}\n private:\n  scoped_ref_ptr\u003crtc::TaskQueue::Impl\u003e CreateImpl(name, custom_parameter) {\n   do custom construction.\n  }\n};\n\nclass Owner {\n public:\n  Ownere() : tq_(name, custom_parameter) {}\n private:\n  CustomTaskQueue tq_;\n};\n\ndownside: TaskQueue has non-virtual destructor, so returning std::unique_ptr\u003cTaskQueue\u003e might be dangerous in that case.\n\n\nI think it would be better with public constructor.\nThen custom implementation can have public function that create scoped_ref_ptr\u003crtc::TaskQueue::Impl\u003e without reveling Impl. and TaskQueue then can be created without wrapping it into a unique_ptr, but still nothing will derive from it (TaskQueue can be final):\n\ncustom api:\nscoped_ref_ptr\u003crtc::TaskQueue::Impl\u003e CreateCustomTaskQueueImpl(custom_parameters);\n\ncustom user:\nTaskQueue tq(CreateCustomTaskQueueImpl(parameters));",
      "parentUuid": "c8454700_3426d716",
      "range": {
        "startLine": 170,
        "startChar": 11,
        "endLine": 170,
        "endChar": 20
      },
      "revId": "865945e26f4d19b13ab2aef930f92233c43d42ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}