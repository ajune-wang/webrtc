{
  "comments": [
    {
      "key": {
        "uuid": "b438b503_94cfe3ab",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 139,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "header_size?",
      "range": {
        "startLine": 139,
        "startChar": 9,
        "endLine": 139,
        "endChar": 20
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8376f1b_e670f442",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "You can use std::array\u003cuint8_t, 8\u003e instead, which perform bound checks on debug builds.",
      "range": {
        "startLine": 143,
        "startChar": 2,
        "endLine": 143,
        "endChar": 9
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c7ab6d9_1413b06f",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 155,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:30:03Z",
      "side": 1,
      "message": "kObuSizePresentBit",
      "range": {
        "startLine": 155,
        "startChar": 18,
        "endLine": 155,
        "endChar": 32
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f68cca34_5e4474f5",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "packet.",
      "range": {
        "startLine": 191,
        "startChar": 69,
        "endLine": 191,
        "endChar": 75
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "373fd895_93dc97e8",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "I know it\u0027s a bit more verbose, but I think something like this is a bit easier to read:\n\n  uint64_t fragment_size;\n  if (continues_obu) {\n    if (!payload.ReadUVarint(\u0026fragment_size)) {\n      RTC_DLOG(WARNING) \u003c\u003c \"Failed to read fragment size.\";\n      return {};\n    }\n    payload.Consume(fragment_size)\n  }\n\n  int num_expected_obus \u003d RtpNumObus(aggregation_header);\n  for (int obu_index \u003d 1; payload.Length() \u003e 0; ++obu_index) {\n    ObuInfo\u0026 obu \u003d obus.emplace_back();\n    bool has_fragment_size \u003d (obu_index !\u003d num_expected_obus);\n    ...\n  }\n\nNote that |continues_obu| implies the presence of at least one fragment size.",
      "range": {
        "startLine": 201,
        "startChar": 0,
        "endLine": 211,
        "endChar": 64
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7676066_6eefc684",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 214,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "read",
      "range": {
        "startLine": 214,
        "startChar": 42,
        "endLine": 214,
        "endChar": 48
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8964a192_b04aa8c3",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 262,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "obu_info?",
      "range": {
        "startLine": 262,
        "startChar": 32,
        "endLine": 262,
        "endChar": 35
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cc279cf_075351cf",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "obu_size_bytes?\n\nI think being a bit more explicit adds clarity.",
      "range": {
        "startLine": 283,
        "startChar": 13,
        "endLine": 283,
        "endChar": 26
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65191084_2eb64645",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 284,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:18:26Z",
      "side": 1,
      "message": "leb128_size_bytes?",
      "range": {
        "startLine": 284,
        "startChar": 8,
        "endLine": 284,
        "endChar": 17
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cca12b3_afc81235",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 307,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:30:03Z",
      "side": 1,
      "message": "I don\u0027t get this comment...",
      "range": {
        "startLine": 306,
        "startChar": 0,
        "endLine": 307,
        "endChar": 13
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aec5fd79_13043dfb",
        "filename": "modules/rtp_rtcp/source/rtp_depacketizer_av1.cc",
        "patchSetId": 3
      },
      "lineNbr": 319,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-20T16:30:03Z",
      "side": 1,
      "message": "remaining_header_size?",
      "range": {
        "startLine": 319,
        "startChar": 6,
        "endLine": 319,
        "endChar": 15
      },
      "revId": "db5be7cff91b019f9d10144910a22fb9429fd1af",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}