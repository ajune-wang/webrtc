{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b219bb45_97b69cb6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-12-01T16:25:08Z",
      "side": 1,
      "message": "danil, please have another go\n\nI understand now what the real problem was in https://webrtc-review.googlesource.com/c/src/+/191942\n\nWe actually hit this DCHECK:\n\n  RTC_DCHECK_EQ(packet.is_key_frame(), keyframe_in_process_);\n\nIn UlpfecGenerator::AddPacketAndGenerateFec() when running video engine tests. The problem there is \nkeyframe params covering more than one frame.\n\nI removed the DCHECK and instead always update parameters when a new keyframe starts.\nA safe and const getter method was made public to make testing easier.\n\nptal!\n",
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f406b2bf_68a3809e",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-12-02T15:41:40Z",
      "side": 1,
      "message": "does that mean that if sent a delta frame, then add a key frame, then an ulpfec packet would be generated with mixed parameters?\n\nWouldn\u0027t that be a problem?\n\nAnother edge case: that would allow to apply new parameters in a middle of a keyframe in case of unlucky race?\n\nmay be solution should be\nif (packet.is_key_frame() \u0026\u0026 !keyframe_in_process_) {\n  // Abandon last fec packet. Or emit it?\n  media_packets_.clear();\n}\n\nif (media_packets_.empty()) {... old code",
      "range": {
        "startLine": 114,
        "startChar": 28,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc1c7787_c18b9d30",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-12-02T20:42:24Z",
      "side": 1,
      "message": "\u003e does that mean that if sent a delta frame, then add a key frame, then an ulpfec packet would be generated with mixed parameters?\n\nYes.\n\n\u003e Wouldn\u0027t that be a problem?\n\nNot really, apart from the bug you noticed below.\nNote that we don\u0027t continuously emit fec packets. We buffer media packets until we have\nenough complete frames or enough packets as specified by the protection parameters. Only then\nare the parameters actually used to produce fec, after which the state is reset.\nSo the side-effect of the mixed scenario you mention is that the delta-frames prior to the\nkey-frame will likely see a little higher protection rate than they would otherwise, rather\nthan getting no protection at all. Not clear if one way is always better?\n\n \n\u003e Another edge case: that would allow to apply new parameters in a middle of a keyframe in case of unlucky race?\n\nTrue. In fact, I think I\u0027ll change this to allow updating the parameters at any time, even in the middle of a frame. As noted above, we only generate fec when we have _complete_ frames so\nworst case the goal-post for how many frames we need may change. I think that\u0027s fair.",
      "parentUuid": "f406b2bf_68a3809e",
      "range": {
        "startLine": 114,
        "startChar": 28,
        "endLine": 114,
        "endChar": 53
      },
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edbdc81f_5f1facd5",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-12-02T15:41:40Z",
      "side": 1,
      "message": "e.g. we generated 4 delta frames with .max_fec_frames \u003d 5.\nnext comes in a key frame with .max_fec_frames \u003d 2.\nNow this condition would never become true.",
      "range": {
        "startLine": 156,
        "startChar": 7,
        "endLine": 156,
        "endChar": 53
      },
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d349302c_7d17ae95",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator.cc",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-12-02T20:42:24Z",
      "side": 1,
      "message": "Good catch, this is the real issue here. It should be \u003e\u003d ...",
      "parentUuid": "edbdc81f_5f1facd5",
      "range": {
        "startLine": 156,
        "startChar": 7,
        "endLine": 156,
        "endChar": 53
      },
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be1b2c66_092962ab",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 246,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-12-02T15:41:40Z",
      "side": 1,
      "message": "using ::testing::IsEmpty;\nusing ::testing::Not;\n...\nmay be EXPECT_THAT(ulpfec_generator_.GetFecPackets(), IsEmpty());\n...\nEXPECT_THAT(ulpfec_generator_.GetFecPackets(), Not(IsEmpty()));\n\n(it too me some time to notice that sometimes it is EXPECT_TRUE, sometimes EXPECT_FALSE)",
      "range": {
        "startLine": 246,
        "startChar": 2,
        "endLine": 246,
        "endChar": 57
      },
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e077f00_b1886ee5",
        "filename": "modules/rtp_rtcp/source/ulpfec_generator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 259,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-12-02T15:41:40Z",
      "side": 1,
      "message": "buff\\e/red",
      "range": {
        "startLine": 259,
        "startChar": 65,
        "endLine": 259,
        "endChar": 72
      },
      "revId": "4bdaffe06178bbd67ad642fd575278c0edd42a4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}