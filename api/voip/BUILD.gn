#Copyright(c) 2020 The WebRTC project authors.All Rights Reserved.
#
#Use of this source code is governed by a BSD - style license
#that can be found in the LICENSE file in the root of the source
#tree.An additional intellectual property rights grant can be found
#in the file PATENTS.All contributing project authors may
#be found in the AUTHORS file in the root of the source tree.

import("../../webrtc.gni")

rtc_source_set("voip_api") {
  visibility = [ "*" ]
  sources = [
    "voip_channel.h",
    "voip_codec.h",
    "voip_engine.h",
    "voip_network.h",
  ]
  deps = [
    "..:transport_api",
    "../audio_codecs:audio_codecs_api",
  ]
}

rtc_library("voip_builder_api") {
  visibility = [ "*" ]
  allow_poison = [ "default_task_queue" ]
  sources = [
    "voip_engine_builder.cc",
    "voip_engine_builder.h",
  ]
  deps = [
    ":voip_api",
    ":voip_core",
    "..:scoped_refptr",
    "../../modules/audio_device:audio_device_api",
    "../../modules/audio_processing:api",
    "../../rtc_base:logging",
    "../audio_codecs:audio_codecs_api",
    "../task_queue",
    "../task_queue:default_task_queue_factory",
  ]
}

rtc_library("voip_core") {
  sources = [
    "voip_core.cc",
    "voip_core.h",
  ]
  deps = [
    ":audio_channel",
    ":voip_api",
    "..:scoped_refptr",
    "../../audio",
    "../../modules/audio_device:audio_device_api",
    "../../modules/audio_mixer:audio_mixer_impl",
    "../../modules/audio_processing:api",
    "../../modules/utility",
    "../../rtc_base:checks",
    "../../rtc_base:criticalsection",
    "../../rtc_base:logging",
    "../audio_codecs:audio_codecs_api",
    "../task_queue",
    "../task_queue:default_task_queue_factory",
  ]
}

rtc_library("audio_channel") {
  sources = [
    "audio_channel.cc",
    "audio_channel.h",
  ]
  deps = [
    ":audio_egress",
    ":audio_ingress",
    "..:transport_api",
    "../../modules/audio_device:audio_device_api",
    "../../modules/rtp_rtcp",
    "../../modules/rtp_rtcp:rtp_rtcp_format",
    "../../modules/utility",
    "../../rtc_base:checks",
    "../../rtc_base:criticalsection",
    "../../rtc_base:logging",
    "../../rtc_base:macromagic",
    "../../rtc_base:rtc_base_approved",
    "../audio_codecs:audio_codecs_api",
    "../task_queue",
  ]
}

rtc_library("audio_egress") {
  sources = [
    "audio_egress.cc",
    "audio_egress.h",
  ]
  deps = [
    "../../audio",
    "../../audio/utility:audio_frame_operations",
    "../../call:audio_sender_interface",
    "../../modules/audio_coding",
    "../../modules/rtp_rtcp",
    "../../modules/rtp_rtcp:rtp_rtcp_format",
    "../../rtc_base:logging",
    "../../rtc_base:rtc_event",
    "../../rtc_base:rtc_task_queue",
    "../../rtc_base:thread_checker",
    "../../rtc_base:timeutils",
    "../audio_codecs:audio_codecs_api",
    "../task_queue",
  ]
}

rtc_library("audio_ingress") {
  sources = [
    "audio_ingress.cc",
    "audio_ingress.h",
  ]
  deps = [
    "..:array_view",
    "..:rtp_headers",
    "..:scoped_refptr",
    "..:transport_api",
    "../../audio",
    "../../audio/utility:audio_frame_operations",
    "../../modules/audio_coding",
    "../../modules/rtp_rtcp",
    "../../modules/rtp_rtcp:rtp_rtcp_format",
    "../../modules/utility",
    "../../rtc_base:criticalsection",
    "../../rtc_base:logging",
    "../../rtc_base:safe_minmax",
    "../../rtc_base:thread_checker",
    "../../rtc_base:timeutils",
    "../audio:audio_mixer_api",
    "../audio_codecs:audio_codecs_api",
  ]
}
