{
  "comments": [
    {
      "key": {
        "uuid": "c14c2ed4_0548fc6b",
        "filename": "video/adaptation/quality_scaler_resource.cc",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-07-06T14:25:40Z",
      "side": 1,
      "message": "If we automatically \"jump to\" the next most limited resource\u0027s restriction after removal, then we can get rid of this spamming of kUnderuse.\n\nCan we get rid of this code and add tests that removing a resource updates the restrictions correctly?",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8c2f098_3a7f6a4a",
        "filename": "video/adaptation/quality_scaler_resource.cc",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-07-06T14:54:36Z",
      "side": 1,
      "message": "Yeah I missed this, will remove.",
      "parentUuid": "c14c2ed4_0548fc6b",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c779b370_fdfe3c5a",
        "filename": "video/adaptation/quality_scaler_resource.cc",
        "patchSetId": 4
      },
      "lineNbr": 115,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-07-07T07:07:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8c2f098_3a7f6a4a",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cfc54aa_17c091d9",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 374,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-07-06T14:25:40Z",
      "side": 1,
      "message": "Prior to this CL, the manager\u0027s resources are added/removed to the processor by VideoStreamEncoder\u0027s constructor and Stop() method.\n\nWith this CL, the manager becomes partially responsible and now removes and re-adds the QP resource. I think multiple classes both adding and removing the same set of resources is confusing and increases the risk that we accidentally add or remove something twice if one of the classes changes and not the other.\n\nFor consistency, perhaps now we should make the it responsible for all of them? Instead of exposing resources with MappedResources(), as part of Initialize() or have a AddMappedResources() that is called as part of the VideoStreamEncoder\u0027s constructor logic that does the adding.",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d112a1be_916c8b6e",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 374,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-07-06T14:54:36Z",
      "side": 1,
      "message": "This makes sense to me. This class should manage all the resources in the processor.",
      "parentUuid": "8cfc54aa_17c091d9",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55e57835_f0d76391",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 374,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-07-07T07:39:33Z",
      "side": 1,
      "message": "OK will you address this before I take another look?",
      "parentUuid": "d112a1be_916c8b6e",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97fffe45_38bc0e02",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 374,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-07-07T07:52:03Z",
      "side": 1,
      "message": "Yes working on it now.",
      "parentUuid": "55e57835_f0d76391",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f73169f4_5d8df550",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 542,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-07-06T14:25:40Z",
      "side": 1,
      "message": "nit: Since |this| is still valid, so is |quality_scaler_resource_|. No need for |ref|",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52cfdf1b_833aec77",
        "filename": "video/adaptation/video_stream_encoder_resource_manager.cc",
        "patchSetId": 4
      },
      "lineNbr": 542,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-07-06T14:54:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f73169f4_5d8df550",
      "revId": "b70db7b4877f9db953d95cce48a69c68b4e62ce0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}