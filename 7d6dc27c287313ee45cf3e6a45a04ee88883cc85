{
  "comments": [
    {
      "key": {
        "uuid": "b4abd6e5_28c98721",
        "filename": "api/test/loopback_media_transport.cc",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Make the lambda mutable instead. (See longer explanation of a similar problem below.)",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9abb4193_219cc1e0",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 623,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Make frame mutable instead (i.e., remove the `const` on line 603).",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7bc5371_7a6ba4e7",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 1254,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "This is actually the wrong fix. This is scoped_refptr, so move is cheaper than copy. The original std::move was ineffective because lambdas\u0027 operator() default to being const, so this line was unable to steal frame_encryptor.\n\nThe right fix should be to add `mutable` between the () and the { on line 1253.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46331824_8c2c7028",
        "filename": "common_video/incoming_video_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "This looks like the wrong fix. I think the method signature ought to be changed instead, so that video_frame isn\u0027t a const reference.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fb4f92d_7ad88177",
        "filename": "logging/rtc_event_log/rtc_event_log_parser.cc",
        "patchSetId": 1
      },
      "lineNbr": 1064,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "These two look like the wrong fix. I think the loop variable should be a mutable reference instead.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41727446_b3975442",
        "filename": "modules/audio_coding/codecs/builtin_audio_decoder_factory_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Change the SdpAudioFormat constructor to take the parameters by value instead (or add an overload that takes an rvalue reference).",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "172416ca_edf67c71",
        "filename": "modules/audio_device/audio_device_name.cc",
        "patchSetId": 1
      },
      "lineNbr": 22,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Make the two local variables mutable instead.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f028efa9_85c8230c",
        "filename": "pc/jsep_transport.cc",
        "patchSetId": 1
      },
      "lineNbr": 485,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Possibly wrong fix. If `encrypted_extension_ids` could be passed by value instead, we could have an actual move here.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eded1d15_12d87bd7",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5186,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. SetConfiguration should take its second argument by value instead.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1572a372_68d3b15a",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5216,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Same.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d73a680c_489359c3",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5740,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Make TransportStats move constructible instead.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0eb04d57_313c6491",
        "filename": "pc/peer_connection_ice_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 997,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Should be\n\n  pc_ \u003d std::move(pc);",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80e89945_47c6a8ed",
        "filename": "pc/rtp_receiver.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. MediaStream::Create should take its argument by value instead.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad317036_ddd0be48",
        "filename": "rtc_base/function_view_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 100,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Hmm. The point of this test is to verify that move construction is copy construction. Perhaps you can replace std::move with a manual cast to rvalue reference instead? Or is it possible to annotate this line so that clang-tidy ignores it?",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29f084f7_b512039f",
        "filename": "rtc_base/function_view_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Same here. The whole point is to verify that move assignment is copy assignment.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47266b6d_f4ea6043",
        "filename": "stats/rtc_stats_report.cc",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. Move constructors should take `T\u0026\u0026`, not `const T\u0026\u0026`.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65358103_1c381cbf",
        "filename": "test/scenario/quality_stats.cc",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. The lambda should be mutable.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c87603d3_16e04adc",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 501,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-29T13:40:24Z",
      "side": 1,
      "message": "Wrong fix. The lambda should be mutable.",
      "revId": "7d6dc27c287313ee45cf3e6a45a04ee88883cc85",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}