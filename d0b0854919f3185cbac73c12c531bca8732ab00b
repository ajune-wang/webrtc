{
  "comments": [
    {
      "key": {
        "uuid": "d732e1da_f5554712",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-05-21T08:58:03Z",
      "side": 1,
      "message": "Fix the CL description:\n\nTitle (no \"according to webrtc:3098\")\n\nDescription...\n...\n\nBug: webrtc:3098",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "21c01dce_161c62ef",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-05-27T11:09:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d732e1da_f5554712",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "874a8f98_84a998eb",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 1148,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-05-21T08:57:03Z",
      "side": 1,
      "message": "Add a link to appropriate spec section",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a58ca7f_020cf7bc",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 1148,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-05-27T11:09:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "874a8f98_84a998eb",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70fe3a7d_8afbb6de",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 1151,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-05-21T08:57:03Z",
      "side": 1,
      "message": "This is unsigned short in the spec: Consider using uint16_t instead of int\nhttps://w3c.github.io/webrtc-pc/#dom-rtcpeerconnectioniceerrorevent",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730a4d1a_d97c04d2",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 1151,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-05-27T11:09:48Z",
      "side": 1,
      "message": "Looked around a bit in the API and for example in IceCandidateInterface the sdp_mline_index() also returns int compared to https://w3c.github.io/webrtc-pc/#dom-rtcicecandidate-sdpmlineindex. Haven\u0027t checked what coding standards recommend, but personally I always prefer int as much as possible as on some platforms it might even give performance gain to use native CPU word size",
      "parentUuid": "70fe3a7d_8afbb6de",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ab2ee83_3a6e5ee7",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 1151,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-05-28T09:06:30Z",
      "side": 1,
      "message": "Generally speaking we use \"int\" when it shouldn\u0027t matter what type it is for the reasons you mention, but if we explicitly want a certain type it is good to document it by using that type, and in other cases it might affect the behavior or make it harder to accidentally pass in an invalid value since you may have to cast. But considering we are only talking about an error code I can\u0027t imagine it matters in this case, and I have heard arguments for using signed instead of unsigned (for example when caring about wrap-around). I\u0027ll let other reviewers decide.",
      "parentUuid": "730a4d1a_d97c04d2",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17ec1945_ce738cae",
        "filename": "api/peer_connection_interface.h",
        "patchSetId": 2
      },
      "lineNbr": 1151,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-05-31T09:06:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8ab2ee83_3a6e5ee7",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f20b3290_e253e3a4",
        "filename": "p2p/base/ice_transport_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-05-21T08:57:03Z",
      "side": 1,
      "message": "Since it\u0027s not clear what this does without a bunch of comments I suggest introducing a new struct with named variables. This struct can be used in all places where arguments are listed in this CL.",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0533e088_38ff8afd",
        "filename": "p2p/base/ice_transport_internal.h",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-05-31T09:06:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f20b3290_e253e3a4",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b0d0ee4_834c33ec",
        "filename": "p2p/base/p2p_transport_channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 858,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-05-21T08:57:03Z",
      "side": 1,
      "message": "nit: Empty line before and after function",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a0c189b_0629cd92",
        "filename": "p2p/base/p2p_transport_channel.cc",
        "patchSetId": 2
      },
      "lineNbr": 858,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-05-27T11:09:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0b0d0ee4_834c33ec",
      "revId": "d0b0854919f3185cbac73c12c531bca8732ab00b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}