{
  "comments": [
    {
      "key": {
        "uuid": "ce92523c_a51dfa73",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "Here and elsewhere: What about the ssrc \u003d\u003d 0 case, will this CHECK fail?\n\nEven if we get an Info, this can produce non-unique stats IDs if multiple senders can have ssrc \u003d\u003d 0 before connecting.\n\nIf we should be able to support ssrc being \"undefined\" for a sender, we need to give senders an ID guaranteed to be unique (for example, a sequence number that increases every time we create a sender) and use that for the RTCStats::id. If you do that, I would suggest doing it in a separate CL and just skip the stats if voice_sender_info is null.",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc821dc8_9748bb59",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "I think the Right Thing to do is to skip generating stats for tracks with no SSRC assigned, and file a new bug for that. bugs.webrtc.org/8673 filed.",
      "parentUuid": "ce92523c_a51dfa73",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb68d79a_d448b0f2",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cc821dc8_9748bb59",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e8c2b033_9c7414bc",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "nit: Unnecessary newline and comment. A comment at the top saying iterating receivers to get remote tracks makes sense though (and same for iterating senders to get local tracks).",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63b6e229_88d71221",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 566,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T09:02:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e8c2b033_9c7414bc",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f403d14_bafb18a7",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 602,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "See next comment.",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc47b927_281d524b",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 602,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4f403d14_bafb18a7",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77574e9d_e606788e",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "This was before your change too, but I think there is a bug. local_streams() are streams added with addStream, not addTrack-streams, which are only stored by stream_ids in the sender[1]. pthatcher has argued about moving away from streams, since they\u0027re only IDs at this point[2], the concept of a stream object only making sense in JavaScript land. So we should not rely on MediaStreamInterface::GetAudio/VideoTracks().\n\nThis might make sense to do in a follow-up CL, you decide, but I think we need to implement ProduceMediaStreamStats as determining which tracks belong to which stream based on looping through senders, their tracks and stream IDs. This should also be done for receivers instead of remote_streams() since we want to deprecate remote_streams(), but the remote case will work without bugs.\n\nWe should have test coverage doing this:\n\n  stream \u003d { track1 }  // Which track is added to a stream is irrelevant for addTrack.\n  addTrack(track2, stream);\n  Expect RTCMediaStreamStats describing \"stream -\u003e track2\", not \"stream -\u003e track1\" and\n  RTCMediaStreamTrackStats describing track2, not track1.\n\nI suspect we would fail this test, but I haven\u0027t tested. Can you file a bug or address?\n\n[1] https://cs.chromium.org/chromium/src/third_party/webrtc/api/rtpsenderinterface.h?q\u003dRtpSenderInterface\u0026sq\u003dpackage:chromium\u0026dr\u003dCSs\u0026l\u003d52\n[2] https://webrtc-review.googlesource.com/c/src/+/31647/1/pc/peerconnection.cc#1010",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "873df984_f6b8b9ae",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "Yep. My thinking here is that there should be only one way we care about streams, and dropping the concept in the C++ layer might very well be the Right Thing. But until we have a functioning streams handling in Chrome, we have to make sure this one works.",
      "parentUuid": "77574e9d_e606788e",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "377ccde4_ff70e4f2",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 3
      },
      "lineNbr": 1017,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "Filed https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d8674 so as to not forget this issue. Not solving at this time.",
      "parentUuid": "873df984_f6b8b9ae",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5725afe_f7d605ab",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "If we have an enum with { kAddStream, kAddTrack }, can we TEST_P and run all tests using tracks/streams for both API usages like the legacy stats unittest change?",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78b0ca9c_f200f625",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "I went back a bit on this in my warmup exercise in (old) statscollector. It seems only the tests that are using tracks and streams should be affected (many aren\u0027t). There are 3 cases:\n\n- AddStream(track)\n- AddTrack(track, null)\n- AddTrack(track, stream)\n\nWriting tests so that they make sense in 2 scenarios turned out to be a bigger rewrite than I thought, so I did a minimalist approach here. Will look again.",
      "parentUuid": "f5725afe_f7d605ab",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c406d80d_c3635785",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 325,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "The function is used in 3 tests - CollectRTCOutboundRTPStreamStats_Audio, _Video and CollectNoStreamRTCOutboundRTPStreamStats_Audio. So making a TEST_P would only reduce the tests by 1 - I don\u0027t think this is worth the additional complexification.",
      "parentUuid": "78b0ca9c_f200f625",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7393782_6d4efeb1",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2406,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "We should have a test case for multiple senders with ssrc \u003d\u003d 0, if this is what happens before you setLocalDescription/connect or in any other circumstance.",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "912c5614_e69a3d54",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2406,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c7393782_6d4efeb1",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20e179ba_de3f3a66",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2406,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "Test added that ssrc \u003d 0 is ignored.",
      "parentUuid": "912c5614_e69a3d54",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73219465_8e8c4efc",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 857,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "Here and elsewhere: If you want to test the same thing it should be AddTrack(track_, {stream_});",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2026274_23f0b8c1",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 857,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "Actually not, since this code\u0027s AddTrack (and AddStream) are functions of statscollector, not functions of PeerConnection. It\u0027s a very unit-testy thing.",
      "parentUuid": "73219465_8e8c4efc",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae7ebe4d_b057792a",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1753,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "Since you\u0027ve already returned on false, DCHECK(GetParam())?",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0dd3894_f7b14a53",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 1753,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae7ebe4d_b057792a",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85bd9062_96405542",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2191,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "nit: Is it possible to do this with enum instead of Bool? kAddStream, kAddTrack",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aab3f5ff_f5757ff5",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2191,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "Yes, it\u0027s possible. Would read more nicely.",
      "parentUuid": "85bd9062_96405542",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a48a649f_11645c98",
        "filename": "pc/statscollector_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2191,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T11:12:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aab3f5ff_f5757ff5",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268b1618_cb23edbc",
        "filename": "pc/trackmediainfomap.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-19T20:20:14Z",
      "side": 1,
      "message": "What about the ssrc \u003d\u003d 0 case? Before you connect, can multiple senders all have ssrc 0? If so, can you only add the mapping if ssrc !\u003d 0?",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f877adf_d2e2e1d3",
        "filename": "pc/trackmediainfomap.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T06:03:20Z",
      "side": 1,
      "message": "Given that we only report on connected tracks, not adding the mapping is the Right Thing.",
      "parentUuid": "268b1618_cb23edbc",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b297bd78_788c7e80",
        "filename": "pc/trackmediainfomap.cc",
        "patchSetId": 3
      },
      "lineNbr": 138,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-20T09:02:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7f877adf_d2e2e1d3",
      "revId": "136418bd1234f39e68d26a96ce28158291128065",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}