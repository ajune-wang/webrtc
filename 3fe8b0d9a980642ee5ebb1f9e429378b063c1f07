{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4c8a58a8_2fdd5337",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-07-01T11:37:28Z",
      "side": 1,
      "message": "Hope we don\u0027t trigger problems.\n",
      "revId": "3fe8b0d9a980642ee5ebb1f9e429378b063c1f07",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0836a39_eead460c",
        "filename": "pc/rtp_sender_receiver_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1154,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-01T10:29:00Z",
      "side": 1,
      "message": "This could be problematic. There are issues with using rtc::Thread objects in death tests that could have unintentional side effects. I can\u0027t remember exactly the issues we\u0027ve run into except that for sure we turn off automatic thread wrapping because of this. When I saw this a vague alarm bell went off in my head so I figured I\u0027d share it ðŸ˜Š",
      "revId": "3fe8b0d9a980642ee5ebb1f9e429378b063c1f07",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69c7a797_7626dc05",
        "filename": "pc/rtp_sender_receiver_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1154,
      "author": {
        "id": 5087
      },
      "writtenOn": "2022-07-01T11:29:05Z",
      "side": 1,
      "message": "Ah, good point!\n\nhta@, in case you see issues, https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d11577#c6 has the context on the problem Tommi is referring to.",
      "parentUuid": "e0836a39_eead460c",
      "revId": "3fe8b0d9a980642ee5ebb1f9e429378b063c1f07",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c86cb52_b6954c08",
        "filename": "pc/rtp_sender_receiver_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1154,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-07-01T11:37:28Z",
      "side": 1,
      "message": "I hope the fix applied in that bug (renaming all the test helpers to *DeathTest) applies in this case too. And it has this gloriously simplifying init sequence:\n\n  RtpSenderReceiverTest()\n      : network_thread_(rtc::Thread::Current()),\n        worker_thread_(rtc::Thread::Current()),\n\nSo there shouldn\u0027t really be any extra threads (I think).\n(Note: the extensive use of single threads in unit tests is, to my mind, quite dangerous, since the RTC_DCHECK_RUN_ON statements that we depend on for policing thread access will never trigger when all the threads are the same thread. Different topic.)",
      "parentUuid": "69c7a797_7626dc05",
      "revId": "3fe8b0d9a980642ee5ebb1f9e429378b063c1f07",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa10638e_7552b6e6",
        "filename": "pc/rtp_sender_receiver_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1154,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-02T14:11:28Z",
      "side": 1,
      "message": "+1 on the point that it would be better to have tests match with the production environment.\n\niirc the thread wrapping was the biggest problem and it triggered a particular bot (one of asan, tsan, msan). It could be that by using rtc::Thread::Current(), which relies on thread local storage, could trigger that again. But if things are green, then _maybe_ it\u0027s safe as is.",
      "parentUuid": "2c86cb52_b6954c08",
      "revId": "3fe8b0d9a980642ee5ebb1f9e429378b063c1f07",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}