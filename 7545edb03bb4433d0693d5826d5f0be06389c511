{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f6f3c882_1dc5d2a5",
        "filename": "media/engine/webrtc_video_engine_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 7721,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-08-16T10:03:08Z",
      "side": 1,
      "message": "Do we still have test coverage for all layers having the same count?\nJust checking to making sure we have tests that don\u0027t use simulcast encoder adapter...",
      "range": {
        "startLine": 7721,
        "startChar": 48,
        "endLine": 7721,
        "endChar": 49
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7159464f_a5247677",
        "filename": "media/engine/webrtc_video_engine_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 7721,
      "author": {
        "id": 5492
      },
      "writtenOn": "2021-08-16T14:51:52Z",
      "side": 1,
      "message": "Keeping this test as it is. Also added a test in VideoSendStreamTest that is not using simulcast encoder adapter.",
      "parentUuid": "f6f3c882_1dc5d2a5",
      "range": {
        "startLine": 7721,
        "startChar": 48,
        "endLine": 7721,
        "endChar": 49
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6bf0c398_b9d73048",
        "filename": "media/engine/webrtc_video_engine_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 7721,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-08-17T08:16:05Z",
      "side": 1,
      "message": "Great, thanks!",
      "parentUuid": "7159464f_a5247677",
      "range": {
        "startLine": 7721,
        "startChar": 48,
        "endLine": 7721,
        "endChar": 49
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ede2665_d4472322",
        "filename": "video/video_send_stream_tests.cc",
        "patchSetId": 7
      },
      "lineNbr": 4041,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-08-16T10:03:08Z",
      "side": 1,
      "message": "nit: maybe use a reference instead",
      "range": {
        "startLine": 4041,
        "startChar": 34,
        "endLine": 4041,
        "endChar": 35
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be302546_db7f8688",
        "filename": "video/video_send_stream_tests.cc",
        "patchSetId": 7
      },
      "lineNbr": 4041,
      "author": {
        "id": 5492
      },
      "writtenOn": "2021-08-16T14:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ede2665_d4472322",
      "range": {
        "startLine": 4041,
        "startChar": 34,
        "endLine": 4041,
        "endChar": 35
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e90dee7d_19421d12",
        "filename": "video/video_send_stream_tests.cc",
        "patchSetId": 7
      },
      "lineNbr": 4073,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-08-16T10:03:08Z",
      "side": 1,
      "message": "you technically don\u0027t need this, accessing the map with operator[] will default initialize the element to 0...\nfine with keeping to make it explicit but in that case wrap the below in an else {}",
      "range": {
        "startLine": 4071,
        "startChar": 6,
        "endLine": 4073,
        "endChar": 7
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81cd0b88_e3775e38",
        "filename": "video/video_send_stream_tests.cc",
        "patchSetId": 7
      },
      "lineNbr": 4073,
      "author": {
        "id": 5492
      },
      "writtenOn": "2021-08-16T14:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e90dee7d_19421d12",
      "range": {
        "startLine": 4071,
        "startChar": 6,
        "endLine": 4073,
        "endChar": 7
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b92f656b_15a47441",
        "filename": "video/video_send_stream_tests.cc",
        "patchSetId": 7
      },
      "lineNbr": 4083,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-08-16T10:03:08Z",
      "side": 1,
      "message": "Checking that max_observed_tl_idxs_ matches configured_num_temporal_layers_ risks that we signal success too early and miss that too many layers are produced, but we guard from that by running for a minimum amount of time (1s). That timeout is probably different on differently capable platforms though.\n\nI think the test could become more robust and completer faster if this criteria is changed to having a minimum amount of frames observed per ssrc instead. E.g. 8 since there are no temporal patterns longer than that, though fewer would probably be ok given that the highest temporal layer is usually on frame #2.",
      "range": {
        "startLine": 4083,
        "startChar": 9,
        "endLine": 4083,
        "endChar": 42
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a5c74f9_f95ae47d",
        "filename": "video/video_send_stream_tests.cc",
        "patchSetId": 7
      },
      "lineNbr": 4083,
      "author": {
        "id": 5492
      },
      "writtenOn": "2021-08-16T14:51:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b92f656b_15a47441",
      "range": {
        "startLine": 4083,
        "startChar": 9,
        "endLine": 4083,
        "endChar": 42
      },
      "revId": "7545edb03bb4433d0693d5826d5f0be06389c511",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}