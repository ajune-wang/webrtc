{
  "comments": [
    {
      "key": {
        "uuid": "5e1ada98_d3eb53d5",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 64,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "It\u0027s confusing that UpdateWritableState also maybe sets up DTLS-SRTP.\n\nMaybe it just needs a better name.  Maybe UpdateWritableStateAndMaybeSetupDtlsSrtp.  Then you wouldn\u0027t need the comment.",
      "range": {
        "startLine": 64,
        "startChar": 24,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee09c27d_e6774801",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 64,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e1ada98_d3eb53d5",
      "range": {
        "startLine": 64,
        "startChar": 24,
        "endLine": 64,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73b63d7e_e5cc0dd4",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Don\u0027t you need to UpdateWritableState also?",
      "range": {
        "startLine": 70,
        "startChar": 25,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81afbae3_46dcb9cb",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Yeah, should do that.",
      "parentUuid": "73b63d7e_e5cc0dd4",
      "range": {
        "startLine": 70,
        "startChar": 25,
        "endLine": 70,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d7eb6abc_5c3c1d7a",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Should probably just call this IsDtlsActive()",
      "range": {
        "startLine": 92,
        "startChar": 44,
        "endLine": 92,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b3d1280_4ac939fe",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7eb6abc_5c3c1d7a",
      "range": {
        "startLine": 92,
        "startChar": 44,
        "endLine": 92,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d2f1ef2_352b6a4a",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 98,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "I think the way you modeled this with writable() looked nicer:\n\n  auto rtp_packet_transport \u003d srtp_transport_-\u003ertp_packet_transport();\n  auto rtcp_packet_transport \u003d\n      rtcp_mux_enabled() ? nullptr : srtp_transport_-\u003ertcp_packet_transport();\n\n  return (rtp_packet_transport \u0026\u0026 rtp_packet_transport-\u003eIsDtlsActive() \u0026\u0026\n      (!rtcp_packet_transport || rtcp_packet_transport-\u003eIsDtlsActive()));",
      "range": {
        "startLine": 98,
        "startChar": 73,
        "endLine": 98,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb305fb7_9796a388",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 98,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "rtp_packet_transport from SrtpTransport is a PacketTransportInternal* rather than a DtlsTransport* and IsDtlsActive() is not available. This is why I store the DtlsTransport* separately here so that we can avoid downcasting.\n\nI can do something similar here.",
      "parentUuid": "3d2f1ef2_352b6a4a",
      "range": {
        "startLine": 98,
        "startChar": 73,
        "endLine": 98,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc164973_1ef07871",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 113,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Same here with IsDtlsActive: make IsDtlsConnected() and use the same logic from above.\n\nThen this method is:\n\nreturn IsDtlsActive() \u0026\u0026 IsDtlsConnected();",
      "range": {
        "startLine": 113,
        "startChar": 75,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ad88a0e_239a2f5b",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 113,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fc164973_1ef07871",
      "range": {
        "startLine": 113,
        "startChar": 75,
        "endLine": 113,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11bdd636_73fc7b40",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 126,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Shouldn\u0027t SetupDtlsSrtp fire the failure so that all calls to it will fire the failure?",
      "range": {
        "startLine": 126,
        "startChar": 39,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "843a390c_40ccc046",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 126,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "11bdd636_73fc7b40",
      "range": {
        "startLine": 126,
        "startChar": 39,
        "endLine": 126,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf1d3cea_50d8d4d2",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 201,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Could you break up this method into 2: one for extraction, which doesn\u0027t need the rtcp bool, and one for setting.  Then you could have something like this:\n\nExtractParams(\u0026params)\nSetRtpParams(params)\n\nor\n\n\nExtractParams(\u0026params)\nSetRtcpParams(params)",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aabe2d9_5759451f",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 201,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "ExtractParams still needs to know which DtlsTransport to use, RTP or RTCP.\n\nIf the point is to get rid of the rtcp bool,\nthen I think we can do this:\n\nSetupRtpDtlsSrtp {\n  GetCachedHeaderExtensionId\n  ExtractParams(rtp_dtls_transport, \u0026param)\n  SetRtpParams\n}\n\nSetupRtcpDtlsSrtp {\n  GetCacheHeaderExtensionId\n  ExtractParams(rtcp_dtls_transport, \u0026param)\n  SetRtcpParms\n}\n\nMaybeSetupDtlsSrtp {\n  SetupRtpDtlsSrtp\n  SetupRtcpDtlsSrtp\n}\n\nSetEncryptedHeaderExtensionId() {\n  CacheHeaderExtensionId\n  // Call this method to update the SrtpSession\n  // This extra layer of abstraction can help to reduce duplicated code.\n  SetupRtpDtlsSrtp\n\n}\n\n\nDoes it make sense?",
      "parentUuid": "bf1d3cea_50d8d4d2",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4bcc231c_257133a2",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "I think it would be more readable to just inline this.",
      "range": {
        "startLine": 234,
        "startChar": 80,
        "endLine": 234,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b745f94a_ab2307b4",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 234,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4bcc231c_257133a2",
      "range": {
        "startLine": 234,
        "startChar": 80,
        "endLine": 234,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36bc0d34_ac1c956a",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Instead of passing in an rtcp bool like this, I think it would be cleaner to have SetRtpDtlsTransport and SetRtcpDtlsTransport just like we have SetRtpPacketTransport and SetRtcpPacketTransport.  Those could be implemented with a common SetDtlsTransport like this:\n\nvoid DtlsSrtpTransport::SetDtlsTransport(new_dtls_transport, old_dtls_trasnport) {\n  if (*old_dtls_transport) {\n    *old_dtls_transport-\u003eSignalDtlsState.disconnect(this);\n    *old_dtls_transport-\u003eSignalWritableState.disconnect(this);\n  }\n\n  *old_dtls_transport \u003d new_dtls_transport;\n\n  // This would only be possible if using BUNDLE but not rtcp-mux, which isn\u0027t\n  // allowed according to the BUNDLE spec.\n  if (rtcp \u0026\u0026 new_dtls_transport) {\n    RTC_CHECK(!(IsActive()))\n        \u003c\u003c \"Setting RTCP for DTLS/SRTP after the DTLS is active \"\n        \u003c\u003c \"should never happen.\";\n  }\n\n  if (new_dtls_transport) {\n    new_dtls_transport-\u003eSignalDtlsState.connect(\n        this, \u0026DtlsSrtpTransport::OnDtlsState);\n    new_dtls_transport-\u003eSignalWritableState.connect(\n        this, \u0026DtlsSrtpTransport::OnWritableState);\n  }\n}\n\nvoid SetRtpDtlsTransport(new_dtls_transport) {\n  SetDtlsTransport(new_dtls_transport, \u0026rtp_dtls_transport_);\n}\n\nvoid SetRtcpDtlsTransport(new_dtls_transport) {\n  SetDtlsTransport(new_dtls_transport, \u0026rtcp_dtls_transport_);\n}\n\n\nAnd then in use:\n\n\nSetRtpDtlsTransport(rtp_dtls_trasnport);\nSetRtpPacketTransport(rtp_dtls_trasnport);\nif (rtcp_dtls_transport) {\n  RTC_CHECK(!IsActive());\n}\nSetRtcpDtlsTransport(rtcp_dtls_transport, \u0026rtcp_dtls_transport_);\nSetRtcpPacketTransport(rtcp_dtls_transport);",
      "range": {
        "startLine": 239,
        "startChar": 57,
        "endLine": 239,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4e49793_f0c17996",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 239,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36bc0d34_ac1c956a",
      "range": {
        "startLine": 239,
        "startChar": 57,
        "endLine": 239,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde68a75_3d6947b5",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 272,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Wouldn\u0027t srtp_transport_-\u003ertcp_packet_transport() already be null if rtcp_mux is enabled?",
      "range": {
        "startLine": 272,
        "startChar": 78,
        "endLine": 272,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91adc591_957ef314",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 272,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "I think in PrAnswer, the rtcp_mux_enabled() could be true and rtcp_packet_transport() is non-null.",
      "parentUuid": "fde68a75_3d6947b5",
      "range": {
        "startLine": 272,
        "startChar": 78,
        "endLine": 272,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb498f42_63b71a04",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 286,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "You should move the common writable_ changing logic into a SetWritableState method.\n\nThen this is just:\n\nbool writable \u003d rtp_packet_transport \u0026\u0026 rtp_packet_transport-\u003ewritable() \u0026\u0026\n                (!rtcp_packet_transport || rtcp_packet_transport-\u003ewritable())\nif (writable) {\n  MaybeSetupDtlsSrtp();\n}\nSetWritable(writable);\n\n\nIn fact, it would be nice to have IsDtlsWritable and then say:\n\nbool writable \u003d IsDtlsWritable();\nif (writable) {\n  MaybeSetupDtlsSrtp();\n}\nSetWritable(writable);",
      "range": {
        "startLine": 286,
        "startChar": 5,
        "endLine": 286,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc843105_c6d33344",
        "filename": "pc/dtlssrtptransport.cc",
        "patchSetId": 10
      },
      "lineNbr": 286,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "This is nicer! Done.",
      "parentUuid": "eb498f42_63b71a04",
      "range": {
        "startLine": 286,
        "startChar": 5,
        "endLine": 286,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57a9bcdb_a792575a",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Can you make it clear in the comment that this is intended to be used as an RtpTransport?  And can you make it clear that it wraps both DtlsTransports and an SrtpTransport?",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 25,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4013a3b0_81724b34",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 25,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57a9bcdb_a792575a",
      "range": {
        "startLine": 25,
        "startChar": 54,
        "endLine": 25,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1af6025_7673247e",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "When muxing, should the second variable be the same as the first or null?",
      "range": {
        "startLine": 31,
        "startChar": 43,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "608f6bf2_f30120ee",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "In current implementation, it should be null.",
      "parentUuid": "e1af6025_7673247e",
      "range": {
        "startLine": 31,
        "startChar": 43,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1be313_179328a1",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Why does the constructor take in SrtpTransport but then the DtlsTransports are given later?  And why is the SrtpTransport owned but the DtlsTransports aren\u0027t?",
      "range": {
        "startLine": 33,
        "startChar": 78,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4bbfbe5_715b1f8b",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 33,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "One reason is for bundling and we need it to reset the DtlsTransport. The SrtpTransport/RtpTransport only have setters for PacketTransport and the DtlsSrtpTransport needs the DtlsTransport.\n\nWe are using \"transport\" for both RTP level transport and P2P level transport which could be confusing.",
      "parentUuid": "2d1be313_179328a1",
      "range": {
        "startLine": 33,
        "startChar": 78,
        "endLine": 33,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14c5af1d_5cd9deff",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Why do these need to be exposed?",
      "range": {
        "startLine": 45,
        "startChar": 31,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f7e7946_7b98792f",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 45,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "With recent refactoring on BaseChannel, we don\u0027t need these anymore.",
      "parentUuid": "14c5af1d_5cd9deff",
      "range": {
        "startLine": 45,
        "startChar": 31,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e84dba2_76791064",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 52,
      "author": {
        "id": 5660
      },
      "writtenOn": "2017-11-10T21:51:15Z",
      "side": 1,
      "message": "Is this supposed to be \"override\"?",
      "range": {
        "startLine": 52,
        "startChar": 57,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "187f4913_52bfcca6",
        "filename": "pc/dtlssrtptransport.h",
        "patchSetId": 10
      },
      "lineNbr": 52,
      "author": {
        "id": 5080
      },
      "writtenOn": "2017-11-14T18:39:03Z",
      "side": 1,
      "message": "In current implementation, it\u0027s not part of RtpTransportInternal interface because it means \"The SrtpTransport is ready to protect packets.\". So it\u0027s not supposed to be override.",
      "parentUuid": "3e84dba2_76791064",
      "range": {
        "startLine": 52,
        "startChar": 57,
        "endLine": 52,
        "endChar": 0
      },
      "revId": "aa7a8dedc01539521038f9097585392af8838d25",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}