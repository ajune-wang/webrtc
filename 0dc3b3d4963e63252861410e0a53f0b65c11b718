{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eb2b5fe1_e186c2fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-07T07:29:40Z",
      "side": 1,
      "message": "I really like getting rid of this Reconfigure method.\n \ncall/ lgtm with a few nits. I\u0027d like Sam to review audio/ changes. ",
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14f99645_3472eabf",
        "filename": "audio/audio_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 109,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-08T07:34:57Z",
      "side": 1,
      "message": "Looks like we pass on the config as is to this utility function, and it appears to access the frame_transformer member.",
      "range": {
        "startLine": 109,
        "startChar": 46,
        "endLine": 109,
        "endChar": 52
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24bfeab7_0b3ad10b",
        "filename": "audio/audio_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 109,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-08T14:54:49Z",
      "side": 1,
      "message": "yes, and there it\u0027s moved: std::move(config.frame_transformer)\nThat\u0027s why I added the DCHECK to the AudioReceiveStream ctor where the call to SetDepacketizerToDecoderFrameTransformer used to be. That call was always made with a nullptr, which really is a bug but because of the way SetDepacketizerToDecoderFrameTransformer  is implemented, the call got ignored.",
      "parentUuid": "14f99645_3472eabf",
      "range": {
        "startLine": 109,
        "startChar": 46,
        "endLine": 109,
        "endChar": 52
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b109075_09926e55",
        "filename": "audio/audio_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-07T07:29:40Z",
      "side": 1,
      "message": "Does that mean the member should be removed from this config struct?\n\nAnd similarly for the other \"config\" values where the new setters pass them on to channel_receive_.",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 70
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cf92385_cdca37de",
        "filename": "audio/audio_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-07T16:38:44Z",
      "side": 1,
      "message": "From what I can tell, yes.\n\nThere are a few members in the struct that don\u0027t represent the const \"config\" state of the struct and special handling is required to deal with those values changing. From what I\u0027m seeing, the related members in the config struct seem to be superfluous.",
      "parentUuid": "6b109075_09926e55",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 70
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b895ff6e_1297ca3b",
        "filename": "audio/audio_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-08T07:34:57Z",
      "side": 1,
      "message": "Add  TODO items where the Config struct is declared (call/audio_receive_stream.h)? It would be good to clean out all settings that don\u0027t belong there.\n\nWhich of the AudioReceiveStream constructors is used in production? In one sense, it looks like ChannelReceive is injected (and then its config should be the caller\u0027s responsibility), but perhaps that\u0027s not how it\u0027s actually used.",
      "parentUuid": "1cf92385_cdca37de",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 70
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c0efe11_63fbce05",
        "filename": "audio/audio_receive_stream.cc",
        "patchSetId": 9
      },
      "lineNbr": 146,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-08T14:54:49Z",
      "side": 1,
      "message": "Done. Updated the two places to be consistent in how frame_transformer is used (or rather, not used).\n\nQ: Which of the AudioReceiveStream constructors is used in production?\nA: Both are used since the one Call uses calls the other ctor.",
      "parentUuid": "b895ff6e_1297ca3b",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 70
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b37f8a90_1e8360c7",
        "filename": "call/call.cc",
        "patchSetId": 9
      },
      "lineNbr": 988,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-07T07:29:40Z",
      "side": 1,
      "message": "Move of this line looks ok, but unclear if it\u0027s for aesthetics or if it\u0027s somehow needed for correctness?",
      "range": {
        "startLine": 988,
        "startChar": 0,
        "endLine": 988,
        "endChar": 48
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2b21829_ad0626bb",
        "filename": "call/call.cc",
        "patchSetId": 9
      },
      "lineNbr": 988,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-07T16:38:44Z",
      "side": 1,
      "message": "oh, forgot I had moved it. But there\u0027s a reason. The construction and \"saving\" the pointer steps belong together as some of the below steps will complete asynchronously on other threads in the future. Before those tasks are queued, the audio_receive_streams_ state should be consistent.",
      "parentUuid": "b37f8a90_1e8360c7",
      "range": {
        "startLine": 988,
        "startChar": 0,
        "endLine": 988,
        "endChar": 48
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a9baa06_cfca8b63",
        "filename": "call/call.cc",
        "patchSetId": 9
      },
      "lineNbr": 988,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-08T07:34:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a2b21829_ad0626bb",
      "range": {
        "startLine": 988,
        "startChar": 0,
        "endLine": 988,
        "endChar": 48
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcd27c54_a6cf1844",
        "filename": "call/call.cc",
        "patchSetId": 9
      },
      "lineNbr": 1449,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-07T07:29:40Z",
      "side": 1,
      "message": "Rephrase as TODO (or if possible, add check right away).",
      "range": {
        "startLine": 1449,
        "startChar": 0,
        "endLine": 1449,
        "endChar": 29
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2aac098f_50418a08",
        "filename": "call/call.cc",
        "patchSetId": 9
      },
      "lineNbr": 1449,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-07T16:38:44Z",
      "side": 1,
      "message": "this is to document that the method runs on the worker thread. It\u0027s just a copy of the RTC_RUN_ON(worker_thread_) annotation inside the class declaration (line 360). Here it serves the same purpose for a reader as an RTC_DCHECK_RUN_ON(worker_thread_) line would, but we can\u0027t use that macro since the \"lock\" is expected to be held already.",
      "parentUuid": "fcd27c54_a6cf1844",
      "range": {
        "startLine": 1449,
        "startChar": 0,
        "endLine": 1449,
        "endChar": 29
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "41bc6028_22f648c6",
        "filename": "call/call.cc",
        "patchSetId": 9
      },
      "lineNbr": 1449,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-06-08T07:34:57Z",
      "side": 1,
      "message": "I see, makes sense, but new convention to me.",
      "parentUuid": "2aac098f_50418a08",
      "range": {
        "startLine": 1449,
        "startChar": 0,
        "endLine": 1449,
        "endChar": 29
      },
      "revId": "0dc3b3d4963e63252861410e0a53f0b65c11b718",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}