{
  "comments": [
    {
      "key": {
        "uuid": "3a5fcff6_f0ecd842",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 408,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-09-07T10:03:15Z",
      "side": 0,
      "message": "After reading the style guide I think this solution is probably too complex.\n\nWe can change the data structure and avoid the usage of std::map or use a function-local static pointer as we discussed earlier.",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 408,
        "endChar": 54
      },
      "revId": "7cd2a9514837cfb63f636fa2d213e7941fc76f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6a9a610_055b9607",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 408,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-09-07T10:40:42Z",
      "side": 0,
      "message": "Are all three types in the map enums or similar? In that case, you could turn this into a global constant array I think.",
      "parentUuid": "3a5fcff6_f0ecd842",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 408,
        "endChar": 54
      },
      "revId": "7cd2a9514837cfb63f636fa2d213e7941fc76f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f2f65d_ea110ab3",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 408,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-09-07T11:49:24Z",
      "side": 0,
      "message": "Is something like this acceptable?\n\n typedef int ProtoMediaCounter[3];\n\n static const ProtoMediaCounter foo[] \u003d {\n   {\n     kEnumCounterKeyProtocolDtls,\n     cricket::MEDIA_TYPE_AUDIO,\n     kEnumCounterKeyProtocolMediaTypeDtlsAudio,\n   },\n   ...\n };\n\nThe std::map is definitely more readable, but it is only used in one place so maybe we can accept this solution.",
      "parentUuid": "3a5fcff6_f0ecd842",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 408,
        "endChar": 54
      },
      "revId": "7cd2a9514837cfb63f636fa2d213e7941fc76f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0f0b1bd_37488f28",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 408,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-09-07T12:12:32Z",
      "side": 0,
      "message": "I would definitely suggest that you use an array-of-structs instead of an array-of-arrays; that way you get to use the real types, and you can name the fields.",
      "parentUuid": "d0f2f65d_ea110ab3",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 408,
        "endChar": 54
      },
      "revId": "7cd2a9514837cfb63f636fa2d213e7941fc76f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f5634ad_376d22eb",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 408,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-09-07T12:22:30Z",
      "side": 0,
      "message": "I didn\u0027t think about it. I will do it in 1 hour. :)",
      "parentUuid": "a0f0b1bd_37488f28",
      "range": {
        "startLine": 394,
        "startChar": 2,
        "endLine": 408,
        "endChar": 54
      },
      "revId": "7cd2a9514837cfb63f636fa2d213e7941fc76f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}