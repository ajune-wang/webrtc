{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa38e7f1_81505fe2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-19T08:58:12Z",
      "side": 1,
      "message": "PTAL.",
      "revId": "840fe541d12150ea78fa25d9cd0898eacbedc16a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76e116c4_35aac3b8",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-19T09:30:07Z",
      "side": 1,
      "message": "What I am worried in this case, is that we kind of deceive the compile time check into thinking that after the call, the mutex is held, while we do nothing.\n\nI wonder if we should implement this check or do something similar to Chromium (https://source.chromium.org/chromium/chromium/src/+/main:base/synchronization/lock.h;l\u003d38;drc\u003da82378c43085272634cd20f92cfb11a1c65f3897) which has the check in debug builds and not in release builds.\n\nWhat do you think?",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 50
      },
      "revId": "840fe541d12150ea78fa25d9cd0898eacbedc16a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5e6754e_7df58976",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-19T11:53:17Z",
      "side": 1,
      "message": "Changing it to do the run time check only in debug builds makes sense to me (I hadn\u0027t expected abseil\u0027s AssertHeld to be an unconditional check). About naming, should it be consistent with abseil (AssertLocked) or with chromium (AssertAcquired)?\n\nImplementing it for other mutex implementations looks a bit subtle; I did a quick check of pthreads and window\u0027s critical section, and couldn\u0027t find any easy advertised way to do it. So it would need some additional atomic member to record owning thread, with writes protected by the mutex but readable from arbitrary threads.\n\nI think we have reasonable test coverage with abseil\u0027s mutex (but perhaps not on the publicly visible bots; maybe we should add a configuration to do that)? For local tests, I use \n\nrtc_use_absl_mutex \u003d true\ntreat_warnings_as_errors \u003d false\n\nin args.gn.",
      "parentUuid": "76e116c4_35aac3b8",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 50
      },
      "revId": "840fe541d12150ea78fa25d9cd0898eacbedc16a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08205014_6249d333",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-19T13:26:47Z",
      "side": 1,
      "message": "\u003e Changing it to do the run time check only in debug builds makes sense to me (I hadn\u0027t expected abseil\u0027s AssertHeld to be an unconditional check). About naming, should it be consistent with abseil (AssertLocked) or with chromium (AssertAcquired)?\n\nI prefer the abseil one, but that is just a personal thing. :) \n\n\u003e Implementing it for other mutex implementations looks a bit subtle; I did a quick check of pthreads and window\u0027s critical section, and couldn\u0027t find any easy advertised way to do it. So it would need some additional atomic member to record owning thread, with writes protected by the mutex but readable from arbitrary threads.\n\u003e \n\u003e I think we have reasonable test coverage with abseil\u0027s mutex (but perhaps not on the publicly visible bots; maybe we should add a configuration to do that)? For local tests, I use \n\u003e \n\u003e rtc_use_absl_mutex \u003d true\n\u003e treat_warnings_as_errors \u003d false\n\u003e \n\u003e in args.gn.\n\nOk, sounds good to me. Maybe we just add a TSan bot which uses absl::Mutex as implementation?",
      "parentUuid": "b5e6754e_7df58976",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 50
      },
      "revId": "840fe541d12150ea78fa25d9cd0898eacbedc16a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43ae4a47_8ac3af2d",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-19T14:15:12Z",
      "side": 1,
      "message": "Added #if RTC_DCHECK_ON logic.\n\nFYI, the warnings I get when compiling with abseil\u0027s mutex is \n\n../../media/sctp/usrsctp_transport.cc:77:37: warning: declaration requires an exit-time de\\\nstructor [-Wexit-time-destructors]\nABSL_CONST_INIT webrtc::GlobalMutex g_usrsctp_lock_(absl::kConstInit);                     \n                                    ^\n../../media/sctp/usrsctp_transport.cc:77:37: warning: declaration requires a global destru\\\nctor [-Wglobal-constructors]\n2 warnings generated.",
      "parentUuid": "08205014_6249d333",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 50
      },
      "revId": "840fe541d12150ea78fa25d9cd0898eacbedc16a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7894e675_da9e997d",
        "filename": "rtc_base/synchronization/mutex_pthread.h",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-19T14:23:51Z",
      "side": 1,
      "message": "+orphis@ for this one.\n\nWe can suppress the warning in the meantime since dcsctp. WDYT?",
      "parentUuid": "43ae4a47_8ac3af2d",
      "range": {
        "startLine": 46,
        "startChar": 48,
        "endLine": 46,
        "endChar": 50
      },
      "revId": "840fe541d12150ea78fa25d9cd0898eacbedc16a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}