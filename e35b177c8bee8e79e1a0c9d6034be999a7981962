{
  "comments": [
    {
      "key": {
        "uuid": "fc903176_c3897def",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-10-31T13:31:55Z",
      "side": 1,
      "message": "what does value 121 mean?",
      "range": {
        "startLine": 136,
        "startChar": 41,
        "endLine": 136,
        "endChar": 44
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70ad08f1_772d5252",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-10-31T14:39:32Z",
      "side": 1,
      "message": "Some arbitrary large window size. It\u0027s a named constant now.",
      "parentUuid": "fc903176_c3897def",
      "range": {
        "startLine": 136,
        "startChar": 41,
        "endLine": 136,
        "endChar": 44
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67d4d2a0_79d7cf63",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-10-31T13:31:55Z",
      "side": 1,
      "message": "i.e. you assume that rtp_timestamp increased by same value on each call of SetLastRtpTime.\nthat is not true for Video (but video do set capture_time_ms).\nMay be true for audio. (any easy way to validate the assumption?)",
      "range": {
        "startLine": 266,
        "startChar": 5,
        "endLine": 266,
        "endChar": 25
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8a8e088_f93672fd",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-10-31T14:39:32Z",
      "side": 1,
      "message": "It\u0027s always true for audio. Tested that in Chrome, in video_loopback and in 1st party loopback tests. \n\nOssu@ Can you comment on that?",
      "parentUuid": "67d4d2a0_79d7cf63",
      "range": {
        "startLine": 266,
        "startChar": 5,
        "endLine": 266,
        "endChar": 25
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "648bd1c0_f68bab74",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-10-31T15:14:49Z",
      "side": 1,
      "message": "Well, it should be true provided there are no gaps in the audio capture. I hope there are gaps in the rtp_timestamps when that happens.",
      "parentUuid": "f8a8e088_f93672fd",
      "range": {
        "startLine": 266,
        "startChar": 5,
        "endLine": 266,
        "endChar": 25
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9369020e_53d31660",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-10-31T15:38:11Z",
      "side": 1,
      "message": "And that case should be processed correctly by the workaround, because it changes timestamps from that we would have otherwise by at most 1ms.",
      "parentUuid": "648bd1c0_f68bab74",
      "range": {
        "startLine": 266,
        "startChar": 5,
        "endLine": 266,
        "endChar": 25
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9cc8610_1ed529a0",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-10-31T13:31:55Z",
      "side": 1,
      "message": "shouldn\u0027t that be inside if above then?",
      "range": {
        "startLine": 285,
        "startChar": 23,
        "endLine": 285,
        "endChar": 30
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85db1e11_661d291a",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 285,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-10-31T14:39:32Z",
      "side": 1,
      "message": "Nice catch!",
      "parentUuid": "b9cc8610_1ed529a0",
      "range": {
        "startLine": 285,
        "startChar": 23,
        "endLine": 285,
        "endChar": 30
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f887c612_16b4e870",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-10-31T13:31:55Z",
      "side": 1,
      "message": "look like complicated and brittle workaround.\nHow much work to actually fix the bug instead?",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 208,
        "endChar": 20
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05407cf5_67fe51ac",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-10-31T14:39:32Z",
      "side": 1,
      "message": "I have no idea.\nOssu@, can you answer that question?\n\nI too would prefer to just fix https://bugs.webrtc.org/9905 instead, but it looks to be non-trivial. Yet workaround is needed ASAP.",
      "parentUuid": "f887c612_16b4e870",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 208,
        "endChar": 20
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2830b692_fad8caad",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-10-31T15:14:49Z",
      "side": 1,
      "message": "I don\u0027t doubt that this removes the issue reported, but isn\u0027t is just papering over the issue? I mean, we want the timestamps to increase monotonically and we fix that by just adjusting them to be monotonically increasing. Isn\u0027t there an easier way to lie about this, if that\u0027s the route we\u0027re going down? :)",
      "parentUuid": "f887c612_16b4e870",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 208,
        "endChar": 20
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f5baba0_b7397660",
        "filename": "modules/rtp_rtcp/source/rtcp_sender.h",
        "patchSetId": 3
      },
      "lineNbr": 208,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-10-31T15:38:11Z",
      "side": 1,
      "message": "I couldn\u0027t find a better way to make them increase monotonically at a pace corresponding to the actual increase rate.\n\nCalculate and smooth the call rate and fix the timestamps to grow exactly that fast. That\u0027s the only idea I had. We have to estimate the grow rate because we don\u0027t know it (stupid, stupid av-sync tests. I still doubt they are realistic).\n\nOf course, the cleanest solution would be to plumb the actual capture timestamps to RTCP module and not guess them.",
      "parentUuid": "2830b692_fad8caad",
      "range": {
        "startLine": 208,
        "startChar": 2,
        "endLine": 208,
        "endChar": 20
      },
      "revId": "e35b177c8bee8e79e1a0c9d6034be999a7981962",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}