{
  "comments": [
    {
      "key": {
        "uuid": "d2253ad0_2677084c",
        "filename": "modules/video_coding/codecs/multiplex/test/multiplex_adapter_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 138,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-27T13:21:12Z",
      "side": 1,
      "message": "Will this still work?",
      "range": {
        "startLine": 138,
        "startChar": 56,
        "endLine": 138,
        "endChar": 58
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54ed143f_d2f55a22",
        "filename": "modules/video_coding/codecs/multiplex/test/multiplex_adapter_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 138,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-03-27T15:17:05Z",
      "side": 1,
      "message": "Yes, it will. With current threshold value (36) we should be able to catch severe distortions.",
      "parentUuid": "d2253ad0_2677084c",
      "range": {
        "startLine": 138,
        "startChar": 56,
        "endLine": 138,
        "endChar": 58
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee216010_b01d0c8b",
        "filename": "modules/video_coding/codecs/test/video_codec_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-28T07:35:58Z",
      "side": 1,
      "message": "If possible (which it is not, see below), I would move this to the ctor of the test fixture instead. Then you could make |input_frame_generator_| const.\n\nhttps://github.com/google/googletest/blob/master/googletest/docs/FAQ.md#should-i-use-the-constructordestructor-of-the-test-fixture-or-the-set-uptear-down-function",
      "range": {
        "startLine": 61,
        "startChar": 25,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd352430_87cd619c",
        "filename": "modules/video_coding/codecs/test/video_codec_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 61,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-03-28T09:11:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ee216010_b01d0c8b",
      "range": {
        "startLine": 61,
        "startChar": 25,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e020a1ed_5db49210",
        "filename": "modules/video_coding/codecs/test/video_codec_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-28T07:35:58Z",
      "side": 1,
      "message": "... but due to this call, we would violate the style guide by following my advice above:\nhttps://google.github.io/styleguide/cppguide.html#Doing_Work_in_Constructors\n\nSo best to keep it as is.",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "102421e9_de337699",
        "filename": "modules/video_coding/codecs/test/video_codec_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 70,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-03-28T09:11:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e020a1ed_5db49210",
      "range": {
        "startLine": 70,
        "startChar": 2,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "236e8ffb_92041af7",
        "filename": "modules/video_coding/codecs/test/video_codec_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-28T07:35:58Z",
      "side": 1,
      "message": "You could use uint32_t here and for |last_input_frame_timestamp_|. Then everything will wrap naturally, and you don\u0027t have to do the static_cast below.",
      "range": {
        "startLine": 93,
        "startChar": 8,
        "endLine": 93,
        "endChar": 14
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b691eb_c5ba1411",
        "filename": "modules/video_coding/codecs/test/video_codec_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 93,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-03-28T09:11:40Z",
      "side": 1,
      "message": "Changed to uint32_t.",
      "parentUuid": "236e8ffb_92041af7",
      "range": {
        "startLine": 93,
        "startChar": 8,
        "endLine": 93,
        "endChar": 14
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61cae757_9cbdbd38",
        "filename": "modules/video_coding/codecs/vp8/test/vp8_impl_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-28T07:35:58Z",
      "side": 1,
      "message": "Is this intentionally not 176? Maybe add a comment about that in that case.",
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "067ffd37_daa2f5c8",
        "filename": "modules/video_coding/codecs/vp8/test/vp8_impl_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-03-28T09:11:40Z",
      "side": 1,
      "message": "This looks like misprint. These unit tests used paris_qcif which is 176x144. I.e. frame size in tests did\u0027t match actual frame size in YUV file.\nAfter switching to frame generator it is not critical which value to use. But I think it would be better to use some standard resolution. I changed width to 176.",
      "parentUuid": "61cae757_9cbdbd38",
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3402c693_3fe4718b",
        "filename": "modules/video_coding/codecs/vp8/test/vp8_impl_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 32,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-28T09:16:17Z",
      "side": 1,
      "message": "Yes, that makes sense. I was thinking maybe the tests intentionally used 172, and then using the remaining pixels as padding due to the stride alignment.",
      "parentUuid": "067ffd37_daa2f5c8",
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ceb06df_a39f94e8",
        "filename": "modules/video_coding/codecs/vp8/test/vp8_impl_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 246,
      "author": {
        "id": 5023
      },
      "writtenOn": "2018-03-28T07:35:58Z",
      "side": 1,
      "message": "Is this needed?",
      "range": {
        "startLine": 244,
        "startChar": 2,
        "endLine": 246,
        "endChar": 63
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93a2f550_0425462a",
        "filename": "modules/video_coding/codecs/vp8/test/vp8_impl_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 246,
      "author": {
        "id": 5825
      },
      "writtenOn": "2018-03-28T09:11:40Z",
      "side": 1,
      "message": "Yes, I think so. We want to check that timestamps pass through both encoder and decoder. It makes sense to use specific values and do not rely on default ones (set by some other layer).",
      "parentUuid": "5ceb06df_a39f94e8",
      "range": {
        "startLine": 244,
        "startChar": 2,
        "endLine": 246,
        "endChar": 63
      },
      "revId": "eaa3abcafb20c652b78b0d2f9b6c0667347f0009",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}