{
  "comments": [
    {
      "key": {
        "uuid": "ab00c2b1_4017d3d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T05:59:14Z",
      "side": 1,
      "message": "PTAL.\n\nNote that I initially tried splitting DataChannelController into two as well, but this meant PeerConnection had to manage the two controllers, which made the code unnecessarily ugly.\n\nI figure we can let DataChannelController manage both SctpDataChannels and RtpDataChannels, hiding this detail (for the most part) from PeerConnection. This seems okay since I assume the whole point of DataChannelController\u0027s existence is to encapsulate ugly details like that.",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d853dbec_c57edd56",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:30:20Z",
      "side": 1,
      "message": "Very nice refactor!\n\nHaven\u0027t reviewed all the files, so have to come back for another round.\n\nFirst reactions:\n- DataChannelController handles only SCTP datachannels, so it shouldn\u0027t need to be touched as much as it is in this revision. Please review.\n- Proxy maps still refer to the DataChannel class, which no longer exists. That looks strange.\n\nStill have to review in detail.",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de21bbc2_28dc1789",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:34:04Z",
      "side": 1,
      "message": "Sorry, I was wrong. The DataChannelController *does* have some functions for RTP data channels.\nWill review some more.\n",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "21f9d451_cc7e77c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T07:37:54Z",
      "side": 1,
      "message": "Actually the purpose of DataChannelController was to isolate SCTP data channel handling from the huge PeerConnection class - I introduced it before starting to modify the end-cause handling in SCTP data channels. The pieces of RTP data channels that were carried over were done because it was easier that way - DataChannelController doesn\u0027t even keep a list of open RTP data channels.\n\nI\u0027d be happy if all RTP-specific code was carried back to PeerConnection, but of course even happier if it was encapsulated in an RTP-only manager class.",
      "parentUuid": "ab00c2b1_4017d3d1",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "912cdefb_6c262f60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T07:37:54Z",
      "side": 1,
      "message": "On third read ... this is Good Enough. Let\u0027s land it and iterate from a better place.\nNits only.\n\nLGTM.\n",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d681006e_de1a09aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "I\u0027d rather not move all the RTP stuff back just to delete it soon later. Plus I think keeping it in DataChannelController is cleaner anyway.",
      "parentUuid": "21f9d451_cc7e77c0",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fe5681f_9bcc571e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-12T09:55:45Z",
      "side": 1,
      "message": "I\u0027d personally still prefer to move the rtp related stuff out of the DataChannelController (DCC) since it (like was the case previously with DataChannel) complicates the state of DCC. Basically at every stage we need to check if we\u0027re acting as rtp or sctp. Moving the code back to PC isn\u0027t something I\u0027d want either but I\u0027d be able to live with two separate, mutually exclusive, pointers there depending on whether rtp or sctp is being used if only to get the freedom to simplify the sctp implementation, remove all the unnecessary thread hops and be able to access const state and what could be const state such as id(), freely (without lock or thread hop) from the main UI thread.\n\nHarald - fyi - there are more details in another chat that Taylor and I had a few days ago here:\nhttps://webrtc-review.googlesource.com/c/src/+/178221",
      "parentUuid": "d681006e_de1a09aa",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fb7210e_23637672",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 3
      },
      "lineNbr": 272,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T07:37:54Z",
      "side": 1,
      "message": "Can we avoid exposing the \"proxy\" property in the function names?\n\nI\u0027d like to get rid of the proxy eventually (choosing between acquire-lock and explicit thread jumps as appropriate for the function).",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ce58e05_aaf38d23",
        "filename": "pc/data_channel_controller.cc",
        "patchSetId": 3
      },
      "lineNbr": 272,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "I wanted to make it clear that the controller is creating the proxy, because previously the PeerConnection was doing it. But with the SctpDataChannel/RtpDataChannel split, it was cleaner to have this class do it, because then PeerConnection doesn\u0027t even need to know the type of the channel.",
      "parentUuid": "5fb7210e_23637672",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a98c7b3a_02698a01",
        "filename": "pc/data_channel_controller.h",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:30:20Z",
      "side": 1,
      "message": "DataChannelController doesn\u0027t manage RTP data channels. This should be unnecessary.",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "210630fa_59eb578f",
        "filename": "pc/data_channel_controller.h",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "Not sure what you mean. Everything I\u0027m looking at points to this class managing them, or at least hooking up signals. Do you mean cricket::RtpDataChannel?",
      "parentUuid": "a98c7b3a_02698a01",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "829ff483_23ea6f3e",
        "filename": "pc/peer_connection.h",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T07:37:54Z",
      "side": 1,
      "message": "can this be a SctpDataChannel*?",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b5f5987_985e255e",
        "filename": "pc/peer_connection.h",
        "patchSetId": 3
      },
      "lineNbr": 317,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "I made the Closed signal emit a DataChannelInterface because it was all that was needed, and it let RTCStatsCollector connect signals of both RtpDataChannels and SctpDataChannels to one slot.",
      "parentUuid": "829ff483_23ea6f3e",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf024e7a_0a0a4ff3",
        "filename": "pc/rtp_data_channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T07:37:54Z",
      "side": 1,
      "message": "Perhaps we could move the const-valued initializations to the declaration rather than the constructor?",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34ce148_46f9e1e7",
        "filename": "pc/rtp_data_channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 107,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cf024e7a_0a0a4ff3",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2a67d5f_a6bb1c58",
        "filename": "pc/rtp_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:30:20Z",
      "side": 1,
      "message": "Does it? I know we had a pseudo TCP part that did reliable delivery using RTP data channels; wasn\u0027t that part of the RTP data channel stack?",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71ddb22e_2d30223a",
        "filename": "pc/rtp_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "If that existed, it must\u0027ve been removed before I joined Google. No such code exists now and you can\u0027t even construct an RTP data channel with reliable set to true.",
      "parentUuid": "a2a67d5f_a6bb1c58",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27841292_572eede7",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T05:59:14Z",
      "side": 1,
      "message": "Needed to put an anonymous namespace because we have two files trying to define DataChannelProxy",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ba719ed_9042cd6f",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:30:20Z",
      "side": 1,
      "message": "Can\u0027t we define the proxy map on RtpDataChannel?\nThe proxy map isn\u0027t on DataChannelInterface, it\u0027s on DataChannel.\n\n(it\u0027s good to have it in a private namespace anyway. The more we can internalize the proxy ugliness, the easier it is to get rid of it.)",
      "parentUuid": "27841292_572eede7",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d5d0ea1_40fffa73",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "The problem is that BEGIN_PROXY_MAP(Foo) creates a proxy for FooInterface called FooProxy. BEGIN_PROXY_MAP(RtpDataChannel) would try to create a proxy for RtpDataChannelInterface which doesn\u0027t exist.\n\nI could define a new macro, or a typedef for RtpDataChannelInterface, but I think this work fine and it\u0027s only temporary anyway.",
      "parentUuid": "3ba719ed_9042cd6f",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "053202a7_35a87e99",
        "filename": "pc/sctp_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:30:20Z",
      "side": 1,
      "message": "I think this class can be merged with DataChannelController; it\u0027s basically management routines for the transport. I didn\u0027t do the merge when creating DataChannelController because it was tangled with RTP.\n\nNot needed for this CL.",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e55191b_becec1e4",
        "filename": "pc/sctp_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "Meaning SctpDataChannelProviderInterface can be merged with DataChannelController? Or SctpTransportInternal? Anyway, I plan to address this in the next CL.",
      "parentUuid": "053202a7_35a87e99",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "91465353_cc47f30b",
        "filename": "pc/sctp_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T06:30:20Z",
      "side": 1,
      "message": "Can you put a RTC_GUARDED_BY on provider_?\nIt\u0027s a const, so not racy in itself, but I\u0027m not sure the provider is properly guarded.",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92dacf19_ee69b120",
        "filename": "pc/sctp_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "Done. Is this to ensure that the provider is only accessed on one thread, because that\u0027s what the implementation expects?",
      "parentUuid": "91465353_cc47f30b",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6f4480c3_6eb0271b",
        "filename": "pc/test/mock_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-09T07:37:54Z",
      "side": 1,
      "message": "Should we rename this to MockSctpDataChannel for clarity?",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b953921_09493e6b",
        "filename": "pc/test/mock_data_channel.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-09T22:11:05Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "6f4480c3_6eb0271b",
      "revId": "051a0991de95dc547713ab90b7c15cfa6f9f0d73",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}