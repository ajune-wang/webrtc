{
  "comments": [
    {
      "key": {
        "uuid": "7b3a8930_d6fddfff",
        "filename": "test/pc/e2e/analyzer/video/quality_analyzing_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-03-04T15:33:34Z",
      "side": 1,
      "message": "Hm, are we passing multiple simulcast streams to the receiver? That\u0027s usually not how simulcast works. The backend should ensure that only a single stream is ever relayed to the receiver.",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 68
      },
      "revId": "544208eb74b29cbd3079d7e417a7e7debeed2338",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1449afa5_90051b45",
        "filename": "test/pc/e2e/analyzer/video/quality_analyzing_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-03-04T15:37:59Z",
      "side": 1,
      "message": "Because we don\u0027t want to fully emulate Selective Forwarding Unit (SFU) in the test, cause it will be hard, we\u0027ll emulate it\u0027s behavior on receiver side to make it as close as possible to real SFU behavior. So it is why we will send all streams from sender side and filterout irrelevant streams on receiver and won\u0027t pass these streams to the video analyzer and decoder.\n\nAlso in next CL I\u0027ll SDP modification to convert multiple simulcast streams into separate tracks, to not confuse peer connection with 3 streams per track, because it isn\u0027t expected by receiver.",
      "parentUuid": "7b3a8930_d6fddfff",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 68
      },
      "revId": "544208eb74b29cbd3079d7e417a7e7debeed2338",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2fbcd2b_687aca51",
        "filename": "test/pc/e2e/analyzer/video/quality_analyzing_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-03-04T18:59:11Z",
      "side": 1,
      "message": "1/ This point about the absence of mocked SFU requiring filtering should be in the comment or the CL description as well!\n2/ I don\u0027t get why a black frame is used, instead of marking the frame as discarded, or not triggering the callback at all. These solutions even use less CPU :)",
      "parentUuid": "1449afa5_90051b45",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 68
      },
      "revId": "544208eb74b29cbd3079d7e417a7e7debeed2338",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da36f45_03a9ebf1",
        "filename": "test/pc/e2e/analyzer/video/quality_analyzing_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-03-05T08:53:24Z",
      "side": 1,
      "message": "If no frames are passed on irrelevant streams, WebRTC will be very confused on the receive side and will request key-frames all the times. Thus something have to be produced, but decoding them is cpu-intensive and unneeded.",
      "parentUuid": "b2fbcd2b_687aca51",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 68
      },
      "revId": "544208eb74b29cbd3079d7e417a7e7debeed2338",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7d988ea_6702222b",
        "filename": "test/pc/e2e/analyzer/video/quality_analyzing_video_decoder.cc",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 7332
      },
      "writtenOn": "2019-03-04T18:59:11Z",
      "side": 1,
      "message": "Why I420Buffer? I guess that\u0027s the only one providing a convenient SetBlack() methode.\nWorth a comment (otherwise it appears quite arbitrary).",
      "revId": "544208eb74b29cbd3079d7e417a7e7debeed2338",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}