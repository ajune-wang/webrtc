{
  "comments": [
    {
      "key": {
        "uuid": "fbbf1366_63053f48",
        "filename": "video/rtp_video_stream_receiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 218,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-27T14:38:33Z",
      "side": 1,
      "message": "nit: use clock_\n\nBTW, I don\u0027t think we need to pass clock anymore, correct me if I am wrong. but since this is unrelated to this CL, you don\u0027t need to take any actions.",
      "range": {
        "startLine": 218,
        "startChar": 38,
        "endLine": 218,
        "endChar": 43
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6b52e91_2bda7b12",
        "filename": "video/rtp_video_stream_receiver.h",
        "patchSetId": 10
      },
      "lineNbr": 323,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-11-27T14:29:15Z",
      "side": 1,
      "message": "Please add RTC_GUARDED_BY(worker_task_checker_) so that the inner lock can be removed in a later CL.",
      "range": {
        "startLine": 323,
        "startChar": 61,
        "endLine": 323,
        "endChar": 62
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322adf82_c360e234",
        "filename": "video/rtp_video_stream_receiver.h",
        "patchSetId": 10
      },
      "lineNbr": 323,
      "author": {
        "id": 10209
      },
      "writtenOn": "2019-11-27T14:37:34Z",
      "side": 1,
      "message": "Added guard. If necessary inner locking can be safely removed in separate CL. chxg@ please give us your opinion regarding that.",
      "parentUuid": "b6b52e91_2bda7b12",
      "range": {
        "startLine": 323,
        "startChar": 61,
        "endLine": 323,
        "endChar": 62
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c2ca2db_80fe4f7e",
        "filename": "video/rtp_video_stream_receiver.h",
        "patchSetId": 10
      },
      "lineNbr": 323,
      "author": {
        "id": 10209
      },
      "writtenOn": "2019-11-27T14:38:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "322adf82_c360e234",
      "range": {
        "startLine": 323,
        "startChar": 61,
        "endLine": 323,
        "endChar": 62
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ea3b052_794c3a78",
        "filename": "video/rtp_video_stream_receiver.h",
        "patchSetId": 10
      },
      "lineNbr": 323,
      "author": {
        "id": 8392
      },
      "writtenOn": "2019-11-27T14:53:22Z",
      "side": 1,
      "message": "`AbsoluteCaptureTimeReceiver` will also be used by other callers that are not as thread safe as this caller. To make life easier for them, there\u0027s a strong preference for keeping the inner lock in that class. The overhead from locking and unlocking an uncontended critical section should be minimal (e.g. ~50 cycles or so).",
      "parentUuid": "8c2ca2db_80fe4f7e",
      "range": {
        "startLine": 323,
        "startChar": 61,
        "endLine": 323,
        "endChar": 62
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82c904b4_c4be35c1",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 362,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-27T14:38:33Z",
      "side": 1,
      "message": "add\nconstexpr int kAbsoluteCaptureTimeExtensionId \u003d 1;\n\nyou can also use AbsoluteCaptureTimeExtension::kId, but I like the former more.",
      "range": {
        "startLine": 362,
        "startChar": 55,
        "endLine": 362,
        "endChar": 56
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db6e7766_b5d7a821",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 362,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-27T14:48:44Z",
      "side": 1,
      "message": "please do not use AbsoluteCaptureTimeExtension::kId - that has different meaning than value 1\n(and different type)\n\nAbsoluteCaptureTimeExtension::kId is actually a enum type of the extension (with irrelevant value).\n1 here is the id to be stored in the packet [with prefered valid range 1-14]",
      "parentUuid": "82c904b4_c4be35c1",
      "range": {
        "startLine": 362,
        "startChar": 55,
        "endLine": 362,
        "endChar": 56
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e79cf621_6b9499e1",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 394,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-27T14:38:33Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 394,
        "startChar": 55,
        "endLine": 394,
        "endChar": 56
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46c7340a_79afbfff",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 396,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-27T14:38:33Z",
      "side": 1,
      "message": "add\n\nint sequence_num \u003d 1;\n\nthen rtp_packet.SetSequenceNumber(sequence_num++) in the following\n\nalso add \n\nint timestamp \u003d 1\n\nand rtp_packet.SetTimestamp(timestamp++)\n\nbut to be honest, I don\u0027t see why timestamp increment by 1.",
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "343dafe4_731df69f",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 396,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-27T14:48:44Z",
      "side": 1,
      "message": "if you decide to have sequence_num and timestamp variables, prefer uint16_t and uint32_t for them respectively.",
      "parentUuid": "46c7340a_79afbfff",
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ed8c02f_f1777009",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 418,
      "author": {
        "id": 7015
      },
      "writtenOn": "2019-11-27T14:38:33Z",
      "side": 1,
      "message": "I would add Check/Expect that the extension is in fact removed.",
      "range": {
        "startLine": 418,
        "startChar": 0,
        "endLine": 418,
        "endChar": 64
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "659a6028_c2219857",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 418,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-11-27T14:48:44Z",
      "side": 1,
      "message": "it might be better (though slightly more wordy) to instead create another rtp_packet, where the extension is not Set.\n(RemoveExtension exists for some edge case, not for common use.)",
      "parentUuid": "1ed8c02f_f1777009",
      "range": {
        "startLine": 418,
        "startChar": 0,
        "endLine": 418,
        "endChar": 64
      },
      "revId": "a5f0b2c396dcec8c58b4de4f90293d3da1d29bfe",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}