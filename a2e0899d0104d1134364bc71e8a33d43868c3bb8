{
  "comments": [
    {
      "key": {
        "uuid": "fba7d61e_99b13524",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 323,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-04T11:45:08Z",
      "side": 1,
      "message": "optional: use std::count_if or absl::c_count_if. \n\nNo action required.",
      "range": {
        "startLine": 318,
        "startChar": 0,
        "endLine": 323,
        "endChar": 13
      },
      "revId": "a2e0899d0104d1134364bc71e8a33d43868c3bb8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d0789d4_d2442351",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 343,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-04T10:42:02Z",
      "side": 1,
      "message": "FYI, this used for both vp8 and vp9, see the comment below.",
      "range": {
        "startLine": 343,
        "startChar": 7,
        "endLine": 343,
        "endChar": 23
      },
      "revId": "a2e0899d0104d1134364bc71e8a33d43868c3bb8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a703cd4_09d84046",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 396,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-04T10:42:02Z",
      "side": 1,
      "message": "FYI: This is supposed to enable internal VP9 scaling.\nThis setting is forwarded to libvpx encoder as is without any additional checks.\nTherefore, no change to vp9_impl.cc is needed for this CL.",
      "range": {
        "startLine": 396,
        "startChar": 37,
        "endLine": 396,
        "endChar": 53
      },
      "revId": "a2e0899d0104d1134364bc71e8a33d43868c3bb8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60b5c8d7_738b2bdd",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 5
      },
      "lineNbr": 488,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-04T11:43:26Z",
      "side": 1,
      "message": "Why is this correction here?",
      "range": {
        "startLine": 486,
        "startChar": 2,
        "endLine": 488,
        "endChar": 3
      },
      "revId": "a2e0899d0104d1134364bc71e8a33d43868c3bb8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff15a8a2_3878147d",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 5
      },
      "lineNbr": 488,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-04T12:07:33Z",
      "side": 1,
      "message": "This is a special case for non-simulcast. numberOfSimulcastStreams\u003d0 and all simulcastStream[] are empty.\n\nThis is the way it\u0027s signaled by e.g. SimulcastEncoderAdapter:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/media/engine/simulcast_encoder_adapter.cc?l\u003d581\u0026rcl\u003d80636981052754dcdaaf90a5d83a1cd9eb786dfb\n\nIt\u0027s also taken into account here:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/video_coding/utility/simulcast_utility.cc?l\u003d32\u0026rcl\u003d80636981052754dcdaaf90a5d83a1cd9eb786dfb\n\nI could\u0027ve used SimulcastUtility::NumberOfSimulcastStreams, but it also checks for 0 bitrate, which I don\u0027t care in this scenario.",
      "parentUuid": "60b5c8d7_738b2bdd",
      "range": {
        "startLine": 486,
        "startChar": 2,
        "endLine": 488,
        "endChar": 3
      },
      "revId": "a2e0899d0104d1134364bc71e8a33d43868c3bb8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bec246bd_5a6841f1",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 5
      },
      "lineNbr": 488,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-03-04T15:09:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ff15a8a2_3878147d",
      "range": {
        "startLine": 486,
        "startChar": 2,
        "endLine": 488,
        "endChar": 3
      },
      "revId": "a2e0899d0104d1134364bc71e8a33d43868c3bb8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}