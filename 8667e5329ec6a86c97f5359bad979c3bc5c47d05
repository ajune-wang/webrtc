{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "828e55c8_92afe53e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-14T19:09:02Z",
      "side": 1,
      "message": "slight change in behaviour:\nremote red without fmtp will not match local red with fmtp anymore. Actually that solves backward compat even.",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "635c65c4_8279828c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Good job figuring out how this code works for the most part, took me a lot longer.\n\nMy main comments are:\n\n* If we assume the referenced payload types are always identical, we need to enforce that assumption somewhere and not add RED if they\u0027re different. Though my preference would be to make this more robust and handle any number of unique payload types.\n* Is it a requirement that the encapsulated payload types are identical between the two peers? I don\u0027t see anything in RFC2198 which indicates that. Harald?",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa9d75d0_7d3ab62d",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 809,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "It\u0027s not sufficient to just copy the parameters from the remote offer, as the offerer may want to receive a different codec than we do. Really we need to parse our own fmtp line, then figure out what payload type the offerer used for the same codec, if it even exists in the offer.",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e88c309f_9afd92ad",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 809,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "why don\u0027t we need to do so for rtx? (asymmetric payload type usage is a rabbit hole I don\u0027t want to go down, i think we know there are bugs there)",
      "parentUuid": "fa9d75d0_7d3ab62d",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26aae9d6_755a6055",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 809,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-15T20:59:28Z",
      "side": 1,
      "message": "We only want to send RTX for codec A if the receiver says it wants to receive RTX for codec A. But I was assuming it should be possible to send RED for codec A but receive it for codec B.\n\nMaybe this is ambiguous due to the lack of specification of offer/answer semantics. But something that definitely seems like it should work is having an offer with no fmtp line but in answer with one. Otherwise this CL could break situations where RED is currently working.",
      "parentUuid": "e88c309f_9afd92ad",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "333e727e_7283958a",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 809,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-16T09:44:43Z",
      "side": 1,
      "message": "ah... but it hasn\u0027t been on by default for audio before M94. And we can either merge this, back out the default-enable or use the kill-switch.\nFor video there is just the variant without any fmtp which continues to work.\nHarald, thoughts?",
      "parentUuid": "26aae9d6_755a6055",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e462081d_f27fd241",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 809,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-09-21T21:37:20Z",
      "side": 1,
      "message": "Seems like a reasonably safe change - if anyone depended on the nonstandard RED for audio without fmtp, they need to adapt. There shouldn\u0027t be too many of them.",
      "parentUuid": "333e727e_7283958a",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f44ef9c3_b5e6f48b",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 809,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-27T20:00:13Z",
      "side": 1,
      "message": "Marking as resolved due to decision that the FMTP codecs must be symmetrical.",
      "parentUuid": "e462081d_f27fd241",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be246b75_a6cc14b0",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 843,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "It *is* a requirement that they match when codecs1 and codecs2 are both from our local lists (e.g. reference_codecs and offered_codecs), but *not* when one is remote and the other is local. The remote offerer should be able to say it prefers different primary/secondary codecs than we do. So there needs to be a \"bool match_red\" flag or something along those lines.",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dba61ac0_c59b73be",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 843,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "see above. We don\u0027t support that for rtx (I think)?",
      "parentUuid": "be246b75_a6cc14b0",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25498793_d99b2aad",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 843,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-27T20:00:13Z",
      "side": 1,
      "message": "Marking as resolved due to decision that the FMTP codecs must be symmetrical.",
      "parentUuid": "dba61ac0_c59b73be",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a78e7592_97a7fd19",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 888,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Wouldn\u0027t you need to do this for for each payload type, not just [0]?",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42206c5b_21163342",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 888,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "see below.",
      "parentUuid": "a78e7592_97a7fd19",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa528bc9_33dfca20",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 957,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Same here; if we are assuming that redundant_payloads[0]\u003dredundant_payloads[1] we should at least enforce that assumption somewhere.",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ef2b3b5_a616dead",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 957,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "done as part of CheckRedParameters since https://webrtc-review.googlesource.com/c/src/+/229583/9/media/engine/webrtc_voice_engine.cc",
      "parentUuid": "fa528bc9_33dfca20",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a5bc73a_0b406b9b",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 957,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-15T20:59:28Z",
      "side": 1,
      "message": "That happens after SDP generation though. If your interpretation of the spec is that offering \"100/120\" and answering \"100/100\" is illegal, then this code has a problem; even if the voice engine sees \"100/120\" and decides not to use RED, we are still generating illegal SDP (or not depending on the interpretation).",
      "parentUuid": "1ef2b3b5_a616dead",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8cc467b_c1e0fa89",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 957,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-16T09:44:43Z",
      "side": 1,
      "message": "Got you, this one is tricky. I do not want to forbid having a different level of redundancy, at the same time it should enforce the \"all the same\" here. Done with test.",
      "parentUuid": "9a5bc73a_0b406b9b",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cc34f06_97d788a2",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 957,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-27T20:00:13Z",
      "side": 1,
      "message": "Marking as resolved due to decision that the FMTP codecs must be symmetrical.",
      "parentUuid": "c8cc467b_c1e0fa89",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11a0ddc2_fcbc8eb1",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 1049,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Still need to deal with RED here.",
      "range": {
        "startLine": 1049,
        "startChar": 14,
        "endLine": 1049,
        "endChar": 34
      },
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b61563a4_a2093da5",
        "filename": "pc/media_session.cc",
        "patchSetId": 7
      },
      "lineNbr": 1049,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "Ack but ... how to test this?",
      "parentUuid": "11a0ddc2_fcbc8eb1",
      "range": {
        "startLine": 1049,
        "startChar": 14,
        "endLine": 1049,
        "endChar": 34
      },
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75a8f911_197f309d",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1379,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Second part of this comment doesn\u0027t seem to apply.",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b93226a_9ecf5966",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1379,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "-v please",
      "parentUuid": "75a8f911_197f309d",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a07a67e_d6ed6975",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1379,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-15T20:59:28Z",
      "side": 1,
      "message": "\"which should refer to the correct payload type\" isn\u0027t relevant because there is no fmtp line that\u0027s referring to another payload type",
      "parentUuid": "0b93226a_9ecf5966",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a65cfbc_ae7be6fe",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1379,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-16T09:44:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8a07a67e_d6ed6975",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f57c02d_33ebf67f",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1414,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Why not?",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "376fdbf7_98c89e00",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1414,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "The assumption I make is that red-without-fmtp means something that is not compatible with red-with-fmtp.\n\nHandling red-without-fmtp is a requirement because of video/red.",
      "parentUuid": "6f57c02d_33ebf67f",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "761c8f65_242de372",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1439,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-09-14T23:11:45Z",
      "side": 1,
      "message": "Also test with different referenced codecs?",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dab58cfc_8289ca41",
        "filename": "pc/peer_connection_media_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1439,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-09-15T20:22:33Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "761c8f65_242de372",
      "revId": "8667e5329ec6a86c97f5359bad979c3bc5c47d05",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}