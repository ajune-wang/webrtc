{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b8040a6_4eef0972",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 12,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T07:58:12Z",
      "side": 1,
      "message": "I\u0027d prefer \"frame in main memory\", since memory mapped makes it sound like mmap() or the like is involved.",
      "range": {
        "startLine": 12,
        "startChar": 19,
        "endLine": 12,
        "endChar": 38
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af989174_10ccaabe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 16,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T07:58:12Z",
      "side": 1,
      "message": "I think this concept is weird. Can you rephrase, and either refer to the chroium usecase, or write something about cases where conversion from kNative to a format other than I420 is more efficient.",
      "range": {
        "startLine": 16,
        "startChar": 21,
        "endLine": 16,
        "endChar": 54
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62d31bbe_5c55713f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T07:58:12Z",
      "side": 1,
      "message": "api/video/ looks basically good, just a few minor things.",
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "961420ba_245b7c04",
        "filename": "api/video/video_frame_buffer.cc",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-10-08T08:09:04Z",
      "side": 1,
      "message": "nit: RTC_CHECK",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 12
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abc79dc2_211dec19",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T07:58:12Z",
      "side": 1,
      "message": "Please be more specific. I take it you want to make it non-virtual? Or do you want to make GetNV12 virtual too? I don\u0027t recall the details why it is virtual now, but I guess it\u0027s related to the chromium use case.",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 26
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97cf9fbb_4e657a53",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 6
      },
      "lineNbr": 79,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-10-08T08:09:04Z",
      "side": 1,
      "message": "Yes, it\u0027s making it non-virtual and always returning this for kI420 buffers.\n\nThis method is currently used to check if the kNative is trivially convertible to I420. The newly implemented method does even more than that and is cleaner.",
      "parentUuid": "abc79dc2_211dec19",
      "range": {
        "startLine": 78,
        "startChar": 0,
        "endLine": 79,
        "endChar": 26
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7272c0a_4d79ec63",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 6
      },
      "lineNbr": 90,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-10-08T08:09:04Z",
      "side": 1,
      "message": "in the main memory\n\nAlso, write here that does that only if the conversion is pixel perfect.\nOtherwise, it could always return ToI420(), since kI420 is always passed int |types|.",
      "range": {
        "startLine": 90,
        "startChar": 31,
        "endLine": 90,
        "endChar": 52
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "381b7fda_8c0126c0",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 6
      },
      "lineNbr": 90,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T08:19:30Z",
      "side": 1,
      "message": "\u003e Also, write here that does that only if the conversion is pixel perfect.\n\nThat makes the method a bit less useful; I view it as a generalization of ToI420, and at some point, I would be happy to retire the latter.\n\nIs there some other reasonable way to deal with this? Return a separate bool/enum saying if conversion is pixel perfect? Or add update_rect as an input argument and return value?\n\nIt might be fine to have that restriction for now, but then this method looks like a workaround usable only for chromium\u0027s odd way of using kNative frames, rather than a generally useful api.",
      "parentUuid": "f7272c0a_4d79ec63",
      "range": {
        "startLine": 90,
        "startChar": 31,
        "endLine": 90,
        "endChar": 52
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41dcbc42_cb1bc5f0",
        "filename": "api/video_codecs/video_encoder.h",
        "patchSetId": 6
      },
      "lineNbr": 259,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T07:58:12Z",
      "side": 1,
      "message": "It would make code simpler if we forbid empty lists, and instead rely on {kI420} the default.",
      "range": {
        "startLine": 258,
        "startChar": 78,
        "endLine": 259,
        "endChar": 24
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb73ed80_a4e2a98b",
        "filename": "api/video_codecs/video_encoder.h",
        "patchSetId": 6
      },
      "lineNbr": 261,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-10-08T07:58:12Z",
      "side": 1,
      "message": "Consider using absl::InlineVector.",
      "range": {
        "startLine": 261,
        "startChar": 4,
        "endLine": 261,
        "endChar": 15
      },
      "revId": "dc29dab59807cd1549f7c45ac691d785d44e20a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}