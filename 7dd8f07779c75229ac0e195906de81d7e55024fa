{
  "comments": [
    {
      "key": {
        "uuid": "207db752_ed0bf44a",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 2
      },
      "lineNbr": 683,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-03T13:01:50Z",
      "side": 1,
      "message": "Is any of the reviewers familiar with |crit_| enough to say that the fact that |rtp_streams_| is not GUARDED_BY it is intended, and not an oversight?",
      "range": {
        "startLine": 683,
        "startChar": 23,
        "endLine": 683,
        "endChar": 28
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac42aac7_1620364d",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 2
      },
      "lineNbr": 683,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-03T13:11:20Z",
      "side": 1,
      "message": "Note that |rtp_streams_| is a const vector, and assigned only at construction time. And the object it points to have their own locks, I think.",
      "parentUuid": "207db752_ed0bf44a",
      "range": {
        "startLine": 683,
        "startChar": 23,
        "endLine": 683,
        "endChar": 28
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f7f1921_e894c9a4",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 2
      },
      "lineNbr": 683,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-03T16:05:14Z",
      "side": 1,
      "message": "ModuleRtpRtcpImpl, which is the member of RtpStreamSender which I\u0027m wondering about, only has one odd critical section, used only for RTT.",
      "parentUuid": "ac42aac7_1620364d",
      "range": {
        "startLine": 683,
        "startChar": 23,
        "endLine": 683,
        "endChar": 28
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f06fecf_b8f11117",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 2
      },
      "lineNbr": 683,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-04T08:08:26Z",
      "side": 1,
      "message": "That looks poorly documented. Let\u0027s see:\n\nThe *process* members are accessed on the module\u0027s process thread only.\n\nThe |packet_overhead_| member is a construction time const, and could be marked as such.\n\nThe nack_* members are used only by SendNACK, unused for video. Unclear on what thread.\n\nThe key_frame_req_method_ member is used by SetKeyFrameRequestMethod and RequestKeyFrame, used on the receive side. Would probably be best to just delete this member and change the RequestKeyFrame method to let caller tell it directly what to do.\n\nThe |send_loss_stats_| and |receive_loss_stats_| are read by GetRtpPacketLossStats (unused in webrtc?), and updated in SendNACK and OnReceivedNack, respectively.\n\nAnd then most of the RTP state are in the members |rtp_sender_|, |rtcp_sender_| and |rtcp_receiver_|, which have their own locks.",
      "parentUuid": "1f7f1921_e894c9a4",
      "range": {
        "startLine": 683,
        "startChar": 23,
        "endLine": 683,
        "endChar": 28
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79a935c6_7ec56b73",
        "filename": "call/rtp_video_sender.h",
        "patchSetId": 2
      },
      "lineNbr": 141,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-04T08:08:26Z",
      "side": 1,
      "message": "When are these expected to be called? At about the same time as the encoder is configured, or anytime in the middel of the stream? If it\u0027s at configure time, maybe it could be configured from above, without the direct link between VideoStreamEncoder and RtpVideoSender?",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 141,
        "endChar": 39
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "815e96c8_816b3e98",
        "filename": "modules/rtp_rtcp/source/rtp_sender.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-03T13:50:35Z",
      "side": 1,
      "message": "override",
      "range": {
        "startLine": 67,
        "startChar": 14,
        "endLine": 67,
        "endChar": 15
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "481a581b_5fe5c93a",
        "filename": "modules/rtp_rtcp/source/rtp_sender.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-03T16:05:14Z",
      "side": 1,
      "message": "Thanks.",
      "parentUuid": "815e96c8_816b3e98",
      "range": {
        "startLine": 67,
        "startChar": 14,
        "endLine": 67,
        "endChar": 15
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b4627d3_0d928fd7",
        "filename": "video/video_send_stream_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-03T13:50:35Z",
      "side": 1,
      "message": "you can remove all the parameters instead ( http://go/totw/150 )",
      "range": {
        "startLine": 105,
        "startChar": 36,
        "endLine": 105,
        "endChar": 66
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "212fa64a_0f314b36",
        "filename": "video/video_send_stream_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 105,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-06-03T16:05:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b4627d3_0d928fd7",
      "range": {
        "startLine": 105,
        "startChar": 36,
        "endLine": 105,
        "endChar": 66
      },
      "revId": "7dd8f07779c75229ac0e195906de81d7e55024fa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}