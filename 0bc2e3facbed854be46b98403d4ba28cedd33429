{
  "comments": [
    {
      "key": {
        "uuid": "d6de8c51_cf031054",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "Drive-by nit: Can you change struct -\u003e class here? It seems that is how this class is intended to work.",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 6
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c85f056_ffd713e9",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "While we\u0027re here: Does it make sense to switch to FuzzDataHelper [1]? To avoid complicated duplication.\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/test/fuzzers/fuzz_data_helper.h\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/test/fuzzers/BUILD.gn?l\u003d48\u0026rcl\u003d578270d9d23a12e8400bacfc7e28f3536ab74a68",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 19
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ba70116_bfd1a636",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-09-30T11:26:41Z",
      "side": 1,
      "message": "Good idea!",
      "parentUuid": "1c85f056_ffd713e9",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 19
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfdd4dfe_f6072d5a",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-09-30T11:26:41Z",
      "side": 1,
      "message": "Used FuzzDataHelper instead :)",
      "parentUuid": "d6de8c51_cf031054",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 6
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d3de793_9f4135f7",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "Can you add something brief to indicate why the non-POD is disallowed?",
      "range": {
        "startLine": 27,
        "startChar": 36,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c83e3988_fc30017d",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 27,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-09-30T11:26:41Z",
      "side": 1,
      "message": "If the class is complex then writing fuzzing data straight into it will corrupt its state. For example RtpGenericFrameDescriptor has an std::vector, and if I were to overwrite it then its data pointer would point somewhere else entirely.",
      "parentUuid": "5d3de793_9f4135f7",
      "range": {
        "startLine": 27,
        "startChar": 36,
        "endLine": 27,
        "endChar": 38
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c831f020_f6919ddb",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "Is this cast necessary? I\u0027m reading the memcpy docs as though it does not matter:\nhttps://en.cppreference.com/w/cpp/string/byte/memcpy\n\"Both objects are reinterpreted as arrays of unsigned char.\"\nSituations seems similar in memset.\nhttps://en.cppreference.com/w/cpp/string/byte/memset\n\nThat said, I am no expert.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0a94bf9_05d0ce63",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-09-30T11:26:41Z",
      "side": 1,
      "message": "I cast it so that the pointer arithmetic on line 36 works out as expected.",
      "parentUuid": "c831f020_f6919ddb",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3173708e_b285c65e",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-10-01T06:19:33Z",
      "side": 1,
      "message": "Ah I see, thanks for explaining!",
      "parentUuid": "b0a94bf9_05d0ce63",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 62
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a38ba34_ec7fd812",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "did _not_ ?",
      "range": {
        "startLine": 34,
        "startChar": 13,
        "endLine": 34,
        "endChar": 16
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d1452a6_443dd8ce",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-09-30T11:26:41Z",
      "side": 1,
      "message": "Oops, fixed.",
      "parentUuid": "4a38ba34_ec7fd812",
      "range": {
        "startLine": 34,
        "startChar": 13,
        "endLine": 34,
        "endChar": 16
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "157f726b_2381fbd6",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "Does this limit need to be reconsidered?",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7dc0759e_21ad28eb",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-09-30T11:26:41Z",
      "side": 1,
      "message": "I don\u0027t even know where I got it from, deleted.",
      "parentUuid": "157f726b_2381fbd6",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28740d9a_4ba70809",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-10-01T06:19:33Z",
      "side": 1,
      "message": "Is there a practical limit to how far into the past the reference finder has state? Like \"never more than 10 frames\" or some such. If so, I\u0027d suggest guesstimating an appropriate size limit to limit the fuzz time per input.\n\nOtherwise, we can just wait for the fuzzer to file a timeout bug (it has happened to most of the fuzz-over-a-loop-fuzzers we have) and see what size it has come up with.",
      "parentUuid": "7dc0759e_21ad28eb",
      "range": {
        "startLine": 87,
        "startChar": 6,
        "endLine": 87,
        "endChar": 18
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee841f47_8c55a9d2",
        "filename": "test/fuzzers/rtp_frame_reference_finder_fuzzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 5119
      },
      "writtenOn": "2019-09-30T10:37:50Z",
      "side": 1,
      "message": "good!",
      "range": {
        "startLine": 133,
        "startChar": 0,
        "endLine": 153,
        "endChar": 22
      },
      "revId": "0bc2e3facbed854be46b98403d4ba28cedd33429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}