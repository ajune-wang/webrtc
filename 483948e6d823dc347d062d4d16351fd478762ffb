{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "269029d4_16af4666",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12094
      },
      "writtenOn": "2024-01-09T06:57:47Z",
      "side": 1,
      "message": "Hi @philipel@webrtc.org, this CL continues Qiujiao\u0027s effort on HEVC enabling. Before adding HEVC support for packet buffer, we\u0027d like to move H.264 specific hacks into a single place, then extend it for HEVC. I understand you had some CLs submitted for `H264PacketBuffer` and `RtpVideoFrameAssembler`, but they haven\u0027t been updated for about two years. It looks like Qiujiao\u0027s approach is simpler, just adding some util functions for H.26x. I\u0027m not sure if it aligns with your expectation. So I uploaded this draft CL before moving forward. Please let me know if you have any suggestions or comments. Thanks.",
      "revId": "483948e6d823dc347d062d4d16351fd478762ffb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab6bd817_1a14c13a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-01-10T10:52:37Z",
      "side": 1,
      "message": "Hi Zhu!\n\nI\u0027m sorry but I realize there has been some confusion about how we should manage H26X packets in WebRTC.\n\nThe way we want to go is to update the [1] h264_packet_buffer.cc to also support H265. Then in the [2] rtp_video_stream_receiver2.cc we would simply have special casing to use the H26X specific packet buffer instead of the regular one.\n\nSo the plan is something like this:\n1) Add H265 support to h264_packet_buffer (and rename it to h26x_packet_buffer).\n2) Update rtp_video_stream_receiver2.cc to use h26x_packet_buffer when H264/H265 is being received, and roll it out.\n3) Remove H26X specific hacks from packet_buffer.cc\n\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/h264_packet_buffer.cc;drc\u003dd3251968d1b3dbe7e1353a3f15970b47173103e9\n\n[2] https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/rtp_video_stream_receiver2.cc;l\u003d705;drc\u003d67d90538f11c6b232dbfd716075db52aeb34fd15",
      "revId": "483948e6d823dc347d062d4d16351fd478762ffb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecf06d36_0a9b4de3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12094
      },
      "writtenOn": "2024-01-11T07:19:33Z",
      "side": 1,
      "message": "Thanks for the clarification. Since `H264PacketBuffer` is not inherited from `PacketBuffer`, rtp_video_stream_receiver2.cc needs to maintain two members `packet_buffer_` and `h264_packet_buffer_`. I\u0027m wondering if it\u0027s a good idea to make `H264PacketBuffer` to be a derived class of `PacketBuffer`?",
      "parentUuid": "ab6bd817_1a14c13a",
      "revId": "483948e6d823dc347d062d4d16351fd478762ffb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a0db8b9_0e0eb39d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2024-01-11T13:28:06Z",
      "side": 1,
      "message": "Yes, `RtpVideoStreamReceiver2` would need two packet buffers. I remember looking into inheritance vs standalone H264 packet buffer, and I remember standalone was preferable but I can\u0027t remember why. I think we should avoid deriving from the `PacketBuffer`.",
      "parentUuid": "ecf06d36_0a9b4de3",
      "revId": "483948e6d823dc347d062d4d16351fd478762ffb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "037ea546_3c63ac04",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 12094
      },
      "writtenOn": "2024-01-11T15:33:53Z",
      "side": 1,
      "message": "Thanks for your reply. I\u0027ll let you know when the change is ready for review.",
      "parentUuid": "0a0db8b9_0e0eb39d",
      "revId": "483948e6d823dc347d062d4d16351fd478762ffb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}