{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d3b50de4_cc88be51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-05T09:07:30Z",
      "side": 1,
      "message": "LGTM in general, wonder if we should have even more RTC_DCHECKs.\n",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a03f66f_b55b1024",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 604,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-04T21:17:23Z",
      "side": 1,
      "message": "Any thoughts on why we shouldn\u0027t just return at this point? From what I can tell, if UpdateLocalStreams_w fails, the whole SetLocalContent operation is considered to have failed. Same for the rest of this function.",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "30855897_2b4b62df",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 604,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-05T09:07:30Z",
      "side": 1,
      "message": "This is called once per media section.\nIn plan B, there may be multiple streams per media section - so some streams might get removed even though some removals fail. In Unified Plan, there\u0027s only one (unless simulcast?), so there can\u0027t be a halfway application.\n\nWe really ought to roll back all change when UpdateLocalStreams_w fails halfway through, but I don\u0027t think we do.\n\nAnyway, I\u0027d do this as a separate CL (and separate bug?), for clarity.",
      "parentUuid": "0a03f66f_b55b1024",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6178614e_6c81d296",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 822,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-04T21:17:23Z",
      "side": 1,
      "message": "this is new",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c515453_a9362844",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 822,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-05T09:07:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6178614e_6c81d296",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a01c302_888a2369",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 835,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-04T21:17:23Z",
      "side": 1,
      "message": "previously we overwrote the error as set by UpdateLocalStreams_w().",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5262fa41_a711a24c",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 835,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-05T09:07:30Z",
      "side": 1,
      "message": "so the error message now loses the info that it was an audio description that failed, but since we retain the MID, that shouldn\u0027t be a big issue when debugging.\n\nI think this is OK.\n\nShould we have the RTC_DCHECK on all calls to the functions that return error message in this fashion?",
      "parentUuid": "2a01c302_888a2369",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5289ca43_1b5f4472",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 835,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-05T11:25:17Z",
      "side": 1,
      "message": "I think that would be a good thing since the error description is a part of the api. Perhaps there could be a better way to do that though than with a combination of a bool return value and a std::string\u0026 param, so we could think that through some more.\n\nAnother thing to consider is that methods such as SetLocalDescription, are designed to be asynchronous, yet in places our implementation is synchronous in ways that forces us to block and wait on threads. For example ApplyLocalDescription in SdpOfferAnswerHandler is called during the async operation, but it has a return value rather than a callback, so when things that need to happen on the worker or network threads are done as part of ApplyLocalDescription, the function is forced to block. As an alternative, we could break those steps up a bit more as well as aggregate work items per thread (to avoid too many Post operations) and take more advantage of the async design that\u0027s already in place, for more efficiency in the implementation.\n\nI guess that\u0027s a long way of saying that the current way of returning a bool+string in this function, isn\u0027t ideal for this function because it does hop to another thread and block. What makes it worse is that upstream, it\u0027s called in a loop, which multiplies the number of hops. Further still that loop is being waited upon by yet another thread (which is how we get to the Set*Description API level).",
      "parentUuid": "5262fa41_a711a24c",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "325e95a0_0fe397fc",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 996,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-01-04T21:17:23Z",
      "side": 1,
      "message": "new",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "08bde779_8881b657",
        "filename": "pc/channel.cc",
        "patchSetId": 7
      },
      "lineNbr": 996,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-01-05T09:07:30Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "325e95a0_0fe397fc",
      "revId": "c9acfe44ea220493b26bccd4fe58c20e59147f10",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}