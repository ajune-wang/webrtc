{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "050799eb_071e5bb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-07-13T09:04:05Z",
      "side": 1,
      "message": "\\o I have neteq API questions... please ignore the rest of the CL for now, I\u0027ll split it up into more reviewable chunks soon",
      "revId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7138b878_29b2b34a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-28T09:39:56Z",
      "side": 1,
      "message": "showed up in my \"has draft comments\" list.",
      "revId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76b9a2a9_3e654878",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 15
      },
      "lineNbr": 714,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-07-13T09:04:05Z",
      "side": 1,
      "message": "the ACM receiver actually infers the codec type from the payload type via neteq_-\u003eGetDecoderFormat\n  https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/neteq/neteq.h;drc\u003da6fe0210768868959ac7e8d0e04eaf771e83e524;l\u003d297\na few calls away from the codec running in the other branch of this if.\nLastDecoder defined here\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/audio_coding/acm2/acm_receiver.h\n*almost* does the right thing but does not work for the very first packet.\n\nIf I want the codec type (actually the SDP one which is not very symmetrical with how the send side operates :-|) I can either\n1/ expose GetDecoderFormat on the ACM receiver\n2/ intercept SetReceiveCodecs in https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/audio/channel_receive.cc;l\u003d107;drc\u003da6fe0210768868959ac7e8d0e04eaf771e83e524;bpv\u003d1;bpt\u003d1\nand then do the lookup myself.\n\nThoughts on which approach would be \"better\"?",
      "revId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6374e608_28e946e1",
        "filename": "audio/channel_send_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 59,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-28T09:39:56Z",
      "side": 1,
      "message": "should be x-other, to point out that this is just ugliness incarnate. And may need an RTC_LOG(LS_WARNING).",
      "revId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c47eec84_36e1eebc",
        "filename": "audio/channel_send_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 80,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-28T09:39:56Z",
      "side": 1,
      "message": "x-unknown",
      "revId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "870a8ec464b095f9a506f6c5a759bdbca402b429",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}