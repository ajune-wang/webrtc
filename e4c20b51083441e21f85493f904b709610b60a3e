{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc6045dc_e6b6dcf2",
        "filename": "api/task_queue/task_queue_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-08-05T08:25:04Z",
      "side": 1,
      "message": "include-cleaner always attempts to do \"gtest/gtest.h\" here.\nSince we don\u0027t have a similar mechanism to iwyu mappings I don\u0027t think it\u0027s currently possible to do this automatically with clangd\u0027s include cleaner...",
      "revId": "e4c20b51083441e21f85493f904b709610b60a3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46cc4433_c9b4b86f",
        "filename": "api/task_queue/task_queue_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-08-05T08:37:18Z",
      "side": 1,
      "message": "test/gtest.h has gtest/gtest.h marked with \"IWYU pragma: export\", which makes include-cleaner do the Right Thing when you include test/gtest.h - but you have to add that one manually :-(",
      "parentUuid": "cc6045dc_e6b6dcf2",
      "revId": "e4c20b51083441e21f85493f904b709610b60a3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1048335d_2092f9c0",
        "filename": "api/task_queue/task_queue_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-08-05T09:07:18Z",
      "side": 1,
      "message": "Got it!\nI guess we can add an extra preprocessing step to apply-include-cleaner to do this for us, wdyt?",
      "parentUuid": "46cc4433_c9b4b86f",
      "revId": "e4c20b51083441e21f85493f904b709610b60a3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d944b47_a8fe77c8",
        "filename": "api/task_queue/task_queue_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-08-05T15:23:47Z",
      "side": 1,
      "message": "not sure how to do that (I\u0027d rather see the include-cleaner maintaners document a method for us), but if you have a suggestion....",
      "parentUuid": "1048335d_2092f9c0",
      "revId": "e4c20b51083441e21f85493f904b709610b60a3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "e4c20b51083441e21f85493f904b709610b60a3e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "e4c20b51083441e21f85493f904b709610b60a3e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}