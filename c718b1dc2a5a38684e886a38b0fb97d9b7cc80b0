{
  "comments": [
    {
      "key": {
        "uuid": "3159003e_76cbf780",
        "filename": "media/base/fakevideocapturer.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5098
      },
      "writtenOn": "2018-02-06T16:29:41Z",
      "side": 1,
      "message": "Maybe we should have this as a helper function somewhere if it doesn\u0027t exist already? I understand we don\u0027t want to encourage the use of this function, but maybe it will be useful for other tests.\n\nMaybe it would also be possible to make a helper function for function pointers with a return value using some kind of variadic template:\ntemplate \u003cclass ResultType, class ... Args\u003e\nResultType RunSynchronouslyOnTaskQueue(ResultType (*funtion_pointer)(Args));\nWe have that in Java but it might be too complex/over engineered to implement it in C++ so feel free to ignore.",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 92,
        "endChar": 3
      },
      "revId": "c718b1dc2a5a38684e886a38b0fb97d9b7cc80b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecbe7074_e0906807",
        "filename": "media/base/fakevideocapturer.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-06T17:37:29Z",
      "side": 1,
      "message": "Because I\u0027m in a way retrofitting a task queue on top of a synchronous and single threaded API, I basically had to do this. As you guessed, I don\u0027t want to encourage this and the same question came up when I initially introduced the task queue - and we don\u0027t seem to have had a huge demand for it.",
      "parentUuid": "3159003e_76cbf780",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 92,
        "endChar": 3
      },
      "revId": "c718b1dc2a5a38684e886a38b0fb97d9b7cc80b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a9efbaa_8aa2126a",
        "filename": "media/base/fakevideocapturer.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5098
      },
      "writtenOn": "2018-02-07T12:46:32Z",
      "side": 1,
      "message": "I searched for this pattern and I could find 20 re-implementations in different test related files, and 6 re-implementations in production code. It feels like a valid pattern, though it should be used with care.\n\nOne of the re-implementation of RunSynchronouslyOnTaskQueue is in SingleThreadedTaskQueueForTesting::SendTask(). Is SingleThreadedTaskQueueForTesting (https://cs.chromium.org/chromium/src/third_party/webrtc/test/single_threaded_task_queue.h) something you could use here?",
      "parentUuid": "ecbe7074_e0906807",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 92,
        "endChar": 3
      },
      "revId": "c718b1dc2a5a38684e886a38b0fb97d9b7cc80b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "285cc209_0dd8fc10",
        "filename": "media/base/fakevideocapturer.h",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-02-07T13:25:59Z",
      "side": 1,
      "message": "The SingleThreadedTaskQueueForTesting sounds like the perfect fit at first glance. But there are some downsides:\n\n* It\u0027s not a TaskQueue.  (e.g. calling TaskQueue::Current() from inside a task, will return nullptr).\n* It\u0027s single threaded and not actually backed by any of the TaskQueue implementations.\n* It doesn\u0027t support some design basics from TaskQueue\n  - IO support\n  - Reusing of tasks\n* Since it\u0027s not a TaskQueue, it also uses its own type of task, which is not the same as QueuedTask in TaskQueue.\n\nSo, while there is a SendTask method there, I don\u0027t want to use it here, nor can I. I also have some reservations about spreading use of that class since the name is a little misleading.\n\nAs for the 20 and 6 other places, can you point me to them? It could be good to see if we can avoid those 6 places (we might get in trouble there once we switch over to using Chromium task schedulers), and I can take a look at what the 20 places have in common.",
      "parentUuid": "8a9efbaa_8aa2126a",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 92,
        "endChar": 3
      },
      "revId": "c718b1dc2a5a38684e886a38b0fb97d9b7cc80b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}