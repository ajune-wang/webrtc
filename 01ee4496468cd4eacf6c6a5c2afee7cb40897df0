{
  "comments": [
    {
      "key": {
        "uuid": "6aaec966_e4b900a2",
        "filename": "media/engine/convert_legacy_video_factory.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-30T09:47:22Z",
      "side": 1,
      "message": "Chromium is not using this file anymore. You should be able to do this in the Chromium factory directly.",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 82,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7828372_1f6bf026",
        "filename": "media/engine/convert_legacy_video_factory.cc",
        "patchSetId": 2
      },
      "lineNbr": 82,
      "author": {
        "id": 5682
      },
      "writtenOn": "2017-11-30T21:47:22Z",
      "side": 1,
      "message": "Yes, I am doing that. See latest patch sets 5+.",
      "parentUuid": "6aaec966_e4b900a2",
      "range": {
        "startLine": 77,
        "startChar": 0,
        "endLine": 82,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "42accd7a_49b5ab01",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-22T16:16:11Z",
      "side": 1,
      "message": "Do we want to refer to the VP9 directly, or the rtx VP9? Also, we will run out of payload types soon if we are supposed to add corresponding stereo codecs for every real codec.\n\nAre you planning to use anything other than VP9 for your stereo support? Can\u0027t you call this codec \"stereo-vp9\" and make it completely external instead?",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c504b1be_40bf20fd",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5682
      },
      "writtenOn": "2017-11-22T23:52:05Z",
      "side": 1,
      "message": "There will be only one payload added called \"stereo\". Associated codec(VPX-H264) that comes with it is going to be specified by a param, see codec.cc.\n\nI am going to add other types than VP9 as well. But for the first CL, I want to just do one, to keep the CL small and avoid SDP negotiation, mismatch issues. I can add all if you wish in the first run as well.",
      "parentUuid": "42accd7a_49b5ab01",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96f6df7e_3865fa1a",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-23T15:38:48Z",
      "side": 1,
      "message": "Ok, cool, then it will work to inject this externally with the current API. One question, if you only have the codec name and specify \"H264\", how do you know which profile you want to use?",
      "parentUuid": "c504b1be_40bf20fd",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d35eeb6_4caaa495",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5682
      },
      "writtenOn": "2017-11-30T03:31:43Z",
      "side": 1,
      "message": "Good point. I will make it refer to payload int instead of codec name. That would make life easier.",
      "parentUuid": "96f6df7e_3865fa1a",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb974729_4e906837",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-30T09:47:22Z",
      "side": 1,
      "message": "The problem is that external factories don\u0027t have access to the payload types. Assigning payload types is something WebRTC is responsible for at the moment. So you wouldn\u0027t be able to inject an external codec referencing another payload type with the current API.",
      "parentUuid": "6d35eeb6_4caaa495",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7d3ee10_0dda71a1",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 2
      },
      "lineNbr": 573,
      "author": {
        "id": 5682
      },
      "writtenOn": "2017-11-30T21:47:22Z",
      "side": 1,
      "message": "See the logic in the latest path sets.",
      "parentUuid": "cb974729_4e906837",
      "range": {
        "startLine": 567,
        "startChar": 0,
        "endLine": 573,
        "endChar": 5
      },
      "revId": "01ee4496468cd4eacf6c6a5c2afee7cb40897df0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}