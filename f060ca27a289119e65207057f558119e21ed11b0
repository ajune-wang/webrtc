{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23c0782b_77da9bf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-02-22T17:15:14Z",
      "side": 1,
      "message": "This looks great. I just have one more optional comment about improving the logs a bit.",
      "revId": "f060ca27a289119e65207057f558119e21ed11b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d812abcc_76c56407",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-02-22T17:15:14Z",
      "side": 1,
      "message": "I\u0027d be interested to know if this gets triggered after the sleeps (e.g. we get an event but have already consumed the frame).\n\nI wonder if we shouldn\u0027t also do something to suppress this during the initial frame grab....",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 65
      },
      "revId": "f060ca27a289119e65207057f558119e21ed11b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05839262_1f00a0ce",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 5091
      },
      "writtenOn": "2023-02-23T12:28:45Z",
      "side": 1,
      "message": "Great question. Let me start by showing what does happen: https://paste.googleplex.com/6324489410314240\n\nSee also https://screenshot.googleplex.com/9ZBwpHGLUinhB9m\n\nSo, `TryGetNextFrame` returns S_OK but `capture_frame` is NULL.\n\nNot 100% sure what you mean by suppressing in this context. Don\u0027t return E_FAIL, avoid calling TryGetNextFrame or something else. \n\nLet me see if I can come up with something simple. If not, perhaps we can discuss and I\u0027ll land an improvement in a followup CL.",
      "parentUuid": "d812abcc_76c56407",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 65
      },
      "revId": "f060ca27a289119e65207057f558119e21ed11b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d607813a_ae1b6795",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-02-23T17:51:25Z",
      "side": 1,
      "message": "By suppressing I meant basically not calling RecordGetFrameResult(GetFrameResult::kTryGetNextFrameFailed) (or I guess it seems like kFrameDropped below may be what we\u0027re calling) if we think that TryGetNextFrame *may* fail/during the initial frame grab.\n\nI\u0027m not wild about the counts, because one error that I saw with the way we were using them previously is that things can get wonky if there\u0027s a window resize event (the frame pool seems to dump all exisitng frames and then re-fill pretty quickly; that was triggering the crash that you were hitting).\n\nIt\u0027s less elegant; but perhaps a default parameter into ProcessFrame to change the header signature to something like:\n`void ProcessFrame(bool record_errors\u003dtrue)` or `void ProcessFrame(bool empty_frame_okay \u003d false)` for a slightly more targeted approach?\n\nMaybe I\u0027m over-indexing; but if *most* captures end up sending one or two initial \"FrameDropped\" events; I worry that we\u0027ll think the capturer is less stable than it  actually is (or we\u0027ll be biased to think it\u0027s from this and ignore any warning signs).",
      "parentUuid": "05839262_1f00a0ce",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 65
      },
      "revId": "f060ca27a289119e65207057f558119e21ed11b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd030b80_2f6dc0d0",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 5091
      },
      "writtenOn": "2023-02-23T17:56:09Z",
      "side": 1,
      "message": "Sure thing. Would you prefer that I first land the previous version so you can try it out or do you want me to take a stab at this before landing anything? I also see a risk with the counting stuff since it might come back and hit us later for some corner case as you mention.",
      "parentUuid": "d607813a_ae1b6795",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 65
      },
      "revId": "f060ca27a289119e65207057f558119e21ed11b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cc848b2_c5472dd7",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 8
      },
      "lineNbr": 294,
      "author": {
        "id": 18474
      },
      "writtenOn": "2023-02-23T18:08:51Z",
      "side": 1,
      "message": "It\u0027s not enabled by default; so let\u0027s go ahead and land the previous version and tinker with it some.",
      "parentUuid": "dd030b80_2f6dc0d0",
      "range": {
        "startLine": 293,
        "startChar": 0,
        "endLine": 294,
        "endChar": 65
      },
      "revId": "f060ca27a289119e65207057f558119e21ed11b0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}