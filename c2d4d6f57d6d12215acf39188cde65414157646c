{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2562606c_ff491f4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-04-23T07:18:27Z",
      "side": 1,
      "message": "After some testing in Chrome it looks like the transport stats exist after setLocalDescription.\nThis means the role may change depending on the other side\u0027s setup attribute (and maybe ice conflicts) and can not be \"unknown\" in practice.\nShall I\n1/ remove \"unknown\" from the spec\n2/ expose it as \"unknown\" until after the handshake (i.e. remote certificate is set)?",
      "revId": "c2d4d6f57d6d12215acf39188cde65414157646c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c86a539_525d136f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-04-25T07:12:02Z",
      "side": 1,
      "message": "So there\u0027s always a role when \"transport\" stats exist, with dtlsRole being \"client\". But after the handshake it could permanently change to \"server\". And \"unknown\" is never a thing?\n\nHarald: What makes more sense?\n- Removing \"unknown\" in favor of \"client\"/\"server\" even though \"client\" could change to \"server\" in the initial handshake.\n- Or reporting \"unknown\" until the initial handshake has completed.",
      "parentUuid": "2562606c_ff491f4a",
      "revId": "c2d4d6f57d6d12215acf39188cde65414157646c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20ca8662_5f5e3b3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-04-25T08:13:52Z",
      "side": 1,
      "message": "perhaps the right state after processing an offer is the role taken from SDP, which would necssitate adding the direction \"actpass\".\nIf we can drop the \"unknown\" state, that might be worth having to explain what \"actpass\" means.",
      "parentUuid": "4c86a539_525d136f",
      "revId": "c2d4d6f57d6d12215acf39188cde65414157646c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0845ebdb_eedcaafe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-04-25T08:24:34Z",
      "side": 1,
      "message": "ah... the test I used fooled me since it had SRD too! If one adds a transceiver and calls SLD the state is \"unknown\" which is what I hoped for (and yay, that is testable)",
      "parentUuid": "20ca8662_5f5e3b3c",
      "revId": "c2d4d6f57d6d12215acf39188cde65414157646c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "c2d4d6f57d6d12215acf39188cde65414157646c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {},
      "overrideExpressionResult": {},
      "patchSetCommitId": "c2d4d6f57d6d12215acf39188cde65414157646c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}