{
  "comments": [
    {
      "key": {
        "uuid": "e26e4619_d748f583",
        "filename": "sdk/android/api/org/webrtc/AudioProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-09T12:13:23Z",
      "side": 1,
      "message": "Doesn\u0027t seem to be a pointer to rtc::scoped_refptr but rather raw AudioProcessing pointer (I think this is good, just change the comment)",
      "range": {
        "startLine": 17,
        "startChar": 13,
        "endLine": 17,
        "endChar": 26
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfddd8eb_d9279c9d",
        "filename": "sdk/android/api/org/webrtc/AudioProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 17,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Thanks, fixed.",
      "parentUuid": "e26e4619_d748f583",
      "range": {
        "startLine": 17,
        "startChar": 13,
        "endLine": 17,
        "endChar": 26
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19f8963f_6adaabf4",
        "filename": "sdk/android/api/org/webrtc/PeerConnectionFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Do we have some convention re: allowing/documenting nullable values? I can\u0027t find anything in the Google/Chromium Java style guides.",
      "range": {
        "startLine": 199,
        "startChar": 7,
        "endLine": 199,
        "endChar": 67
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3c5f56e_3d0bec4d",
        "filename": "sdk/android/api/org/webrtc/PeerConnectionFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-12T10:54:32Z",
      "side": 1,
      "message": "sakal@, thoughts?",
      "parentUuid": "19f8963f_6adaabf4",
      "range": {
        "startLine": 199,
        "startChar": 7,
        "endLine": 199,
        "endChar": 67
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4a161ec_cb43ba40",
        "filename": "sdk/android/api/org/webrtc/PeerConnectionFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-12T13:19:35Z",
      "side": 1,
      "message": "We haven\u0027t adopted any conventions on this in WebRTC Java code so far.",
      "parentUuid": "f3c5f56e_3d0bec4d",
      "range": {
        "startLine": 199,
        "startChar": 7,
        "endLine": 199,
        "endChar": 67
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2d11e0a_a57c16b5",
        "filename": "sdk/android/api/org/webrtc/PeerConnectionFactory.java",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-13T14:08:36Z",
      "side": 1,
      "message": "Thank you, good to know. I\u0027ll keep this behavior, to be consistent with the codec factories.",
      "parentUuid": "a4a161ec_cb43ba40",
      "range": {
        "startLine": 199,
        "startChar": 7,
        "endLine": 199,
        "endChar": 67
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9b5e48ca_afe0d9ce",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-09T12:13:23Z",
      "side": 1,
      "message": "Hmm, we have implemented rest of similar cases with a concrete class that holds the pointer instead of an interface. Maybe we should do it here as well for consistency?",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "23fd2977_c9ee5c7c",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Good point. I\u0027m ok with that, although it itches to impose more restrictions on users.\n\nWould it be better to drop this class entirely and have AudioProcessing\u0027s constructor take the raw native pointer value? On the one hand, PostProcessing.java is not much more than a glorified wrapper of the pointer. On the other hand, this class allows users to hide all JNI stuff behind their PostProcessing implementation.",
      "parentUuid": "9b5e48ca_afe0d9ce",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7705f0cb_1e9ee14c",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-12T10:54:32Z",
      "side": 1,
      "message": "sakal@ said:\n\"\"\"\nI think we have three design options here now:\n1. Rename PostProcessing to PostProcessingFactory and getNativePointer to createNativePostProcessing. Whoever calls this method takes ownership of the object.\n2. Do as Taylor suggested and let the application own the PostProcessing either by modifying the interface or using a proxy class. I think in this case it might be worth considering reference counting so the object can\u0027t be freed from Java while the native code is still using it.\n3. Make PostProcessing a concrete class and make it clear that when it is passed to AudioProcessing, ownership is transferred.\n\nI would be okay with any of these approaches. I have slight preference for option 2 because it matches how handle other similar objects in Java.\n\"\"\"\n\n#1 sounds good, and fits well with the existing PeerConnectionFactory constructor.\nHow to add support for a default implementation? What about this:\n\npublic interface PostProcessingFactory {\n  // caller takes ownership\n  public long createNativePostProcessing();\n}\n\npublic interface AudioProcessingFactory {\n  // caller takes ownership\n  public long createNativeAudioProcessing();\n}\n\npublic class DefaultAudioProcessingFactory implements AudioProcessingFactory {\n  public DefaultAudioProcessingFactory(PostProcessingFactory postProcessingFactory) {\n    this.postProcessingFactory \u003d postProcessingFactory;\n  }\n  public long createNativeAudioProcessing(...) {\n    return nativeCreateAudioProcessing(\n      postProcessingFactory.createNativePostProcessing());\n  }\n  private PostProcessingFactory postProcessingFactory;\n\n  private static native long nativeCreateAudioProcessing(long postProcessing);\n}",
      "parentUuid": "23fd2977_c9ee5c7c",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d88fb1d8_6b0f3d20",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-12T13:19:35Z",
      "side": 1,
      "message": "This looks nice and sgtm.\n\nTaylor, what do you think?",
      "parentUuid": "7705f0cb_1e9ee14c",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6ebb9f1_783895b6",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5053
      },
      "writtenOn": "2017-10-13T00:21:13Z",
      "side": 1,
      "message": "That makes sense. Though if it\u0027s expected that only one instance will ever be created by the factory, it may be simpler to just have it transfer ownership of a PostProcessing instance it holds, rather than create an arbitrary number of instances. That\u0027s a pretty minor distinction though; you probably know better than me what makes the most sense.\n\nBy the way, we\u0027re revisiting the \"inject by raw pointer\" decision, so you can forget about that for the time being.",
      "parentUuid": "d88fb1d8_6b0f3d20",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50602214_06fce06c",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-13T14:08:36Z",
      "side": 1,
      "message": "I\u0027d rather have a factory-like implementation that passes along the value of nativeCreateX in a getNativePointer(), so that the class doesn\u0027t have to own a C++ object at any point. The only-get-once property isn\u0027t enforced today, anyway, with a package-protected final members. If we want to, it can easily be enforced here in the create/get method:\nif (alreadyHandedOver) throw new AppropriateException();\n\nBut perhaps this is a bigger discussion, for when webrtc-core has converged on a C++ API layer convention. I\u0027ll anyway update the CL with the (call-multiple-times-if-you-want) factory version, as it\u0027s good for now and fits with the codecs.",
      "parentUuid": "d6ebb9f1_783895b6",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82c242e8_a1995833",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5053
      },
      "writtenOn": "2017-10-13T18:56:58Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "50602214_06fce06c",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd713062_947b0e34",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 14,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-19T07:44:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82c242e8_a1995833",
      "range": {
        "startLine": 14,
        "startChar": 17,
        "endLine": 14,
        "endChar": 31
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3e4b412_ce09a514",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-09T12:13:23Z",
      "side": 1,
      "message": "Pointer to a unique pointer? What is the point of a unique pointer if you have to manually delete it anyway?",
      "range": {
        "startLine": 15,
        "startChar": 19,
        "endLine": 15,
        "endChar": 63
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f43d19d9_81637a09",
        "filename": "sdk/android/api/org/webrtc/PostProcessing.java",
        "patchSetId": 5
      },
      "lineNbr": 15,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Updating the comment (to return a raw pointer), also adding a comment in AudioProcessing that it takes ownership of PostProcessing.",
      "parentUuid": "f3e4b412_ce09a514",
      "range": {
        "startLine": 15,
        "startChar": 19,
        "endLine": 15,
        "endChar": 63
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a97e823_0c05e91c",
        "filename": "sdk/android/instrumentationtests/src/org/webrtc/AudioProcessingTest.java",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-09T12:13:23Z",
      "side": 1,
      "message": "nit: literal comments",
      "range": {
        "startLine": 45,
        "startChar": 71,
        "endLine": 45,
        "endChar": 75
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "171af24c_acc94e10",
        "filename": "sdk/android/instrumentationtests/src/org/webrtc/AudioProcessingTest.java",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Thanks! Done.",
      "parentUuid": "8a97e823_0c05e91c",
      "range": {
        "startLine": 45,
        "startChar": 71,
        "endLine": 45,
        "endChar": 75
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18563f63_5e9be2ac",
        "filename": "sdk/android/src/jni/pc/audio_jni.cc",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-09T12:13:23Z",
      "side": 1,
      "message": "wait the comment before said this is already a unique pointer?",
      "range": {
        "startLine": 39,
        "startChar": 40,
        "endLine": 39,
        "endChar": 55
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f9d198_1f0c9919",
        "filename": "sdk/android/src/jni/pc/audio_jni.cc",
        "patchSetId": 5
      },
      "lineNbr": 39,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Yes, the interface comment is in error. Changed.",
      "parentUuid": "18563f63_5e9be2ac",
      "range": {
        "startLine": 39,
        "startChar": 40,
        "endLine": 39,
        "endChar": 55
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0072e3ce_d97994e5",
        "filename": "sdk/android/src/jni/pc/audio_jni.cc",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-10-09T12:13:23Z",
      "side": 1,
      "message": "nit: literal comments",
      "range": {
        "startLine": 42,
        "startChar": 30,
        "endLine": 42,
        "endChar": 37
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "316c702c_eddaeeeb",
        "filename": "sdk/android/src/jni/pc/audio_jni.cc",
        "patchSetId": 5
      },
      "lineNbr": 42,
      "author": {
        "id": 5119
      },
      "writtenOn": "2017-10-09T14:58:35Z",
      "side": 1,
      "message": "Thanks! Done.",
      "parentUuid": "0072e3ce_d97994e5",
      "range": {
        "startLine": 42,
        "startChar": 30,
        "endLine": 42,
        "endChar": 37
      },
      "revId": "00e1f142bfe812b04cdc2d608db2fa6966887727",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}