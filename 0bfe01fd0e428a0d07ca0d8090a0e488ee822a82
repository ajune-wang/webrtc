{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f887bbbc_6f4d4674",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-04-28T12:56:39Z",
      "side": 1,
      "message": "We don\u0027t really have a template for keyframes, but maybe we don\u0027t care that much?\n\nNot sure if you it\u0027s worth doing, but if we implemented more ScalabilityStructureSimulcast versions (or just a single generic one) then we could reuse it to generate the templates and the chain diffs (just replace kDiscardable with kSwitch).\n\nRight now the chain diffs would always have to be overwritten.",
      "range": {
        "startLine": 377,
        "startChar": 36,
        "endLine": 377,
        "endChar": 59
      },
      "revId": "0bfe01fd0e428a0d07ca0d8090a0e488ee822a82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f11687d4_f9870256",
        "filename": "call/rtp_video_sender.cc",
        "patchSetId": 3
      },
      "lineNbr": 377,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-04-28T14:47:06Z",
      "side": 1,
      "message": "Yes, there is no template for keyframes because I don\u0027t care that much.\nAt this place it is very hard to create adequate FrameDependencyStructure. Accurate one better be created by the encoder wrapper.\n\nThe main point is to support encoder wrappers that currently do not fill generic info (chromium HW encoder in particular).\n\nAdding Simulcast scalability structure to libvpx encoder (and, more importantly to the simulcast wrapper) would sure be beneficial, but not the point of this change.\n\n(there is an edge case where chain_diffs won\u0027t be overwritten, but it is an important edge case: delta frame when there is no scalability)",
      "parentUuid": "f887bbbc_6f4d4674",
      "range": {
        "startLine": 377,
        "startChar": 36,
        "endLine": 377,
        "endChar": 59
      },
      "revId": "0bfe01fd0e428a0d07ca0d8090a0e488ee822a82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a7eb67b_a42ffe52",
        "filename": "call/rtp_video_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 809,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-04-28T12:56:39Z",
      "side": 1,
      "message": "Could we change this to test a S2T2 stream? And also validate the sent DD (to see that it outputs expected template IDs)",
      "range": {
        "startLine": 809,
        "startChar": 5,
        "endLine": 809,
        "endChar": 25
      },
      "revId": "0bfe01fd0e428a0d07ca0d8090a0e488ee822a82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f9104ff_bc6a1bd6",
        "filename": "call/rtp_video_sender_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 809,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-04-28T14:47:06Z",
      "side": 1,
      "message": "That is not really the point of this test (and the added feature).\nCorrectness (including template ids) should be validated by RtpDependencyDescriptor Builder/Parser\n\nSame as for previous test,\nthe point of this test is to verify DD can be created at all.\nIf there is no compatible template, no DD would be written.\n\nI use two pictures (rather than one) because key frames and delta frames are treated slightly differently.",
      "parentUuid": "7a7eb67b_a42ffe52",
      "range": {
        "startLine": 809,
        "startChar": 5,
        "endLine": 809,
        "endChar": 25
      },
      "revId": "0bfe01fd0e428a0d07ca0d8090a0e488ee822a82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}