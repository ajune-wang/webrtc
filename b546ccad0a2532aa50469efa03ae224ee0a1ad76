{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1dce906d_b66fcd0a",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 5023
      },
      "writtenOn": "2022-08-10T06:09:52Z",
      "side": 1,
      "message": "Now that the PT is constant for the duration of the receiver lifetime, we could consider doing these sorts of checks in the RtpVideoStreamReceiver2 instead, i.e., not instantiating when not needed.",
      "range": {
        "startLine": 55,
        "startChar": 10,
        "endLine": 55,
        "endChar": 36
      },
      "revId": "b546ccad0a2532aa50469efa03ae224ee0a1ad76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93636612_b1f0c60c",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-10T07:49:03Z",
      "side": 1,
      "message": "(just making sure I understand correctly) do you mean that we could have an assumption in UlpfecReceiver that uplfec_payload_type_ is never -1 and modify RtpVideoStreamReceiver2 so that when the configured ulpfec_payload_type is -1, then there\u0027s no UlpfecReceiver instance allocated?\n\nHere, in `ParseAndHandleEncapsulatingHeader`, it\u0027s not exactly clear to me if the payload type is never -1 when `ulpfec_receiver_` is referenced:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/rtp_video_stream_receiver2.cc;l\u003d1023",
      "parentUuid": "1dce906d_b66fcd0a",
      "range": {
        "startLine": 55,
        "startChar": 10,
        "endLine": 55,
        "endChar": 36
      },
      "revId": "b546ccad0a2532aa50469efa03ae224ee0a1ad76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "234bb044_1629d308",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver.cc",
        "patchSetId": 6
      },
      "lineNbr": 55,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-08-10T08:03:24Z",
      "side": 1,
      "message": "Wrote up a small patch based on that understanding:\nhttps://webrtc-review.googlesource.com/c/src/+/271120",
      "parentUuid": "93636612_b1f0c60c",
      "range": {
        "startLine": 55,
        "startChar": 10,
        "endLine": 55,
        "endChar": 36
      },
      "revId": "b546ccad0a2532aa50469efa03ae224ee0a1ad76",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "b546ccad0a2532aa50469efa03ae224ee0a1ad76",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "b546ccad0a2532aa50469efa03ae224ee0a1ad76",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}