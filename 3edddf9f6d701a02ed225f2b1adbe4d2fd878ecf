{
  "comments": [
    {
      "key": {
        "uuid": "1be1b78f_ed8da395",
        "filename": "call/bitrate_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "IMHO, it would be better to drop this line altogether.",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe62022_6d2b185c",
        "filename": "call/bitrate_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1be1b78f_ed8da395",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99556419_0181121c",
        "filename": "call/bitrate_allocator.cc",
        "patchSetId": 3
      },
      "lineNbr": 543,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "I have a suggestion for a different algorithm. Let\u0027s discuss by video-chat, I think that would be easier.",
      "range": {
        "startLine": 473,
        "startChar": 0,
        "endLine": 543,
        "endChar": 1
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "652a912f_767b7c4d",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "I\u0027m afraid that this creates somewhat confusing code - a parameter is passed to the superclass that is only used by one derived class. What if that derived class is one day removed, btw? This is liable to be left behind.",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0c63dd1_a258ba2f",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "As we discussed offline, 2 reasons to keep this here.\n\n1) It is planned to be a core WebRTC feature for bitrate allocation (comes from same params as max_bitrate_bps). \n2) Moving the priority based allocation function into this class, with a default relative bitrate of 1.0 for each track.",
      "parentUuid": "652a912f_767b7c4d",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c19913a5_99a2a5ab",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-02T10:50:57Z",
      "side": 1,
      "message": "With the removal of the subclassing, this LGTM. But could we get rid of the default value? (Otherwise, |enforce_min_bitrate| looks just as eligible for a default value to me, with some shuffling of parameters.)",
      "parentUuid": "a0c63dd1_a258ba2f",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b89eaa94_a7420b20",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-03T01:24:03Z",
      "side": 1,
      "message": "Yes, but without a default I need to make changes to the classes that are calling this function. I think it makes sense to separate this CL (implementation) and another CL that wires this up to the API layer RTCRtpParameters. I think there\u0027s two options here.\n1) Update the audio_send_stream.cc and video_send_stream.cc to call this function with a default value of 1.0 (with a TODO there to wire it up).\n2) Keep the default value here in this function and leave a TODO.\n\nI went with number 2 for now because it leaves other classes out of this CL.",
      "parentUuid": "c19913a5_99a2a5ab",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9d913a4_3561a4c2",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-06T12:14:04Z",
      "side": 1,
      "message": "Okay. Could you please also push a CL, based on this one, that fixes this TODO, and add me as a reviewer?",
      "parentUuid": "b89eaa94_a7420b20",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52855b84_ec19e66e",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-08T02:05:05Z",
      "side": 1,
      "message": "Yes I will. I\u0027ve been working on that CL in parallel (branched from this one) but I haven\u0027t gotten too far on it yet. As soon as its implemented I will add you as a reviewer.",
      "parentUuid": "a9d913a4_3561a4c2",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a441290_6cadeff8",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "1. Could you move this to the section where the (protected) member variables are? Namely, where you have bitrate_observer_configs_?\n2. nit: The codebase has both sequenced_checker_ as well as sequence_checker_. It would be nice to only have one. I therefore suggest you rename this to the name of the more common variant, which happens to be sequence_checker_. (Linguistically, it appears to me more correct, too.)",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25cf745c_4429efa2",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "1. I moved this back to private, by moving the function away from the subclass it is no longer necessary.\n2. Done.",
      "parentUuid": "8a441290_6cadeff8",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54cfe2fd_d7ca3519",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "nit: Because \"relative_bitrate\" has \"bitrate\" in the name, one might be moved to assume this note also applies to it.",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84c6ad08_0d1400ae",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 110,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Good catch. I don\u0027t know if this comment is necessary given that the variable names have a suffix of \"_bps.\" I changed the comment.",
      "parentUuid": "54cfe2fd_d7ca3519",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eebc0c7c_de0b6ac5",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "nit #1: s/bps/bitrate. Using \"bps\" here seems like saying kph/mph instead of velocity/speed. In line #211, too?\n\nnit #2: s/based upon/based on\nIn line 199 too. That sounds better to me, given the context. Wdyt?",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f58fa328_7783b50c",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "1. I think this makes sense, good suggestion. Done.\n2. I agree, it\u0027s simpler. Done.",
      "parentUuid": "eebc0c7c_de0b6ac5",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dff686bd_77d26645",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "Is RTCRtpEncodingParameters iOS-specific? If so, we probably want to revise the comment?",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c6968ea_8c0be10f",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "No the parameters are specified in the Web API documentation:\nhttps://w3c.github.io/webrtc-pc/#dom-rtcrtpencodingparameters\n\nCurrently the double relativeBitrate field isn\u0027t included (but there exists a priority). This is in the process of being changed-- the plan is to use priority for QoS/packet labeling and scheduling, while using the relativeBitrate for bitrate allocation to tracks.",
      "parentUuid": "dff686bd_77d26645",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaa4ffb5_6fba042c",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-02T10:50:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1c6968ea_8c0be10f",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f55aeed2_e17276ae",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "1. If I understand correctly, this does not really reflect the full logic; we may also cap this to a max-bitrate, which this a+b*c might exceed, right? If so, this comment is potentially misleading.\n2. IMHO, one should not document in the header file the inner-workings of a private function; only its purpose.",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "648229c2_ad21a525",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 3
      },
      "lineNbr": 213,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "1. You\u0027re correct. I updated the comment.\n2. Sounds good and thanks for the information. I\u0027m still learning what\u0027s appropriate for C++ comments/documentation. I took the explanation out.",
      "parentUuid": "f55aeed2_e17276ae",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0e8cf74_5937c092",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "Please prepend :: here, too.",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93b914cb_5f2ffd8d",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0e8cf74_5937c092",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cc9eaee_a82ba3bc",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "Does this need to be a unique_ptr?",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d82f122_a434c79e",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Are you referring to using the unique_ptr itself, or the alternative- storing the object as a member as opposed to the pointer? I left this unresolved and did not make any changes. This is the current implementation in other parts of the test file, although it looks like this test file could use some cleaning up.",
      "parentUuid": "5cc9eaee_a82ba3bc",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d263c328_586852bd",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-02T10:50:57Z",
      "side": 1,
      "message": "Among the possible reasons to use a pointer, there\u0027s sometimes the desire to not hard-code a particular subclass. But this is not the case here, both because we\u0027re moving away from the subclass solution, as well as because this fixture class was specific to the subclass, and hard-coded it. So I think it would be simpler to keep the object itself, rather than a unique_ptr of the object.",
      "parentUuid": "4d82f122_a434c79e",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a31d7f2_c4f4dc81",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-03T01:24:03Z",
      "side": 1,
      "message": "SGTM. I updated this. Just to note, the other test fixtures in this test file use a unique_ptr for the allocator.",
      "parentUuid": "d263c328_586852bd",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76e5e25a_105d9322",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-06T12:14:04Z",
      "side": 1,
      "message": "Yeah, I\u0027ve noticed about the unique_ptr in the other tests. I\u0027ve not checked whether there was a need for it in one of the tests there, or if this was for a historical reason that might have gone away since. I think we can leave that as-is for now; it\u0027s not worth \"fixing\" this, but it would be good to not do the same in fixtures we add unless we need to.\n\nBut, by the way, now that you no longer subclass, do we need a separate fixture?",
      "parentUuid": "5a31d7f2_c4f4dc81",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75dcba45_f31f7cdc",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 530,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-08T02:05:05Z",
      "side": 1,
      "message": "I don\u0027t think it is necessary, but thought it was a nice way to organize the testing. The tests that don\u0027t enforce a min also have a separate test fixture (BitrateAllocatorTestNoEnforceMin). I addressed this in the other comment you had.",
      "parentUuid": "76e5e25a_105d9322",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc9e01d0_c5bc6ce0",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "If I am not mistaken, you can get rid of this line altogether, because limit_observer_ is a NiceMock.",
      "range": {
        "startLine": 539,
        "startChar": 0,
        "endLine": 540,
        "endChar": 35
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "173dd376_d8f4ccbf",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "If I remove this line the test fails. After reading, it looks like NiceMock only suppresses warnings from uninteresting calls to functions not mocked, but this would be an unexpected call. From the documentation:\n\nhttps://g3doc.corp.google.com/third_party/gmock/g3doc/guide.md#understanding-uninteresting-vs-unexpected-calls\n\"A nice mock suppresses uninteresting call warnings. It is less chatty than the default mock, but otherwise is the same. If a test fails with a default mock, it will also fail using a nice mock instead. And vice versa. Don\u0027t expect making a mock nice to change the test\u0027s result.\"",
      "parentUuid": "cc9e01d0_c5bc6ce0",
      "range": {
        "startLine": 539,
        "startChar": 0,
        "endLine": 540,
        "endChar": 35
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b870c66f_4dacc4ac",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-02T10:50:57Z",
      "side": 1,
      "message": "Ah, right, you\u0027re expecting it exactly once with certain parameters, and then any number of times with any parameters. I\u0027d missed that.\n\nBut, running this locally, I see that the calls to OnAllocationLimitsChanged() are triggered not by OnNetworkChanged(), but rather by Add and Remove. Was that intended? The remove I understand, but the add is probably not what you were trying to test, or else you would have not called OnNetworkChanged, I assume?",
      "parentUuid": "173dd376_d8f4ccbf",
      "range": {
        "startLine": 539,
        "startChar": 0,
        "endLine": 540,
        "endChar": 35
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5655c0d9_f0a1a5fa",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-03T01:24:03Z",
      "side": 1,
      "message": "Yes this was intended. OnNetworkChanged is essentially called here, and in all the tests to setup available bandwidth for that specific test. It isn\u0027t triggered by OnNetworkChanged() because the allocation limits have not changed between the AddObserver() call and OnNetworkChanged() call.\n\nThe original intention here was to have a test that verified the limit observer was correctly hooked into the subclass (PriorityBasedBitrateAllocator). Now that this isn\u0027t a subclass I don\u0027t think this is necessary, because the limit observer is tested in other parts of this test file. I took out the EXPECT_CALL.",
      "parentUuid": "b870c66f_4dacc4ac",
      "range": {
        "startLine": 539,
        "startChar": 0,
        "endLine": 540,
        "endChar": 35
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1ae4041_bd099ab3",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-06T12:14:04Z",
      "side": 1,
      "message": "Ack\nFYI: In unit-tests, it\u0027s good to do the minimum necessary for demonstrating correctness. So if you don\u0027t need to call OnNetworkChanged() in a test, it\u0027s best not to. Otherwise, you could end up with tests that pass for the wrong reason. Also, the shorter the test, the easier it is to understand.",
      "parentUuid": "5655c0d9_f0a1a5fa",
      "range": {
        "startLine": 539,
        "startChar": 0,
        "endLine": 540,
        "endChar": 35
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5174c3ef_acb408b0",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 540,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-08T02:05:05Z",
      "side": 1,
      "message": "You\u0027re correct, this was a good catch. Thanks.",
      "parentUuid": "e1ae4041_bd099ab3",
      "range": {
        "startLine": 539,
        "startChar": 0,
        "endLine": 540,
        "endChar": 35
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e73db2f7_e02d446f",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 544,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "It\u0027s a bit confusing that kMinSendBitrateBps, etc., are given constants, but 600000 is hard-coded.",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef08ef5_49a53d34",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 544,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "I added a variable for the kMaxSendBitrateBps as well.",
      "parentUuid": "e73db2f7_e02d446f",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b8ec100f_785f9684",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 558,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "nit: s/low/low1, to make it stand-out more that it\u0027s distinct from low2, and not a typo?",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "597b2693_6ff39d2c",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 558,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b8ec100f_785f9684",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92bb5a69_08275a6e",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 562,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "Less zeros would make it easier to verify your calculation in one\u0027s head. (Here and elsewhere.)",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19f78b10_115f50d5",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 562,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "I agree. This is how the values are defined throughout the test. Maybe the large values made it seem more like \"real\" values for the tests? I agree and prefer smaller values, so I updated. I did not update throughout the test. Should that be done in a follow up CL?",
      "parentUuid": "92bb5a69_08275a6e",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5656b6c8_9dc69dba",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 562,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-02T10:50:57Z",
      "side": 1,
      "message": "I\u0027m not sure if changing the older tests is important enough to merit your attention, but when adding new ones, I guess it makes sense to use what we believe to be more convenient values.",
      "parentUuid": "19f78b10_115f50d5",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11f0d585_aa65ca1a",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 562,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-03T01:24:03Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "5656b6c8_9dc69dba",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfbe12c8_47176ba9",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 576,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "nit: s/med/mid",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15d8cf4_43a1adc8",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 576,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfbe12c8_47176ba9",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1e2b6f9_c181aaf7",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 581,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "Maybe: EXPECT_GT(kMinBitrate, observer_X.last_bitrate_bps_)",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 581,
        "endChar": 0
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bc9521e_53e35708",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 581,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Here I\u0027m testing that they are both allocated their correct relative amount above their min bitrate. I renamed the test to reflect this.",
      "parentUuid": "a1e2b6f9_c181aaf7",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 581,
        "endChar": 0
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fd36ceb_8fe76bbc",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "Basic?",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e7e5a23_92d68ae0",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 605,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "I renamed the  test.",
      "parentUuid": "9fd36ceb_8fe76bbc",
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3354bfd_16afa1ad",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 612,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "I would suggest:\nkLowMax \u003d 20;\nkMidMax \u003d 40;\nkHighMax \u003d 80;\nAnd then:\nkTotalMax \u003d kLowMax + kMidMax + kHighMax;\nOnNetworkChanged(kTotalMax / 2);\nAnd then expect the ratio. I think it would make the spirit of the test more apparent.",
      "range": {
        "startLine": 609,
        "startChar": 0,
        "endLine": 612,
        "endChar": 73
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af711198_6b9c8bf0",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 612,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "Done. I also added some constants to other tests to hopefully help with understanding the spirit of the test more.",
      "parentUuid": "c3354bfd_16afa1ad",
      "range": {
        "startLine": 609,
        "startChar": 0,
        "endLine": 612,
        "endChar": 73
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc4af26b_7527d047",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-10-31T15:14:08Z",
      "side": 1,
      "message": "I would have expected:\nlow: 166666\nmid: 333333\nhigh: 400000\nCould you please explain why 2-3-4 was reached instead?",
      "range": {
        "startLine": 637,
        "startChar": 0,
        "endLine": 639,
        "endChar": 54
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b637c2d9_aee4c85f",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 5800
      },
      "writtenOn": "2017-11-02T02:48:21Z",
      "side": 1,
      "message": "As discussed in our first video chat, these are the relative amounts above the min values.",
      "parentUuid": "cc4af26b_7527d047",
      "range": {
        "startLine": 637,
        "startChar": 0,
        "endLine": 639,
        "endChar": 54
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc0ea771_2038d74d",
        "filename": "call/bitrate_allocator_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 639,
      "author": {
        "id": 5147
      },
      "writtenOn": "2017-11-02T10:50:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b637c2d9_aee4c85f",
      "range": {
        "startLine": 637,
        "startChar": 0,
        "endLine": 639,
        "endChar": 54
      },
      "revId": "3edddf9f6d701a02ed225f2b1adbe4d2fd878ecf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}