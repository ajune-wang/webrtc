{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b4872c4c_27d89517",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 344,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-31T18:25:04Z",
      "side": 1,
      "message": "Clock* const clock_",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0746dadc_339ea279",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 344,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-05-31T20:52:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4872c4c_27d89517",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98a6ef03_148cdb00",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 350,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-31T18:25:04Z",
      "side": 1,
      "message": "RTC_GUARDED_BY(destructor_sequence_checker_)?",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9df867fa_e9b1512b",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 350,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-05-31T20:52:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "98a6ef03_148cdb00",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "458f99da_c2048520",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 446,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-31T18:25:04Z",
      "side": 1,
      "message": "documentation?\n\nare there plans to get rid of the atomics down the line?",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c64f3dc3_edaff889",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 446,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-05-31T20:52:21Z",
      "side": 1,
      "message": "Docs added. More docs also added at the .load() site, see below comment. I don\u0027t think the atomics hurt since we avoid the PostTask this way.",
      "parentUuid": "458f99da_c2048520",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "359f2a45_89892849",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 1407,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-31T18:25:04Z",
      "side": 1,
      "message": "isn\u0027t this inherently racy now?\nand if so, is it harmless if we call either PauseSendAndPacerBitrateCounters or AddTargetBitrateSample when we actually have send streams or don\u0027t (respectively)?",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f7b8fed_072ce91b",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 1407,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-05-31T20:52:21Z",
      "side": 1,
      "message": "Unless I\u0027m missing something it\u0027s no worse than it is today: the sender can\u0027t reasonably synchronize with streams getting added or removed because it\u0027s on the send thread, so an update might anyway be misinterpreted depending on when it\u0027s sent. As the worker action in this method take place initiated by the caller, it only works with polling anyway.\nAdded this as docs.",
      "parentUuid": "359f2a45_89892849",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be6121a4_e9445a7d",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 1407,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-01T08:49:48Z",
      "side": 1,
      "message": "Before, the flag was changed on the same thread that it\u0027s checked on. That guarantees that the check+operations, are atomic. Now, there\u0027s a time-of-check-time-of-use race because there\u0027s no guarantee that the value of video_send_streams_empty_ hasn\u0027t changed when PauseSendAndPacerBitrateCounters() is called.\n\nHaving said that, it still may not be worse than before (I\u0027m not sure myself) but just want to double check that you\u0027ve considered this and that it\u0027s acceptable.",
      "parentUuid": "1f7b8fed_072ce91b",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "382e9082_056e91c2",
        "filename": "call/call.cc",
        "patchSetId": 5
      },
      "lineNbr": 1407,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-01T10:27:12Z",
      "side": 1,
      "message": "What makes it acceptable is that it wasn\u0027t synchronized before and it isn\u0027t synchronized now either.\n\nMy rationale:\nThe time-of-check-time-of-use race was present before because the send thread calling OnTargetTransferRate is unsynchronized with video stream addition/removal happening on the worker thread. This fact didn\u0027t change with the atomic. So the PostTask and synchronization doesn\u0027t help.\n\nI.e. consider the old code state in Call having 1 videostream before time T and 0 streams after T.\n1. If OnTargetTransferRate(100) happens a micro before T, we AddTargetBitrateSample.\n1. If OnTargetTransferRate(100) happens a micro after T, we PauseBitrateCounters.\n\nThe only way this is useful is if there are many samples getting fed.\n\nDo you find any holes in the above reasoning?",
      "parentUuid": "be6121a4_e9445a7d",
      "revId": "236fc9cc967d921b3d682299c47ac2bda7fbda5c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}