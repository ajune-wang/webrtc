{
  "comments": [
    {
      "key": {
        "uuid": "080061b6_9a882cc8",
        "filename": "modules/video_coding/codecs/av1/scalable_video_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-05-12T15:54:41Z",
      "side": 1,
      "message": "Any replacement for this structure?\n\n  struct GenericFrameInfo : public FrameDependencyTemplate {\n    ...\n  }\n\nAlso not a great fit and also don\u0027t want to end up in the same situation as with the FrameDependencyStructure.",
      "range": {
        "startLine": 44,
        "startChar": 22,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "18b92089dbdcff5f3db0c46910cb804cac01d475",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0703ca2d_c732da77",
        "filename": "modules/video_coding/codecs/av1/scalable_video_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-05-12T16:02:43Z",
      "side": 1,
      "message": "Actually this one is a good fit.\nReplacing this struct would be inconvenient because of how this info is passed to the EncodedImageCallback, how CodecSpecificInfo structure is organised.\nSee new line366 in libaom_av1_encoder.cc\n\n(still not perfect fit, I consider extending this struct with chains [in addition to chain_diffs], active decode targets and keyframe flag. but that is for the later discussion.)\n\n(btw, what GenericFrameInfo is for, if not for this? on the other side, it doesn\u0027t have to derive from the FrameDependencyTemplate, it can copy some fields from there)",
      "parentUuid": "080061b6_9a882cc8",
      "range": {
        "startLine": 44,
        "startChar": 22,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "18b92089dbdcff5f3db0c46910cb804cac01d475",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d84eb504_fdc216b6",
        "filename": "modules/video_coding/codecs/av1/scalable_video_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 5527
      },
      "writtenOn": "2020-05-13T09:39:41Z",
      "side": 1,
      "message": "\u003e Actually this one is a good fit.\n\u003e Replacing this struct would be inconvenient because of how this info is passed to the EncodedImageCallback, how CodecSpecificInfo structure is organised.\n\u003e See new line366 in libaom_av1_encoder.cc\n\u003e \n\u003e (still not perfect fit, I consider extending this struct with chains [in addition to chain_diffs], active decode targets and keyframe flag. but that is for the later discussion.)\n\u003e \n\u003e (btw, what GenericFrameInfo is for, if not for this? on the other side, it doesn\u0027t have to derive from the FrameDependencyTemplate, it can copy some fields from there)\n\nThe idea was that the MegaSuperEncoderClass would *output* {GenericFrameInfo, EncodedFrame} tuples. Here we use it to control the encoder. I understand that for now frames are propagated by a callback from within the encoder, and therefor we have to output all relevant information with that callback. I would (strongly) prefer if the GenericFrameInfo was simply tagged along and not involved in actually controlling the encoder.",
      "parentUuid": "0703ca2d_c732da77",
      "range": {
        "startLine": 44,
        "startChar": 22,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "18b92089dbdcff5f3db0c46910cb804cac01d475",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af672d9b_4982be06",
        "filename": "modules/video_coding/codecs/av1/scalable_video_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 44,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-05-13T14:57:14Z",
      "side": 1,
      "message": "ok, I tried to follow that\u0027s idea.\nthat force me to again redesign (improve) the interface between the controller and the encoder.\n\nGenericFrameInfo is now passed through. Also added option to modify it based on what encoder produced rather what encoder was requested to produce.",
      "parentUuid": "d84eb504_fdc216b6",
      "range": {
        "startLine": 44,
        "startChar": 22,
        "endLine": 44,
        "endChar": 38
      },
      "revId": "18b92089dbdcff5f3db0c46910cb804cac01d475",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}