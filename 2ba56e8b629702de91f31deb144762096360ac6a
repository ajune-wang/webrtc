{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf5d38d7_bc3c0f3a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 9741
      },
      "writtenOn": "2023-12-12T09:04:46Z",
      "side": 1,
      "message": "Thanks Henrik, ptal.",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "442ce9d3_525d67b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-12T09:43:06Z",
      "side": 1,
      "message": "I am overall happy with the CL now, thank you!\n\nBut lets make it compile and I have a couple of testing comments before I can LGTM it",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2689f54_21d5fb1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "Way cleaner here now! But the major concern for me right now is the threading.",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "38ee1fb8_7f427125",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 254,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "This should be private right?",
      "range": {
        "startLine": 254,
        "startChar": 9,
        "endLine": 254,
        "endChar": 22
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "043e2b3b_303693cb",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 283,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "TaskQueueBase* const?",
      "range": {
        "startLine": 283,
        "startChar": 2,
        "endLine": 283,
        "endChar": 17
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "024a611f_eeaa0db3",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 292,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "It makes sense to use a simpler collection here i.e. std::vector since we\u0027re appending \u0026 depleting all of it in one go.",
      "range": {
        "startLine": 292,
        "startChar": 2,
        "endLine": 292,
        "endChar": 12
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dab09e6_dd6bb696",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 294,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "These all need sequence annotations.",
      "range": {
        "startLine": 290,
        "startChar": 2,
        "endLine": 294,
        "endChar": 26
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1238b030_35387709",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 362,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "TaskQueueBase* const?",
      "range": {
        "startLine": 362,
        "startChar": 2,
        "endLine": 362,
        "endChar": 16
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d6f503c_267db06a",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 709,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "What is the guarantee that this object exists when this callback runs?",
      "range": {
        "startLine": 709,
        "startChar": 6,
        "endLine": 709,
        "endChar": 13
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25ed698f_a32f8bce",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 720,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-12T09:43:06Z",
      "side": 1,
      "message": "nit: instead of \"interval is less\" say \"tick period is less\"",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a45ee7f0_5c37ee11",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 722,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-12T09:43:06Z",
      "side": 1,
      "message": "The bots are getting compile errors here:\n```\n../../video/frame_cadence_adapter.cc:722:23: error: constexpr variable \u0027kMaxAllowedDelay\u0027 must be initialized by a constant expression\n722 |   constexpr TimeDelta kMaxAllowedDelay \u003d TimeDelta::Millis(33.34);\n|                       ^                  ~~~~~~~~~~~~~~~~~~~~~~~~\n```\n\nDoes it need to be static constexpr maybe?",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47acd4aa_1c9f8a39",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 726,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T10:08:20Z",
      "side": 1,
      "message": "Here also, what is the guarantee that this object exists when EncodeAllEnqueuedFrames gets to run?",
      "range": {
        "startLine": 726,
        "startChar": 47,
        "endLine": 726,
        "endChar": 70
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a2cabde_940bb4a0",
        "filename": "video/frame_cadence_adapter.cc",
        "patchSetId": 15
      },
      "lineNbr": 750,
      "author": {
        "id": 9515
      },
      "writtenOn": "2023-12-12T11:29:05Z",
      "side": 1,
      "message": "Nit: this is a boolean.\n\n`queue_overload` needs to be set correctly - it leads to the VSE dropping frames. Without it, there\u0027s the chance that too rapid frame entry starts to build delay.\n\nWhat needs to be handled is that steady state the algorithm should be able to keep the encoder load \u003c 100%.",
      "range": {
        "startLine": 750,
        "startChar": 36,
        "endLine": 750,
        "endChar": 56
      },
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8532841_b7b48eb3",
        "filename": "video/frame_cadence_adapter_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 624,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-12T09:43:06Z",
      "side": 1,
      "message": "I propose we either add a SetTickPeriod() to the fake metronome (which would have to cancel any pending delayed task in order to re-schedule the new tick period) so that this test can also make sure that we encode immediately when the tick period changes.\n\nOr if we want to keep it simple, just add a separate test where the metronome\u0027s tick period is above kMaxAllowedDelay and simply verify that the encodes are not aligned with the ticks.",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcf69eeb_ce274bae",
        "filename": "video/frame_cadence_adapter_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 632,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-12T09:43:06Z",
      "side": 1,
      "message": "Here and elsewhere: I suspect these comments about infinite ticks are old comments documenting an old patch set about estimating ticks, but they don\u0027t make sense anymore.\n\nThe tick is 33 ms (kTickPeriod). The comment could say that because the metronome is not infrequent then they are aligned with the tick period.",
      "revId": "2ba56e8b629702de91f31deb144762096360ac6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}