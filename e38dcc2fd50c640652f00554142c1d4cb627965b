{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb1aa523_0591b7e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T08:21:51Z",
      "side": 1,
      "message": "Just some cosmetic comments, overall LGTM.\n\nLet me know if the idea of keeping these types in rtc_base/container make sense (I tried to give some rational around this idea).",
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99f2f5db_8ff6e720",
        "filename": "rtc_base/containers/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T08:21:51Z",
      "side": 1,
      "message": "Should this be \"containers\"?\n\nEven if I suggest we split them in 3 different targets for the containers themselves (and even 1 target per internal utility but that is less important).",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "028f954a_669a0734",
        "filename": "rtc_base/containers/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 11,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-07-02T08:55:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "99f2f5db_8ff6e720",
      "range": {
        "startLine": 11,
        "startChar": 13,
        "endLine": 11,
        "endChar": 21
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61d37e3a_daf30ad4",
        "filename": "rtc_base/containers/as_const.h",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T08:21:51Z",
      "side": 1,
      "message": "Tommi, how do we handle the \"borrowing\" of Chromium code?\n\ne.g. in the codebase I see https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/rtc_base/weak_ptr.h;l\u003d23-24;drc\u003dd15a575ec3528c252419149d35977e55269d8a41 (no duplicated Copyright, but maybe this is better?).",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 29
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ad2dd4e_7e759525",
        "filename": "rtc_base/containers/as_const.h",
        "patchSetId": 4
      },
      "lineNbr": 13,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-07-02T11:41:49Z",
      "side": 1,
      "message": "ianal but I don\u0027t think that repeating the copyright is necessary. WebRTC follows the same license. I\u0027d follow the existing case you linked to.",
      "parentUuid": "61d37e3a_daf30ad4",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 13,
        "endChar": 29
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c705a667_554ac857",
        "filename": "rtc_base/containers/as_const.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T08:21:51Z",
      "side": 1,
      "message": "Ok, I now see what you meant with \"should they be in rtc_base/ or rtc_base/containers\".\n\nI am tempted to say we keep them here. Rationale:\n\n1) Chromium might switch to C++17 soon, so the less they spread around the better (https://bugs.chromium.org/p/chromium/issues/detail?id\u003d752720#c154). Only identity seems to be C++20, so far ahead in the future, correct?\n2) We didn\u0027t need these until today in the wider codebase, so why exposing them in rtc_base?\n\nDoes this make sense?",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 53
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e3cd7b8_4768927f",
        "filename": "rtc_base/containers/as_const.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-07-02T08:55:13Z",
      "side": 1,
      "message": "Agree. Let\u0027s keep them here.",
      "parentUuid": "c705a667_554ac857",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 53
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0d443ad4_d4ce6468",
        "filename": "rtc_base/containers/as_const.h",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-07-02T08:55:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e3cd7b8_4768927f",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 23,
        "endChar": 53
      },
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15b035bd_6607637f",
        "filename": "rtc_base/containers/flat_map_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T08:21:51Z",
      "side": 1,
      "message": "Maybe we should drop this one (different from what Chromium does) and only keep the anonymous one?\n\nIn the code we have both flat_map and webrtc::flat_map, so probably more clear to pick one or the other (if doesn\u0027t require too many namespace spelling I think webrtc::flat_map is more clear in tests).",
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1b94526_56dec034",
        "filename": "rtc_base/containers/flat_map_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-07-02T08:55:13Z",
      "side": 1,
      "message": "The usual pattern is to use the specific namespace, but keep the tests in an anonymous namespace, so I changed the tests to align with the other code for consistency reasons.",
      "parentUuid": "15b035bd_6607637f",
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ead209c3_ab28b3f0",
        "filename": "rtc_base/containers/flat_map_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 33,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T12:39:44Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "b1b94526_56dec034",
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1847847_8e1dad82",
        "filename": "rtc_base/containers/flat_set_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 5087
      },
      "writtenOn": "2021-07-02T08:21:51Z",
      "side": 1,
      "message": "Same here (we have both flat_set and webrtc::flat_set in the file).",
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4126bc59_121a9057",
        "filename": "rtc_base/containers/flat_set_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 34,
      "author": {
        "id": 12215
      },
      "writtenOn": "2021-07-02T08:55:13Z",
      "side": 1,
      "message": "I fixed it, to be consistent.",
      "parentUuid": "e1847847_8e1dad82",
      "revId": "e38dcc2fd50c640652f00554142c1d4cb627965b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}