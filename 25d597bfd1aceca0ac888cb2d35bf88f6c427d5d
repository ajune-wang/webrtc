{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "869b82eb_d19e0495",
        "filename": "/COMMIT_MSG",
        "patchSetId": 15
      },
      "lineNbr": 23,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-03-22T17:54:23Z",
      "side": 1,
      "message": "There is one notable difference between {active} and {active,inactive,inactive} from the API\u0027s point of view:\n\nIf scaleResolutionDownBy is not specified, it defaults to {4,2,1} rather than {1}.\n\nWe should decide if the \"standard API\" trigger should be just scalabilityMode (like it is now) or if it needs to be \"both scalabiityMode and scaleResolutionDownBy has been specified\".",
      "revId": "25d597bfd1aceca0ac888cb2d35bf88f6c427d5d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a5bc843_ce2dd777",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 15
      },
      "lineNbr": 144,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-03-23T09:41:56Z",
      "side": 1,
      "message": "What if the 0-th stream is inactive?",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 144,
        "endChar": 67
      },
      "revId": "25d597bfd1aceca0ac888cb2d35bf88f6c427d5d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a596868f_8dcf895e",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 15
      },
      "lineNbr": 144,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-03-23T09:50:16Z",
      "side": 1,
      "message": "The fact that we only consider the scalability mode of the 0-th layer is an existing limitation:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/video_codec_initializer.cc;l\u003d100;drc\u003d014b244fa00d187243bd43968d8a541861be1c18\n\nWith this CL, I am not aiming to make `scalability_mode` a more fully fletched feature, I am only trying to fix backwards-compatibility issues with existing use cases so that {active, inactive, inactive}Â is roughly equivalent to {active}.",
      "parentUuid": "3a5bc843_ce2dd777",
      "range": {
        "startLine": 144,
        "startChar": 8,
        "endLine": 144,
        "endChar": 67
      },
      "revId": "25d597bfd1aceca0ac888cb2d35bf88f6c427d5d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0751284d_85ef3a91",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1517,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-03-23T09:41:56Z",
      "side": 1,
      "message": "Could you add a test, where encodings[1] is the only active one?\n\nAlso a test where only 0th and 2nd encodings are active (but have L1TX mode).",
      "range": {
        "startLine": 1516,
        "startChar": 2,
        "endLine": 1517,
        "endChar": 56
      },
      "revId": "25d597bfd1aceca0ac888cb2d35bf88f6c427d5d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07e2cde9_4f2fe10b",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1517,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-03-23T09:50:16Z",
      "side": 1,
      "message": "As per other comment, there is an existing limitation that scalability mode can only have an effect if specified on the 0-th layer.\n\nI think we should fix this as part of fixing https://crbug.com/webrtc/15003 or mixed L1Tx support in general, but I think that is better suited for follow-up CLs since this is a new use case of scalability mode that has not been supported on any prior version.",
      "parentUuid": "0751284d_85ef3a91",
      "range": {
        "startLine": 1516,
        "startChar": 2,
        "endLine": 1517,
        "endChar": 56
      },
      "revId": "25d597bfd1aceca0ac888cb2d35bf88f6c427d5d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40468534_bec6e0ec",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 1517,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-03-23T09:54:23Z",
      "side": 1,
      "message": "In other words, {inactive, active, inactive} + scalabilityMode set is a perfectly valid setup, but because this has never been supported, there will be no backwards compat issues with not supporting it in this CL either :) \n\nMe trying to separate the issue of \"configure the correct number of encodings when the API is used in this way\" from the issue of \"what are all the things we want to be able to do with scalability_mode in the future\"",
      "parentUuid": "07e2cde9_4f2fe10b",
      "range": {
        "startLine": 1516,
        "startChar": 2,
        "endLine": 1517,
        "endChar": 56
      },
      "revId": "25d597bfd1aceca0ac888cb2d35bf88f6c427d5d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}