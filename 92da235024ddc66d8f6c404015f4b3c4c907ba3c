{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "04228db4_fda7de5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-10-01T19:43:37Z",
      "side": 1,
      "message": "Actually the style guide agrees about leaving the name in: https://google.github.io/styleguide/cppguide.html#Function_Declarations_and_Definitions",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f170f28c_86823649",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5087
      },
      "writtenOn": "2024-10-02T07:22:16Z",
      "side": 1,
      "message": "LGTM but to prevent backsliding I think you should add the compiler flag to https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/BUILD.gn;l\u003d300;drc\u003d0fe3a61e5df10a2a30e952ee2bf479667f9b10f6.",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81940982_bab02fe3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T17:42:50Z",
      "side": 1,
      "message": "Adding the warning to the repo build surfaces much more cases (which we probably just weren\u0027t including/reaching in our context)\nI\u0027ll split the changes for multiple CLs and open a proper issue for it.\nIn the last CL I\u0027ll also add in the cflag after I made sure to eliminate all such instances of unused variables.",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94d4abeb_bed53af1",
        "filename": "api/video_codecs/video_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-02T07:59:34Z",
      "side": 1,
      "message": "Does warning still trigger when parameter is unused when function both declaration and definition like here?\nPersonally I found commented out name in declaration less readable.\nBut if compiler still issues a warning, then yes, comment out the name or add the c++17 attribute.",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a5b629d1_a049c2f0",
        "filename": "api/video_codecs/video_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T17:42:50Z",
      "side": 1,
      "message": "Seem like it does. I\u0027m ok with both, but I feel like when the variable might be unused (e.t code is preprocessed out) we should indeed use the annotation, where its clearly unused we should definitely comment out the var name. Its a matter of style and semantics, so up to the conventions of the repo if there are such about this case, and if not - up to you guys.",
      "parentUuid": "94d4abeb_bed53af1",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3cafc95_85661ab3",
        "filename": "api/video_codecs/video_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-02T17:58:09Z",
      "side": 1,
      "message": "style guide recommends comments, not the attribute, so lets keep that.\n\nhttp://go/cstyle#Function_Declarations_and_Definitions\n“Unused parameters that might not be obvious should comment out the variable name in the function definition:”",
      "parentUuid": "a5b629d1_a049c2f0",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "063267dc_adaa87fa",
        "filename": "api/video_codecs/video_encoder.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T18:02:22Z",
      "side": 1,
      "message": "Sounds good.",
      "parentUuid": "d3cafc95_85661ab3",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40d3e8bf_38f861bb",
        "filename": "rtc_base/string_to_number.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-10-01T19:43:37Z",
      "side": 1,
      "message": "extra space (how did git cl format miss that?)",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3fe6e42_b69299be",
        "filename": "rtc_base/string_to_number.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T04:47:46Z",
      "side": 1,
      "message": "Thanks. I guess this might be treated as a comment, so it might not go through clang\u0027s formatting?",
      "parentUuid": "40d3e8bf_38f861bb",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8e11783_9c8ac59a",
        "filename": "rtc_base/string_to_number.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T17:42:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3fe6e42_b69299be",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85cdc925_934bc6a0",
        "filename": "rtc_base/string_to_number.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-02T17:54:53Z",
      "side": 1,
      "message": "new patch set looks missing (forgot to upload?)",
      "parentUuid": "f8e11783_9c8ac59a",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb0e417c_c49867af",
        "filename": "rtc_base/string_to_number.h",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T18:02:22Z",
      "side": 1,
      "message": "Doing so right now, just marked resolved on the fly :P",
      "parentUuid": "85cdc925_934bc6a0",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1772d110_8a95db4b",
        "filename": "rtc_base/synchronization/sequence_checker_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-10-01T19:43:37Z",
      "side": 1,
      "message": "This is an odd construct. What does it do?",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a14b53e_5070eb2f",
        "filename": "rtc_base/synchronization/sequence_checker_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-02T07:59:34Z",
      "side": 1,
      "message": "This is a classic way to suppress unused warning.\nHowever c+17 adds are more readable way: \nhttps://en.cppreference.com/w/cpp/language/attributes/maybe_unused\nHave you consider using that one?\n`ExpecatationToString([[maybe_unused]] const ThreadLikeObject* checker) {`",
      "parentUuid": "1772d110_8a95db4b",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a710f87b_40be9440",
        "filename": "rtc_base/synchronization/sequence_checker_internal.h",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 19769
      },
      "writtenOn": "2024-10-02T17:42:50Z",
      "side": 1,
      "message": "Yeah, the annotation is much better for cases like this. Thanks!",
      "parentUuid": "3a14b53e_5070eb2f",
      "revId": "92da235024ddc66d8f6c404015f4b3c4c907ba3c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}