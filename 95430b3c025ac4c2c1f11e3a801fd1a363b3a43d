{
  "comments": [
    {
      "key": {
        "uuid": "9e075ad2_e67c03be",
        "filename": "api/umametrics.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-02-24T00:35:19Z",
      "side": 1,
      "message": "nit: Describe the meaning of this enum in a comment, like in the CL description",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5e2ed2d_9611acd5",
        "filename": "api/umametrics.h",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-03-01T19:09:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e075ad2_e67c03be",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d782b87_620d6875",
        "filename": "api/umametrics.h",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-02-24T21:17:32Z",
      "side": 1,
      "message": "This is actually a cross product of three different variables:\n- Number of tracks (simple/complex)\n- Whether we end up in plan B or unified plan (or mixed or can\u0027t tell?)\n- Whehter the parameter was plan B or Unified\nI think this needs a clearer explanation, and perhaps a better name.\n\n(I might have chosen to record just the cross product of the first two, we\u0027re\nalready recording the parameter separately).",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4463897_44ee3f36",
        "filename": "api/umametrics.h",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-03-06T06:17:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d782b87_620d6875",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bed51b0_86294b95",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 2072,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-02-24T00:35:19Z",
      "side": 1,
      "message": "Should this be reported per-offer, or per-PeerConnection? Doing it for every offer could skew the stats for applications that do lots of re-offers.",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4eb38a00_bc2ec71e",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 2072,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-02-24T21:17:32Z",
      "side": 1,
      "message": "If this is accumulated using UMA, I think it\u0027s counted only once per browser session anyway.",
      "parentUuid": "4bed51b0_86294b95",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e8ab3f9_710fc7ef",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5797,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-02-24T21:17:32Z",
      "side": 1,
      "message": "As said in the comment on the api uma.h file, I think mixing in the configuration\u0027s sdp_semantics value is a mistake that makes the stats harder to read.\nI see an opposite argument (the variants with explicit settings tell us that app writers know of the incompatibility and are working around it), but I\u0027d really hope that we can get away with very low usage of the flag.",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaff2280_2f66b768",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5797,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-02-27T00:07:30Z",
      "side": 1,
      "message": "We want the metrics to help us answer these questions:\n\nCan we safely change the SdpSemantics default to \"Unified Plan\"?\n\nCan we remove Plan B support?\n\nFor the first question, we can look at SdpCompatibilityDefaultComplexPlanB since those are exactly the cases that would be affected by changing the default. Notably, an application changing to PlanB semantics would no longer log to that particular enum and instead to SdpCompatibilityPlanBComplexPlanB.\n\nFor the second question, we can look at SdpSemanticRequestedPlanB and SdpCompatibility*ComplexPlanB to see how much Plan B is still in the wild.\n\nI think it\u0027s useful to have metrics which can allow us to change the default quicker as I have a hunch Plan B might be around for longer than we hope. At least if the default is Unified Plan then hopefully no new application developer will be tempted to use Plan B.\n\nWdyt?",
      "parentUuid": "9e8ab3f9_710fc7ef",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8158bbac_b1df7fe8",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 5797,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-02-27T19:41:32Z",
      "side": 1,
      "message": "It won\u0027t tell us for sure, because the adaptations can be done in multiple ways:\n- Set the semantics explicitly at offerer (what this will measure)\n- Use a shim to mangle the SDP into a consistent form before it gets to the answerer\n- Use an answerer that adapts to the incoming form of SDP\n\nThe two last ones have the advantage that they can be tested by interoperating with Firefox.\n\nSo SdpSemanticRequestedPlanB will tell us only the number of people who took alternative 1.\n\nBut the three-way cross product generates all the information from the disaggregated stats, so I guess I can live with it. There will be interpretation needed",
      "parentUuid": "aaff2280_2f66b768",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3d456d7_201a8ca6",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 854,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-02-24T00:35:19Z",
      "side": 1,
      "message": "Looks like a half-finished comment",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "933ebead_7af4c611",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 854,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-03-01T19:09:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b3d456d7_201a8ca6",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0cff100_3599770c",
        "filename": "pc/peerconnection_rtp_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1117,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-02-24T21:17:32Z",
      "side": 1,
      "message": "You should check that the other variants are 0 in at least one of these tests. I thought about making a helper function of some kind for this (EXPECT_TRUE(checkMetricX(1, 0, 0, 0) or something like that), but didn\u0027t bother with making more tests.",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f150fe0_5d7e1186",
        "filename": "pc/peerconnection_rtp_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1117,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-03-01T19:09:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e0cff100_3599770c",
      "revId": "95430b3c025ac4c2c1f11e3a801fd1a363b3a43d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}