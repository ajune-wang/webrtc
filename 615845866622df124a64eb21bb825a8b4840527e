{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e16632e6_09b0b512",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-01-20T03:17:59Z",
      "side": 1,
      "message": "I realize this isn\u0027t ideal, I just thought it was convenient that the problem could be fixed using an existing mutex acquisition.\n\nAnother option would be switching to the usrsctp single-threaded mode of operation, using the network thread to process the event loop. Which would eliminate this whole category of race conditions.\n\nThe only trouble is that this prevents using two PeerConnectionFactories with different network threads. So we\u0027d have to make this optional, and enable it for clients that are guaranteed to only use one PeerConnectionFactory like chromium. Given that this is something we probably want to do anyway to insulate against new race conditions, should I just scrap this CL and pursue that route?",
      "revId": "615845866622df124a64eb21bb825a8b4840527e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d385a119_51a696b5",
        "filename": "media/sctp/sctp_transport.cc",
        "patchSetId": 6
      },
      "lineNbr": 215,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-01-20T03:17:59Z",
      "side": 1,
      "message": "Had to move this out of the anonymous namespace to make it a friend so it could access task_safety_... The only thing that actually changed was this comment and PostToTransportThread.",
      "revId": "615845866622df124a64eb21bb825a8b4840527e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}