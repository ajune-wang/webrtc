{
  "comments": [
    {
      "key": {
        "uuid": "e23c8c6e_7c8ad602",
        "filename": "common_video/h264/h264_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-11-28T11:46:59Z",
      "side": 1,
      "message": "can we add a static assert somewhere in this loop that guarantees that kNaluShortStartSequenceSize is \u003e\u003d 2? Just want to make sure we never attempt to read beyond buffer boundaries.",
      "revId": "a9834b24bf555a7aca0e713f243aa9aabd6a1ce6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d666b2e5_54020cd1",
        "filename": "common_video/h264/h264_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 7223
      },
      "writtenOn": "2019-11-28T23:38:02Z",
      "side": 1,
      "message": "Sure, would checking before the for loop appropriate?",
      "parentUuid": "e23c8c6e_7c8ad602",
      "revId": "a9834b24bf555a7aca0e713f243aa9aabd6a1ce6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d62abe2_6848e8c7",
        "filename": "common_video/h264/h264_common.cc",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-11-29T10:17:52Z",
      "side": 1,
      "message": "if we use a static assert (which is what I\u0027d prefer), then it doesn\u0027t matter where the check is done since it\u0027ll be done at compile time. The placement would basically be where it\u0027s most useful from a readability standpoint.\n\nSee an example here:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/rtc_base/numerics/safe_minmax.h?q\u003dstatic_assert+webrtc\u0026sq\u003dpackage:chromium\u0026l\u003d119\u0026dr\u003dCSs",
      "parentUuid": "d666b2e5_54020cd1",
      "revId": "a9834b24bf555a7aca0e713f243aa9aabd6a1ce6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}