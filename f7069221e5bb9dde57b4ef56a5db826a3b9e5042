{
  "comments": [
    {
      "key": {
        "uuid": "6c9df103_f0d750a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-27T13:29:13Z",
      "side": 1,
      "message": "Seems reasonable, but every time I see a new variable added without RTC_GUARDED_BY, I get nervous.\n",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9dd771cf_970d79a7",
        "filename": "pc/peer_connection_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-27T13:29:13Z",
      "side": 1,
      "message": "What are the threading assumptions for this variable? Can we document them using RTC_GUARDED_BY?",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a0b146e_fe5ddc21",
        "filename": "pc/peer_connection_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-27T23:32:51Z",
      "side": 1,
      "message": "It\u0027s passed into the BasicNetworkManager on the signaling thread, but actually used to construct a monitor on the network thread. So a RTC_GUARDED_BY(signaling_thread) here would be misleading.\n\nI could add an RTC_GUARDED_BY to BasicNetworkManager, but it expects everything to be called on the same thread (and enforces this with DCHECKs already), so I think adding RTC_GUARDED_BY for every member would be redundant.",
      "parentUuid": "9dd771cf_970d79a7",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bc9996e_2b5c6b2f",
        "filename": "pc/peer_connection_factory.h",
        "patchSetId": 4
      },
      "lineNbr": 116,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-29T10:12:26Z",
      "side": 1,
      "message": "Hm. That\u0027s one reason I like RTC_GUARDED_BY: It forces you to do RTC_DCHECK_RUNS_ON(thread) instead of RTC_DCHECK(signaling_thread-\u003eIsCurrent()) (the way it\u0027s currently written), which allows static analysis of the requirement, and documents exactly that the requirement is linked to access to variables.\n\nMaking this RTC_GUARDED_BY would mean that the pointer is accessed only according to a given rule; what the pointed-to object is doing is not policed by RTC_GUARDED_BY. If anyone\u0027s misled by that, it means that they need to study the semantics of RTC_GUARDED_BY more carefully.\n\nI\u0027m happy to guard things one at a time; my experience shows that once we start guarding, we uncover stuff that is accessed on multiple threads, and sorting that out can take significant time, so I\u0027m happy to leave the \"guard everything\" part to another CL.\n\nA good alternative to guarding it might be to declare it const (std::unique_ptr\u003crtc::NetworkMonitorFactory\u003e const), which means that it\u0027s only written to at initialization, and never updated; in that case, multithread access is not a problem, and the lifetime of the network monitor factory is documented as being permanently locked to the lifetime of the PeerConnectionFactory, which I think is what you want anyway.",
      "parentUuid": "1a0b146e_fe5ddc21",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3ab50eb_5c0f15bd",
        "filename": "rtc_base/network.cc",
        "patchSetId": 4
      },
      "lineNbr": 835,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-29T10:12:26Z",
      "side": 1,
      "message": "And which thread is this statement being executed on?",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4d19aa8_f402e950",
        "filename": "sdk/android/src/jni/pc/peer_connection_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-07-27T13:29:13Z",
      "side": 1,
      "message": "Can you rephrase the comment? I can\u0027t parse it.\n\"If options-\u003edisable_network_monitor is set to true, don\u0027t make a network_monitor_factory\" should do it, if i read the code right. But the code already shows that, so perhaps the comment isn\u0027t needed?",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38fd33e3_3c302cee",
        "filename": "sdk/android/src/jni/pc/peer_connection_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-07-27T23:32:51Z",
      "side": 1,
      "message": "I agree, code is self explanatory",
      "parentUuid": "e4d19aa8_f402e950",
      "revId": "f7069221e5bb9dde57b4ef56a5db826a3b9e5042",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}