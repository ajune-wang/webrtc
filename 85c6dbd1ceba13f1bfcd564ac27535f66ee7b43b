{
  "comments": [
    {
      "key": {
        "uuid": "c521f8d7_3571f7e3",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-01-22T10:00:28Z",
      "side": 1,
      "message": "I actually don\u0027t quite know whether first_packet is equally good as last_packet or any different.",
      "range": {
        "startLine": 106,
        "startChar": 6,
        "endLine": 106,
        "endChar": 18
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "449e994a_8afb0b36",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 8392
      },
      "writtenOn": "2020-01-22T10:07:46Z",
      "side": 1,
      "message": "Earlier (i.e. `first_packet`) is better for the interpolation code on the receiver side.",
      "parentUuid": "c521f8d7_3571f7e3",
      "range": {
        "startLine": 106,
        "startChar": 6,
        "endLine": 106,
        "endChar": 18
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b7afa6_10053253",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-01-22T10:21:04Z",
      "side": 1,
      "message": "I prefer the 1st packet over the last packet\n(because receiver can sooner use this information. in particular it avoids situation where it got 1st packet, but has to postpone handling it because extra details about the packet [timestamp mapping] is located in a later packet)",
      "parentUuid": "c521f8d7_3571f7e3",
      "range": {
        "startLine": 106,
        "startChar": 6,
        "endLine": 106,
        "endChar": 18
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c064b2c7_3761362c",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video.cc",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-01-22T10:43:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e0b7afa6_10053253",
      "range": {
        "startLine": 106,
        "startChar": 6,
        "endLine": 106,
        "endChar": 18
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f5088bd_029c31bc",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 620,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-01-22T10:21:04Z",
      "side": 1,
      "message": "I guess it is safe to assume no packets are sent before test started.\nso for simplicitly may be use constant 0 instead of index_old",
      "range": {
        "startLine": 620,
        "startChar": 0,
        "endLine": 620,
        "endChar": 50
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "54bf474f_324e0b37",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 620,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-01-22T10:43:50Z",
      "side": 1,
      "message": "yes, I just wanted to make it a bit more general and readable. But I think we can make it simpler as you suggested. With this thought, I would make it even cleaner. PTAL at the new patch that uses for-each.",
      "parentUuid": "0f5088bd_029c31bc",
      "range": {
        "startLine": 620,
        "startChar": 0,
        "endLine": 620,
        "endChar": 50
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e68007b7_c96ca4ca",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-01-22T10:21:04Z",
      "side": 1,
      "message": "may be to make expectation clearer, make it int instead:\nint packets_with_abs_capture_time \u003d 0;\n...\nif (absolute_capture_time) {\n  ++packets_with_abs_capture_time;\n}\n...\nEXPECT_EQ(packets_with_abs_capture_time, 1);",
      "range": {
        "startLine": 630,
        "startChar": 2,
        "endLine": 630,
        "endChar": 38
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93ea89d2_c8e1cce7",
        "filename": "modules/rtp_rtcp/source/rtp_sender_video_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 630,
      "author": {
        "id": 7015
      },
      "writtenOn": "2020-01-22T10:43:50Z",
      "side": 1,
      "message": "sure",
      "parentUuid": "e68007b7_c96ca4ca",
      "range": {
        "startLine": 630,
        "startChar": 2,
        "endLine": 630,
        "endChar": 38
      },
      "revId": "85c6dbd1ceba13f1bfcd564ac27535f66ee7b43b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}