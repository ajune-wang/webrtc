{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f1da1c08_d8f75be0",
        "filename": "system_wrappers/source/clock.cc",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-02-23T09:14:47Z",
      "side": 0,
      "message": "As I understand it, CurrentTimeVal is expected to produce wall-clock time, and then using SystemTimeNanos looks plain wrong.\n\nAr you confident the windows version below works as is on winuwp? This looks like a partial revert of https://webrtc-review.googlesource.com/c/src/+/110570, and I imagine there were some reason for adding the winuwp-specific code back then.",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 105,
        "endChar": 2
      },
      "revId": "09226fc8326316bf7c05df5793aab39cfe1ac660",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "565029ee_cdfdded9",
        "filename": "system_wrappers/source/clock.cc",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 7641
      },
      "writtenOn": "2021-02-23T11:44:08Z",
      "side": 0,
      "message": "I\u0027m not confident about that. The current implementation for WIN_UWP relies on SystemTimeNanos() being synced at initialization with the wall clock. Since I\u0027m working on replacing SystemTimeNanos() when built with Chromium that assumption will break.\n\nTo not break anything for WIN_UWP I will replace the call to SystemTimeNanos() with a call to TimeHelper::TicksNs() which is what SystemTimeNanos() currently does for WIN_UWP.",
      "parentUuid": "f1da1c08_d8f75be0",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 105,
        "endChar": 2
      },
      "revId": "09226fc8326316bf7c05df5793aab39cfe1ac660",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "028760c8_34afd398",
        "filename": "system_wrappers/source/clock.cc",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-02-23T12:09:14Z",
      "side": 0,
      "message": "Sounds like a reasonable plan. Setting offset at initialization sounds brittle to me, but no worse than the existing code.",
      "parentUuid": "565029ee_cdfdded9",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 105,
        "endChar": 2
      },
      "revId": "09226fc8326316bf7c05df5793aab39cfe1ac660",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}