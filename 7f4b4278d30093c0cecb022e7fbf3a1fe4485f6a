{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d4d2b2db_2a057db0",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-02-16T16:22:41Z",
      "side": 1,
      "message": "Not sure if this is necessary. Until we are in a decodable state we will make KF requests every 200 ms (when the decoder can\u0027t get a decodable frame out of the FrameBuffer).\n\nI also suspect this could cause bursts of KF requests (several delta frames before a KF), I think it should be throttled to avoid that.",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 23
      },
      "revId": "7f4b4278d30093c0cecb022e7fbf3a1fe4485f6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c409aa91_fcd33bb2",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-18T12:24:00Z",
      "side": 1,
      "message": "would decoder still request KF if it never seen a single frame?\n\nI see code (in this class) to request KF when\na) H264 packet looks like a delta frame when KF is expected.\nb) a delta frame assembled before any KF.\nThis new check is aligned with these two scenarios.\n\n(But yep, look like there is no key frame request throttling. let me add it).",
      "parentUuid": "d4d2b2db_2a057db0",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 23
      },
      "revId": "7f4b4278d30093c0cecb022e7fbf3a1fe4485f6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b966058_90b9400f",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-02-18T12:51:35Z",
      "side": 1,
      "message": "There is throttling on the receive side though?\nIt would be nice if we could switch to fir instead of pli (today I think we always send pli even if fir is negotiated), since fir has request deduplication built in.",
      "parentUuid": "c409aa91_fcd33bb2",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 23
      },
      "revId": "7f4b4278d30093c0cecb022e7fbf3a1fe4485f6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7ee9d15_0f2a81da",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-02-18T13:07:32Z",
      "side": 1,
      "message": "Even though there is throttling on the receive side, it is still a bad idea to send back an rtcp packet with PLI/FIR on every incoming rtp packet [until KF]\n\n(replacing pli with fir is one-line change, but by itself unlikely adds any value.\nusing fir deduplication - that is more involved, RtcpTransciver has it implemented, RtpRtcp lacks that functionality).",
      "parentUuid": "3b966058_90b9400f",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 23
      },
      "revId": "7f4b4278d30093c0cecb022e7fbf3a1fe4485f6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae9b5f92_1626dcd4",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5524
      },
      "writtenOn": "2021-02-18T13:32:28Z",
      "side": 1,
      "message": "Ah, yeah doing it per packet sounds like a bad thing.\nAnd yes, FIR wouldn\u0027t be entirely trivial especially considering potential compatibility/specs/api issues.\nAdding some simple throttling on the send side sounds good.",
      "parentUuid": "b7ee9d15_0f2a81da",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 23
      },
      "revId": "7f4b4278d30093c0cecb022e7fbf3a1fe4485f6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02f25b80_87021585",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 3
      },
      "lineNbr": 381,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-02-18T14:10:36Z",
      "side": 1,
      "message": "\u003e would decoder still request KF if it never seen a single frame?\n\nYes, as long as there are incoming packets on the stream (last 5 seconds) it is considered active, so a KF request will be sent.\n\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/video/video_receive_stream2.cc;l\u003d743;drc\u003d8408c9938cb543a7cd5e7127927f3b4d0834ad59\n\nDon\u0027t think this KF request is necessary (sorry for late reply).",
      "parentUuid": "ae9b5f92_1626dcd4",
      "range": {
        "startLine": 381,
        "startChar": 8,
        "endLine": 381,
        "endChar": 23
      },
      "revId": "7f4b4278d30093c0cecb022e7fbf3a1fe4485f6a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}