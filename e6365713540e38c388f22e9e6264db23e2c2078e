{
  "comments": [
    {
      "key": {
        "uuid": "f8036b54_b7683021",
        "filename": "api/video/encoded_image.h",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-12-03T11:46:45Z",
      "side": 1,
      "message": "Maybe use an ArrayView instead?",
      "range": {
        "startLine": 104,
        "startChar": 18,
        "endLine": 104,
        "endChar": 50
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "654fe15f_10c0e459",
        "filename": "api/video/encoded_image.h",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-12-03T13:54:19Z",
      "side": 1,
      "message": "What about length? Does it really make sense to retain its old value here?",
      "parentUuid": "f8036b54_b7683021",
      "range": {
        "startLine": 104,
        "startChar": 18,
        "endLine": 104,
        "endChar": 50
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bb20d81_5ad5fb78",
        "filename": "api/video/encoded_image.h",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-03T14:11:53Z",
      "side": 1,
      "message": "I think there was one call site that grew the size and copied the old contents; in that case leaving _length unchanged makes sense.\n\nAnd I think ArrayView would be confusing, since the callee retains saves the pointer. Passing a raw pointer at least signals that this is old code possibly using now discouraged conventions.",
      "parentUuid": "654fe15f_10c0e459",
      "range": {
        "startLine": 104,
        "startChar": 18,
        "endLine": 104,
        "endChar": 50
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b68149a2_ac310f19",
        "filename": "api/video/encoded_image.h",
        "patchSetId": 4
      },
      "lineNbr": 104,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-04T09:13:19Z",
      "side": 1,
      "message": "I\u0027m afraid I need to land a cl just adding this set_buffer method, to be able to migrate downstream code that currently assigns to _size.\n\nSince the comment on this class says \"Direct use of its members is strongly discouraged.\", I think it\u0027s reasonable to land cleanups like this without any PSA.",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 104,
        "endChar": 53
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "615783d5_19957898",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 5524
      },
      "writtenOn": "2018-12-03T15:49:10Z",
      "side": 1,
      "message": "nit: const?",
      "range": {
        "startLine": 119,
        "startChar": 4,
        "endLine": 119,
        "endChar": 10
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86ba1c79_ebed81c8",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 119,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-04T08:04:43Z",
      "side": 1,
      "message": "\u003e nit: const?\n\nNo, it\u0027s re-assigned on line 127, below. (I find this allocation logic a bit odd, trying to use the unencoded size, but this cl is not the place to change that).",
      "parentUuid": "615783d5_19957898",
      "range": {
        "startLine": 119,
        "startChar": 4,
        "endLine": 119,
        "endChar": 10
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d698fdf0_96cbd325",
        "filename": "modules/video_coding/codecs/h264/h264_encoder_impl.cc",
        "patchSetId": 4
      },
      "lineNbr": 303,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-04T08:04:43Z",
      "side": 1,
      "message": "This one can be const, though. Adding.",
      "range": {
        "startLine": 303,
        "startChar": 4,
        "endLine": 303,
        "endChar": 10
      },
      "revId": "e6365713540e38c388f22e9e6264db23e2c2078e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}