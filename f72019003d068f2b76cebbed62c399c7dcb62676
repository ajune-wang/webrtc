{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a1642404_07120442",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-25T15:34:59Z",
      "side": 1,
      "message": "Please take a look, Victor",
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd1420f0_49944f1e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 12215
      },
      "writtenOn": "2022-01-26T09:11:20Z",
      "side": 1,
      "message": "Generally looks good, but a few questions about the API",
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ce5f173_d026ea89",
        "filename": "net/dcsctp/public/timeout.h",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 12215
      },
      "writtenOn": "2022-01-26T09:11:20Z",
      "side": 1,
      "message": "Having it as a settable property would allow it to be changed at any time. That\u0027s probably something we don\u0027t need to do, and nothing we would need to test, so an alternative is to have it provided at the Timer\u0027s constructor. \n\nTimers are created at DcSctpSocketCallbacks::CreateTimeout, so please consider adding a new method there, CreateTimerWithPrecision, that has that additional precision argument. Make that method virtual and provide a default implementation that just \"return CreateTimeout;\", to allow clients to stay backwards compatible.",
      "range": {
        "startLine": 32,
        "startChar": 15,
        "endLine": 32,
        "endChar": 34
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a690613f_cae8fcfb",
        "filename": "net/dcsctp/public/timeout.h",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-26T11:26:31Z",
      "side": 1,
      "message": "That makes a lot of sense, done. I didn\u0027t see the need to keep the old signature though, so I just added the argument and kept the old name.",
      "parentUuid": "6ce5f173_d026ea89",
      "range": {
        "startLine": 32,
        "startChar": 15,
        "endLine": 32,
        "endChar": 34
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75e44c27_0a758af8",
        "filename": "net/dcsctp/public/timeout.h",
        "patchSetId": 12
      },
      "lineNbr": 32,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-26T12:21:02Z",
      "side": 1,
      "message": "Ah, looks like an internal dependency needs to be updated. Added some default impls that can be removed in a follow-up after the dependency has updated.",
      "parentUuid": "a690613f_cae8fcfb",
      "range": {
        "startLine": 32,
        "startChar": 15,
        "endLine": 32,
        "endChar": 34
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c1ca1fd_535231eb",
        "filename": "net/dcsctp/timer/task_queue_timeout.h",
        "patchSetId": 12
      },
      "lineNbr": 48,
      "author": {
        "id": 12215
      },
      "writtenOn": "2022-01-26T09:11:20Z",
      "side": 1,
      "message": "Continuing the discussion from timeout.h, if the precision was provided here instead (feel free to add a default for backwards compatibility), you would avoid the setter.",
      "range": {
        "startLine": 48,
        "startChar": 41,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17ca747a_fff95105",
        "filename": "net/dcsctp/timer/task_queue_timeout.h",
        "patchSetId": 12
      },
      "lineNbr": 48,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-26T11:26:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c1ca1fd_535231eb",
      "range": {
        "startLine": 48,
        "startChar": 41,
        "endLine": 48,
        "endChar": 42
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "533caa9f_80cb7320",
        "filename": "net/dcsctp/timer/timer.h",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 12215
      },
      "writtenOn": "2022-01-26T09:11:20Z",
      "side": 1,
      "message": "I think we would want to put this in TimerOptions. WDYT?",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 187,
        "endChar": 53
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1734cec_85e72578",
        "filename": "net/dcsctp/timer/timer.h",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-26T11:26:31Z",
      "side": 1,
      "message": "I\u0027ll let you decide this one.\n\nI updated as suggested and moved the precision into TimerOptions. But note that the options.precision is passed into the Timeout constructor now, whereas the rest of the options are passed into the Timer constructor. The Timer never looks at options.precision. That could be considered an \"implementation detail\" and not matter, or it could ba sign of mixing of which layers the data belongs to.",
      "parentUuid": "533caa9f_80cb7320",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 187,
        "endChar": 53
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16008350_b39b1fc1",
        "filename": "net/dcsctp/timer/timer.h",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-26T11:32:58Z",
      "side": 1,
      "message": "It does make for a nicer API when calling CreateTimer() though. From the outside looking in it does seem like a timer option (the timeout thing being just an implementation detail)",
      "parentUuid": "a1734cec_85e72578",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 187,
        "endChar": 53
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8909e116_a33d050d",
        "filename": "net/dcsctp/timer/timer.h",
        "patchSetId": 12
      },
      "lineNbr": 187,
      "author": {
        "id": 12215
      },
      "writtenOn": "2022-01-26T12:46:25Z",
      "side": 1,
      "message": "I think this looks good. Thanks!",
      "parentUuid": "16008350_b39b1fc1",
      "range": {
        "startLine": 186,
        "startChar": 6,
        "endLine": 187,
        "endChar": 53
      },
      "revId": "f72019003d068f2b76cebbed62c399c7dcb62676",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}