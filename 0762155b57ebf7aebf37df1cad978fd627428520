{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5d94956e_65f0bb03",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-03T08:40:43Z",
      "side": 1,
      "message": "chromium:371054866\n\n(to avoid extra redirect)",
      "range": {
        "startLine": 9,
        "startChar": 5,
        "endLine": 9,
        "endChar": 11
      },
      "revId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f6c55b38_fc30cb96",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-03T06:44:45Z",
      "side": 1,
      "message": "Newbie mistake from my side. I was rewriting the payload and then using ArrayViews pointing to the previous payload for doing the rest of the parsing.\n\nThis changes delays the modification of the payload until the parsing is done.",
      "revId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "162bfc03_fb91fc29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-03T06:46:33Z",
      "side": 1,
      "message": "This could be further improved by allowing to move the Buffer to the rtc::CopyOnWriteBuffer, not sure if you would like me to add that as well in this CL.",
      "revId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bbb0497_67879bae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-03T07:00:38Z",
      "side": 1,
      "message": "Can output_buffer have type CopyOnWriteBuffer instead?",
      "parentUuid": "162bfc03_fb91fc29",
      "revId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b94decbc_4d14c313",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-03T07:08:27Z",
      "side": 1,
      "message": "unfortunately it doesn\u0027t seem possible as the SpsVuiRewriter::ParseAndRewriteSps() requires an rtc::Buffer for outputting data",
      "parentUuid": "7bbb0497_67879bae",
      "revId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d992122_7770557f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-03T08:40:43Z",
      "side": 1,
      "message": "The linked issue still reproduces with this patch",
      "revId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a webrtc committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-webrtc-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-webrtc-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,user=non_uploader","uploaderin:cria/project-webrtc-committers","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0762155b57ebf7aebf37df1cad978fd627428520",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}