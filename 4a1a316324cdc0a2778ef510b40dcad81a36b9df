{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c786b599_3914ddda",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 2
      },
      "lineNbr": 632,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-01-02T12:42:01Z",
      "side": 1,
      "message": "prefer to write the type explicitly here.\n\nhttps://google.github.io/styleguide/cppguide.html#Type_deduction\n\"Do not use it merely to avoid the inconvenience of writing an explicit type.‚Äù",
      "range": {
        "startLine": 632,
        "startChar": 2,
        "endLine": 632,
        "endChar": 6
      },
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d0422472_bca61f22",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 2
      },
      "lineNbr": 632,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-01-02T13:48:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c786b599_3914ddda",
      "range": {
        "startLine": 632,
        "startChar": 2,
        "endLine": 632,
        "endChar": 6
      },
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba7befd7_2fb39438",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 2
      },
      "lineNbr": 636,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-01-02T12:42:01Z",
      "side": 1,
      "message": "AllocateExtension either returns empty buffer, or buffer of the asked size (i.e. data.size()), so this memset would always be noop",
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1fd697b_f8229fa4",
        "filename": "modules/rtp_rtcp/source/rtp_packet.cc",
        "patchSetId": 2
      },
      "lineNbr": 636,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-01-02T13:48:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba7befd7_2fb39438",
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "829c00d9_8b0e9506",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-01-02T12:42:01Z",
      "side": 1,
      "message": "I do not understand motivation for this helper, do you have an example how do you plan to use it?\nCould it be simpler to use AllocateExtension directly?",
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5d0eacd_e5163e85",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-01-02T13:48:28Z",
      "side": 1,
      "message": "Maybe should have kept this CL in the relation chain, but here [1] is the motivation for this function. I also wonder if this should be the primary function for setting extensions on an RTP packet (template functions increasing binary size for example). I realize the `RTPExtensionType` should be changed to an `int` in that case.\n\n[1] https://webrtc-review.googlesource.com/c/src/+/289984/1/logging/rtc_event_log/rtc_event_log2rtp_dump.cc#167",
      "parentUuid": "829c00d9_8b0e9506",
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7c20938_a6ba6d69",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-01-02T14:33:34Z",
      "side": 1,
      "message": "it might be the primary function for setting the extension, but there is still a question what is the best way to identify the extension type.\nReplacing `enum RTPExtensionType` with a raw `int` looks very questionable to me;\nbut it might be `int extension_id` instead: when there is raw representation, there is no need for the RtpPacket to know which exactly this extension is.",
      "parentUuid": "f5d0eacd_e5163e85",
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fce76a64_b82e3117",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5527
      },
      "writtenOn": "2023-01-02T15:40:15Z",
      "side": 1,
      "message": "Not really for this CL, but I feel like having an RTP packet know about negotiated extensions (`ExtensionManager`) is a case of attaching some information to a class that shouldn\u0027t really have to care about.\n\nI get that `HasExtension\u003cSomeExtension\u003e` and `GetExtension\u003cSomeExtension\u003e` is convenient, but for that to work you still have to know what was negotiated. That\u0027s why I suggest maybe we should use an `int` (the negotiated ID) directly, that way the RTP packet wont have to have a `ExtensionManager` and there is no confusion between `SomeExtension::kId` and the negotiated ID.",
      "parentUuid": "e7c20938_a6ba6d69",
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0da7136_a427105f",
        "filename": "modules/rtp_rtcp/source/rtp_packet_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1250,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-01-02T12:42:01Z",
      "side": 1,
      "message": "unrelated to this CL, but probably we should introduce and use name kRtpExtensionDependencyDescriptor\n(DD has the official finialized spec, it is no longer an intermediate version of the GFD)\n\nI\u0027ll create something",
      "range": {
        "startLine": 1250,
        "startChar": 22,
        "endLine": 1250,
        "endChar": 59
      },
      "revId": "4a1a316324cdc0a2778ef510b40dcad81a36b9df",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}