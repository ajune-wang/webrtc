{
  "comments": [
    {
      "key": {
        "uuid": "d5e8af58_ef2099aa",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 11
      },
      "lineNbr": 254,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-02-10T15:15:46Z",
      "side": 1,
      "message": "Nit: EncoderBuffers is perhaps not the right type for this name.\n\nMaybe GenericDescriptorFromFrameInfo (if we don\u0027t want to be overly verbose and say GenericDescriptorInfoFromGenericFrameInfo).",
      "range": {
        "startLine": 254,
        "startChar": 18,
        "endLine": 254,
        "endChar": 43
      },
      "revId": "64905b20ebc7c136d12160c9762a27c8adaef5f7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c635e5e1_3ee46ef4",
        "filename": "call/rtp_payload_params.cc",
        "patchSetId": 11
      },
      "lineNbr": 254,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-02-10T15:28:27Z",
      "side": 1,
      "message": "Done.\n\n[but can I use name \u0027GenericFromGeneric\u0027? (not to be confused with GenericToGeneric function that does something different and not as generic) \nor is it too generic?]",
      "parentUuid": "d5e8af58_ef2099aa",
      "range": {
        "startLine": 254,
        "startChar": 18,
        "endLine": 254,
        "endChar": 43
      },
      "revId": "64905b20ebc7c136d12160c9762a27c8adaef5f7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}