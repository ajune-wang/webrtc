{
  "comments": [
    {
      "key": {
        "uuid": "78877d7d_179cebad",
        "filename": "pc/channel.h",
        "patchSetId": 10
      },
      "lineNbr": 145,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "nit: I suggest either SignalFirstPacketReceived_ (e.g. https://codesearch.chromium.org/chromium/src/third_party/webrtc/pc/peerconnection.h?l\u003d231\u0026rcl\u003de769ed90c3599a131166d5a61625c1b64318fb91) or signal_first_packet_received_.",
      "range": {
        "startLine": 145,
        "startChar": 11,
        "endLine": 145,
        "endChar": 37
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba955223_d71d3b3b",
        "filename": "pc/channel.h",
        "patchSetId": 10
      },
      "lineNbr": 145,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "using this: SignalFirstPacketReceived_",
      "parentUuid": "78877d7d_179cebad",
      "range": {
        "startLine": 145,
        "startChar": 11,
        "endLine": 145,
        "endChar": 37
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fa38f4c_745362f8",
        "filename": "pc/channel.h",
        "patchSetId": 10
      },
      "lineNbr": 191,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "unnecessary comment",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5d01f75_05aeb745",
        "filename": "pc/channel.h",
        "patchSetId": 10
      },
      "lineNbr": 191,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "Removed and i agree that in this case it doesn\u0027t add (any?) value.\nI would like to see some \u0027standard\u0027 in that all (at least public) methods have documentation (even trivial).\nIs that something we can work on going forward, or is it against some coding guideline?",
      "parentUuid": "5fa38f4c_745362f8",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef5146b3_cce164d4",
        "filename": "pc/channel.h",
        "patchSetId": 10
      },
      "lineNbr": 191,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-13T21:32:44Z",
      "side": 1,
      "message": "I think moving forward we should definitely have all public functions have documentation. Although for getters/setters I don\u0027t know if it\u0027s necessary. In this case having a comment above the member variable itself seems sufficient. I would also argue that overrides don\u0027t need documentation except the specifics of the override (you can look in the base class for the initial comment). I see this is actually mentioned in the style guide:\nhttps://google.github.io/styleguide/cppguide.html#Function_Comments",
      "parentUuid": "d5d01f75_05aeb745",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4da32cef_99a88160",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "I would say most of these comments could be omitted since they aren\u0027t adding much explanation.\n\nAlternatively, they could be elaborated more. There\u0027s some suggestions in the style guide: https://google.github.io/styleguide/cppguide.html#Function_Comments",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "203752b7_d189e79d",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "Related to other comment on having all methods documented. I think i\u0027m still missing some documentation standard in c++ (like javadoc, or c# doc, etc.).\nI will leave these as is for now in this file (in the base channel class i removed some comments), because the file is small and still fits on a screen. I\u0027m hopeful, that these comments can be improved rather than removed.\nLet me know if you feel otherwise.",
      "parentUuid": "4da32cef_99a88160",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "952deee2_9f48621d",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 5800
      },
      "writtenOn": "2018-11-13T21:32:44Z",
      "side": 1,
      "message": "My thoughts (Steve\u0027s might be different).\n-I think the getter comments that state the obvious should be removed. From the style guide: \"comments may be omitted only if the function is simple and obvious (e.g. simple accessors for obvious properties of the class)....do not be unnecessarily verbose or state the completely obvious\"\n-Enable() could probably be expanded - \"what does enabling do?\" I think \"Enables or disables the channel.\" doesn\u0027t add anything.\n-SetLocalContent/SetRemoteContent could probably also be expanded. \"Channel control\" doesn\u0027t help much (I know this was the previous comment so I understand if you don\u0027t want to change this now).\n\nAlso, I haven\u0027t seen the same type of documentation standard like javadoc for c++ :(.",
      "parentUuid": "203752b7_d189e79d",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68416b5f_83242e16",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T22:22:56Z",
      "side": 1,
      "message": "removed the obvious comments.\nI\u0027m not sure about the documentation of Enable and SetLocal/RemoteContent as i am not sure what these do. documentation was just copied from original.",
      "parentUuid": "952deee2_9f48621d",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6884317_703be90c",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-14T00:06:56Z",
      "side": 1,
      "message": "I think what you have now looks good. Looks like some of the comments BaseChannel were low quality themselves, but I won\u0027t burden this change with improving them.",
      "parentUuid": "68416b5f_83242e16",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcc3e330_56c77ba4",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 59,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "This is a more helpful comment but breaks abstraction by listing all the subclasses of RtpTransportInternal.",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a49141b_1057ec8d",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 59,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "agree, this should be stated as an example and not to be taken as a comprehensive list. i will modify the text to express that.\nideally, this should be a pointer to an interface rather than an internal class, but that requires a different refactor.\n\n  // Set an RTP level transport.\n  // Some examples:\n  //   * An RtpTransport without encryption.\n  //   * An SrtpTransport for SDES.\n  //   * A DtlsSrtpTransport for DTLS-SRTP.",
      "parentUuid": "fcc3e330_56c77ba4",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8af72b7b_738a344e",
        "filename": "pc/channelinterface.h",
        "patchSetId": 10
      },
      "lineNbr": 59,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-14T00:06:56Z",
      "side": 1,
      "message": "Just realized these were all copied from BaseChannel -- anyways, thanks for improving it :)",
      "parentUuid": "8a49141b_1057ec8d",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e971242_9a238bb1",
        "filename": "pc/peerconnection.h",
        "patchSetId": 10
      },
      "lineNbr": 925,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "ChannelInterface?",
      "range": {
        "startLine": 925,
        "startChar": 24,
        "endLine": 925,
        "endChar": 35
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66ab14a1_8b013e11",
        "filename": "pc/peerconnection.h",
        "patchSetId": 10
      },
      "lineNbr": 925,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "Done. also renamed method to DestroyChannelInterface",
      "parentUuid": "8e971242_9a238bb1",
      "range": {
        "startLine": 925,
        "startChar": 24,
        "endLine": 925,
        "endChar": 35
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aec025e3_5304244e",
        "filename": "pc/rtpreceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 272,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "One significant drawback of this approach is that we lose type safety between voice/video media channels.\n\nActually, I remember now changing it from a generic SetMediaChannel to separate SetVoiceMediaChannel/SetVideoMediaChannel: https://webrtc-review.googlesource.com/c/src/+/49580/7/pc/rtpsender.h\n\nMaybe we should talk about the pros/cons :)",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b77b3351_c254c6f8",
        "filename": "pc/rtpreceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 272,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "we can talk about the pros and cons. there was no type safety before hand, there was a runtime check that you didn\u0027t call the wrong method, but nothing prevented you from doing the wrong cast and calling the right method.\nI added a media_type() to the MediaChannel so now this method also DCHECKS that the media types match.",
      "parentUuid": "aec025e3_5304244e",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "799ef124_fd1cce14",
        "filename": "pc/rtpreceiver.cc",
        "patchSetId": 10
      },
      "lineNbr": 272,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-14T00:06:56Z",
      "side": 1,
      "message": "Talked about it offline and came to the conclusion that neither approach is great but we\u0027ll try it this way.",
      "parentUuid": "b77b3351_c254c6f8",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c2d6627_33b21c85",
        "filename": "pc/rtptransceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "Can omit this and just use TEST(",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4484cbe1_2085c428",
        "filename": "pc/rtptransceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 21,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "Nice!",
      "parentUuid": "1c2d6627_33b21c85",
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b10e0743_8a0de311",
        "filename": "pc/rtptransceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "I\u0027d suggest adding a using at the top of the file for all the testing::XXX classes used. It can make the test body a bit more readable.",
      "range": {
        "startLine": 29,
        "startChar": 22,
        "endLine": 29,
        "endChar": 31
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f327b0c3_59786718",
        "filename": "pc/rtptransceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 29,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b10e0743_8a0de311",
      "range": {
        "startLine": 29,
        "startChar": 22,
        "endLine": 29,
        "endChar": 31
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5636d017_9493c4de",
        "filename": "pc/rtptransceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-11-13T05:40:23Z",
      "side": 1,
      "message": "Use EXPECT_EQ unless the test would crash if the assertion was false.",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 11
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83337a0b_89140e55",
        "filename": "pc/rtptransceiver_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 34,
      "author": {
        "id": 8244
      },
      "writtenOn": "2018-11-13T18:56:41Z",
      "side": 1,
      "message": "changed all to EXPECT_EQ. not sure what you mean unless test would crash.\ndo you mean that EXPECT_EQ will allow the test to continue vs. ASSERT_EQ which would stop the test? if so, then i will probably need to put ASSERT_EQ because once something fails in the test, the rest of the execution is invalid.",
      "parentUuid": "5636d017_9493c4de",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 11
      },
      "revId": "998e913df86bb80140c555f1db41a3080c2ea82c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}