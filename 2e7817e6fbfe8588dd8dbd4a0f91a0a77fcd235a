{
  "comments": [
    {
      "key": {
        "uuid": "00d8b9fc_a0378853",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 1
      },
      "lineNbr": 1001,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-05-03T09:24:17Z",
      "side": 1,
      "message": "Would it work to to add a default implementation here? inline, unless we want to create a peerconnectioninterface.cc file. It might be considered \"non-trivial\"; copying the three optionals in the structs, and then calling the new method.",
      "range": {
        "startLine": 1001,
        "startChar": 2,
        "endLine": 1001,
        "endChar": 68
      },
      "revId": "2e7817e6fbfe8588dd8dbd4a0f91a0a77fcd235a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9dd668c3_74aa2b47",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 1
      },
      "lineNbr": 1001,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-05-03T10:43:09Z",
      "side": 1,
      "message": "There shouldn\u0027t be any problems with that. But don\u0027t avoid putting it in the .cc file; the state of our build system nowadays is such that it\u0027s generally not hard at all to add one.",
      "parentUuid": "00d8b9fc_a0378853",
      "range": {
        "startLine": 1001,
        "startChar": 2,
        "endLine": 1001,
        "endChar": 68
      },
      "revId": "2e7817e6fbfe8588dd8dbd4a0f91a0a77fcd235a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1d6e5458_cbed8a48",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 3036,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-05-03T10:43:09Z",
      "side": 1,
      "message": "Consider using a catch-all lambda capture ([\u0026]), since those are (1) nice and short and (2) illegal except when invoked synchronously, which will make the intent clear.",
      "range": {
        "startLine": 3036,
        "startChar": 23,
        "endLine": 3036,
        "endChar": 38
      },
      "revId": "2e7817e6fbfe8588dd8dbd4a0f91a0a77fcd235a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f0e9ee6_ee16962a",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 1
      },
      "lineNbr": 3041,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-05-03T10:43:09Z",
      "side": 1,
      "message": "Not introduced in this CL, but... you can just use the optionals directly in a bool context. Or, if that feels too magical, they have a .has_value() method.",
      "revId": "2e7817e6fbfe8588dd8dbd4a0f91a0a77fcd235a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}