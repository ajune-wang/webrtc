{
  "comments": [
    {
      "key": {
        "uuid": "82102316_62770956",
        "filename": "sdk/objc/Framework/Classes/PeerConnection/RTCDefaultVideoCodecFactory.m",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "Should we ensure encoderClass is not nil and gracefully handle it? I know it\u0027s declared as nonnull but runtime introspection can be finicky so maybe additional check wouldn\u0027t hurt?",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ee12281_6b8e8f12",
        "filename": "sdk/objc/Framework/Classes/PeerConnection/RTCDefaultVideoCodecFactory.m",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82102316_62770956",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9bcbc25_8689acf9",
        "filename": "sdk/objc/Framework/Classes/PeerConnection/RTCDefaultVideoCodecFactory.m",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "Same comment here",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "193348a1_02409050",
        "filename": "sdk/objc/Framework/Classes/PeerConnection/RTCDefaultVideoCodecFactory.m",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9bcbc25_8689acf9",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61454276_abed83dd",
        "filename": "sdk/objc/Framework/Classes/PeerConnection/RTCVideoCodecH264.mm",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "Should the file be renamed to match the name of the class it\u0027s now containing as single resident? :)",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bef4df39_5fe55d6d",
        "filename": "sdk/objc/Framework/Classes/PeerConnection/RTCVideoCodecH264.mm",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Yes, good catch!",
      "parentUuid": "61454276_abed83dd",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e64913f_508ee490",
        "filename": "sdk/objc/Framework/Classes/VideoToolbox/RTCVideoDecoderH264.mm",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "(__unused RTCVideoCodecInfo *)info would increase readability and clarify intent",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e225569e_f195645c",
        "filename": "sdk/objc/Framework/Classes/VideoToolbox/RTCVideoDecoderH264.mm",
        "patchSetId": 3
      },
      "lineNbr": 81,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9e64913f_508ee490",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f944c1f0_26836468",
        "filename": "sdk/objc/Framework/Classes/VideoToolbox/RTCVideoEncoderH264.mm",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "nit: this #import should go after the #include s",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd4e7bb9_a5826889",
        "filename": "sdk/objc/Framework/Classes/VideoToolbox/RTCVideoEncoderH264.mm",
        "patchSetId": 3
      },
      "lineNbr": 28,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f944c1f0_26836468",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75d2225c_dd78cd36",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodec.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5520
      },
      "writtenOn": "2017-10-11T08:45:34Z",
      "side": 1,
      "message": "Why is it necessary to implement this?",
      "range": {
        "startLine": 87,
        "startChar": 41,
        "endLine": 87,
        "endChar": 50
      },
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb8b954_3812e077",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodec.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "It\u0027s needed for the serialization when adding to NSDictionary/NSArray I think. \nI have similar question. I don\u0027t remember if conformation to the protocol needs to be exposed in the public declaration or will it suffice to simply implement the protocol in the implementation?",
      "parentUuid": "75d2225c_dd78cd36",
      "range": {
        "startLine": 87,
        "startChar": 41,
        "endLine": 87,
        "endChar": 50
      },
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3eeaf108_d51ed0e1",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodec.h",
        "patchSetId": 3
      },
      "lineNbr": 87,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T09:22:28Z",
      "side": 1,
      "message": "Because I use them as keys in an NSDictionary. I realize now that they are immutable though, so actually `copyWithZone:` could just return `self` instead of actually constructing a copy, fixed that.",
      "parentUuid": "75d2225c_dd78cd36",
      "range": {
        "startLine": 87,
        "startChar": 41,
        "endLine": 87,
        "endChar": 50
      },
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cb691c5_f9a0e9da",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodec.h",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "Specifying init methods in protocols is usually not a good idea.\nHow about, have RTCEncoder superclass with this init method that RTCVideoEncoder/RTCVideoDecoder classes can subclass?",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "047c35ff_61518dc4",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodec.h",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Yes you are right, and this needs to be removed anyway since it breaks existing clients that implement this protocol.\n\nSince we\u0027re passing around `Class\u003cRTCVideoEncoder\u003e` we need to have a protocol method that configures the object with the RTCVideoCodecInfo, but I moved it into an optional protocol method that can be called by the factory after it has been initialized. (I don\u0027t think there is a way to specify that a parameter should be a Class object that represents a class that subclasses a specific other class?)\n\nI agree that it would be nicer to have the RTCVideoEncoder and Decoder as abstract superclasses though. But I will need to solve that in a multi-step backwards compatible way.",
      "parentUuid": "5cb691c5_f9a0e9da",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "873a0e57_c29fab7c",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodec.h",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-12T09:03:59Z",
      "side": 1,
      "message": "|  (I don\u0027t think there is a way to specify that a parameter should be a Class object that \n|  represents a class that subclasses a specific other class?)\n\nYes, generics don\u0027t support such thing. One thing we could do is to do a runtime check using `isKindOfClass` etall. Not as elegant as generics but it would do the trick.",
      "parentUuid": "047c35ff_61518dc4",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15e46c8d_ba52abfd",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "Document the class and the methods. Here and bellow",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f7bec9a_f8000da4",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15e46c8d_ba52abfd",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d53ee9c_73625f0f",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "I find it confusing that we\u0027re using the codec and format naming interchangeably. Can we stick with just one?",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58371576_606ac925",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5520
      },
      "writtenOn": "2017-10-11T09:17:32Z",
      "side": 1,
      "message": "Agreed, can we go with codecInfo instead of Format here and elsewhere?",
      "parentUuid": "1d53ee9c_73625f0f",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "019572ba_f47cd593",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 41,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done. I think we should rename the class eventually -- previously it was a mirror of the C++ class `cricket::VideoCodec`, but now after refactorings in the C++ layer, it mostly resembles `webrtc::SdpVideoFormat`.",
      "parentUuid": "58371576_606ac925",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fddae00d_ac967618",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5254
      },
      "writtenOn": "2017-10-11T09:03:59Z",
      "side": 1,
      "message": "Add documentation elaborating how should priority be interpreted. Is it connected to the order in which formats are added? Should priority be determined in FIFO or LIFO etc.",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "258d9b16_6ce236ee",
        "filename": "sdk/objc/Framework/Headers/WebRTC/RTCVideoCodecFactory.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-10-11T13:04:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fddae00d_ac967618",
      "revId": "b16d4495a99df45b23481a477980c13f1450b45e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}