{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d6c0fdc0_7c5bfe26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5578
      },
      "writtenOn": "2022-08-30T18:44:33Z",
      "side": 1,
      "message": "Please?",
      "revId": "aabdfe1aba5db5856f9555fb20c3f5443f7e267c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7959f07_eeaebf59",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18864
      },
      "writtenOn": "2022-08-31T08:15:49Z",
      "side": 1,
      "message": "FYI: I have seen link capacity changing quite often, and it might cause more probes because of the new flag fast_rampup_rate. But if network_state_interval is 5s, then I think it does not hurt anything.",
      "revId": "aabdfe1aba5db5856f9555fb20c3f5443f7e267c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "039b9afd_de8d5135",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18864
      },
      "writtenOn": "2022-08-31T08:16:21Z",
      "side": 1,
      "message": "https://screenshot.googleplex.com/AuMRzkr3wsSRmrA",
      "parentUuid": "b7959f07_eeaebf59",
      "revId": "aabdfe1aba5db5856f9555fb20c3f5443f7e267c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34cae6b0_b6626e5c",
        "filename": "modules/congestion_controller/goog_cc/probe_controller.cc",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 19004
      },
      "writtenOn": "2022-08-31T08:26:24Z",
      "side": 1,
      "message": "nit: I personally prefer do safety check in setters, e.g. checking if estimate.link_capacity_upper is valid before moving on. Then we might skip checking it to be not zero or infinite when we use it, and it feels safe.",
      "range": {
        "startLine": 359,
        "startChar": 2,
        "endLine": 367,
        "endChar": 31
      },
      "revId": "aabdfe1aba5db5856f9555fb20c3f5443f7e267c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "aabdfe1aba5db5856f9555fb20c3f5443f7e267c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "aabdfe1aba5db5856f9555fb20c3f5443f7e267c",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}