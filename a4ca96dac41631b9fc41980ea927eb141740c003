{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fda12154_d3871de3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-02-01T15:48:51Z",
      "side": 1,
      "message": "on Windows (which is where we get most hardware encoders/decoders and hence more H264):\n  const pc \u003d new RTCPeerConnection();\n  pc.addTransceiver(\u0027audio\u0027);\n  const t \u003d pc.addTransceiver(\u0027video\u0027);\n  t.direction \u003d \u0027recvonly\u0027;\n  const offer \u003d await pc.createOffer();\n\nmoves two codecs (video/red and its rtx) into the lower range. However, this CL increases the number of codecs from 39 in stable to 42 with this patch and i\u0027ve long been suspecting that we are indeed missing some codecs.\nWith this patch we get\n- a rtx codec for vp9 profile 1 (which is a receive-only codec)\n- H264 4d001f in packetization mode 0 and its rtx codec (which we do get for a sendrecv offer)\n\nBut we run out of payload types in the 96-127 range (see issue 12194) and are putting video/red and its rtx codec at 62 and 61 which is starting at the top of the lower range (I would prefer them at the bottom but can take a look at improving the collision logic later) with limited backward compability towards older versions of libwebrtc. But when dealing with a version that does not support the lower range that will just break ulpfec (which depends on red).\nBut from what I can see this happens with sendrecv offers also which is a bit concerning.",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8336ed2_636fb491",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-02-01T15:53:02Z",
      "side": 1,
      "message": "hta@ do you have more context than me here? Is this concerning?",
      "parentUuid": "fda12154_d3871de3",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e18aa418_55111a0f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-02-02T12:22:01Z",
      "side": 1,
      "message": "@fippo does this patch break anything that worked before?\nI take your comment as saying fixing the bug pushes more PTs into the lower range, which may kill ulpfec for browsers that don\u0027t support lower range, but that shouldn\u0027t be of great concern (and the number of non-lower-range browsers is quickly decreasing).\n\nOK to submit?",
      "parentUuid": "d8336ed2_636fb491",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0134fed8_4f36e8b8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-02-02T12:26:17Z",
      "side": 1,
      "message": "I think Safari is a concern since it is slow to update (cf extmap-allow-mixed breaking). I\u0027ll give \"put h264 4d001f into the lower range\" a try and see if that mitigates enough...",
      "parentUuid": "e18aa418_55111a0f",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "401e3aec_d67cbde5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-02-02T17:34:34Z",
      "side": 1,
      "message": "moving 4d00* packetization mode 0 into the lower range puts ulpfec and red back to where they uses to be and all the mode 0 things should be used quite rarely so I\u0027d consider it a lower risk:\nhttps://webrtc-review.googlesource.com/c/src/+/250240\n-- we can either land it separately or apply the patch here.\n\nOddly doing that makes the three codecs that showed up after applying this patch disappear again...\nComparison between this patch, stable and this-patch+my-patch:\nhttps://docs.google.com/spreadsheets/d/1ir_zClyJyp9Iwq3SwS2VFfmeahGlRpIfOnFpehIhAjs/edit?usp\u003dsharing",
      "parentUuid": "0134fed8_4f36e8b8",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1aabd57_cf46ff93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2022-02-02T18:43:45Z",
      "side": 1,
      "message": "How do you think adding the new 4f00* codec might affect this order?\n\n4f00* should go to low, as is, but might be tumbled out of low when computing the union from this patch as this whole problem with payload type id collision started showing up when 4f00* was added and became the second asymmetrically supported codec besides VP9 profile-level\u003d1.",
      "parentUuid": "401e3aec_d67cbde5",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d58292a_ecd5886a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-02-02T21:08:43Z",
      "side": 1,
      "message": "there are no collisions in low (yet...) so this *should* work. Can you try a local build with the two patches and the 4f00 one and share the SDP from the fiddle (both for sendonly and sendrecv)? I can try too but likely only next week.",
      "parentUuid": "a1aabd57_cf46ff93",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb808f56_3418ca58",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2022-02-02T23:23:22Z",
      "side": 1,
      "message": "Put all the patches together and ran the fiddle in both modes.\n\nEverything seems as it should, ulpfec and red are both in the upper range.\n\nShould I pull your patch into this one or would you prefer to merge them separately?\n\nComplete data set can be found at: https://docs.google.com/spreadsheets/d/1VC0ln6HGbX3TKctTpA0Bmmzua7Wn_UP_yJQTYIqh1gI/edit#gid\u003d0",
      "parentUuid": "3d58292a_ecd5886a",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c899951a_abf61227",
        "filename": "modules/audio_processing/aec3/echo_canceller3.cc",
        "patchSetId": 8
      },
      "lineNbr": 297,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-02-01T15:49:47Z",
      "side": 1,
      "message": "There are a few files that have unrelated formatting diffs. Can we remove the unrelated changes from the CL?",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02364ae4_737b1156",
        "filename": "modules/audio_processing/aec3/echo_canceller3.cc",
        "patchSetId": 8
      },
      "lineNbr": 297,
      "author": {
        "id": 18414
      },
      "writtenOn": "2022-02-02T12:11:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c899951a_abf61227",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecf452de_536484ea",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 509,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-02-01T15:49:47Z",
      "side": 1,
      "message": "Great to see this test in this C++ repo as well!\n\nCan you add another test that is a copy of this test but with an MEDIA_TYPE_AUDIO transceiver instead of a video transceiver? That way we have test coverage for both types of media.",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66b8f146_066ec8ec",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 509,
      "author": {
        "id": 18414
      },
      "writtenOn": "2022-02-02T12:11:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecf452de_536484ea",
      "revId": "a4ca96dac41631b9fc41980ea927eb141740c003",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}