{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1f80c57d_9eceeb4b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-01-16T13:40:46Z",
      "side": 1,
      "message": "Is there any significant amount of work that gets optimized away by adding this condition? It looks like we\u0027re mostly doing \"for each \u003cempty map\u003e\" anyway",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2af148e9_720fd3b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-16T13:51:12Z",
      "side": 1,
      "message": "primarily the call_-\u003eGetStats() call on the sender.\nThis is a micro-optimization, yes but it is cheap so why not.",
      "parentUuid": "1f80c57d_9eceeb4b",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f726f78_39ebd6e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-01-16T14:54:59Z",
      "side": 1,
      "message": "Agree that this is a bit \"why not\", but unless we think performance gains are to be had here, I\u0027d prefer not to add more conditions since call_-\u003eGetStats() could in theory report call-wide metrics not related to number of RTP streams - less edge cases to test for future CLs. Just my preference though... Do you feel strongly otherwise?",
      "parentUuid": "2af148e9_720fd3b4",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b937479_c5d8f5b4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 10,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-16T15:34:03Z",
      "side": 1,
      "message": "this is in the send/receive channel which is basically per-sender/receiver. Any call-wide metrics are wrong in there, see the RTT comment by Stefan.\n\nThis may be a tiny optimization but it is easy to understand (and revert) and receiving many videos is a common use-case.\n\nI wish we had a benchmark ;-)",
      "parentUuid": "6f726f78_39ebd6e5",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09cc6484_456fbb5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-16T12:53:39Z",
      "side": 1,
      "message": "this was the better place to optimize!",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70e552e6_b3690c83",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-01-16T15:40:39Z",
      "side": 1,
      "message": "\"why not\"",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e8527b2_fda968b0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-16T19:12:14Z",
      "side": 1,
      "message": "Don\u0027t change semantics.\nI *think* skipping the logging for empty channels is OK, but skipping the clear is not.",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0eb7aa5f_09d8a189",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-16T19:14:13Z",
      "side": 1,
      "message": "And...",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dcc7d52_a79d9044",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1618,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-16T12:53:39Z",
      "side": 1,
      "message": "\"true\" seems semantically correct. This is only looked at here:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/pc/legacy_stats_collector.cc;l\u003d1153;drc\u003de95ee489e7a4aee5408d8bb0e13bebc61adcca0d\nbut not really here:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/pc/rtc_stats_collector.cc;l\u003d2402;drc\u003de95ee489e7a4aee5408d8bb0e13bebc61adcca0d;bpv\u003d1;bpt\u003d1\n\nReturning false only seems to be a thing for the fake engines.",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dfec981_86716fa2",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1618,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-16T19:12:14Z",
      "side": 1,
      "message": "The Get*Stats return false on failure, but we ignore failures (just emit warnings), the thinking is probably that losing some data is better than losing all data.\n\nI have my doubts about that. But \"return true\" is good.",
      "parentUuid": "6dcc7d52_a79d9044",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "258ed13a_6ee11900",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1618,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-17T10:05:20Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4dfec981_86716fa2",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b8aef8e4_e6fd45f5",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1630,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-16T19:12:14Z",
      "side": 1,
      "message": "Move this statement up before the early return. I had a bit of fun with that week before last, and ended up wanting to \"always clear\" because the other alternative (making getStats() cumulative) had too many tests weirding out.",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6077a81a_1d71a1f1",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1630,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-17T10:05:20Z",
      "side": 1,
      "message": "The primary callers create a new object every time (see links below). But two unit tests don\u0027t as demonstrated by\n  https://webrtc-review.googlesource.com/c/src/+/290990\n(possibly more for receivers).\nIt is a reasonable expectation to clear however!",
      "parentUuid": "b8aef8e4_e6fd45f5",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab8be479_13d84ef5",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1630,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-17T10:12:44Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6077a81a_1d71a1f1",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "400f9f6d_9a07b67e",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1635,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-16T19:14:13Z",
      "side": 1,
      "message": "the fact that we call call_-\u003eGetStats multiple times for the case with many channels is probably a more important performance bug.",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c197859a_1dbb4eec",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1635,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-17T10:05:20Z",
      "side": 1,
      "message": "it is worse, no? With this, the sender/receiver RTTs are all the same. But in theory (not in practice I suspect) they should come from the SR/RR calculations so are really per-sender/receiver. \n\nI\u0027ll try passing the RTT from the calling place which also calls call_-\u003eGetStats, might be worth doing even before legacy stats (which uses this) goes away.",
      "parentUuid": "400f9f6d_9a07b67e",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a9145179_2c79bf06",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1635,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-17T10:12:44Z",
      "side": 1,
      "message": "OK, this is \"subsequent CL\" material. \nA quick look at Call::GetStats() didn\u0027t reveal any really heavy-duty items, but there\u0027s a lot of code involved.",
      "parentUuid": "c197859a_1dbb4eec",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c63bf04_bbce4c08",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1667,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-01-16T19:12:14Z",
      "side": 1,
      "message": "Here too.",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c33f3c89_4878d28d",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 5
      },
      "lineNbr": 1667,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-17T10:05:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c63bf04_bbce4c08",
      "revId": "f70e2d06954d032b12a2bb4b474636cee298aa52",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}