/*
 *  Copyright 2021 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree. An additional intellectual property rights grant can be found
 *  in the file PATENTS.  All contributing project authors may
 *  be found in the AUTHORS file in the root of the source tree.
 */

/*

    EGL loader generated by glad 0.1.34 on Sun Sep  5 14:53:35 2021.

    Language/Generator: C/C++
    Specification: egl
    APIs: egl=1.5
    Profile: -
    Extensions:
        EGL_EXT_image_dma_buf_import,
        EGL_EXT_image_dma_buf_import_modifiers,
        EGL_EXT_platform_base,
        EGL_KHR_create_context,
        EGL_KHR_image,
        EGL_KHR_image_base,
        EGL_KHR_platform_wayland,
        EGL_MESA_platform_gbm
    Loader: True
    Local files: False
    Omit khrplatform: False
    Reproducible: False

    Commandline:
        --api="egl=1.5" --generator="c" --spec="egl"
   --extensions="EGL_EXT_image_dma_buf_import,
                 EGL_EXT_image_dma_buf_import_modifiers,
                 EGL_EXT_platform_base,
                 EGL_KHR_create_context,
                 EGL_KHR_image,
                 EGL_KHR_image_base,
                 EGL_KHR_platform_wayland,
                 EGL_MESA_platform_gbm"
*/

#include "modules/desktop_capture/linux/glad/glad_egl.h"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int gladLoadEGL(void) {
  return gladLoadEGLLoader((GLADloadproc)eglGetProcAddress);
}

PFNEGLQUERYDMABUFFORMATSEXTPROC glad_eglQueryDmaBufFormatsEXT = NULL;
PFNEGLQUERYDMABUFMODIFIERSEXTPROC glad_eglQueryDmaBufModifiersEXT = NULL;
PFNEGLGETPLATFORMDISPLAYEXTPROC glad_eglGetPlatformDisplayEXT = NULL;
PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC
glad_eglCreatePlatformWindowSurfaceEXT = NULL;
PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC
glad_eglCreatePlatformPixmapSurfaceEXT = NULL;
PFNEGLCREATEIMAGEKHRPROC glad_eglCreateImageKHR = NULL;
PFNEGLDESTROYIMAGEKHRPROC glad_eglDestroyImageKHR = NULL;
static void load_EGL_EXT_image_dma_buf_import_modifiers(GLADloadproc load) {
  glad_eglQueryDmaBufFormatsEXT =
      (PFNEGLQUERYDMABUFFORMATSEXTPROC)load("eglQueryDmaBufFormatsEXT");
  glad_eglQueryDmaBufModifiersEXT =
      (PFNEGLQUERYDMABUFMODIFIERSEXTPROC)load("eglQueryDmaBufModifiersEXT");
}
static void load_EGL_EXT_platform_base(GLADloadproc load) {
  glad_eglGetPlatformDisplayEXT =
      (PFNEGLGETPLATFORMDISPLAYEXTPROC)load("eglGetPlatformDisplayEXT");
  glad_eglCreatePlatformWindowSurfaceEXT =
      (PFNEGLCREATEPLATFORMWINDOWSURFACEEXTPROC)load(
          "eglCreatePlatformWindowSurfaceEXT");
  glad_eglCreatePlatformPixmapSurfaceEXT =
      (PFNEGLCREATEPLATFORMPIXMAPSURFACEEXTPROC)load(
          "eglCreatePlatformPixmapSurfaceEXT");
}
static void load_EGL_KHR_image(GLADloadproc load) {
  glad_eglCreateImageKHR = (PFNEGLCREATEIMAGEKHRPROC)load("eglCreateImageKHR");
  glad_eglDestroyImageKHR =
      (PFNEGLDESTROYIMAGEKHRPROC)load("eglDestroyImageKHR");
}
static void load_EGL_KHR_image_base(GLADloadproc load) {
  glad_eglCreateImageKHR = (PFNEGLCREATEIMAGEKHRPROC)load("eglCreateImageKHR");
  glad_eglDestroyImageKHR =
      (PFNEGLDESTROYIMAGEKHRPROC)load("eglDestroyImageKHR");
}
static int find_extensionsEGL(void) {
  return 1;
}

static void find_coreEGL(void) {}

int gladLoadEGLLoader(GLADloadproc load) {
  (void)load;
  find_coreEGL();

  if (!find_extensionsEGL())
    return 0;
  load_EGL_EXT_image_dma_buf_import_modifiers(load);
  load_EGL_EXT_platform_base(load);
  load_EGL_KHR_image(load);
  load_EGL_KHR_image_base(load);
  return 1;
}
