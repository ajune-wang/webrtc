{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cbe7979d_0cd1aec7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-05-16T09:05:41Z",
      "side": 1,
      "message": "A little moving around of code. The CL that will use this is already big enough.",
      "revId": "d1822bb3e59e87a479f8f552d639fa880110828f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c241a635_7a73e9e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-05-16T10:05:13Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "d1822bb3e59e87a479f8f552d639fa880110828f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55b47f03_b5fd9e0c",
        "filename": "pc/webrtc_sdp.cc",
        "patchSetId": 1
      },
      "lineNbr": 3714,
      "author": {
        "id": 7036
      },
      "writtenOn": "2024-05-16T09:52:01Z",
      "side": 1,
      "message": "nit: You could use the `contains()` method that was added in C++20 here.\nI understand this is just moving code, so feel free to ignore if that\u0027s troublesome.",
      "revId": "d1822bb3e59e87a479f8f552d639fa880110828f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa0a0746_20408316",
        "filename": "pc/webrtc_sdp.cc",
        "patchSetId": 1
      },
      "lineNbr": 3714,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-05-16T10:05:13Z",
      "side": 1,
      "message": "hm. https://chromium.googlesource.com/external/webrtc/+/HEAD/g3doc/style-guide.md?pli\u003d1 doesn\u0027t say anything about C++ 20 features apart from banning designated initializers. I think I won\u0027t fix it in this one, but we should probably update - topic for webrtc-core.",
      "parentUuid": "55b47f03_b5fd9e0c",
      "revId": "d1822bb3e59e87a479f8f552d639fa880110828f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "d1822bb3e59e87a479f8f552d639fa880110828f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "d1822bb3e59e87a479f8f552d639fa880110828f",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}