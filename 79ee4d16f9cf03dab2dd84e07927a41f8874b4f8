{
  "comments": [
    {
      "key": {
        "uuid": "91096330_22b8bc63",
        "filename": "media/base/fake_media_engine.h",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-06-11T11:42:06Z",
      "side": 1,
      "message": "Why do you pass FileWrapper by rvalue reference instead of by value? (For a move-only type I don\u0027t think there\u0027s much of a difference except in performance, so I\u0027m just curious what your reasons are.)",
      "range": {
        "startLine": 529,
        "startChar": 39,
        "endLine": 529,
        "endChar": 41
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1129abc4_c8521f5b",
        "filename": "media/base/fake_media_engine.h",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-11T11:49:21Z",
      "side": 1,
      "message": "I think this is just confusion on my part; since FileWrapper\u0026\u0026 is the argument type for the move constructor and assignment, I used it as argument type here too. I can delete the \u0026\u0026.",
      "parentUuid": "91096330_22b8bc63",
      "range": {
        "startLine": 529,
        "startChar": 39,
        "endLine": 529,
        "endChar": 41
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed185ca6_448c23a8",
        "filename": "media/base/fake_media_engine.h",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-06-11T11:58:36Z",
      "side": 1,
      "message": "OK---that\u0027s the default thing to do. Rvalue reference might reduce binary size and have better performance since you avoid a bunch of constructor and destructor calls, though---or not, if the overhead of the memory indirection and the need to store things in memory instead of registers dominates.",
      "parentUuid": "1129abc4_c8521f5b",
      "range": {
        "startLine": 529,
        "startChar": 39,
        "endLine": 529,
        "endChar": 41
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c024147_cb446e2b",
        "filename": "media/base/fake_media_engine.h",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-11T12:05:39Z",
      "side": 1,
      "message": "Since a FileWrapper is essentially a FILE* with a little C++ flavoring, I think it makes little sense to pass it by reference. So changed to pass by value.",
      "parentUuid": "ed185ca6_448c23a8",
      "range": {
        "startLine": 529,
        "startChar": 39,
        "endLine": 529,
        "endChar": 41
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5036889a_2d5d0773",
        "filename": "media/base/fake_media_engine.h",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-06-11T12:16:51Z",
      "side": 1,
      "message": "Two things happen that affect performance when you switch from by-value to by-reference:\n\n  * The actual value is stored once in memory, and you just pass around an address. This is a win for big values, and a loss for small values that would have fit in one or two registers anyway.\n\n  * The temporary address values that are created in various places are trivial to move construct (just an integer copy) and trivial to destroy (no instructions); whereas with by-value you get temporaries of the original type, and need to call its move constructor and destructor.\n\nI expect that the latter effect might make rvalue references a good choice for FileWrapper, but it\u0027s hard to be sure without actually measuring the effect on binary size and performance.",
      "parentUuid": "7c024147_cb446e2b",
      "range": {
        "startLine": 529,
        "startChar": 39,
        "endLine": 529,
        "endChar": 41
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dea9de2_5ef022de",
        "filename": "media/base/fake_media_engine.h",
        "patchSetId": 3
      },
      "lineNbr": 529,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-11T12:29:24Z",
      "side": 1,
      "message": "I doubt we pass around FileWrappers as much that they matter for performance. \n\nMaybe it would make sense to inline the move constructor and destructor; move copies a pointer and sets the moved-from pointer to null. And destructor is a nop when that pointer is null. So if done right, passing a FileWrapper with move should compile to exactly the same instructions as passing a FILE*.\n\nOr we could perhaps reuse whatever similar optimizations are done to std::unique_ptr, by using unique_ptr\u003cFILE, call_fclose\u003e as a member (or even private base class) of FileWrapper?",
      "parentUuid": "5036889a_2d5d0773",
      "range": {
        "startLine": 529,
        "startChar": 39,
        "endLine": 529,
        "endChar": 41
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "541a6d13_3730e615",
        "filename": "modules/audio_processing/aec_dump/aec_dump_factory.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-06-11T11:49:21Z",
      "side": 1,
      "message": "And this similarly should be just FileWrapper, not FileWrapper\u0026\u0026 ?",
      "range": {
        "startLine": 35,
        "startChar": 41,
        "endLine": 35,
        "endChar": 62
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f81c738a_c63e573d",
        "filename": "modules/audio_processing/aec_dump/aec_dump_factory.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-06-11T11:58:36Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "541a6d13_3730e615",
      "range": {
        "startLine": 35,
        "startChar": 41,
        "endLine": 35,
        "endChar": 62
      },
      "revId": "79ee4d16f9cf03dab2dd84e07927a41f8874b4f8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}