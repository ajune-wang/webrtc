{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ae7ae3f0_c5a66967",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-21T06:24:16Z",
      "side": 1,
      "message": "I want this!\n\na few questions about macros; my attitude towards them is \"the fewer the better, but if we have to, we have to\".....\n",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e7f1434_91e81047",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-21T06:24:16Z",
      "side": 1,
      "message": "It makes me nervous to have a generic namespace like \"internal\" declared in an .h file (even if we\u0027re moving it out of api/).\nSince this namespace is only used here, what about namespace \"proxy_internal\"?",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c1cff7e_fb358553",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 82,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-21T06:50:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e7f1434_91e81047",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d658fb3_5310f13e",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-21T06:24:16Z",
      "side": 1,
      "message": "What\u0027s the advantage of the 2-level macro expansion here?\n\n(Actually I don\u0027t really see an improvement in readability over simply replacing all occurences of PROXY_STRINGIZE with #x - someone who expects to comprehend this file is going to have to know what #x means anyway. But compilers are strange beasts.)",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d08d2025_fb6a87ec",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-21T06:50:06Z",
      "side": 1,
      "message": "the 2 level macro expansion is a trick to convert a macro argument to a string.\nHere\u0027s an explanation of how it works: https://gcc.gnu.org/onlinedocs/cpp/Stringizing.html",
      "parentUuid": "0d658fb3_5310f13e",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c7808be_0f1cb788",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-21T11:53:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d08d2025_fb6a87ec",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5421836f_47b0a26f",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-21T06:24:16Z",
      "side": 1,
      "message": "Could this even be \"static const char\" so that we link it only once per class, or is initialization convoluted if you do that?",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "095de1f1_3fe4fe8a",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-21T06:50:06Z",
      "side": 1,
      "message": "I tried that and also tried static constexpr, but ran into build issues since the static will need to belong to a single compilation unit and since this ends up being inside of the macros, we can end up with multiple definitions. There might be some neater trick but after a few tries, I ended with this which does add a pointer size variable to each proxy class. Not ideal but not terrible either I guess.",
      "parentUuid": "5421836f_47b0a26f",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f1c1e0b_2e996a14",
        "filename": "api/proxy.h",
        "patchSetId": 6
      },
      "lineNbr": 199,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-21T11:53:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "095de1f1_3fe4fe8a",
      "revId": "c761da8505cbf855fbd10d614f85c12315d40f4e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}