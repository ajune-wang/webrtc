{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3e587473_8bce027e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-02-08T12:51:31Z",
      "side": 1,
      "message": "some small style comments.",
      "revId": "6fee1af01925bb25379ac14846199e6344fd76fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "febe0d7d_3b730db1",
        "filename": "api/rtp_headers.cc",
        "patchSetId": 3
      },
      "lineNbr": 26,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-02-08T12:51:31Z",
      "side": 1,
      "message": "I would probably inline this kind of accessor, should be easier for compiler to optimize them",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 26,
        "endChar": 1
      },
      "revId": "6fee1af01925bb25379ac14846199e6344fd76fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a185b2a_0d3246f8",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 140,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-02-08T12:51:31Z",
      "side": 1,
      "message": "`const optional\u0026` is usually not a good parameter type.\nConsider passing by value `absl::optional\u003cAudioLevel\u003e`\nor by pointer instead `const AudioLevel*`\n\nhttps://abseil.io/tips/163",
      "range": {
        "startLine": 140,
        "startChar": 23,
        "endLine": 140,
        "endChar": 56
      },
      "revId": "6fee1af01925bb25379ac14846199e6344fd76fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd3a46b2_fcec2cea",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.cc",
        "patchSetId": 3
      },
      "lineNbr": 178,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-02-08T12:51:31Z",
      "side": 1,
      "message": "add `RTC_CHECK_GE(extension.audio_level(), 0);`",
      "revId": "6fee1af01925bb25379ac14846199e6344fd76fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f10e7ea_c42c74b3",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-02-08T12:39:27Z",
      "side": 1,
      "message": "I agree it is a good rename, but it would be better to change this trait in backward compatible way so that webrtc users have some time to migrate to newer api.\n\ne.g.\n```\nclass AudioLevelExtension {\n public:\n  static bool Parse(rtc::ArrayView\u003cconst uint8_t\u003e data,\n                    bool* voice_activity,\n                    uint8_t* audio_level);\n};\n// TODO: bugs.webrtc.org/15788 - In two weeks remove this alias and put new meaning into AudioLevel class.\nusing AudioLevel [[deprecated]] \u003d AudioLevelExtension\n```\n\nor do a hack and temporary merge old and new meaning for the AudioLevel class:\n\n```\nclass AudioLevel {\n public:\n  AudioLevel(voice_activity, level);\n \n  // TODO: bugs.webrtc.org/15788 - In two weeks remove these functions in favor of the AudioLevelExtension trait below\n  [[deprecated]] static bool Parse(rtc::ArrayView\u003cconst uint8_t\u003e data,\n                    bool* voice_activity,\n                    uint8_t* audio_level); \n\n\n private:\n  bool voice_activity_;\n  int level_;\n};\n\nclass AudioLevelExtension {\n public:\n  static bool Parse(rtc::ArrayView\u003cconst uint8_t\u003e data, AudioLevel* value);\n};\n```\n(this hack might be faster way to migrate without breaking existent code, it needs less intermediate steps.)",
      "revId": "6fee1af01925bb25379ac14846199e6344fd76fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47a780fd_744d4990",
        "filename": "modules/rtp_rtcp/source/rtp_header_extensions.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 7529
      },
      "writtenOn": "2024-02-16T20:06:44Z",
      "side": 1,
      "message": "The hack is a nice idea but a bit complex to accomplish without adding new dependencies from api folder to rtp_header_extensions.h. And I don\u0027t particularly like exposing a `Parse` method in the API folder either, even though it\u0027s temporary.\n\nSince I\u0027m not in a rush I will follow your first suggestion and do the change in multiple steps.\n\n(1) rename AudioLevel -\u003e AudioLevelExtension in CL 1 (https://webrtc-review.googlesource.com/c/src/+/339887), wait two weeks\n(2) remove the using alias and add AudioLevel in API in CL 2 (this one), wait two weeks\n(3) remove the legacy hasAudioLevel/voiceActivity/audioLevel accessors in CL 3",
      "parentUuid": "1f10e7ea_c42c74b3",
      "revId": "6fee1af01925bb25379ac14846199e6344fd76fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}