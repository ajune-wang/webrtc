{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "31cc90f8_139e3bbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:35:41Z",
      "side": 1,
      "message": "Since encoders aren\u0027t my deep area of expertise, I may be barking up the wrong tree here, but based on the CL description, it seems to me that the tests aren\u0027t adequate for the behavior change proposed, and that the proposed behavior change isn\u0027t safe to deploy without a killswitch.",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3fe6ddc9_7f99408d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:53:31Z",
      "side": 1,
      "message": "Don\u0027t break before you measure, I think the rule is.",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f5b5a16_14467ba1",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 8274,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:35:41Z",
      "side": 1,
      "message": "This test seems to test the case where no fallback is configured, and expects the encode to fail in that case.\n\nI would want to see tests that:\n- Verify that the preferred codec\u0027s failure jumps to the next codec in the preference list (which is the point of this CL according to its description)\n- Verify that preferred codec\u0027s failure jumps to VP8 when no next codec is in preference list but VP8 is acceptable (the previous behavior, which we should not change)\n- Verify that transmission stops when VP8 is not acceptable and there\u0027s no next codec (new behavior)\n\nIf we want to eventually stop the ultimate fallback to VP8, that change in behavior should be guarded by a killswitch, and the number of such fallbacks should be tracked with a metric.",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9f47339_4304d756",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 8274,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-12-11T07:48:20Z",
      "side": 1,
      "message": "Will add tests for that. \n\nHowever, in Chrome as of today this falling back to VP8 is not likely to happen - for every hardware encoding failure we have SW fallbacks for the same codec type.\n\nIt is only after we enable H.265, that this really becomes an issue. So we block the future potential of by default falling back to VP8. In that sense I think we don\u0027t need to keep the previous behavior and setup a metric for that.\n\nAccording to spec: \"The setCodecPreferences method overrides the default receive codec preferences used by the user agent. When generating a session description using either createOffer or createAnswer, the user agent MUST use the indicated codecs, in the order specified in the codecs argument, for the media section corresponding to this RTCRtpTransceiver.\"\n\nWith all above mentioned, I think we should not need to justify why we change the default behavior of falling back to VP8.  It does not make sense of falling back to VP8: what if setCodecPrefernces() remove VP8 from codec list? We cannot blindly use VP8 when falling back.",
      "parentUuid": "6f5b5a16_14467ba1",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99539c14_7139520e",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 8274,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:53:31Z",
      "side": 1,
      "message": "We shouldn\u0027t, but we do. Someone added this at one point, probably for a reason that seemed important to them at the time. Before we remove it, we should measure whether it\u0027s used in practice. Otherwise, the whole CL might get rolled back.",
      "parentUuid": "c9f47339_4304d756",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c734f29_e3852b0f",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 8305,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:35:41Z",
      "side": 1,
      "message": "Waiting on an event is Not Recommended. It runs against the way WebRTC is designed (although it\u0027s snuck into a number of places). Might be acceptable in tests, but consider alternatives.",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a59bb9d_f4242e7d",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 8318,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:35:41Z",
      "side": 1,
      "message": "Is this test running on a real clock?\nConsider using EXPECT_TRUE_WAIT(fake_encoder_.GetNumEncodes() \u003d\u003d 0, kDefaultTimeout) - explicit timeouts on a real clock increase test time and make the test more likely to flake.",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70b67812_bf19b4b3",
        "filename": "video/video_stream_encoder_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 8320,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-12-11T07:35:41Z",
      "side": 1,
      "message": "```suggestion\n  // After requesting fallback, the encoder will be released.\n```",
      "revId": "c63668084fa86f7c2f8eac68d6a20c8a7645da7d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}