{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c4778710_b76c1b57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-12-14T22:50:46Z",
      "side": 1,
      "message": "Looks like you found a requirement for sync_group not being null if stream duplicates are being eliminated. Hard to say why that is a requirement from the code changes here, but I guess it\u0027s true. Wonder why.",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9e7aed7_cb89cbd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-21T08:13:12Z",
      "side": 1,
      "message": "the tests use the second stream id to transport the sync group. Now why they do that is a bit unclear to me since sync is always based on same-mediastream...",
      "parentUuid": "c4778710_b76c1b57",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "287acdb2_f9414eaf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-21T09:25:36Z",
      "side": 1,
      "message": "Ilya: are you up for landing this (will need the bureaucratic second +1) ?\nI can monitor the chromium roll in case there are more DCHECK landmines with weird assumptions.",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b22c15ab_1fc32367",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-12-21T10:10:20Z",
      "side": 1,
      "message": "Lets do it!",
      "parentUuid": "287acdb2_f9414eaf",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fc77f058_5ab52a64",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-12-21T12:39:47Z",
      "side": 1,
      "message": "Yep, it did break internal bots. \nThe tests are in the webrtc repository.\n\nThis is the failure output:\n```\n[\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d] Running 1 test from 1 test suite.\n[----------] Global test environment set-up.\n[----------] 1 test from VideoQualityMeetPcTraceBasedTest\n[ RUN      ] VideoQualityMeetPcTraceBasedTest.PeerConnectionLevel_Bridge360p30\n(field_trial.cc:159): Setting field trial string:WebRTC-Bwe-ReceiverLimitCapsOnly/Enabled/WebRTC-VP8-Postproc-Config/Enabled-8,30,60/WebRTC-VP9-PerformanceFlags/use_per_layer_speed,min_pixel_count:0|129600,base_layer_speed:5|7,high_layer_speed:8|8,deblock_mode:1|0/WebRTC-VP8ConferenceTemporalLayers/2_V1/\nNo trace filename provided. Running as unittest with default test_500kbps.dat_send\n\n\n#\n# Fatal error in: third_party/webrtc/files/stable/webrtc/test/pc/e2e/peer_connection_quality_test.cc, line 460\n# last system error: 0\n# Check failed: transceiver-\u003ereceiver()-\u003estream_ids().size() \u003d\u003d 2 (1 vs. 2)\n# Expected 2 stream ids: 1st - sync group, 2nd - unique stream label*** SIGABRT received at time\u003d1671623011 on cpu 7 ***\nPC: @     0x7fb9f948d347  (unknown)  gsignal\n    @     0x7fba7a780664        192  absl::WriteFailureInfo()\n    @     0x7fba7a78044a         64  absl::AbslFailureSignalHandler()\n    @     0x7fba3961e1c0       3776  (unknown)\n    @     0x7fba27182f56         48  rtc::webrtc_checks_impl::WriteFatalLog()\n    @     0x7fba271835d6        352  rtc::webrtc_checks_impl::FatalLog()\n    @     0x7fbb0de323b9        288  webrtc::webrtc_pc_e2e::PeerConnectionE2EQualityTest::OnTrackCallback()\n    @     0x7fbb0de34d07        176  std::__u::__function::__policy_invoker\u003c\u003e::__call_impl\u003c\u003e()\n    @     0x7fbb0de34b54         64  webrtc::webrtc_pc_e2e::(anonymous namespace)::FixturePeerConnectionObserver::OnTrack()\n    @     0x7fbae5df0858        480  webrtc::SdpOfferAnswerHandler::ApplyRemoteDescriptionUpdateTransceiverState()\n    @     0x7fbae5def7ee        160  webrtc::SdpOfferAnswerHandler::ApplyRemoteDescription()\n    @     0x7fbae5df8de5        112  webrtc::SdpOfferAnswerHandler::DoSetRemoteDescription()\n    @     0x7fbae5e07ce9        176  rtc::rtc_operations_chain_internal::OperationWithFunctor\u003c\u003e::Run()\n    @     0x7fbae5def0d5        144  webrtc::SdpOfferAnswerHandler::SetRemoteDescription()\n    @     0x7fbae6e76f62         80  webrtc::PeerConnection::SetRemoteDescription()\n    @     0x7fbaecb773d3         80  webrtc::MethodCall\u003c\u003e::Marshal()\n    @     0x7fbaecb736a6        192  webrtc::PeerConnectionProxyWithInternal\u003c\u003e::SetRemoteDescription()\n    @     0x7fbb030f3476        176  webrtc::webrtc_pc_e2e::TestPeer::SetRemoteDescription()\n    @     0x7fbb0de33777         80  webrtc::webrtc_pc_e2e::PeerConnectionE2EQualityTest::ExchangeOfferAnswer()\n    @     0x7fba41436766        160  rtc::Thread::Dispatch()\n    @     0x7fba41434b23        144  rtc::Thread::ProcessMessages()\n    @     0x7fba41436e41         32  rtc::Thread::PreRun()\n    @     0x7fba396147d9        192  start_thread\n    @     0x7fb9f955169f  (unknown)  clone\n```",
      "parentUuid": "b22c15ab_1fc32367",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "018f1d03_344c3916",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-21T13:00:57Z",
      "side": 1,
      "message": "The dcheck is in the webrtc repo but the test that needs fixing is not.\nCan you check the internal test VideoQualityMeetPcTraceBasedTest and see if it sets stream_label without setting sync_group?\n\nIf there are too many of them I can try defaulting the sync_group to stream_id + \"-sync\" in the next attempt.",
      "parentUuid": "fc77f058_5ab52a64",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ef5515f_d8f3e1ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-12-21T13:59:05Z",
      "side": 1,
      "message": "Yep, it doesn\u0027t set sync groups.\nThe test is similar to video/pc_full_stack_tests.cc",
      "parentUuid": "e9e7aed7_cb89cbd5",
      "revId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "5f91ea25d21991be9dc0cddc6b87fb8035da51c9",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}