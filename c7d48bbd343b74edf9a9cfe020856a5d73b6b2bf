{
  "comments": [
    {
      "key": {
        "uuid": "6a169410_1a83484d",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 2
      },
      "lineNbr": 2753,
      "author": {
        "id": 5825
      },
      "writtenOn": "2019-02-14T09:44:09Z",
      "side": 1,
      "message": "Maybe move this logic to GetMaxDefaultVideoBitrateKbps?",
      "range": {
        "startLine": 2750,
        "startChar": 2,
        "endLine": 2753,
        "endChar": 3
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7e5345c_c185e85d",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 2
      },
      "lineNbr": 2753,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-14T12:44:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a169410_1a83484d",
      "range": {
        "startLine": 2750,
        "startChar": 2,
        "endLine": 2753,
        "endChar": 3
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca9f4c8e_e501f95a",
        "filename": "modules/video_coding/codecs/vp9/svc_config.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5825
      },
      "writtenOn": "2019-02-14T09:44:09Z",
      "side": 1,
      "message": "Is this what receiver with limited BW will get when high frame rate layer is enabled on sender? Is not this is quite low bitrate?",
      "range": {
        "startLine": 28,
        "startChar": 60,
        "endLine": 28,
        "endChar": 63
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abba2470_691e96a5",
        "filename": "modules/video_coding/codecs/vp9/svc_config.cc",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-14T12:44:28Z",
      "side": 1,
      "message": "Yes, bumped bitrates up and reduced high layer to reduce total uplink/downlink requirements.\n\nNow receiver could choose from 150, 500 and 900-1400 kbps.",
      "parentUuid": "ca9f4c8e_e501f95a",
      "range": {
        "startLine": 28,
        "startChar": 60,
        "endLine": 28,
        "endChar": 63
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aef82b0c_930874df",
        "filename": "modules/video_coding/codecs/vp9/svc_config.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5825
      },
      "writtenOn": "2019-02-14T09:44:09Z",
      "side": 1,
      "message": "Would be interesting to see data that supports this change. Do we still get same/better quality than VP8 provides at 1Mbps (max bitrate for 2 temporal layers)?",
      "range": {
        "startLine": 29,
        "startChar": 57,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58ed9e1c_35937f39",
        "filename": "modules/video_coding/codecs/vp9/svc_config.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-14T12:44:28Z",
      "side": 1,
      "message": "Bumped up a little. It now is 500-650kbps, and compared to 600 kbps SL1 TL0 for VP9 it\u0027s fine",
      "parentUuid": "aef82b0c_930874df",
      "range": {
        "startLine": 29,
        "startChar": 57,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50952e3c_e78fa7af",
        "filename": "modules/video_coding/codecs/vp9/svc_rate_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 5825
      },
      "writtenOn": "2019-02-14T09:44:09Z",
      "side": 1,
      "message": "can this be implemented with single for/while loop?\n- first, iterate over layers and allocate up to their target.\n- then add leftover bitrate to the latest allocated layer (cap to its max).",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 230,
        "endChar": 71
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36ea17c7_bd0b91f5",
        "filename": "modules/video_coding/codecs/vp9/svc_rate_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 5117
      },
      "writtenOn": "2019-02-14T12:44:28Z",
      "side": 1,
      "message": "I tried to do so, but i find the code more easy to understand like it\u0027s now. First find out how many layers are enabled, then allocate bitrate to them. \n\nSingle loop would require checking of currently spent target bitrate + min bitrate of next layer while putting target bitrate to this layer. And Bumping up to max will have to be made at the en anyways.\n\nI\u0027ve added more comments, PTAL.",
      "parentUuid": "50952e3c_e78fa7af",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 230,
        "endChar": 71
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb39a422_c2945589",
        "filename": "modules/video_coding/codecs/vp9/svc_rate_allocator.cc",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 5825
      },
      "writtenOn": "2019-02-14T13:10:35Z",
      "side": 1,
      "message": "\u003e\u003eSingle loop would require checking of currently spent target bitrate + min bitrate of next layer while\nThere is no need to check anything related to next layer.\n\n\u003e\u003eI find the code more easy to understand like it\u0027s now.\nup to you. but here is 1 loop instead of 3:\n\n  size_t left_bitrate_bps \u003d total_bitrate_bps;\n  size_t sl_idx;\n  for (sl_idx \u003d 0; sl_idx \u003c num_spatial_layers; ++sl_idx) {\n    const size_t min_bitrate_bps \u003d\n        codec_.spatialLayers[sl_idx].minBitrate * 1000;\n    const size_t target_bitrate_bps \u003d\n        codec_.spatialLayers[sl_idx].targetBitrate * 1000;\n\n    const size_t bitrate_bps \u003d std::min(left_bitrate_bps, target_bitrate_bps);\n    if (bitrate_bps \u003e\u003d min_bitrate_bps) {\n      bitrate_allocation.SetBitrate(sl_idx, 0, bitrate_bps);\n    } else {\n      break;\n    }\n\n    left_bitrate_bps -\u003d bitrate_bps;\n  }\n\n  if (left_bitrate_bps \u003e 0 \u0026\u0026 sl_idx \u003e 0) {\n    // Add leftover to last allocated layer.\n    const size_t max_bitrate_bps \u003d\n        codec_.spatialLayers[sl_idx - 1].maxBitrate * 1000;\n\n    const size_t bitrate_bps \u003d std::min(\n        bitrate_allocation.GetBitrate(sl_idx - 1, 0) + left_bitrate_bps,\n        max_bitrate_bps);\n    bitrate_allocation.SetBitrate(sl_idx - 1, 0, bitrate_bps);\n  }",
      "parentUuid": "36ea17c7_bd0b91f5",
      "range": {
        "startLine": 199,
        "startChar": 0,
        "endLine": 230,
        "endChar": 71
      },
      "revId": "c7d48bbd343b74edf9a9cfe020856a5d73b6b2bf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}