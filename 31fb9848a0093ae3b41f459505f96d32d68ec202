{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e6195151_5e3e87a1",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 72,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "I\u0027d prefer to call pw_get_library_version() here. As is, the function is a bare wrapper around sscanf and using that function is not always safe.",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4545622e_d2a2df72",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 151,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "uint8_t?",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "661e2bfd_24768980",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 486,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "initialize where builder is defined",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3fefde4_8fc0066e",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "does this belong inside the loop?",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c93282b_e3c8156d",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 503,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "intentionally pushing potentially the same format again? (could also have been pushed with modifiers in line 499)",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "416d5547_8bafff20",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "nit: ++i",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6aff5c0_2e321975",
        "filename": "modules/desktop_capture/linux/base_capturer_pipewire.cc",
        "patchSetId": 5
      },
      "lineNbr": 554,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "uint32_t ?\nalso: ++i",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c87fc1b5_48609307",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 32,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "technically most of these variable names don\u0027t follow the style guide. However, since they\u0027re named after the exported functions they map to, I suggest to just add a comment that explains why we don\u0027t follow the style guide for those names (and what the rule is).",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daf6c234_9d6a4509",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 150,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "g_lib_egl?",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a9117d6_96565767",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 153,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "should libEGL (or g_lib_egl) be a local static in this function rather than at global scope?\nAs is, dlopen() will be called every time OpenEGL() is called - a local static, would guarantee only once.",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c87f3ec_18c97ab6",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 191,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "g_lib_gl?",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d2c131d_fc3fcaf5",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 230,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "why is this method static and not others? Should it be in an anonymous namespace at the top of the file?",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20523a5b_5237eeb3",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 232,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "this variable is used way below - move definition closer to use.",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40a5fbad_decfb16c",
        "filename": "modules/desktop_capture/linux/egl_dmabuf.cc",
        "patchSetId": 5
      },
      "lineNbr": 234,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-09-21T09:42:00Z",
      "side": 1,
      "message": "initialize and define at the same place.",
      "revId": "31fb9848a0093ae3b41f459505f96d32d68ec202",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}