{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d630dc6d_df8f00c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-08-31T14:41:39Z",
      "side": 1,
      "message": "victor: absl table question below, you might know",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9fe73638_c7ae3320",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-08-31T19:39:16Z",
      "side": 1,
      "message": "This seems like a great optimization, my only concern is that it\u0027s technically possible for two codecs to have different parameters (meaning FMTP parameters) in different m\u003d sections. There are certain parameters that \"identify\" the codec and must be identical for a given payload type, and others that are allowed to be different. For example, for H264: \n\n   o  The parameters identifying a media format configuration for H.264\n      are profile-level-id and packetization-mode.  These media format\n      configuration parameters (except for the level part of profile-\n      level-id) MUST be used symmetrically; that is, the answerer MUST\n      either maintain all configuration parameters or remove the media\n      format (payload type) completely if one or more of the parameter\n      values are not supported.  Note that the level part of profile-\n      level-id includes level_idc, and, for indication of Level 1b when\n      profile_idc is equal to 66, 77, or 88, bit 4\n      (constraint_set3_flag) of profile-iop.  The level part of profile-\n      level-id is changeable.\n      \nSo, two m\u003d sections can use different profile levels (and various other parameters not mentioned above) for the same H264 payload type. This is something that Unified Plan allows that Plan B doesn\u0027t.\n\nMeaning that to eliminate duplicates you would need to check whether the FMTP lines are actually the same. And assigning the codec_id would be a bit more complicated. But it\u0027s still doable.",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95afa969_0150cd34",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-08-31T20:18:39Z",
      "side": 1,
      "message": "BUNDLE says that? It certainly seems against the spirit of \"one codec per payload type, no different meanings\" :-(",
      "parentUuid": "9fe73638_c7ae3320",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2cb944f4_83d18688",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-01T10:00:46Z",
      "side": 1,
      "message": "This is from RFC 3984? BUNDLE (RFC 8843 9.1.1 + 8859 4.7) seem to require same fmtp though.\nChrome does however not enforce this in SRD which seems like a bug to me.\nhttps://jsfiddle.net/fippo/Lrdj4mwu/3/",
      "parentUuid": "95afa969_0150cd34",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c7257a5_e60dac6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-01T12:58:46Z",
      "side": 1,
      "message": "I didn\u0027t think this was allowed and filed https://github.com/w3c/webrtc-stats/issues/664 as a follow-up, but considering Chrome does currently allow this (https://jsfiddle.net/henbos/7kqxgnr8/) I updated the CL to correctly handle different FPTM lines.",
      "parentUuid": "95afa969_0150cd34",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a209b3f_4c564b2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-01T13:25:12Z",
      "side": 1,
      "message": "Sounds like different FMTPs shouldn\u0027t be allowed, I could either revert to the earlier PS or land this and simplify as part of a separate issue to disallow different FMTPs. WDYT Taylor?",
      "parentUuid": "2c7257a5_e60dac6b",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "101f8692_66a25ccd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-09-01T22:46:21Z",
      "side": 1,
      "message": "Thanks for weighing in fippo!\n\n\u003e It certainly seems against the spirit of \"one codec per payload type, no different meanings\"\n\nThe reason each payload type can only refer to one codec is because the receiver needs to know how to decode it. But keeping with the H264 example, the decoder doesn\u0027t need to know the exact profile level in advance (as far as I know), so it\u0027s perfectly valid to be receiving two tracks that use different levels.\n\nHowever, 8859 4.7 is pretty clear that fmtp lines MUST be identical. It could be an oversight, but if we assume it\u0027s not, Chrome should start complaining about mismatching fmtp lines, and this becomes a non issue for this CL.\n\nI\u0027m ok with landing this CL as is, and I\u0027m also good with the previous version given that this is such a niche issue and apparently not supported by the standard; I\u0027ll trust your judgment.",
      "parentUuid": "9a209b3f_4c564b2f",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "095ab0a4_bb367dd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-09-01T22:50:27Z",
      "side": 1,
      "message": "Given hta\u0027s comment here (https://github.com/w3c/webrtc-stats/issues/614#issuecomment-1017941582) I think it\u0027s safe to say FMTPs should be identical. I generally defer to him when it comes to RTP specification issues.",
      "parentUuid": "101f8692_66a25ccd",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22de8943_de526d12",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-02T06:19:17Z",
      "side": 1,
      "message": "the decoder doesn\u0027t actually know about the profile level :-)\nWe should first make the SDP reject the \"bad\" behavior and then land the simpler version of this.",
      "parentUuid": "095ab0a4_bb367dd5",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c63e3f78_f881287b",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 4
      },
      "lineNbr": 1562,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-08-31T14:41:39Z",
      "side": 1,
      "message": "victor: would an abseil map help us here (I tried but GN/presubmit did not allow me)? This is a tiny mapping with 127 entries but stats performance is quite important so we would take every bit we can get",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "02062072_abbadc71",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 4
      },
      "lineNbr": 1562,
      "author": {
        "id": 12215
      },
      "writtenOn": "2022-08-31T21:38:44Z",
      "side": 1,
      "message": "If these maps are seldom mutated (inserted, deleted), consider using a webrtc::flat_map as that will bring much better cache locality. It sounds like it would be suitable if the number of entries is small. \n\nabsl::flat_hash_map aren\u0027t allowed still, due to the increases in code size and non-optimized performance on some architectures.",
      "parentUuid": "c63e3f78_f881287b",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83354d4e_dac41742",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 4
      },
      "lineNbr": 1562,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-01T10:00:46Z",
      "side": 1,
      "message": "thank you!\nhbos: lets try flat_set (bonus: with a reserved size of 127) in a different CL?",
      "parentUuid": "02062072_abbadc71",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79b958f4_fbb917a0",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 4
      },
      "lineNbr": 1562,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-09-01T12:58:46Z",
      "side": 1,
      "message": "For both the map and the set we could end up with large number of entries meaning the O(n) insertion would make this function O(n^2) for n like 50 or even \u003e 100 when you have 100s of transceivers and not BUNDLING. Less of a concern in BUNDLE but sticking to std containers for now.",
      "parentUuid": "02062072_abbadc71",
      "revId": "ed4275826f7a740a7650f3069a361ddb20919335",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}