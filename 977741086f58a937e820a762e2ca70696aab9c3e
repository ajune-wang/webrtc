{
  "comments": [
    {
      "key": {
        "uuid": "d545f5d1_c8e9e236",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-03-25T13:47:17Z",
      "side": 1,
      "message": "You can use FunctionView---if for no other reason than to signal that the call happens synchronously.",
      "range": {
        "startLine": 46,
        "startChar": 26,
        "endLine": 46,
        "endChar": 39
      },
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b37293f8_71cb402a",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-03-25T14:24:00Z",
      "side": 1,
      "message": "Done.\n(personally prefer to use more of std:: classes than webrtc-specific when it doesn\u0027t matter much, but agree that FunctionView is an extra hint the function doesn\u0027t outlive the call).",
      "parentUuid": "d545f5d1_c8e9e236",
      "range": {
        "startLine": 46,
        "startChar": 26,
        "endLine": 46,
        "endChar": 39
      },
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ceb8265b_b0012f7a",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-03-25T13:47:17Z",
      "side": 1,
      "message": "This one doesn\u0027t need to be a unique_ptr, does it?",
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9cfae1b_b3053f9a",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-03-25T14:24:00Z",
      "side": 1,
      "message": "nope, removed.\nGot confused by comment about destructor.\nBut rereading the test name realize this test is not about destructor.",
      "parentUuid": "ceb8265b_b0012f7a",
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0b9f429_9b6ecc77",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-03-25T13:47:17Z",
      "side": 1,
      "message": "When you run a lambda synchronously, just use [\u0026]. It\u0027s easier to read, partly because it signals that the callback must be synchronous, partly because it means that the lambda doesn\u0027t have to care what it captures.\n\n(Many more occurrences below.)",
      "range": {
        "startLine": 78,
        "startChar": 23,
        "endLine": 78,
        "endChar": 48
      },
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b2932c_91bb9dc7",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-03-25T14:24:00Z",
      "side": 1,
      "message": "Done\nyep, extra hint that lambda shouldn\u0027t exit the scope probably makes it more readable",
      "parentUuid": "e0b9f429_9b6ecc77",
      "range": {
        "startLine": 78,
        "startChar": 23,
        "endLine": 78,
        "endChar": 48
      },
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "305df242_146a5422",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-03-25T13:47:17Z",
      "side": 1,
      "message": "Collapse these two to one with\n\n  EXPECT_EQ(!RTC_DCHECK_IS_ON,\n            sequenced_task_checker.CalledSequentially());\n\n?\n\n(More similar opportunities below.)",
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e49dcba_c679b3cc",
        "filename": "rtc_base/sequenced_task_checker_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-03-25T14:24:00Z",
      "side": 1,
      "message": "Done\nexcept doing it other way around: EXPECT_EQ(value_under_test, constant);\nsince starting from two years ago that is slightly more recommended way than other way around.",
      "parentUuid": "305df242_146a5422",
      "revId": "977741086f58a937e820a762e2ca70696aab9c3e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}