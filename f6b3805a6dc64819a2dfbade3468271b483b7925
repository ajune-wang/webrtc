{
  "comments": [
    {
      "key": {
        "uuid": "ee0c61ae_eedcd2ef",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-06T13:40:32Z",
      "side": 1,
      "message": "Maybe shorten to \"Passing `absl::optional\u003cT\u003e`\", since the text covers both by value (encouraged) and by reference (discouraged).",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 67
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c8b319d_ac39de7d",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-06T14:29:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ee0c61ae_eedcd2ef",
      "range": {
        "startLine": 80,
        "startChar": 4,
        "endLine": 80,
        "endChar": 67
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "174b60ff_8058a685",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-06T13:40:32Z",
      "side": 1,
      "message": "And the exception is internal functions or methods where all relevant callers/callees use optional for storage. Is that worth mentioning? I don\u0027t think the small potential efficiency gain is that relevant, but it makes the code a bit nicer to not have to convert via |o ? \u0026*o: nullptr|.",
      "range": {
        "startLine": 87,
        "startChar": 47,
        "endLine": 87,
        "endChar": 56
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c782f82b_139b2f48",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-06T14:29:55Z",
      "side": 1,
      "message": "The general mood before has been to keep these style rules short, with a minimum of supporting arguments.",
      "parentUuid": "174b60ff_8058a685",
      "range": {
        "startLine": 87,
        "startChar": 47,
        "endLine": 87,
        "endChar": 56
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c14ebe8_a8143104",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-06T13:40:32Z",
      "side": 1,
      "message": "Nit: I think it is nicer to the eyes to terminate the emphasis after \"return\".",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8d6d6bb_e29bf3dc",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-06T13:50:08Z",
      "side": 1,
      "message": "return seems a different use-case than pass.\n(const T\u0026 is generally not a good return type for anything other than accessor.\ndo not see why optional\u003cT\u003e is special)\n\nMotivation also cover the pass use-case, but doesn\u0027t explain what\u0027s wrong with return.",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 10
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5214a7b7_9ff71988",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-06T13:58:36Z",
      "side": 1,
      "message": "The example given earlier is an access method, where the implementation is changed from internally using an absl::optional\u003cFoo\u003e for storage to using an std::unique_ptr\u003cFoo\u003e. If the corresponding getter method returns an an const absl::optional\u003cFoo\u003e\u0026, that results in a bad impedance mismatch.\n\nWhile with const Foo*, no interface change is needed. Basically same reason why you\u0027d return an ArrayView rather than a const std::vector\u0026, even if the current implementation uses an std::vector for underlying storage.",
      "parentUuid": "b8d6d6bb_e29bf3dc",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 10
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f9bdd4c_2b17a29a",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-06T14:29:55Z",
      "side": 1,
      "message": "What Nisse said. By-reference isn\u0027t useful nearly as often for return values as for arguments, but when it is useful, the same reasoning applies in both cases w.r.t. const optional\u003cT\u003e\u0026 vs. const T*.",
      "parentUuid": "5214a7b7_9ff71988",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 10
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaf5b9fe_6bc0daef",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-06T14:29:55Z",
      "side": 1,
      "message": "I added the emphasis so that it would be possible to read only that part of the text and skip everything else. If I follow your suggestion, that\u0027s no longer the case. (This is a technique to avoid stating the most important point once at the beginning, and then again in context in the middle of the text.)\n\nWould you still argue that only \"do not pass or return\" should be emphasized?",
      "parentUuid": "9c14ebe8_a8143104",
      "range": {
        "startLine": 88,
        "startChar": 3,
        "endLine": 88,
        "endChar": 9
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10b3dcd5_8bd58822",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-06T15:04:54Z",
      "side": 1,
      "message": "I disagree.\nusing reference at the parameter put burden on the user of the class, there generally lot\u0027s of users with different needs.\nusing reference when returning put burden on the implementer of the class, there is generally single implementation.\nThus restricting return seems too heavy to me to put it into style guide.\n\nlooking at the example I see that forcing to return const T* instead of const optional\u003cT\u003e\u0026 forces extra translation.\n\n(Personally I usually do not abstract return type. Often it just adds an extra layer of indirection without any value. Sure refactoring can be harder in that case, but refactoring is less common that reading or using the accessor)",
      "parentUuid": "4f9bdd4c_2b17a29a",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 10
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "027315f5_188ab3d1",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-06T16:42:21Z",
      "side": 1,
      "message": "I agree in principle: if changing the return type is not hard, then avoiding `const optional\u003cT\u003e\u0026` as a return type is correspondingly less valuable. Provided there\u0027s a single implementation---your reasoning doesn\u0027t apply to interface functions.\n\nFor these reasons, I would still argue that `const T*` is the right default, but in the interest of style rule brevity (and bikeshedding brevity), the right thing to do is probably to change this CL to talk only about argument passing, and not mention return values. We can always go back and change that later if we change our minds.\n\nChanges forthcoming.",
      "parentUuid": "10b3dcd5_8bd58822",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 10
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e35352be_5d10d696",
        "filename": "style-guide.md",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-06T17:00:29Z",
      "side": 1,
      "message": "That I agree.\n\nyes, my reason doesn\u0027t apply to interface function, because I consider reference [including reference type] a bad choice for functions that are not simple accessors.\nvirtual functions usually shouldn\u0027t pretend they are simple accessors.",
      "parentUuid": "027315f5_188ab3d1",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 10
      },
      "revId": "f6b3805a6dc64819a2dfbade3468271b483b7925",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}