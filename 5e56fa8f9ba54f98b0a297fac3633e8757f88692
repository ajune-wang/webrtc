{
  "comments": [
    {
      "key": {
        "uuid": "98788a23_7ba4a63b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-20T12:32:51Z",
      "side": 1,
      "message": "I don\u0027t follow these references. Can you rephrase for clarity?\n\nAnd strike one \"ultimately\".",
      "range": {
        "startLine": 9,
        "startChar": 36,
        "endLine": 9,
        "endChar": 97
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6654999_4ececa68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 6
      },
      "lineNbr": 9,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-20T12:52:27Z",
      "side": 1,
      "message": ":D I don\u0027t know what happened to this CL description, it ended up having the same text as change #3 in this CL relation chain.",
      "parentUuid": "98788a23_7ba4a63b",
      "range": {
        "startLine": 9,
        "startChar": 36,
        "endLine": 9,
        "endChar": 97
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ce4ee78_91bae3ca",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-20T12:32:51Z",
      "side": 1,
      "message": "Does this need to be a separate method? The alternative would be to let AddEncodedSink return success/failure.",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 141,
        "endChar": 62
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f498e0d_4f89c8ae",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 141,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-20T12:52:27Z",
      "side": 1,
      "message": "Yes, it needs to be separate. In blink mediarecorder we need to see if a source supports encoded media before we instantiate a special passthrough sink which does not transcode.",
      "parentUuid": "7ce4ee78_91bae3ca",
      "range": {
        "startLine": 139,
        "startChar": 0,
        "endLine": 141,
        "endChar": 62
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f138649a_a26e1e61",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 145,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-20T12:32:51Z",
      "side": 1,
      "message": "RequestKeyFrame, to be consistent with naming in other classes.\n\nI take it it will ask the remote end for a keyframe, and ask again if no key frame is received shortly.",
      "range": {
        "startLine": 145,
        "startChar": 15,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32eee7c4_701fc80a",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 145,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-20T12:52:27Z",
      "side": 1,
      "message": "I wanted to specifically make some kind of distinction and not call it RequestKeyFrame because the method in VideoReceiveStream isn\u0027t reliable, and this one is supposed to be.",
      "parentUuid": "f138649a_a26e1e61",
      "range": {
        "startLine": 145,
        "startChar": 15,
        "endLine": 145,
        "endChar": 31
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "558a544c_45269b6d",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 151,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-20T12:21:47Z",
      "side": 1,
      "message": "prefer rtc::VideoSourceInterface\u003cVideoFrame\u003e but with another type of Videoframe.",
      "range": {
        "startLine": 151,
        "startChar": 30,
        "endLine": 151,
        "endChar": 55
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c346e325_57a9c201",
        "filename": "api/video/video_encoded_sink_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-20T12:21:47Z",
      "side": 1,
      "message": "I would prefer if this class did not exist. Instead continue to use rtc::VideoSinkInterface only but with a new EncodedFrameType.",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 31
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9947df33_5873871a",
        "filename": "api/video/video_encoded_sink_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-20T12:35:12Z",
      "side": 1,
      "message": "Note that VideoSinkInterface::OnFrame wants a const ref to a frame, while this frame type seems to be reference counted. Does it have to be?",
      "parentUuid": "c346e325_57a9c201",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 31
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2306601b_49736707",
        "filename": "api/video/video_encoded_sink_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 23,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-20T12:52:27Z",
      "side": 1,
      "message": "As blink MediaStream ends up passing the frame over thread boundaries: if constref was used, MediaStreamRemoteVideoSource would need to copy out all attributes from the frame in order to store it in it\u0027s own frame object.\n\nWith this solution we don\u0027t need to do that and the scoped_refptr frame can be simply moved into blink\u0027s own frame structure. I find this a much better solution. Wdyt.\n\nNiels/Per what\u0027s your verdict; keep as separate class or make use of VideoSinkInterface?",
      "parentUuid": "9947df33_5873871a",
      "range": {
        "startLine": 23,
        "startChar": 6,
        "endLine": 23,
        "endChar": 31
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c784bd1a_a83530bf",
        "filename": "api/video/video_encoded_sink_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-20T12:32:51Z",
      "side": 1,
      "message": "Naming: Suggest EncodedVideoFrameSink and EncodedFrame.",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 20
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24590d00_4def9490",
        "filename": "api/video/video_encoded_sink_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 26,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-20T12:52:27Z",
      "side": 1,
      "message": "Weren\u0027t you confused by the EncodedFrame name in the previous review?\n\nIf I do it as Per suggested, where would you guys like me to declare the encoded frame type? New file?\n\nAnd what should the name be to not confuse it with video_coding::EncodedFrame? Would VideoEncodedFrameBuffer suffice?",
      "parentUuid": "c784bd1a_a83530bf",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 26,
        "endChar": 20
      },
      "revId": "5e56fa8f9ba54f98b0a297fac3633e8757f88692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}