{
  "comments": [
    {
      "key": {
        "uuid": "777a6562_01b8f24c",
        "filename": "api/rtp_parameters.h",
        "patchSetId": 7
      },
      "lineNbr": 235,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "I\u0027d still recommend string_view, or better yet std::string by value since you always keep the string. Callers will not generally notice.",
      "range": {
        "startLine": 235,
        "startChar": 31,
        "endLine": 235,
        "endChar": 49
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7aea1b7_93c9c988",
        "filename": "media/base/media_engine.h",
        "patchSetId": 7
      },
      "lineNbr": 57,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "Returning the vector by value will copy it. Is returning by const reference an option?",
      "range": {
        "startLine": 57,
        "startChar": 10,
        "endLine": 57,
        "endChar": 59
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbb5e661_ddd79631",
        "filename": "media/engine/webrtc_video_engine.cc",
        "patchSetId": 7
      },
      "lineNbr": 524,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "Postdecrement not necessary---you don\u0027t use `id` afterwards.",
      "range": {
        "startLine": 524,
        "startChar": 60,
        "endLine": 524,
        "endChar": 62
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c494e1e9_8ddce4ad",
        "filename": "media/engine/webrtc_video_engine_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 740,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "Add a using declaration for this one, and others used in EXPECT_THAT?",
      "range": {
        "startLine": 740,
        "startChar": 16,
        "endLine": 740,
        "endChar": 35
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d837275_a704de99",
        "filename": "pc/peer_connection_header_extension_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 38,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "Strongly prefer make_unique to raw `new`.",
      "range": {
        "startLine": 38,
        "startChar": 31,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36f1c4fe_67198a4d",
        "filename": "pc/peer_connection_header_extension_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 39,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "Make an explicit constructor call here? The constructor allows implicit construction, but that it does so doesn\u0027t appear to be a good idea...",
      "range": {
        "startLine": 39,
        "startChar": 8,
        "endLine": 39,
        "endChar": 43
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53978e56_43a8fc53",
        "filename": "pc/peer_connection_header_extension_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 87,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-03-15T12:51:30Z",
      "side": 1,
      "message": "Consider making accessors for media type and semantics in PeerConnectionHeaderExtensionTest instead of using the awkward std::tie.",
      "range": {
        "startLine": 85,
        "startChar": 2,
        "endLine": 87,
        "endChar": 47
      },
      "revId": "99847d356f91e91ee0b880fd3c895cffa44d6f12",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}