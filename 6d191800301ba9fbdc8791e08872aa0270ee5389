{
  "comments": [
    {
      "key": {
        "uuid": "30c6bdc8_f05d6852",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 9
      },
      "lineNbr": 851,
      "author": {
        "id": 5098
      },
      "writtenOn": "2018-06-14T10:21:15Z",
      "side": 0,
      "message": "I wasn\u0027t aware of this code. It\u0027s never good to have to convert to I420 because of performance and quality loss, and this code does not even try to reuse the memory.\n\nEmircan - do you know when this code path triggers? Is it a use case you need to support?",
      "range": {
        "startLine": 839,
        "startChar": 1,
        "endLine": 851,
        "endChar": 61
      },
      "revId": "6d191800301ba9fbdc8791e08872aa0270ee5389",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7e3bf26_2c00607d",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 9
      },
      "lineNbr": 851,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-14T10:39:03Z",
      "side": 0,
      "message": "It seems this happens if incoming frames are larger that what\u0027s configured for the highest simulcast layer (see ReconfigureEncoder).\n\nFor one, why are simulcast streams configured with a width and height, regardless of aspect ratio of the incoming video? The restriction should be passed on to the video source with VisdeoSinkWants, but there we only have a pixel count, no width and height.",
      "parentUuid": "30c6bdc8_f05d6852",
      "range": {
        "startLine": 839,
        "startChar": 1,
        "endLine": 851,
        "endChar": 61
      },
      "revId": "6d191800301ba9fbdc8791e08872aa0270ee5389",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14e44894_4a8a38c4",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 9
      },
      "lineNbr": 851,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-06-14T11:03:33Z",
      "side": 0,
      "message": "It was added because sometimes camera would produce an odd resolution and ignore SinkWants or something similar. This caused all the frames to be not encoded and dropped. I know it\u0027s bad to convert to I420, but this should only happen in some very specific and rare situations.",
      "parentUuid": "c7e3bf26_2c00607d",
      "range": {
        "startLine": 839,
        "startChar": 1,
        "endLine": 851,
        "endChar": 61
      },
      "revId": "6d191800301ba9fbdc8791e08872aa0270ee5389",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70c79c4f_33628821",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 9
      },
      "lineNbr": 851,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-14T11:15:35Z",
      "side": 0,
      "message": "Please be a bit more specific. Where were the frames dropped? Do you mean literally \"odd\", as in not divisible by 2? In that case we should do cheap cropping by a few pixels without any scaling, and preferably closer to the simulcast encoder that requires even size.\n\nAre there any related tests?",
      "parentUuid": "14e44894_4a8a38c4",
      "range": {
        "startLine": 839,
        "startChar": 1,
        "endLine": 851,
        "endChar": 61
      },
      "revId": "6d191800301ba9fbdc8791e08872aa0270ee5389",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb7619dd_dbc20dd1",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 9
      },
      "lineNbr": 851,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-06-14T16:23:55Z",
      "side": 0,
      "message": "The resolution was not divisible by 4. As I remember now, one example of the problem is when FullHD stream cpu adapts down - This leads to a frame size not divisible by 4. Here\u0027s the test.\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/video/video_stream_encoder_unittest.cc?q\u003dAcceptsFullHdAdaptedDownSimulcastFrames\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d2954\n\nThe cropping of up to 3 pixels in each dimension should be enough in these cases. The pure scaling code path is there as a failsafe if something goes terribly wrong with frame size configuration we will be slow but at least we will pass some frames through.",
      "parentUuid": "70c79c4f_33628821",
      "range": {
        "startLine": 839,
        "startChar": 1,
        "endLine": 851,
        "endChar": 61
      },
      "revId": "6d191800301ba9fbdc8791e08872aa0270ee5389",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a639812e_c9eeeda5",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 9
      },
      "lineNbr": 851,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-06-15T10:27:46Z",
      "side": 0,
      "message": "To crop, we should be able to do that cheaply, with no scaling or copying. Either here, using WrapI420Buffer, or preferably closer to the encoder that requires the size to be a multiple of 4.",
      "parentUuid": "bb7619dd_dbc20dd1",
      "range": {
        "startLine": 839,
        "startChar": 1,
        "endLine": 851,
        "endChar": 61
      },
      "revId": "6d191800301ba9fbdc8791e08872aa0270ee5389",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}