{
  "comments": [
    {
      "key": {
        "uuid": "8e991971_c69cbe93",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 17
      },
      "lineNbr": 1479,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-24T12:30:08Z",
      "side": 1,
      "message": "This check looks independent of the loop variable. Move out of the loop? And maybe it should be an RTC_CHECK (not DCHECK, if violation leads to out of bounds accesses).",
      "range": {
        "startLine": 1477,
        "startChar": 8,
        "endLine": 1479,
        "endChar": 63
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb58871e_43ee76f1",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 17
      },
      "lineNbr": 1479,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-24T14:41:52Z",
      "side": 1,
      "message": "That\u0027s true, moved it out of the loop.\n\nEncoders can be injected, and we don\u0027t want to crash on bad input.",
      "parentUuid": "8e991971_c69cbe93",
      "range": {
        "startLine": 1477,
        "startChar": 8,
        "endLine": 1479,
        "endChar": 63
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2ade663_4beb3965",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 17
      },
      "lineNbr": 1479,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-26T09:10:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fb58871e_43ee76f1",
      "range": {
        "startLine": 1477,
        "startChar": 8,
        "endLine": 1479,
        "endChar": 63
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1cb9e3c_8b22b3d5",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 17
      },
      "lineNbr": 1488,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-24T12:30:08Z",
      "side": 1,
      "message": "Maybe an RTC_CHECK?",
      "range": {
        "startLine": 1487,
        "startChar": 0,
        "endLine": 1488,
        "endChar": 77
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcee4748_26968e5d",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 17
      },
      "lineNbr": 1488,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-24T14:41:52Z",
      "side": 1,
      "message": "Same here.",
      "parentUuid": "a1cb9e3c_8b22b3d5",
      "range": {
        "startLine": 1487,
        "startChar": 0,
        "endLine": 1488,
        "endChar": 77
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d6542ad_c9932785",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 17
      },
      "lineNbr": 1488,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-26T09:10:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fcee4748_26968e5d",
      "range": {
        "startLine": 1487,
        "startChar": 0,
        "endLine": 1488,
        "endChar": 77
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f0a4d99_7054355d",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 352,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-24T11:42:44Z",
      "side": 1,
      "message": "Spelling",
      "range": {
        "startLine": 352,
        "startChar": 33,
        "endLine": 352,
        "endChar": 37
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a42f573_cd5e40c4",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 352,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-24T12:00:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f0a4d99_7054355d",
      "range": {
        "startLine": 352,
        "startChar": 33,
        "endLine": 352,
        "endChar": 37
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efcc417d_6ba62388",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 357,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-24T12:30:08Z",
      "side": 1,
      "message": "\"encoders\u0027\" or \"encoder\u0027s\" depending on number. Or rephrase as \"buffer state of the encoders\"",
      "range": {
        "startLine": 357,
        "startChar": 58,
        "endLine": 357,
        "endChar": 66
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3007cf8c_baa173d6",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 357,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-24T14:41:52Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "efcc417d_6ba62388",
      "range": {
        "startLine": 357,
        "startChar": 58,
        "endLine": 357,
        "endChar": 66
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ac53415_ab1ece18",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 359,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-24T12:30:08Z",
      "side": 1,
      "message": "What value is used if no frame has updated the buffer?",
      "range": {
        "startLine": 358,
        "startChar": 58,
        "endLine": 359,
        "endChar": 25
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e2a553f_9d59aee4",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 359,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-24T14:41:52Z",
      "side": 1,
      "message": "uninitialized",
      "parentUuid": "0ac53415_ab1ece18",
      "range": {
        "startLine": 358,
        "startChar": 58,
        "endLine": 359,
        "endChar": 25
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89c0d433_8084db90",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 359,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-26T09:10:58Z",
      "side": 1,
      "message": "So how do we avoid access to uninitialized entries? We rely on the encoder to never say it references a buffer, without previously having said that the buffer is updated?\n\nMaybe we should log an error if that happens, or at least initialize to some recognizable value, e.g, -1?",
      "parentUuid": "3e2a553f_9d59aee4",
      "range": {
        "startLine": 358,
        "startChar": 58,
        "endLine": 359,
        "endChar": 25
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f5df285_24a5b849",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 359,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-26T10:44:18Z",
      "side": 1,
      "message": "Logging a message in the case of an obvious error is a good idea.",
      "parentUuid": "89c0d433_8084db90",
      "range": {
        "startLine": 358,
        "startChar": 58,
        "endLine": 359,
        "endChar": 25
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c5b640e_e7888a29",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 360,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-24T12:30:08Z",
      "side": 1,
      "message": "Out of curiosity, any benefit of std::array over\n\nint64_t encoder_buffer_state_[kMaxEncoderBuffers][kMaxSimulcastStreams];\n\n?\n\nPlease mention explicitly that the int64_t values are frame ids.",
      "range": {
        "startLine": 360,
        "startChar": 2,
        "endLine": 360,
        "endChar": 12
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3dafb8f_92886aec",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 360,
      "author": {
        "id": 5527
      },
      "writtenOn": "2019-04-24T14:41:52Z",
      "side": 1,
      "message": "Updated comment to mention frame ids.\n\nThe benefits are that you can get the size of the container with size(), and that it can check bounds on debug builds.",
      "parentUuid": "5c5b640e_e7888a29",
      "range": {
        "startLine": 360,
        "startChar": 2,
        "endLine": 360,
        "endChar": 12
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02a8d455_7383c842",
        "filename": "video/video_stream_encoder.h",
        "patchSetId": 17
      },
      "lineNbr": 360,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-26T09:10:58Z",
      "side": 1,
      "message": "Ok.",
      "parentUuid": "f3dafb8f_92886aec",
      "range": {
        "startLine": 360,
        "startChar": 2,
        "endLine": 360,
        "endChar": 12
      },
      "revId": "c5d662d06605f4ceee38cffd15c4f5b959a88808",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}