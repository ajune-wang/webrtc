{
  "comments": [
    {
      "key": {
        "uuid": "8c12fc07_866fe9af",
        "filename": "rtc_base/synchronization/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 88,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-02T08:19:15Z",
      "side": 1,
      "message": "not needed",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2581e55_771daadc",
        "filename": "rtc_base/synchronization/BUILD.gn",
        "patchSetId": 13
      },
      "lineNbr": 88,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T10:38:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8c12fc07_866fe9af",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 21
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a546b4ec_e3966e9f",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 22,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-02T10:45:49Z",
      "side": 1,
      "message": "Can this be just `.exchange`? With std::memory_order_acquire?",
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b0d107b2_81ae9d28",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-06-02T07:09:16Z",
      "side": 1,
      "message": "We have more or less convoluted ways to yield in other places, with methods such as usleep(0), ::Sleep(0), sched_yield, nanosleep(...). If std::this_thread::yield() is the right way to do it, it would be nice to use it everewhere. (In a different cl, that is).",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1801767_009d4159",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T07:18:41Z",
      "side": 1,
      "message": "Yep, I thought it was nice that there is a standard way to do it. I found it in the Abseil test for TryLock.",
      "parentUuid": "b0d107b2_81ae9d28",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfa90c77_3a129b09",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-06-02T07:41:42Z",
      "side": 1,
      "message": "but this is not the standard way to do it. This adds a webrtc dependancy on \u003cthread\u003e which we do not use.",
      "parentUuid": "d1801767_009d4159",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "436f6ecf_434850ab",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T07:52:58Z",
      "side": 1,
      "message": "okay - do you want the old way back then?",
      "parentUuid": "bfa90c77_3a129b09",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc641663_6e01fcaf",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-06-02T07:55:00Z",
      "side": 1,
      "message": "Yes, unless we have a cleaner way to do it that is still in line with the style guide\n\nMore info here:\n\nhttps://chromium-cpp.appspot.com/#:~:text\u003dC%2B%2B11%20Banned%20Library%20Features\u0026text\u003dKeep%20using%20the%20base%2F%20classes.\u0026text\u003dRandom%20number%20generation%20algorithms%20and%20utilities.\u0026text\u003dBanned%20by%20the%20Google%20Style%20Guide%20due%20to%20concerns%20that,more%20template%2Dheavy%20interface%20style.\u0026text\u003dOverlaps%20with%20many%20regular%20expression%20libraries%20in%20Chromium.",
      "parentUuid": "436f6ecf_434850ab",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0017102_622dbaf8",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 23,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T10:38:41Z",
      "side": 1,
      "message": "I introduced rtc_base/synchronization/yield.h and stuffed the implementation details there. And moved this the 2 other yields to call it.\nyield_policy.h did not seem to be a good place to store it given the implementation details.",
      "parentUuid": "cc641663_6e01fcaf",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 23,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "147a77b2_9611da72",
        "filename": "rtc_base/synchronization/mutex.cc",
        "patchSetId": 13
      },
      "lineNbr": 30,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-06-02T10:45:49Z",
      "side": 1,
      "message": "`.exchange`? With std::memory_order_release?\n\n(In fact, unless RTC_DCHECK_IS_ON, you can do `.store` instead of `.exchange`, if you want.)",
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfa3fc1d_82a51508",
        "filename": "rtc_base/synchronization/mutex.h",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-02T08:19:15Z",
      "side": 1,
      "message": "wdyt about removing this right away?\nmass-replacement then would look like\n\"rtc::CriticalSection \u003cidentifier\u003e;\" -\u003e \"mutable Mutex \u003cidentifier\u003e\"",
      "range": {
        "startLine": 38,
        "startChar": 31,
        "endLine": 38,
        "endChar": 54
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73c59f45_ed353e1a",
        "filename": "rtc_base/synchronization/mutex.h",
        "patchSetId": 13
      },
      "lineNbr": 38,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T10:38:41Z",
      "side": 1,
      "message": "ok, I guess we only risk some mutable proliferation.",
      "parentUuid": "cfa3fc1d_82a51508",
      "range": {
        "startLine": 38,
        "startChar": 31,
        "endLine": 38,
        "endChar": 54
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "686d6a20_1c719ca9",
        "filename": "rtc_base/synchronization/mutex.h",
        "patchSetId": 13
      },
      "lineNbr": 52,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-02T08:19:15Z",
      "side": 1,
      "message": "this macro is discouraged in new code in favor of explicitly deleteing copy constructor and assingment operator in the public section.\nhttps://google.github.io/styleguide/cppguide.html#Copyable_Movable_Types",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "595a1e39_f850c164",
        "filename": "rtc_base/synchronization/mutex.h",
        "patchSetId": 13
      },
      "lineNbr": 52,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T10:38:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "686d6a20_1c719ca9",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 30
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc707e03_fe151b2e",
        "filename": "rtc_base/synchronization/mutex_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 154,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-02T08:19:15Z",
      "side": 1,
      "message": "do not use underscore for test names\n\nhttps://github.com/doo/googletest/blob/master/wiki/FAQ.wiki#Why_should_not_test_case_names_and_test_names_contain_underscore",
      "range": {
        "startLine": 154,
        "startChar": 38,
        "endLine": 154,
        "endChar": 39
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57bde9ba_2c30f903",
        "filename": "rtc_base/synchronization/mutex_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 154,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T10:38:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc707e03_fe151b2e",
      "range": {
        "startLine": 154,
        "startChar": 38,
        "endLine": 154,
        "endChar": 39
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4df7e2b_1f25ecbe",
        "filename": "rtc_base/synchronization/mutex_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 181,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-06-02T08:19:15Z",
      "side": 1,
      "message": "can be GlobalMutexTest (since it is testing GlobalMutex)\navoid need to duplicate name of class under test in the test name.",
      "range": {
        "startLine": 181,
        "startChar": 5,
        "endLine": 181,
        "endChar": 14
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1e776d3_17049b4b",
        "filename": "rtc_base/synchronization/mutex_unittest.cc",
        "patchSetId": 13
      },
      "lineNbr": 181,
      "author": {
        "id": 9515
      },
      "writtenOn": "2020-06-02T10:38:41Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "a4df7e2b_1f25ecbe",
      "range": {
        "startLine": 181,
        "startChar": 5,
        "endLine": 181,
        "endChar": 14
      },
      "revId": "119a6a2ed19cb0934b1f28d5ac0137fa3f2a764d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}