{
  "comments": [
    {
      "key": {
        "uuid": "1885da2e_0edb459c",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-21T15:10:25Z",
      "side": 1,
      "message": "you\u0027ll probably need to keep the default constructor for backward compatibility:\nRtpGenericFrameDescriptor() : RtpGenericFrameDescriptor(false) {}",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 59
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f7a9558_c1bad804",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor.h",
        "patchSetId": 6
      },
      "lineNbr": 30,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-01-21T15:56:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1885da2e_0edb459c",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 59
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "035e4bdc_993f19e4",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor.h",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-21T15:10:25Z",
      "side": 1,
      "message": "may be\nconst bool\n(to stress it set in constructor and never ever change for this object)",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 6
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da755ec9_b6d02ed5",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor.h",
        "patchSetId": 6
      },
      "lineNbr": 81,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-01-21T15:56:00Z",
      "side": 1,
      "message": "Normally - of course. But the assignment operator would have to be explicitly defined, and would have to include a DCHECK over both having the same values. I\u0027d rather skip that.",
      "parentUuid": "035e4bdc_993f19e4",
      "range": {
        "startLine": 81,
        "startChar": 2,
        "endLine": 81,
        "endChar": 6
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26c219dc_279412a9",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension.h",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-21T15:10:25Z",
      "side": 1,
      "message": "probably swap 2nd and 3rd parameters:\n\"When ordering function parameters, put all input-only parameters before any output parameters. \"\nhttps://google.github.io/styleguide/cppguide.html#Output_Parameters\n\n(for symmetry do same with Write function)",
      "range": {
        "startLine": 32,
        "startChar": 47,
        "endLine": 32,
        "endChar": 57
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8982471c_f6598d64",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension.h",
        "patchSetId": 6
      },
      "lineNbr": 32,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-01-21T15:56:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26c219dc_279412a9",
      "range": {
        "startLine": 32,
        "startChar": 47,
        "endLine": 32,
        "endChar": 57
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "acc8751f_cb0bf072",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-21T15:10:25Z",
      "side": 1,
      "message": "interesting, I haven\u0027t consider this kind of usage of extra parameters. it look like a good idea.\nHowever changing the signature to two extra parameters breaks support for this syntax:\n\nRtpPacket packet;\nabsl::optional\u003cRtpGenericFrameDescriptorExtension\u003e may_be_extension \u003d packet.GetExtension\u003cRtpGenericFrameDescriptorExtension\u003e();\n\nprobably not used, so not an issue, but delete value_type alias as a hint this kind of syntax no longer supported for this particular extension.\nalternatively add packet Parse/Write with old signature [likely they are needed for backward compatibility]:\nstatic bool Parse(rtc::ArrayView\u003cconst uint8_t\u003e data,\n                    RtpGenericFrameDescriptor* descriptor) { return Parse(data, descriptor, false); }",
      "range": {
        "startLine": 32,
        "startChar": 57,
        "endLine": 33,
        "endChar": 48
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "193f5f8f_f3161dfc",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-01-21T15:56:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "acc8751f_cb0bf072",
      "range": {
        "startLine": 32,
        "startChar": 57,
        "endLine": 33,
        "endChar": 48
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d53a39c_8c86af0d",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 140,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-21T15:10:25Z",
      "side": 1,
      "message": "may be something like:\n(First|Last)SubFrame flags are not used when Discardability flag is used.",
      "range": {
        "startLine": 140,
        "startChar": 13,
        "endLine": 140,
        "endChar": 66
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39bb205c_4f408021",
        "filename": "modules/rtp_rtcp/source/rtp_generic_frame_descriptor_extension_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 140,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-01-21T15:56:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3d53a39c_8c86af0d",
      "range": {
        "startLine": 140,
        "startChar": 13,
        "endLine": 140,
        "endChar": 66
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "84c52545_a2e685ad",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-21T15:10:25Z",
      "side": 1,
      "message": "May be (similar to RtpVideoStreamReceiverTestH264 below)\ninstead of parametrizing all base tests, \nparameterize only tests that have something to do with generic frame descriptor:\n\nclass RtpVideoStreamReceiverGenericDescriptorTest : public RtpVideoStreamReceiverTest,\n                                   public testing::WithParamInterface\u003cbool\u003e",
      "range": {
        "startLine": 223,
        "startChar": 35,
        "endLine": 223,
        "endChar": 50
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e256dbef_78b3a71b",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-01-21T15:56:00Z",
      "side": 1,
      "message": "IMHO, it\u0027s not worth it to invest more effort in order to run less tests. Or do you feel strongly about this?",
      "parentUuid": "84c52545_a2e685ad",
      "range": {
        "startLine": 223,
        "startChar": 35,
        "endLine": 223,
        "endChar": 50
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81ee1b8e_1d5f20a0",
        "filename": "video/rtp_video_stream_receiver_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 223,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-23T12:53:04Z",
      "side": 1,
      "message": "it is not about running less test,\nit is about documenting when does it matter.\n\nI do not feel strong about it. Up to you and owner of the /video/",
      "parentUuid": "e256dbef_78b3a71b",
      "range": {
        "startLine": 223,
        "startChar": 35,
        "endLine": 223,
        "endChar": 50
      },
      "revId": "0d1b75dd8f627a2b1149bfcf42711561fa0802c5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}