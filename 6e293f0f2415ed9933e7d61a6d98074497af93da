{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e7c42b75_555f8fe4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-09-09T15:07:33Z",
      "side": 1,
      "message": "Is there a second step planned to remove all those hacks from the places where they currently exist? I couldn\u0027t read the referenced bug as envisioning such a step, but it seems like a Good Thing to do.\n\n(Duplicating all the hacks in 2 places ... not so much.)",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "447c3819_5a2927f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-09T15:23:41Z",
      "side": 1,
      "message": "Yes, that\u0027s the intention :)\n\nThe following classes can be:\n  - Simplified: https://source.chromium.org/chromium/_/webrtc/src.git/+/3ed2b8d0b4deeafb51abe1e51aa0a7c241bfc1ba:modules/video_coding/packet_buffer.cc\n  - Removed (almost, need to move some more things into H264PacketBuffer) https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/h264_sps_pps_tracker.cc\n  - Simplified: https://source.chromium.org/chromium/_/webrtc/src.git/+/3ed2b8d0b4deeafb51abe1e51aa0a7c241bfc1ba:video/rtp_video_stream_receiver2.cc\n  \nJust search for H264 and you will find a bunch of H264 specific handling going on.",
      "parentUuid": "e7c42b75_555f8fe4",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "86c513a4_fea306a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "haven\u0027t read all of it, will resume on Monday",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1426007f_8bc7c015",
        "filename": "modules/video_coding/BUILD.gn",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "why public visibility for a library not in api/ ?",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83de9778_cc69e0bf",
        "filename": "modules/video_coding/BUILD.gn",
        "patchSetId": 9
      },
      "lineNbr": 102,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Removed here and for h264_packet_buffer as well",
      "parentUuid": "1426007f_8bc7c015",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10c5b22c_be30fcec",
        "filename": "modules/video_coding/h264_packet_buffer.cc",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "what does this name mean?\n\n(I guess I understand \u0027Mod\u0027 suffix, but what is \u0027Euc\u0027 prefix?)",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 14
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "522bbd02_dd3d136e",
        "filename": "modules/video_coding/h264_packet_buffer.cc",
        "patchSetId": 9
      },
      "lineNbr": 35,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Euclidean Modulus, always output a value in the [0, \u0027div\u0027) range even for negative \u0027n\u0027s.\n\nUpdated the name.",
      "parentUuid": "10c5b22c_be30fcec",
      "range": {
        "startLine": 35,
        "startChar": 8,
        "endLine": 35,
        "endChar": 14
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b66d8bac_7eb09bdc",
        "filename": "modules/video_coding/h264_packet_buffer.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "const auto\u0026",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61612d6f_15c589e4",
        "filename": "modules/video_coding/h264_packet_buffer.cc",
        "patchSetId": 9
      },
      "lineNbr": 53,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b66d8bac_7eb09bdc",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 7
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a263b1f_c4333bd2",
        "filename": "modules/video_coding/h264_packet_buffer.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Aliases\n\n\"Public aliases are for the benefit of an API\u0027s user, and should be clearly documented.\"",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "139d7b73_ee8d2fa1",
        "filename": "modules/video_coding/h264_packet_buffer.h",
        "patchSetId": 9
      },
      "lineNbr": 28,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3a263b1f_c4333bd2",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 28,
        "endChar": 0
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "906fe762_32428d16",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 42,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "when implementation of the function is empty, I find it cleaner not to comment out unused parameters (obviously, with empty implementation all parameters are unused)",
      "range": {
        "startLine": 42,
        "startChar": 49,
        "endLine": 42,
        "endChar": 59
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3abaa4ea_303009df",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 42,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Using RTC_UNUSED instead.",
      "parentUuid": "906fe762_32428d16",
      "range": {
        "startLine": 42,
        "startChar": 49,
        "endLine": 42,
        "endChar": 59
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2efc2df_1b304ab3",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "personally I prefer to pass connected parameters as a single parameter.\n(e.g. ArrayView instead of (data, size) tuple,\nin this case - RenderResolution can be passed instead of (width, height) pair.\n\nIt require slightly more typing to pass resolution:\nSpsWithResolution({360, 180}, {\u0027p\u0027,\u0027a\u0027,\u0027y\u0027,\u0027l\u0027,\u0027o\u0027,\u0027a\u0027,\u0027d\u0027});\nbut imho it is as readable as \nSpsWithResolution(360, 180, {\u0027p\u0027,\u0027a\u0027,\u0027y\u0027,\u0027l\u0027,\u0027o\u0027,\u0027a\u0027,\u0027d\u0027});\n\nand more readable when there is a source variable of the right type.\ne.g. \nconstexpr RenderResolution k360p(360, 180);\n...\nSpsWithResolution(k360p);",
      "range": {
        "startLine": 59,
        "startChar": 28,
        "endLine": 60,
        "endChar": 38
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5dcfa3e4_c078c82d",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 60,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Updated to use RenderResolution",
      "parentUuid": "a2efc2df_1b304ab3",
      "range": {
        "startLine": 59,
        "startChar": 28,
        "endLine": 60,
        "endChar": 38
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0d352a8_0a618e5a",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Implicit_Conversions\n\n\"Do not define implicit conversions. Use the explicit keyword for conversion operators and single-argument constructors.\"",
      "range": {
        "startLine": 69,
        "startChar": 2,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0997161_5b2f4e21",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 69,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Changed it to a Build() function instead.",
      "parentUuid": "c0d352a8_0a618e5a",
      "range": {
        "startLine": 69,
        "startChar": 2,
        "endLine": 69,
        "endChar": 55
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42d213fa_886ef1b6",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "where does it reference to? into video_header_?\nthen may be write it as accessor:\n\nRTPVideoHeaderH264\u0026 h264_header() { return video_header_.codec_spcitic.h264; }",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 78,
        "endChar": 35
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65158d8c_a8af8af7",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 78,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Updated, not sure if it is cleaner though (need both const/non-const accessor).",
      "parentUuid": "42d213fa_886ef1b6",
      "range": {
        "startLine": 78,
        "startChar": 2,
        "endLine": 78,
        "endChar": 35
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bcbca6d_2964e5f8",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "or (imho cleaner, and, in theory, faster)\nnalu_payloads_.push_back(std::move(payload));",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 62
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9859bbf4_4b0a65ba",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 93,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "That makes a lot more sense, updated.",
      "parentUuid": "8bcbca6d_2964e5f8",
      "range": {
        "startLine": 93,
        "startChar": 2,
        "endLine": 93,
        "endChar": 62
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "155883f7_7ff98dc3",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "is it a const operator?",
      "range": {
        "startLine": 151,
        "startChar": 60,
        "endLine": 151,
        "endChar": 61
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0806814_7c155f87",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 151,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Technically no (line 174, 177), semantically yes, could add mutable to `video_header_`",
      "parentUuid": "155883f7_7ff98dc3",
      "range": {
        "startLine": 151,
        "startChar": 60,
        "endLine": 151,
        "endChar": 61
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7564cf1f_7baeb705",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 189,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "side comment:\nseems like COWBuffer lacks method AppendData(rtc::ArrayView\u003cconst uint8_t\u003e) ....",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 189,
        "endChar": 69
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d25d3edb_6f97163f",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 189,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Yeah, let me create a CL for that.",
      "parentUuid": "7564cf1f_7baeb705",
      "range": {
        "startLine": 189,
        "startChar": 2,
        "endLine": 189,
        "endChar": 69
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c615986_e8804eaa",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 190,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "or\nreturn rtc::CopyOnWriteBuffer(nalu_payloads_[0].data(), nalu_payloads_[0].size());",
      "range": {
        "startLine": 188,
        "startChar": 2,
        "endLine": 190,
        "endChar": 13
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2763c2bf_d923e708",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 190,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c615986_e8804eaa",
      "range": {
        "startLine": 188,
        "startChar": 2,
        "endLine": 190,
        "endChar": 13
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac11bab1_88eb22ac",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "why do you need explicit conversion?\ne.g. would this work?:\n  return res.packets[index]-\u003evideo_payload;",
      "range": {
        "startLine": 221,
        "startChar": 9,
        "endLine": 221,
        "endChar": 38
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "196d0828_41c1f588",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 221,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "That works, updated",
      "parentUuid": "ac11bab1_88eb22ac",
      "range": {
        "startLine": 221,
        "startChar": 9,
        "endLine": 221,
        "endChar": 38
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26b8848f_6962e84b",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 234,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "May be \u0027FlatVector\u0027 (as a more specific verb what\u0027s done with the parameter)",
      "range": {
        "startLine": 234,
        "startChar": 21,
        "endLine": 234,
        "endChar": 32
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "56ae29c3_98475fe7",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 234,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26b8848f_6962e84b",
      "range": {
        "startLine": 234,
        "startChar": 21,
        "endLine": 234,
        "endChar": 32
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65be8555_3674b1a0",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 288,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "It seems this test verifies 3 scenarios,\nmay be split it into three tests:\nSpsPpsIdrIsKeyframeSingleNalus\nSpsIdrIsNotKeyframeSingleNalus\nPpsIdrIsNotKeyframeSingleNalus\n\n(or at least use 3 different packet_buffers to avoid earlier test be affected by later test)",
      "range": {
        "startLine": 288,
        "startChar": 27,
        "endLine": 288,
        "endChar": 57
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1172d1e_1f3d2ecb",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 288,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65be8555_3674b1a0",
      "range": {
        "startLine": 288,
        "startChar": 27,
        "endLine": 288,
        "endChar": 57
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "615c3e5c_b4517996",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 292,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-10T14:05:48Z",
      "side": 1,
      "message": "RTC_UNUSED is a canonical way to ignore result that normally shouldn\u0027t be ignored.\n\nhttps://source.chromium.org/chromium/_/webrtc/src.git/+/fb501792ebb6474f9055fce4d8f8581aa47eadc8:rtc_base/system/unused.h;l\u003d21;drc\u003d25ab3228f3e473f2226f219531ec617d2daa175e",
      "range": {
        "startLine": 292,
        "startChar": 2,
        "endLine": 292,
        "endChar": 14
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c14c48_6f5001ee",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 292,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-13T13:22:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "615c3e5c_b4517996",
      "range": {
        "startLine": 292,
        "startChar": 2,
        "endLine": 292,
        "endChar": 14
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f1813f8_345f06c9",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 320,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "ditto, split into 3 tests.",
      "range": {
        "startLine": 320,
        "startChar": 27,
        "endLine": 320,
        "endChar": 51
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c603881_795cce63",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 320,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f1813f8_345f06c9",
      "range": {
        "startLine": 320,
        "startChar": 27,
        "endLine": 320,
        "endChar": 51
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13cd4447_57aa50df",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 345,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "do you mean \u0027AfterIdr\u0027?",
      "range": {
        "startLine": 345,
        "startChar": 42,
        "endLine": 345,
        "endChar": 46
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48cac8d5_af5c74d6",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 345,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "what does \u0027GeneratesKeyframe\u0027 mean?\nis it same as \u0027treated as key frame\u0027 (then make the test name consistent with the  previous tests),\nor does it mean \u0027request key frame\u0027 (can\u0027t see such expectation then)",
      "range": {
        "startLine": 345,
        "startChar": 46,
        "endLine": 345,
        "endChar": 63
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c8848140_3a79564a",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 345,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "No, last is the right word here.",
      "parentUuid": "13cd4447_57aa50df",
      "range": {
        "startLine": 345,
        "startChar": 42,
        "endLine": 345,
        "endChar": 46
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25581943_37269260",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 345,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "It means that even though SPS/PPS was inserted last it still completed the frame.\n\nThe H264PacketBuffer will never request a keyframe.\n\nUpdated the name to `InsertingSpsPpsLastCompletesKeyframe`.",
      "parentUuid": "48cac8d5_af5c74d6",
      "range": {
        "startLine": 345,
        "startChar": 46,
        "endLine": 345,
        "endChar": 63
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e28c5202_a8d1d95e",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 378,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "may be move this test just before the previous test.\nPrevious tests slightly relies on this one. (IgnoreResult for the calls that this test verifies)",
      "range": {
        "startLine": 378,
        "startChar": 27,
        "endLine": 378,
        "endChar": 57
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31ab19f1_5a6b572c",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 379,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "since this test is not about keyframe, would it be simpler to pass \u0027true\u0027 here and generate `Packet(...).Idr()` instead of `Packet(...).Sps().Pps().Idr()`?",
      "range": {
        "startLine": 379,
        "startChar": 33,
        "endLine": 379,
        "endChar": 67
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc923cb2_5f816e11",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 379,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-15T08:59:19Z",
      "side": 1,
      "message": "IDR only keyframes should not really be used but we support it since it\u0027s allowed by the standard. Instantiating a H264PacketBuffer with `allow_idr_only_keyframe` should be an exception.",
      "parentUuid": "31ab19f1_5a6b572c",
      "range": {
        "startLine": 379,
        "startChar": 33,
        "endLine": 379,
        "endChar": 67
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78a32a38_38e703db",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "Reading the test name I\u0027m not sure what are the expectation below.\n(what extra does it validate?)",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94437c4f_21287042",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 428,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "This test was a bit messy, updated it and renamed it to OldPacketDoesntCompleteFrame.",
      "parentUuid": "78a32a38_38e703db",
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "354979e6_8691e3c4",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 518,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "or 0xffff\n(not sure which version you consider more readable)",
      "range": {
        "startLine": 518,
        "startChar": 44,
        "endLine": 518,
        "endChar": 57
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b91dc3ff_86359cad",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 518,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-15T08:59:19Z",
      "side": 1,
      "message": "Hex is cleaner, updated",
      "parentUuid": "354979e6_8691e3c4",
      "range": {
        "startLine": 518,
        "startChar": 44,
        "endLine": 518,
        "endChar": 57
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0afe65e2_ec855648",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 529,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "StapA\n\nwhat doesn\u0027t fixed bitstream mean? start code are inserted?\ndo you also would like to validate if sequences that look like start code inside nalu payload are properly escaped?",
      "range": {
        "startLine": 529,
        "startChar": 27,
        "endLine": 529,
        "endChar": 46
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "537841b0_2e7cd6d9",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 529,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Fixed means that two byte RTP level NALU lengths are removed and startcodes inserted instead. Don\u0027t know why we don\u0027t do that in the depacketizer already (that\u0027s the bug I filed).",
      "parentUuid": "0afe65e2_ec855648",
      "range": {
        "startLine": 529,
        "startChar": 27,
        "endLine": 529,
        "endChar": 46
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb5aea8a_288872e5",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 539,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "http://go/c-readability-advice#single-use-vars\n\"Don\u0027t define a local variable just to use it, once, in a test assertion\"",
      "range": {
        "startLine": 539,
        "startChar": 7,
        "endLine": 539,
        "endChar": 15
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8407a183_404b3e8b",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 539,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bb5aea8a_288872e5",
      "range": {
        "startLine": 539,
        "startChar": 7,
        "endLine": 539,
        "endChar": 15
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fc0e647_cb40638a",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 541,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "may be combine these into {kSps, 1, 2, 3}\n(then you won\u0027t need extra case in ArrayElem for single byte.\nIf you also change kStartCode into\nstd::vector\u003cuint8_t\u003e StartCode() { return {0, 0, 0, 1}; )\nthen you won\u0027t need ArrayElem helper at all.",
      "range": {
        "startLine": 540,
        "startChar": 31,
        "endLine": 541,
        "endChar": 41
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3d2d5ce_23a66024",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 541,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-14T14:50:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1fc0e647_cb40638a",
      "range": {
        "startLine": 540,
        "startChar": 31,
        "endLine": 541,
        "endChar": 41
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b3e462e_67263c60",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 550,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-09-13T14:20:45Z",
      "side": 1,
      "message": "I\u0027m worried this helper might hide a bit too much (what was the 2nd parameter again?)\nMay be it would be cleaner without the helper\n\n  auto packets \u003d packet_buffer.InsertPacket(...).packets;\n  ...\n  ASSERT_THAT(packets, SizeIs(1));\n  EXPECT_THAT(packets[0]-\u003evideo_payload, ElementsAre....);\n  \nor with a simpler helper:\n  EXPECT_THAT(PacketPayload(packets[0]), ElementsAre....);",
      "range": {
        "startLine": 550,
        "startChar": 14,
        "endLine": 550,
        "endChar": 35
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c26f2fa_e13e96a3",
        "filename": "modules/video_coding/h264_packet_buffer_unittest.cc",
        "patchSetId": 9
      },
      "lineNbr": 550,
      "author": {
        "id": 5527
      },
      "writtenOn": "2021-09-15T08:59:19Z",
      "side": 1,
      "message": "Simplified the helper",
      "parentUuid": "4b3e462e_67263c60",
      "range": {
        "startLine": 550,
        "startChar": 14,
        "endLine": 550,
        "endChar": 35
      },
      "revId": "6e293f0f2415ed9933e7d61a6d98074497af93da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}