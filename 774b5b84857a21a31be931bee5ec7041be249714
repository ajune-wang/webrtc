{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "214c499a_cd3b8c6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-10-02T08:51:09Z",
      "side": 1,
      "message": "Hi, so from the discussion this is my take. Please have a look and let me know what you think.",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f92d14a_d3676eb1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-10-03T12:36:41Z",
      "side": 1,
      "message": "Thanks for the review.",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f5512e3_8486d71f",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:17:02Z",
      "side": 1,
      "message": "Is there a more descriptive name than \"Combined\"?",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a05f6785_84ed28df",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-10-03T12:36:41Z",
      "side": 1,
      "message": "Sure can find something better. Maybe \"MixedEncryption\".",
      "parentUuid": "9f5512e3_8486d71f",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97500833_b84c4707",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:51:04Z",
      "side": 1,
      "message": "That works for me",
      "parentUuid": "a05f6785_84ed28df",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb003442_9e3b4359",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-04T07:51:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "97500833_b84c4707",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0e9aa78d_bd597fbb",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:17:02Z",
      "side": 1,
      "message": "Is the idea that by listing ssrc-audio-level twice, both encrypted and non-encrypted, we have a fallback plan in the event that the remote endpoint removes the encrypted version?",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9cfb5ec_76e41945",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-10-03T12:36:41Z",
      "side": 1,
      "message": "Yes, exactly. You can think of it as the local endpoint \"allows\" to also send it unecrypted.",
      "parentUuid": "0e9aa78d_bd597fbb",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c86102c8_3d44fac4",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 150,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:51:04Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "d9cfb5ec_76e41945",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a6770b28_31137a8a",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:17:02Z",
      "side": 1,
      "message": "While in this case we only use audio_something_else if encryption is supported, since here we don\u0027t have a fallback non-encrypted version?",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed2f0cba_66324d79",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-10-03T12:36:41Z",
      "side": 1,
      "message": "Yes exactly. In this case the local endpoint \"does not allow\" to send this header unecrypted. \n\nThis is probably what we will do for the corruption detection header extension. It should only be sent encrypted since it will contain sensetive data. This imo will hinder man in the middle atacks.",
      "parentUuid": "a6770b28_31137a8a",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b6d6460_f1440b35",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 152,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:51:04Z",
      "side": 1,
      "message": "That makes sense: if the sensitive thing cannot be encrypted, we don\u0027t use it. Both backwards compatible and safe starting point going forward.",
      "parentUuid": "ed2f0cba_66324d79",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1186fb9a_e5cede24",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 2171,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:17:02Z",
      "side": 1,
      "message": "Is it true that by default we don\u0027t encrypt anything and so for most apps this CL does not change anything. But for the apps that do opt-in to use encryption, this simplifies creating the answer by defaulting to preferring what was offered?",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "503662dc_29cdf166",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 2171,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-10-03T12:36:41Z",
      "side": 1,
      "message": "Yes the default is that we dont encrypt anything. See chromium:40623740. To encrypt one needs to activate this flag. Trying to remove that in https://chromium-review.googlesource.com/c/chromium/src/+/5866212. It will be replaced with a field trial.\n\nHowever, even if the default was true it would not affect anything YET. Because we have not added any code that specifies which headers to be encrypted. This will come in a later CL.\n\n\u003e this simplifies creating the answer by defaulting to preferring what was offered\nYes.",
      "parentUuid": "1186fb9a_e5cede24",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e737faf6_7021f39e",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 2171,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-03T12:51:04Z",
      "side": 1,
      "message": "SGTM to default to accepting what is offered and that we support by default.\n\n\u003e Because we have not added any code that specifies which headers to be encrypted. This will come in a later CL.\n\nThis is the part that interest me from an API and standards perspective.\n\nIt sounds to me if the corruption metric header extension API is shipped as \"encrypt\u003dtrue\" then things will Just Work from an API perspective: the app will either opt-in to use the extension or it won\u0027t, but if it does encryption will be negotiated and as per previous comment only if encryption is supported do we go ahead and use this header extension.\n\nBut if there is a more general goal to be able to turn encryption on or off on a per header extension basis (or session wide for that matter) then I wonder if we need new APIs for \"encrypt \u003d true or false?\". That\u0027s why I raised the question.",
      "parentUuid": "503662dc_29cdf166",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a4bda2_cd45fd8c",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 2171,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-10-03T15:33:35Z",
      "side": 1,
      "message": "We don\u0027t want to add new API surfaces for this encryption scheme (RFC6904), it is just a stop-gap solution, so forcing users to specify e.g. `urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:toffset` is fine for now. I think that is preferred to hard cording ACD as being the only encrypted extension.\n\nThere already exists an API surface to enable encryption based on RFC9335, which is what we want to move to once that is actually implemented. See\nhttps://w3c.github.io/webrtc-extensions/#rtp-header-extension-encryption-policy\n\nAlso, see doc I just shared with you.",
      "parentUuid": "e737faf6_7021f39e",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aca9c244_cc57c041",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 2171,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-10-04T07:51:40Z",
      "side": 1,
      "message": "Thanks for clarifying, this all makes sense to me now. LGTM",
      "parentUuid": "d7a4bda2_cd45fd8c",
      "revId": "774b5b84857a21a31be931bee5ec7041be249714",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}