{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e97c723e_6d88e681",
        "filename": "audio/audio_send_stream_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 950,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "nit: I think you can express this as:\n```\nEXPECT_CALL(*helper.bitrate_allocator(), AddObserver(send_stream.get(),\n  Field(\u0026MediaStreamAllocationConfig::rate_elasticity_, kCanContributeUnusedRate));\n```",
      "range": {
        "startLine": 945,
        "startChar": 0,
        "endLine": 950,
        "endChar": 10
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9346abcf_b7d82b96",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "Looks like there are only three implementations of this interface. Can these be made pure virtual from the get-go? Afaict this isn\u0027t a public interface so shouldn\u0027t need to do a migration either.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 44,
        "endChar": 3
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1617e9f_81be4907",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "why these values and the `uint8_t` type? Looks like we\u0027re never casting these to an integer type anyway?",
      "range": {
        "startLine": 54,
        "startChar": 29,
        "endLine": 54,
        "endChar": 32
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e91f81e_dcebbe31",
        "filename": "call/bitrate_allocator.h",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "nit: \"consume\" might be a better word than \"exploit\"?",
      "range": {
        "startLine": 56,
        "startChar": 19,
        "endLine": 56,
        "endChar": 26
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f08b3654_d8a14993",
        "filename": "video/video_send_stream_impl_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1223,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "here too, use `Field` matcher",
      "range": {
        "startLine": 1223,
        "startChar": 62,
        "endLine": 1223,
        "endChar": 63
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d25d9a7_7d8c3f6e",
        "filename": "video/video_send_stream_impl_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1227,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "You should be able compare directly between an optional\u003cType\u003e and Type - if the optional is a nullopt the comparison is false, otherwise it compares the values.",
      "range": {
        "startLine": 1226,
        "startChar": 12,
        "endLine": 1227,
        "endChar": 77
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11b39fc2_d3606336",
        "filename": "video/video_send_stream_impl_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 1231,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-07-09T12:28:33Z",
      "side": 1,
      "message": "nit: add `using ::testing::Mock;` above so you don\u0027t need to reference the namespace here.\n...based on the test above that might already be the case even",
      "range": {
        "startLine": 1231,
        "startChar": 2,
        "endLine": 1231,
        "endChar": 15
      },
      "revId": "0e58bb842641bced6a71561217e8a84be560131b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}