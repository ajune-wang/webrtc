{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "00f9dfe8_80035f60",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T21:46:51Z",
      "side": 1,
      "message": "Suggested rephrase:\n\"Make encrypted versions of RTP extension headers be stopped by default\"",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb63feab_a7a205bd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 7,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-09-24T08:33:06Z",
      "side": 1,
      "message": "I dont really agree. Because encrypted versions of the RTP extensions are already stopped by default. But with this change we remove the option (by e.g. using the flag https://source.chromium.org/chromium/chromium/src/+/main:content/public/common/content_switches.cc;l\u003d878?q\u003d%22kEnableWebRtcSrtpEncryptedHeaders%22\u0026ss\u003dchromium%2Fchromium%2Fsrc) that the user could activate sending the encrypted version of the extension headers at the same time. \n\nThis is the first CL of many to remove the flag in the link above. At the end of the journey we will have removed this flag (or more correctly we will have given it another meaning) and only the unencrypted versions of a specific header will be negotiated by default. Then the plan is to do what you suggest in the following comment. \n\nE.g. in https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/media/engine/webrtc_video_engine.cc;l\u003d836?q\u003dmedia%2Fengine%2Fwebrtc_video_engine.cc\u0026ss\u003dchromium%2Fchromium%2Fsrc we are going to be able to do \n```\n  result.emplace_back(webrtc::RtpExtension::kTransportSequenceNumberUri, id++,\n                      /*preferred_encrypt\u003d*/true,\n                      webrtc::RtpTransceiverDirection::kSendRecv);\n```\nfor the header we want to encrypt. \n\nFeel free also to have a look on https://webrtc-review.googlesource.com/c/src/+/362581. If we remove the flag and set it as true by default after we have removed the parts shown in this PR, we will be able to skip all the parts regarding \"at_least_one_header_needs_encryption\" in that PR, which IMO makes the code clearer.",
      "parentUuid": "00f9dfe8_80035f60",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e58916c4_d925ec29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T19:02:59Z",
      "side": 1,
      "message": "AFAIK, the default offer has no encrypted headers, and there\u0027s no code in Chrome that enables encrypted headers.\n\nThe encrypted RTP header mechanism has fallen out of favor - 11 years down the road from RFC 6904, there are no active deployments (AFAIK) that use this feature; the cryptex mechanism (RFC 9335) was developed to define a simpler mechanism that might see deployemnt. It hasn\u0027t seen that yet.\n\nSo I have trouble figuring out what this CL is actually seeking to accomplish.",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ba3b2a30_862ed686",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-09-23T21:03:10Z",
      "side": 1,
      "message": "The idea is to enable RFC 6904 to be used, but needs to be enabled via SDP munging. This is a stop-gap solution until RFC 9335 is actually implemented, which appears to be some way off still.",
      "parentUuid": "e58916c4_d925ec29",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a79ba88_2a8445e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T21:46:51Z",
      "side": 1,
      "message": "Some suggestions.",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "025bd556_cf5693a5",
        "filename": "api/rtp_parameters.h",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-09-23T21:46:51Z",
      "side": 1,
      "message": "Suggest, rather than introducing the preferred_encrypt flag in the API, to add \"urn:ietf:params:rtp-hdrext:encrypt\" in front of the URI string for each extension we want to negotiate encrypted support for. This makes the rest of the SDP negotiation code able to treat the encrypted extensions exactly the same as other extensions.",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31dc720a_eeb6c85f",
        "filename": "api/rtp_parameters.h",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-09-23T21:56:13Z",
      "side": 1,
      "message": "The flag isn\u0027t new (https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/rtp_parameters.h;l\u003d216), just the ability to set it in the constructor.\n\nI\u0027m not entirely sure what we want here. I feel like the `prefer_encrypt` flag would generalize better so we can reuse this logic when we move to rfc 9335/cryptex - which does not make use of the \"urn:ietf:params:rtp-hdrext:encrypt\" string.\n\nThis isn\u0027t my home turf so I might be missing something though.",
      "parentUuid": "025bd556_cf5693a5",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d004041_b636b672",
        "filename": "api/rtp_parameters.h",
        "patchSetId": 5
      },
      "lineNbr": 231,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-09-24T08:33:06Z",
      "side": 1,
      "message": "I agree with @sprang@webrtc.org here. \"urn:ietf:params:rtp-hdrext:encrypt\" will be added by itself if we do the changes I explained in the comment above (aka keeping the `preferred_encrypt` flag)",
      "parentUuid": "31dc720a_eeb6c85f",
      "revId": "7f4f853e6a2498504460e48faf239fcf9c8c08fc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}