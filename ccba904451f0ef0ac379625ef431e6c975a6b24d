{
  "comments": [
    {
      "key": {
        "uuid": "0b2e4fee_099546d2",
        "filename": "call/adaptation/resource.cc",
        "patchSetId": 9
      },
      "lineNbr": 21,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-05T16:26:11Z",
      "side": 1,
      "message": "DCHECK that listeners_.empty() ?",
      "range": {
        "startLine": 21,
        "startChar": 22,
        "endLine": 21,
        "endChar": 24
      },
      "revId": "ccba904451f0ef0ac379625ef431e6c975a6b24d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b258996e_5db5f7d1",
        "filename": "call/adaptation/resource.cc",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-05T16:26:11Z",
      "side": 1,
      "message": "why do we think this should be \u0026\u003d rather than |\u003d ?",
      "range": {
        "startLine": 38,
        "startChar": 14,
        "endLine": 38,
        "endChar": 15
      },
      "revId": "ccba904451f0ef0ac379625ef431e6c975a6b24d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44ca55b4_b9ff29dd",
        "filename": "call/adaptation/resource.h",
        "patchSetId": 9
      },
      "lineNbr": 22,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-02-06T08:45:27Z",
      "side": 1,
      "message": "What about kUnknown or a default state? Seems sane to have some unknown state, which can be used before initialization, or before data has come in.",
      "range": {
        "startLine": 22,
        "startChar": 11,
        "endLine": 22,
        "endChar": 29
      },
      "revId": "ccba904451f0ef0ac379625ef431e6c975a6b24d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e0dea96_87069778",
        "filename": "call/adaptation/resource.h",
        "patchSetId": 9
      },
      "lineNbr": 32,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-02-06T08:45:27Z",
      "side": 1,
      "message": "Don\u0027t mind the name. Perhaps `ResourceListener`?",
      "range": {
        "startLine": 32,
        "startChar": 6,
        "endLine": 32,
        "endChar": 27
      },
      "revId": "ccba904451f0ef0ac379625ef431e6c975a6b24d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6084ea03_e4b4325d",
        "filename": "call/adaptation/resource.h",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 5524
      },
      "writtenOn": "2020-02-05T16:26:11Z",
      "side": 1,
      "message": "Could we in the interim use an enum of what happened instead of a bool?\nabsl::optional\u003cAdaptationResult\u003e OnResource... looks more readable to my eyes and we could then have values like kNoChange, kAadapted, kBalancedModeDidItsOwnThing and explicitly map them to the behavior we want in each case\nwdyt?",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 29
      },
      "revId": "ccba904451f0ef0ac379625ef431e6c975a6b24d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6de47a0e_2a1c980d",
        "filename": "call/adaptation/resource.h",
        "patchSetId": 9
      },
      "lineNbr": 63,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-02-06T08:45:27Z",
      "side": 1,
      "message": "Why optional bool? Feels like if this is 3 state then perhaps an enum representing the states would be easier to understand.",
      "range": {
        "startLine": 63,
        "startChar": 9,
        "endLine": 63,
        "endChar": 31
      },
      "revId": "ccba904451f0ef0ac379625ef431e6c975a6b24d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}