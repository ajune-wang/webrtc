{
  "comments": [
    {
      "key": {
        "uuid": "431024dc_07f290c7",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 1133,
      "author": {
        "id": 5706
      },
      "writtenOn": "2018-08-01T08:14:40Z",
      "side": 1,
      "message": "nit: use observer() for consistency with the call below. Also, omitting |this| is the way I usually see it in other places.",
      "range": {
        "startLine": 1133,
        "startChar": 2,
        "endLine": 1133,
        "endChar": 6
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5f9a0ed_49c988df",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 1133,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-08-01T08:50:57Z",
      "side": 1,
      "message": "The issue here is that \"observer\" is a local variable pointing elsewhere a few lines above.\nI think I\u0027ll rename the getter to Observer() since it does more than just getting the observer (it RTC_CHECKs it too).",
      "parentUuid": "431024dc_07f290c7",
      "range": {
        "startLine": 1133,
        "startChar": 2,
        "endLine": 1133,
        "endChar": 6
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cad7b437_b803688e",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 2085,
      "author": {
        "id": 5706
      },
      "writtenOn": "2018-08-01T08:14:40Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 2085,
        "startChar": 20,
        "endLine": 2085,
        "endChar": 24
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a5efddf_7f7ab2d6",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 2492,
      "author": {
        "id": 5706
      },
      "writtenOn": "2018-08-01T08:14:40Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 2492,
        "startChar": 20,
        "endLine": 2492,
        "endChar": 24
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6872e9dc_eb32c6a5",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 2492,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-08-01T08:50:57Z",
      "side": 1,
      "message": "Compiler said \"you can\u0027t initialize it from itself while declaring it\". Observer() is an easier way out.",
      "parentUuid": "8a5efddf_7f7ab2d6",
      "range": {
        "startLine": 2492,
        "startChar": 20,
        "endLine": 2492,
        "endChar": 24
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b0a8cc8_0a4cfab5",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 6292,
      "author": {
        "id": 5706
      },
      "writtenOn": "2018-08-01T08:14:40Z",
      "side": 1,
      "message": "Can we do with a DCHECK?",
      "range": {
        "startLine": 6292,
        "startChar": 2,
        "endLine": 6292,
        "endChar": 11
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c66d8d79_dd3fe9b5",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 8
      },
      "lineNbr": 6292,
      "author": {
        "id": 5634
      },
      "writtenOn": "2018-08-01T08:50:57Z",
      "side": 1,
      "message": "Since this guards against an unsafe usage that might have been working in some production code (it wouldn\u0027t cause an error if one of these accesses was done after close() if you didn\u0027t deallocate the observer), I\u0027d like to have it a CHECK. I can add a comment explaining why.",
      "parentUuid": "0b0a8cc8_0a4cfab5",
      "range": {
        "startLine": 6292,
        "startChar": 2,
        "endLine": 6292,
        "endChar": 11
      },
      "revId": "32f2507df3ba9e68c5e0d647d538e98b2fec45f1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}