{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "426b3fab_b621b49a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-02-13T12:15:17Z",
      "side": 1,
      "message": "Marking as WIP for now. I\u0027m working on an implementation of this API addition in Firefox and I\u0027m not sure this change is complete yet, but I would like to have some opinions on this and to know whether it\u0027s something Chromium can also implement.\n\nIt\u0027s meant to fix https://issues.chromium.org/issues/40276865 once implemented in Chromium.",
      "revId": "38594108b5e5216f8ada31c35c0a94e28042b963",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1836c09f_a6d914f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2024-02-13T18:31:47Z",
      "side": 1,
      "message": "I replied on the bug; but I\u0027m wondering if we can\u0027t leverage the error response of the frame request once the capturer has stopped?",
      "revId": "38594108b5e5216f8ada31c35c0a94e28042b963",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e394521d_c4e5bf71",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-02-13T19:21:35Z",
      "side": 1,
      "message": "Marking as ready for review only to have reviewers notified about comments.",
      "revId": "38594108b5e5216f8ada31c35c0a94e28042b963",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7f5b22ca_ba1e7034",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-02-13T19:21:35Z",
      "side": 1,
      "message": "That\u0027s an option and it looks Chromium will correctly stop capturing, but Firefox doesn\u0027t handle the error at all and doesn\u0027t stop. It might make sense to extend the enum by a value representing that capturing was ended by the other side, on the other hand that would need an additional change in Chromium so that\u0027s up to you. Otherwise just a simple change to set `capturer_failed_` to true in `OnScreenCastSessionClosed` is enough.\n\nYour second question, why this is implemented only in `DesktopAndCursorComposer` and not other capturers? It\u0027s because this one is a wrapper around `DesktopCapture` used in both Chromium and Firefox so if it\u0027s not propagated there, then the callback will be lost. And I don\u0027t know if other capturers (Windows and MacOS ones) support this, at least on Linux on X11 this doesn\u0027t make any sense.",
      "parentUuid": "1836c09f_a6d914f1",
      "revId": "38594108b5e5216f8ada31c35c0a94e28042b963",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f9671c4c_ea85dc5d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2024-02-13T19:45:27Z",
      "side": 1,
      "message": "That sounds like a bug in Firefox as if I understand the contract correctly, a capturer returning ERROR_PERMANENT will never again return valid frames, so it\u0027s essentially the same as this signal. I can certainly understand if they want to treat it differently (e.g. ERROR_PERMANENT while unrecoverable could indicate that they can simply try to re-create the capturer while ERROR_SHUTDOWN indicates that it was shutdown by user choice and we should not try to recreate it), but from what you are saying it sounds like they just treat ERROR_PERMANENT the same as ERROR_TEMPORARY?\n\nMy preference in order would be:\n1) Simply send ERROR_PERMANENT properly, as that seems to be what it\u0027s there for\n2) If we have to make a code change because either Chromium/Firefox want to treat this error differently than a generic permanent error, I think extending the enum is cleaner.\n3) We can add this method if needed.\n\nI could potentially be persuaded that this method is cleaner, especially in the eventual (though likely far-off) future of evented capturers, though they could also send a Permanent Error.\n\nThat makes sense regarding the `DesktopAndCursorComposer` though. I wasn\u0027t thinking of that one as a top-level wrapper capturer. I think you may also need to look at the fallback captuerer and there may be a generic wrapper capturer as well as I think they do similar things?",
      "parentUuid": "7f5b22ca_ba1e7034",
      "revId": "38594108b5e5216f8ada31c35c0a94e28042b963",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}