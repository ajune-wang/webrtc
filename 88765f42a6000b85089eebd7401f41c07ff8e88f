{
  "comments": [
    {
      "key": {
        "uuid": "234d735d_eef4e64f",
        "filename": "modules/video_coding/codecs/multiplex/multiplex_encoded_image_packer.cc",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-16T14:52:05Z",
      "side": 1,
      "message": "Icky! I can\u0027t think of an alternative that won\u0027t be a lot of work, though.\n\nDoes this sort of thing happen often? (Creating an EncodedImage that just describes an existing memory block.)",
      "range": {
        "startLine": 266,
        "startChar": 8,
        "endLine": 266,
        "endChar": 18
      },
      "revId": "88765f42a6000b85089eebd7401f41c07ff8e88f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17cde516_93fd0bcd",
        "filename": "test/fake_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-16T14:52:05Z",
      "side": 1,
      "message": "This case is even worse, because you actually write to the ex-const data below. Should encoded_image not be a const reference argument?",
      "revId": "88765f42a6000b85089eebd7401f41c07ff8e88f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb5106a4_f89225f7",
        "filename": "test/fake_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-16T14:59:31Z",
      "side": 1,
      "message": "\u003e This case is even worse, because you actually write to the ex-const data below. Should encoded_image not be a const reference argument?\n\nI agree this is ugly. And it is a const ref argument. It used to work despite that, because _buffer is a uint8_t*, and the pointer belonging to a const object doesn\u0027t imply the pointed to data can\u0027t be modified.\n\nSince this is not a change in behavior, I\u0027d prefer to just accept the uglyness for now. Unless there\u0027s some easy way to fix it?",
      "parentUuid": "17cde516_93fd0bcd",
      "revId": "88765f42a6000b85089eebd7401f41c07ff8e88f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ec334f1_952ba70f",
        "filename": "test/fake_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 5126
      },
      "writtenOn": "2019-01-17T01:02:12Z",
      "side": 1,
      "message": "You can do what ArrayView does: Return a non-const pointer from the const data() method. This makes perfect sense for an object that doesn\u0027t own the data it points to.\n\nConversely, if the object does own the data, never ever do that, whether in the data() implementation or by having the caller casting away the constness.",
      "parentUuid": "fb5106a4_f89225f7",
      "revId": "88765f42a6000b85089eebd7401f41c07ff8e88f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81f63267_1175b460",
        "filename": "test/fake_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-17T07:44:40Z",
      "side": 1,
      "message": "\u003e You can do what ArrayView does: Return a non-const pointer from the const data() method. This makes perfect sense for an object that doesn\u0027t own the data it points to.\n\nAh, that would solve the immediate problem.\n\n\u003e Conversely, if the object does own the data, never ever do that, whether in the data() implementation or by having the caller casting away the constness.\n\nI wonder how to do the transition, though? I want to change EncodedImage to own the buffer, and then data() will return a pointer to owned data (and in the transition, it will sometimes return a pointer to owned data, sometimes unowned).",
      "parentUuid": "5ec334f1_952ba70f",
      "revId": "88765f42a6000b85089eebd7401f41c07ff8e88f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcd5f35c_e4b90c99",
        "filename": "test/fake_encoder.cc",
        "patchSetId": 2
      },
      "lineNbr": 306,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-17T10:34:38Z",
      "side": 1,
      "message": "\u003e \u003e You can do what ArrayView does: Return a non-const pointer from the const data() method. This makes perfect sense for an object that doesn\u0027t own the data it points to.\n\u003e \n\u003e Ah, that would solve the immediate problem.\n\nDone in latest patchset.",
      "parentUuid": "81f63267_1175b460",
      "revId": "88765f42a6000b85089eebd7401f41c07ff8e88f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}