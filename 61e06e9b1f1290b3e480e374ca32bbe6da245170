{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3b1c46e9_0849c75a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-09T15:00:21Z",
      "side": 1,
      "message": "Addressed Tommi\u0027s comments.\n\nIn 2 places, the code would crash if CreatePeerConnection failed; in those 2 cases, I feel that crashing in MoveValue() is the better choice; I don\u0027t want this CL burdened with designing in error handling for these cases.\n",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9aa71898_c3e59036",
        "filename": "api/peer_connection_interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-07T17:58:59Z",
      "side": 1,
      "message": "nit: no else is needed for early returns\n\nalternatively could also \n\nreturn result.ok() ? result.MoveValue() : nullptr;",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a81fa6b0_79ed0cc5",
        "filename": "api/peer_connection_interface.cc",
        "patchSetId": 8
      },
      "lineNbr": 86,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-09T15:00:21Z",
      "side": 1,
      "message": "Reformulated as early return on error.",
      "parentUuid": "9aa71898_c3e59036",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4e289bd_b70d0f54",
        "filename": "examples/androidnativeapi/jni/android_call_client.cc",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-07T17:58:59Z",
      "side": 1,
      "message": "this assumes that \u0027OrError\u0027 can never happen, right?",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc10e345_ba4e4825",
        "filename": "examples/androidnativeapi/jni/android_call_client.cc",
        "patchSetId": 8
      },
      "lineNbr": 183,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-09T15:00:21Z",
      "side": 1,
      "message": "I used this construct whenever the code immediately following was dereferencing the pointer without checking for nullness. In this case, line 190.\nI hope the error message when crashing for this reason is better than the error message caused by just following the null pointer, but didn\u0027t want to get into the redesign required to support handling the error in other ways.",
      "parentUuid": "a4e289bd_b70d0f54",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e7acfe9_fb209643",
        "filename": "examples/objcnativeapi/objc/objc_call_client.mm",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-07T17:58:59Z",
      "side": 1,
      "message": "no chance an error could happen?",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb06635d_4387bd05",
        "filename": "examples/objcnativeapi/objc/objc_call_client.mm",
        "patchSetId": 8
      },
      "lineNbr": 147,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-09T15:00:21Z",
      "side": 1,
      "message": "As above - pc_ is dereferenced below, so this introduces no new crash.",
      "parentUuid": "7e7acfe9_fb209643",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faeb3475_39c36187",
        "filename": "examples/unityplugin/simple_peer_connection.cc",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-07T17:58:59Z",
      "side": 1,
      "message": "nit: for early returns, skip else.\n\nThis calls out the return statement and also, for functions that return something else than void, makes the last return statement consistently be the last line of the function, rather than be in a scope that\u0027s a sub scope of the main scope.",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fa8caba_c944eafe",
        "filename": "examples/unityplugin/simple_peer_connection.cc",
        "patchSetId": 8
      },
      "lineNbr": 200,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-09T15:00:21Z",
      "side": 1,
      "message": "Reformulated as early error return.",
      "parentUuid": "faeb3475_39c36187",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b6fc5b2_6cf11dbf",
        "filename": "test/network/network_emulation_pc_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-05-07T17:58:59Z",
      "side": 1,
      "message": "assumes an error will never happen whereas previously the caller can check for error (now I think we\u0027ll hit a check).",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64f7a454_d4c875bf",
        "filename": "test/network/network_emulation_pc_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 103,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-05-09T15:00:21Z",
      "side": 1,
      "message": "Restored previous behaviour.",
      "parentUuid": "8b6fc5b2_6cf11dbf",
      "revId": "61e06e9b1f1290b3e480e374ca32bbe6da245170",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}