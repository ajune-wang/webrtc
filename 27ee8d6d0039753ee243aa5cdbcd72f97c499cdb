{
  "comments": [
    {
      "key": {
        "uuid": "754b8645_eb27f136",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 712,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "nit: ReverseDirection maybe?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce2ec5e_3d26f465",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 712,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "754b8645_eb27f136",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63721911_e13e32e1",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 1631,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "nit: Is \"update_negotiation_needed\" a more appropriate variable name now?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4cc4d4b0_3d7ff98c",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 1631,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63721911_e13e32e1",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81ed5279_7776285c",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7195,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "Maybe check the date and return true if it\u0027s a tuesday between 2-3 pm :)",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea292b74_3614a4fa",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7228,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "nit: Prefer to avoid abbreviations. current_remote_contents?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daf5c8d7_826cf447",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7228,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ea292b74_3614a4fa",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad25b22_f7b85587",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7234,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "Does this operation deserve a helper function?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efb4562e_fab77f53",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7234,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad25b22_f7b85587",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bd72e8e_1650a20a",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7236,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "nit: transceiver_has_current_remote_msection?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7d91c23_13e3fa53",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7236,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bd72e8e_1650a20a",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9efc1cf8_6aeca74d",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7249,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "The \u0027doesn\u0027t contain a single \"a\u003dmsid\" line\u0027 check had me scratch my head. It might be for the following case: The transceiver is created to match what was offered by the remote endpoint, so we\u0027ve yet to negotiate a\u003dmsid for this transceiver. But why do this if our sender doesn\u0027t have any associated media streams? Steve do you know?\n\nThis may be an edge-case we want to have test coverage for.",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52419e0d_b692c3e1",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7249,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "IIRC we are covering this path in one of the new WPT?",
      "parentUuid": "9efc1cf8_6aeca74d",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2ccd8162_a9afa01f",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7288,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "nit: current_local_msection_direction?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffdecfcc_49de9a41",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7288,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Used |current_local_direction| and |current_remote_direction|.",
      "parentUuid": "2ccd8162_a9afa01f",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2fc8208_a3ddb350",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7313,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "nit: transceiver_has_offered_remote_msection?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1301aea_57110564",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7313,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2fc8208_a3ddb350",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "005192b4_21122aec",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1802,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "This makes sure the codepath is exercised, but the fact that negotiation is needed doesn\u0027t verify that the codepath did the right thing, since adding a track will trigger negotiation anyway.\nIs it possible to exercise it without doing this? Maybe change the direction and then change the direction back again, such that \"negotiation needed\" would be cleared if it weren\u0027t for this codepath about streams being different making negotiation needed true?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f001ec9_770074d0",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1802,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "A possible way to verify it would be to add a ClearNegotiationNeededForTesting() method so that\nwe can clear the flag after adding the track to make sure that the subsequent action causes the event to fire. However this is ugly because tests access the peer connection via PeerConnectionInterface, so either we have to make tests aware of PeerConnection (and introduce ugly casts), or add the ugly ForTesting() method to PeerConnectionInterface().\nAlternatively, we can wait until we have setStreams() in JavaScript where we can cover this case in WPT.\nWDYT?",
      "parentUuid": "005192b4_21122aec",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c08102_32ddc328",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1802,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-10T13:33:39Z",
      "side": 1,
      "message": "I\u0027m OK with waiting for setStreams() if this is hard to test, and I don\u0027t think it\u0027s worth adding a \"ClearNegotiationNeededForTesting()\".\n\nBut is the following true?\n\n1. transceiver \u003d pc.addTrack(track, {\"stream\"});\n2. O/A exchange\n3. negotiation is no longer needed and transceiver.direction \u003d\u003d kSendRecv\n4. transceiver.direction \u003d kInactive;\n5. transceiver.direction \u003d kSendRecv;\n\nAt 4) negotiation is needed. But at 5) it is no longer needed because we reverted our change.\n\nIf this is true, then between 4) and 5) we could modify the current_local_description() such that when the negotiation needed check is performed due to 5) negotiation is still needed due to the stream not matching the local description, and we can assert that negotiation is still needed despite the direction matching.",
      "parentUuid": "6f001ec9_770074d0",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d62d38_622be893",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1802,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-12T08:41:25Z",
      "side": 1,
      "message": "Is this worth addressing?",
      "parentUuid": "b7c08102_32ddc328",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4135e320_f0d4ef9f",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1802,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-12T10:43:15Z",
      "side": 1,
      "message": "I thought I had replied to it, but apparently the reply was lost.\n\nA test composed of steps 1-5 will always fail/flake if made from the JavaScript due to the jumps between main and signaling thread.\nIt will currently fail in C++ because the notification will be fired after step 4.\nI think we can fix it in C++ to make sure the notification is sent on another task that checks if negotiation is still needed (which should be false after 5). However, it will still fail on JavaScript due to the continuous switching between threads.\nI can add a Javascript version of the test in a Chromium CL (which will fail) and try to land a workaround in WebRTC in a follow-up CL. WDYT?",
      "parentUuid": "a7d62d38_622be893",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d3660cd_7b895705",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1806,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-04-09T08:46:25Z",
      "side": 1,
      "message": "MyTest is BestTest, but you probably want a more descriptive name.\nChangeAssociatedStreamsTriggersRenegotiation?",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d9b0019d_15b3b582",
        "filename": "pc/peer_connection_rtp_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1806,
      "author": {
        "id": 5706
      },
      "writtenOn": "2019-04-09T10:22:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d3660cd_7b895705",
      "revId": "27ee8d6d0039753ee243aa5cdbcd72f97c499cdb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}