{
  "comments": [
    {
      "key": {
        "uuid": "6b053406_b54ca9f7",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 7
      },
      "lineNbr": 738,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "Do we really want to expose this outside of testing?\nI\u0027m thinking if an app needs to call this there is likely something wrong with our implementation.\n\nThe fact that you need to call this before and after AddAudioVideoStream() is because our implementation has a bug, it violates\nhttps://github.com/w3c/webrtc-stats/pull/243/files.\n\nI think the appropriate thing to do is to clear the cache on relevant peerconnection.cc events, which should be a separate CL.",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab5bf40_f07e4404",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 7
      },
      "lineNbr": 738,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-29T16:28:47Z",
      "side": 1,
      "message": "Yes, we should expose this outside of testing. But if the webrtc/ implementation is to uphold the spec\u0027s contract, it should be exposed to other parts of the implementation, not to the user (Chrome). If, on the other hand, chrome is responsible for upholding the contract, it needs to be exposed to Chrome.\n\nI was a bit surprised to find that the statscollector\u0027s clear-stats function was never called otherwise!\n\nSuggest filing a bug on this and referencing it here.",
      "parentUuid": "6b053406_b54ca9f7",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba903876_88e3ba0c",
        "filename": "api/peerconnectioninterface.h",
        "patchSetId": 7
      },
      "lineNbr": 738,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-29T16:46:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3ab5bf40_f07e4404",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67cee3c9_cc5df650",
        "filename": "pc/peerconnectioninterface_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 856,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "How about returning the result as callback-\u003ereport() instead of bool?",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9878ec9a_19af6ac6",
        "filename": "pc/peerconnectioninterface_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 856,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-29T16:28:47Z",
      "side": 1,
      "message": "See other discussion - verifying that the content is correct belongs to other files.\nI was following the pattern set in the DoGetStats function right above it.",
      "parentUuid": "67cee3c9_cc5df650",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "302cd872_94ca150d",
        "filename": "pc/peerconnectioninterface_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 856,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-29T16:46:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "9878ec9a_19af6ac6",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af002303_ece5d3a7",
        "filename": "pc/peerconnectioninterface_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "See other comment about having to clear the cache being a bug.\n\nMight I suggest we move this type of testing to rtcstats_integrationtest.cc? I think it\u0027s better organized if all (spec compliant) stats tests are in the test files dedicated to stats collection (rtcstats_integrationttest.cc for full stack or rtcstatscollector_unittest.cc for mocking).\n\nRTCStatsIntegrationTest uses a PeerConnectionTestWrapper to help set up a call with StartCall(). (If more precision is needed to work directly with a PeerConnectionInterface instead of a Wrapper a second ::testing::Test class can be added to the same file.)",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54d4385b_0819950e",
        "filename": "pc/peerconnectioninterface_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-29T16:28:47Z",
      "side": 1,
      "message": "Hm. I\u0027m not convinced here.\nThe bug with the stats not being cleared on state change is a bug in the PC. It\u0027s exposed by the fact that we have to clear stats here in order to get the test coverage we want.\n\nIt\u0027s not really a property of the statscollector; it\u0027s a property of the PC.\n(And it\u0027s been a week, but I believe the crash that made me write this test was actually in the PC, not in the statscollector).\n\nSo we do need to call the GetStats(new) method in this file, to get test coverage while working with a real (or real-as-possible) PC. But we shouldn\u0027t verify the content of the stats - that, I agree, belongs in the other files.",
      "parentUuid": "af002303_ece5d3a7",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "033f6e98_abdf889b",
        "filename": "pc/peerconnectioninterface_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 1798,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-29T16:46:31Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "54d4385b_0819950e",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56607918_5968a357",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 7
      },
      "lineNbr": 610,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "nit throughout this CL: At least in chromium it is required to have http[s]:// before links, I assume it\u0027s the same here and elsewhere.",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4150bb9_f07cc1d8",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 7
      },
      "lineNbr": 614,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "nit: Bug reference and comment.",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c6dd227_561918b6",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 7
      },
      "lineNbr": 615,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "nit: RTC_DCHECK_NE",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "895985ab_505c001b",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 7
      },
      "lineNbr": 629,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "nit: Comment and bug reference like above.",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "03415a28_3af84e6d",
        "filename": "pc/rtcstatscollector.cc",
        "patchSetId": 7
      },
      "lineNbr": 1029,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "Can you add a TODO to move over from local_streams(), referencing the bug you filed https://crbug.com/webrtc/8674",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b59780a_db05345a",
        "filename": "pc/rtcstatscollector_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 2326,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "Should we also check for the existence of RTCMediaStreamTrackStats without streams here or in a separate test?",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "88b1932a_34f49427",
        "filename": "pc/trackmediainfomap.cc",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-28T19:26:22Z",
      "side": 1,
      "message": "Here and other \"..._by_..._ssrc_\" maps: When unconnected, while it does not make sense to pair the SSRC and sender, it still makes sense to pair the sender and the track. Can you move this if to just around the ssrc mapping?\n\nYou forgot to do this \"if\" in the other places, meaning the \"count(ssrc) \u003d\u003d 0\" DHCECKs could still be hit.",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30013d2e_a623fb75",
        "filename": "pc/trackmediainfomap.cc",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 5634
      },
      "writtenOn": "2017-12-29T16:28:47Z",
      "side": 1,
      "message": "The count() RTC_CHECK is actually checking something else - it checks whether the key is present in the map, and fails if it is already present. After reading the spec pages on C++ map\u003c\u003e, it seems that this is the canonical way to check for presence.\nThe map will work fine with zeroes, as long as there\u0027s only one of them. (Which I suppose is why this hasn\u0027t bitten us before).\nBut you\u0027re right - the check needs to e on video senders too.\n(On video receivers, the ssrc\u003d\u003d0 case can\u0027t exist, because it\u0027s created by incoming signalling.)",
      "parentUuid": "88b1932a_34f49427",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "050bb675_b425d06f",
        "filename": "pc/trackmediainfomap.cc",
        "patchSetId": 7
      },
      "lineNbr": 131,
      "author": {
        "id": 5142
      },
      "writtenOn": "2017-12-29T16:46:31Z",
      "side": 1,
      "message": "While we treat ssrc \u003d\u003d 0 as a special value, I\u0027ve seen TODOs indicating that it should be a valid value. Also with things that are configured by a remote party, I\u0027m happier to see ifs than DCHECKs in case it becomes an attack vector. Or do we trust other parts of the code to have guarded against this, as it should have, if 0 is indeed an invalid value?",
      "parentUuid": "30013d2e_a623fb75",
      "revId": "f9ac7175be9742977c21a6ce7e9d2993275cf858",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}