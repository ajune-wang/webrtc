{
  "comments": [
    {
      "key": {
        "uuid": "f1eea41a_3d8188a8",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-08T01:13:18Z",
      "side": 1,
      "message": "Why is this not an absl::optional? For consistency with the other members? The TODO on line 108 would suggest that optional rather than bool would be best for new code.",
      "revId": "112f449e8b28643ff5393fe592b086ff99d160bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "350032d4_161eb7a0",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-11-08T12:22:34Z",
      "side": 1,
      "message": "The reason was consistency and also better adaptation to the parser,\nbool HdrMetadataExtension::Parse(rtc::ArrayView\u003cconst uint8_t\u003e data, HdrMetadata* hdr_metadata);\n\nChanging this to absl::optional\u003cHdrMetadata\u003e, I get something like this when calling this function:\n  HdrMetadata hdr_metadata;\n  header-\u003eextension.hdr_metadata \u003d\n      GetExtension\u003cHdrMetadataExtension\u003e(\u0026hdr_metadata)\n          ? absl::make_optional(hdr_metadata)\n          : absl::nullopt;\n\nNot too bad, but I don\u0027t like the creation of the temporary object.\n\nOr maybe I should change the signature of GetExtension to accept absl::optional\u003cHdrMetadata\u003e* hdr_metadata?\n\nDo you have any ideas?",
      "parentUuid": "f1eea41a_3d8188a8",
      "revId": "112f449e8b28643ff5393fe592b086ff99d160bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7124282c_60f5c31f",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-08T12:47:18Z",
      "side": 1,
      "message": "GetExtension could *return* absl::optional\u003cHdrMetadata\u003e. Provided HdrMetadata is moveable, of course.\n\n  header-\u003eextension.hdr_metadata \u003d GetExtension\u003cHdrMetadataExtension\u003e();",
      "parentUuid": "350032d4_161eb7a0",
      "revId": "112f449e8b28643ff5393fe592b086ff99d160bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15532d3f_d002f463",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-11-08T13:17:09Z",
      "side": 1,
      "message": "I don\u0027t think that would work. GetExtension\u003c\u003e can also be called from a templated function in RtpPacket, so return type must be bool.\n\nUnfortunately, HdrMetadata is not moveable, or there are only primitives so there\u0027s no gain in moving or copying.",
      "parentUuid": "7124282c_60f5c31f",
      "revId": "112f449e8b28643ff5393fe592b086ff99d160bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaeb3f97_d550b047",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-08T13:52:16Z",
      "side": 1,
      "message": "You can have two GetExtension\u003c\u003e, one that takes a pointer argument and returns bool (the old one) and one that takes no argument and returns an optional (the one I proposed).\n\nHdrMetadata is moveable (all copyable types are). It\u0027s not *more efficient* to move than to copy, but that isn\u0027t the issue here. (In practice, we\u0027ll probably get RVO and the assignment will end up being zero cost.)",
      "parentUuid": "15532d3f_d002f463",
      "revId": "112f449e8b28643ff5393fe592b086ff99d160bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "018996e6_db662cfe",
        "filename": "api/rtp_headers.h",
        "patchSetId": 3
      },
      "lineNbr": 132,
      "author": {
        "id": 7641
      },
      "writtenOn": "2018-11-08T15:55:50Z",
      "side": 1,
      "message": "Thanks for the suggestion!\nFixed.",
      "parentUuid": "eaeb3f97_d550b047",
      "revId": "112f449e8b28643ff5393fe592b086ff99d160bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}