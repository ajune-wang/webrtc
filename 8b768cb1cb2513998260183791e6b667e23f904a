{
  "comments": [
    {
      "key": {
        "uuid": "13f239bb_e83d7626",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 6
      },
      "lineNbr": 6965,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-08-16T12:29:34Z",
      "side": 1,
      "message": "Is this right? Are we really not registering anything about PRFLX, STUN or RELAY remote candidates?\n\n(And if this is a bug - we need to add a test that would have caught it.)",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5639986d_6a38848a",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 6
      },
      "lineNbr": 6965,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-16T16:31:22Z",
      "side": 1,
      "message": "The REMOTE_CANDIDATE_ADDED bit is logged for all types of candidates. The original logging does not gate the subcategories, and this is changed to match the logging of local candidates, where we only logged subcategories for host candidates. My understanding is these subcategories (private, mDNS, v6) are meant for host candidates and hence re-organized both places as is.",
      "parentUuid": "13f239bb_e83d7626",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a8575af_cb248887",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 6
      },
      "lineNbr": 6965,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-08-19T11:51:06Z",
      "side": 1,
      "message": "I think this is wrong. The most obvious case is that remote non-host candidates can be IPv6 or private IP, and should be counted as such.\nWe don\u0027t have any worked examples of STUN/TURN servers producing MDNS candidates yet, but in theory, there\u0027s nothing that prevents them from doing so. (Would be strange if it was useful, but who knows? Perhaps someone has corporate-wide MDNS resolution?)",
      "parentUuid": "5639986d_6a38848a",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e451e68d_bef4a280",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 6
      },
      "lineNbr": 6965,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-19T19:01:12Z",
      "side": 1,
      "message": "I\u0027ve tentatively also removed the restriction for local candidates and we log the subcategories for all local ones as well. The rationale is to keep the parity between sending and receiving candidates in libwebrtc, so that we can have some inference to the distribution of libwebrtc^2 pairs vs libwebrtc-thirdparty pairs. Please let me know if this doesn\u0027t make sense. Also edited names and comments accordingly.",
      "parentUuid": "8a8575af_cb248887",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12851128_bda9149e",
        "filename": "pc/peer_connection.h",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 8393
      },
      "writtenOn": "2019-08-17T03:31:14Z",
      "side": 1,
      "message": "Should these also be \"_SUCCEEDED\"? From a cursory evaluation it seems like the log event only occurs at the successful end of the function.",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b35ef7fe_2cde5961",
        "filename": "pc/peer_connection.h",
        "patchSetId": 6
      },
      "lineNbr": 73,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-19T04:06:29Z",
      "side": 1,
      "message": "Agree that SLD and SRD bits are only registered if the methods succeed. Renamed for accuracy in the new patchset.",
      "parentUuid": "12851128_bda9149e",
      "range": {
        "startLine": 73,
        "startChar": 4,
        "endLine": 73,
        "endChar": 32
      },
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9386ae3e_a830fcb8",
        "filename": "pc/peer_connection.h",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-08-16T12:29:34Z",
      "side": 1,
      "message": "I\u0027m puzzled by the renumbering of this name. What does it accomplish?\nThe old code only logged when successful, the new code logs when not successful, but logs more details of the transaction.\nDo we have reason to suspect that there\u0027s a significant difference here?",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cb8a6e43_f8381f9c",
        "filename": "pc/peer_connection.h",
        "patchSetId": 6
      },
      "lineNbr": 76,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-16T16:31:22Z",
      "side": 1,
      "message": "The REMOTE_CANDIDATE_ADDED is repurposed to log all added remote candidates in addition to the case covered by ADD_ICE_CANDIDATE_SUCCEEDED in AddIceCandidate (what REMOTE_CANDIDATE_ADDED originally did). This includes the cases: 1) AddIceCandidate fails, and candidates are buffered and later added when applying SDP in a different path. 2) The candidates are added from SDP directly in non-trickled sessions. Currently we have a number of samples that are connected but the AddIceCandidate path is not triggered (no originalR EMOTE_CANDIDATE_ADDED bit), and 2) is what we thought could have contributed to this big slice given a separate histogram on AddIceCandidate.",
      "parentUuid": "9386ae3e_a830fcb8",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9d1f111_49ec27d5",
        "filename": "pc/peer_connection.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-08-16T12:29:34Z",
      "side": 1,
      "message": "Somewhere we need to document that REMOTE_CANDIDATE_ADDED and CANDIDATE_COLLECTED are the aggregate numbers, and that IPv6, private and MDNS are 3 subcategories that can be present in each of them (with the remainder presumably assumed to be public IPv4). Since we can\u0027t make the numbers contiguous, perhaps we should put an explicit comment ahead of the list?",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81dba25b_de9fe7f6",
        "filename": "pc/peer_connection.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-16T16:31:22Z",
      "side": 1,
      "message": "Will add text in a new patchset. The current patch treats the 3 subcategories as sub slices of host candidates but not all candidates. This is related to the other comment. Please let me know if you think this is not the right slicing.",
      "parentUuid": "c9d1f111_49ec27d5",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bc178fc_10f0d826",
        "filename": "pc/peer_connection_histogram_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 692,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-08-16T12:29:34Z",
      "side": 1,
      "message": "Code and comment are inconsistent. You also don\u0027t CHECK that you got a candidate - if this times out, the test will fail to show expected behavior.",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97d02e2f_7a54ad94",
        "filename": "pc/peer_connection_histogram_unittest.cc",
        "patchSetId": 6
      },
      "lineNbr": 692,
      "author": {
        "id": 6646
      },
      "writtenOn": "2019-08-19T04:06:29Z",
      "side": 1,
      "message": "Thanks for catching this. Having a dedicated check definitely makes the diagnosis clearer. Fixed.",
      "parentUuid": "2bc178fc_10f0d826",
      "revId": "8b768cb1cb2513998260183791e6b667e23f904a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}