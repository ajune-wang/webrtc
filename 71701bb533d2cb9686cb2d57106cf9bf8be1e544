{
  "comments": [
    {
      "key": {
        "uuid": "3e481a66_c94f1029",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-02-04T19:37:17Z",
      "side": 1,
      "message": "The spec says otherwise here: \"If the number of RTCRtpEncodingParameters now stored in sendEncodings is 1, then remove any rid member from the lone entry.\"\n\nAlso, you should check we have at most kMaxSimulcastStreams and remove excess layers above that: \"Let maxN be the maximum number of total simultaneous encodings the user agent may support for this kind, at minimum 1.This should be an optimistic number since the codec to be used is not known yet.\n\nIf the number of RTCRtpEncodingParameters stored in sendEncodings exceeds maxN, then trim sendEncodings from the tail until its length is maxN.\"",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a11d4a36_98298591",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-04T19:56:01Z",
      "side": 1,
      "message": "Few issues here.\n1. Using a single RID\nThe spec is somewhat contradictory in this case.\nOn one hand it says that a if a RID is supplied it must be used.\nOn the other hand it says that a single RID should not be communicated in the SDP.\nI understand this to mean that the user of PeerConnection can supply a single RID and it should be reflected in the parameters but not actually sent. It is currently not possible to achieve this without significant refactoring (or hacks) because of the channel implementation and conflicts with Plan-B semantics.\nRemoving the RID from the given parameters feels wrong to me (vs. informing the user that they should do it themselves), especially since |RtpTransceiverInit| is const.\nThis is also why i chose not to generate RIDs if they are not supplied at the moment.\n2. kMaxSimulcastStreams\nI didn\u0027t realize that this was an API thing, i thought it would be up to the media engine to understand its capabilities and drop from the tail if necessary.\nSince this const is in the API directory, do you think that this should return INVALID_PARAMETER or drop the layers? dropping the layers goes against the const argument in #1.\n\nWDYT? interested in hearing more feedback on this.",
      "parentUuid": "3e481a66_c94f1029",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d32d372_96c241a3",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-02-05T11:09:38Z",
      "side": 1,
      "message": "Can you point me to the place where it says that if a RID is supplied, it must be used?\n\nThe addTransceiver algorithm is pretty clear about that, and says that you should trim the layers if there are too many than what\u0027s supported and then remove the rid it is supplied with a single layer.\n\nSee: https://w3c.github.io/webrtc-pc/#dom-rtcpeerconnection-addtransceiver",
      "parentUuid": "a11d4a36_98298591",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95786abc_c41538f7",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T17:39:42Z",
      "side": 1,
      "message": "I agree with Florent it seems like the spec is pretty clear with this behavior. The modifications can happen below when RtpParameters are constructed from the RtpTransceiverInit struct.",
      "parentUuid": "0d32d372_96c241a3",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e4504f2_7ab5088f",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "JSEP 5.2.1\nIf the RtpTransceiver has a sendrecv or sendonly direction, and\nthe application has specified RID values or has specified more\nthan one encoding in the RtpSenders\u0027s parameters, an \"a\u003drid\" line\nfor each encoding specified.  The \"a\u003drid\" line is specified in\n[I-D.ietf-mmusic-rid], and its direction MUST be \"send\".  If the\napplication has chosen a RID value, it MUST be used as the rid-identifier; otherwise a RID value MUST be generated by the\nimplementation.\n\nI\u0027ll go ahead and make the changes to:\n1. trim the tail\n2. auto-generate rid values if simulcast was specified but none were supplied\n3. remove the rid in case of a single layer.",
      "parentUuid": "95786abc_c41538f7",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "638bf62c_e92c00d4",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 3048,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "associated",
      "range": {
        "startLine": 3048,
        "startChar": 60,
        "endLine": 3048,
        "endChar": 68
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f9e6dd3_8d944a63",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 3048,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "638bf62c_e92c00d4",
      "range": {
        "startLine": 3048,
        "startChar": 60,
        "endLine": 3048,
        "endChar": 68
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86c89ec8_8047ecee",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "What do you think about an std::vector of std::pair?",
      "range": {
        "startLine": 74,
        "startChar": 43,
        "endLine": 75,
        "endChar": 74
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0ce9271_dbcda884",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "that would work (also using the Rid struct would work), but i was trying to allow the initializer list so that the parameters of the test are clearer.\ni think i can come up with a way to satisfy both.",
      "parentUuid": "86c89ec8_8047ecee",
      "range": {
        "startLine": 74,
        "startChar": 43,
        "endLine": 75,
        "endChar": 74
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c3299bd_34abbe5d",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "up to you: another option is to define a custom PeerConnectionWrapper with your overload of AddTransceiver.",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe09000b_b7aa5dae",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "i think that would be a bit abusive. the overload with init already exists, this is just a convenience method to create the init, and it calls AddTransceiver because there is nothing else to do with the init struct.",
      "parentUuid": "4c3299bd_34abbe5d",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3278b690_739e2773",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "A pattern I sometimes use is to return a boolean then EXPECT_TRUE in the actual test so if you have two calls to this function you can tell which one failed.",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201cf78b_db5d77b5",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "thats a trade off because a method should contain multiple validations, so you would just know that something went wrong. in this case it could be rids, or active flags, or length of either.\nwith the way it is, you can still figure out what call failed because you have both:\n1. the stack trace to show you the call location\n2. the exact arguments printed to show you what was expected\n\nlosing #2 is not worth it in my opinion.",
      "parentUuid": "3278b690_739e2773",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f3a623c5_bafc6406",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-06T23:03:41Z",
      "side": 1,
      "message": "Sorry, I should have been more clear. I\u0027m advocating for a return boolean in addition to the expectations inside the function.",
      "parentUuid": "201cf78b_db5d77b5",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31606e4b_1983a2d0",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "unused",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0edffc1d_26c82de3",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31606e4b_1983a2d0",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec1e6265_2258b1e4",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Verify the error type?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bebf93c_d0ffd321",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done - on the relevant test (this test was removed).",
      "parentUuid": "ec1e6265_2258b1e4",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "89620d5e_62f652fd",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "ASSERT_TRUE",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58f7e5c1_6cb94fba",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "89620d5e_62f652fd",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a03ea257_8ba841d6",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Don\u0027t really have to check this tbh",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "560299fc_a4393b6d",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a03ea257_8ba841d6",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953ac511_503b95fb",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "or this",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4ce4291_cb10170e",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "953ac511_503b95fb",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dfbd43f_5545cc1b",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Convention in other tests is caller/callee.\n\nI don\u0027t really like either of the options.\n\nPerhaps the lesser of evils is \"local/remote\". What do you think?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a05a495_22352f12",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "i\u0027ll use local remote.",
      "parentUuid": "0dfbd43f_5545cc1b",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ddb235_7485e034",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Should this happen before SLD?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ece17ff_7399c0e3",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "it can, but i\u0027m not testing that AddTransceiver creates the transceiver correctly (that should be tested elsewhere). i\u0027m validating the negotiation part of the logic.\ni\u0027ll add a test specifically for that case above.",
      "parentUuid": "53ddb235_7485e034",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2b6306de_932083a0",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "EXPECT_TRUE?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee563231_56fd5880",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2b6306de_932083a0",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b3ba2cc_1ffb52be",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "it\u0027s not really recycling but rather associating",
      "range": {
        "startLine": 355,
        "startChar": 55,
        "endLine": 355,
        "endChar": 62
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1cc2c8ac_331736dc",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b3ba2cc_1ffb52be",
      "range": {
        "startLine": 355,
        "startChar": 55,
        "endLine": 355,
        "endChar": 62
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc165485_8bdfeb19",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "expect that size is 2",
      "range": {
        "startLine": 371,
        "startChar": 32,
        "endLine": 371,
        "endChar": 47
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef31b1bd_5c05a758",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dc165485_8bdfeb19",
      "range": {
        "startLine": 371,
        "startChar": 32,
        "endLine": 371,
        "endChar": 47
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2386a36e_727fee30",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "EXPECT_TRUE?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10d9b882_55a8e20a",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-06T00:19:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2386a36e_727fee30",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}