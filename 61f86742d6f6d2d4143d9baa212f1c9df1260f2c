{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "caf11e66_197794c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-14T03:27:10Z",
      "side": 1,
      "message": "Hi, Xavier. Could you please take a look this CL? Thanks.",
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "992abed0_ead905e9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "This CL looks to round all U/V-lane slice heights up. Android at least sometimes rounds these down. WebRTC always rounds up.\n\nSee for example here we are copying that last row:\nhttps://source.corp.google.com/piper///depot/google3/third_party/webrtc/files/stable/webrtc/sdk/android/src/java/org/webrtc/AndroidVideoDecoder.java;l\u003d517\n\nMight make sense to do some on-device testing regarding this.",
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0696b11b_ab71d59f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "I think encoders and decoders have different criteria for handling pixels of arbitrary size.\nIn the case of a decoder, I think it should be able to decode regardless of the multiple of the width and height of the input stream. However, I think it is okay to to put some restrictions on the encoder.\n\nI\u0027ve tested several devices, but none of them seem to handle odd widths/heights properly.\nTwo Qualcomm devices (Galaxy S20, Pixel 2) reject encoder initialization if either width or height is odd.\nI\u0027ve also tested it with an Exynos device (Galaxy S8), apparently the encoder initializes but produces an encoding output to smaller even width/height.\nWe should also consider that the minimum alignment for the source is 2. [1]\nThere is also a CL that initializes the Hardware Video Encoder only in multiples of 16x16. [2]\n\nSo, it is still worth to care about odd width / height?\n\n[1] https://source.chromium.org/chromium/chromium/src/+/dbef2bd276ad196cc45047dcc4957e33d6fcb734:third_party/webrtc/sdk/android/src/jni/android_video_track_source.cc;l\u003d24\n[2] https://webrtc-review.googlesource.com/c/src/+/229460",
      "parentUuid": "992abed0_ead905e9",
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfa0ea7c_94d7ace3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5112
      },
      "writtenOn": "2022-02-04T12:36:39Z",
      "side": 1,
      "message": "Thank you for taking the time to test this. Based on [2] I guess this should be okay then.",
      "parentUuid": "0696b11b_ab71d59f",
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46dcb116_7e1b5a8f",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Move comment to the method below that uses a tightly packed destiantion buffer.",
      "range": {
        "startLine": 17,
        "startChar": 2,
        "endLine": 17,
        "endChar": 77
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa550d4b_1241125e",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46dcb116_7e1b5a8f",
      "range": {
        "startLine": 17,
        "startChar": 2,
        "endLine": 17,
        "endChar": 77
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92c47166_b4a63c66",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "nit: I think dstSliceHeight would be a bit clearer (or just add documentation)\n\nSince right now it is not entirely clear what is happening because having a different height for input and output could also mean e.g. scaling.",
      "range": {
        "startLine": 20,
        "startChar": 10,
        "endLine": 20,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d773fe44_e0ff50ca",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done.\nNote that this function and `libyuv::I420Copy` have nothing to do with scaling.",
      "parentUuid": "92c47166_b4a63c66",
      "range": {
        "startLine": 20,
        "startChar": 10,
        "endLine": 20,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f31aea5_04a3d4b5",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Would it make sense to make this one an additional input argument?",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 24
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f667f4b2_860a4696",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "0f31aea5_04a3d4b5",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 24
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8dd9b931_8d1031e3",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f667f4b2_860a4696",
      "range": {
        "startLine": 23,
        "startChar": 14,
        "endLine": 23,
        "endChar": 24
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec5d5464_c2106605",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "nit: dstStartY and so on.",
      "range": {
        "startLine": 26,
        "startChar": 14,
        "endLine": 26,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3af4cb56_a6321401",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ec5d5464_c2106605",
      "range": {
        "startLine": 26,
        "startChar": 14,
        "endLine": 26,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "baf7a350_4c23bd81",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Have you checked that nativeI420Copy doesn\u0027t access those final bytes?",
      "range": {
        "startLine": 34,
        "startChar": 49,
        "endLine": 34,
        "endChar": 81
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b866e08_d8c9885f",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Basically, `nativeI420Copy` is a thin wrapper of `libyuv::I420Copy`. From what I understand they honor the stride and don\u0027t have out-of-bound accesss. For example, CopyRow_C of libyuv is a plain memcpy and only copies as needed.",
      "parentUuid": "baf7a350_4c23bd81",
      "range": {
        "startLine": 34,
        "startChar": 49,
        "endLine": 34,
        "endChar": 81
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f2c2c49_459de595",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Similarly, move comment.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 82
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bdeff08_d01faac7",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9f2c2c49_459de595",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 82
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "017e4a4e_2c5a60d6",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Not sure where validation of input arguments is supposed to happen, but I think the java or jni code needs to take responsibility so that invalid width, height or stride can\u0027t crash the native code.\n\nIn particular, negative dstStrideY can sometimes make some sense (to mirror the image), but will break the size calculation.",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d1deff_7577335c",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "The general preference is to crash in Java because that is cleaner from the API user perspective.",
      "parentUuid": "017e4a4e_2c5a60d6",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbe5dc2f_5089bbff",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-16T08:04:22Z",
      "side": 1,
      "message": "\u003e The general preference is to crash in Java because that is cleaner from the API user perspective.\n\nI agree: calling a java method with invalid arguments should result in a java exception, not a native crash. What\u0027s unclear to me is what convention we have for argument validation, should we do that in the jni glue code, or in the java method directly invoking a native method? \n\nIn this particular case, if the new I420Copy or I420ToNV12 are called with bogus value (say, negative values, or stride \u003c width, ...), will that be detected before crashing, and if so, where?",
      "parentUuid": "f5d1deff_7577335c",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e49735fd_85d63323",
        "filename": "sdk/android/api/org/webrtc/YuvHelper.java",
        "patchSetId": 2
      },
      "lineNbr": 85,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "On the Java side, I added more code that checks the condition and throws an exception. Based on the uses of these functions, it looks like we don\u0027t need to consider things like flipping (i.e. height \u003c 0) for now.",
      "parentUuid": "fbe5dc2f_5089bbff",
      "range": {
        "startLine": 85,
        "startChar": 4,
        "endLine": 85,
        "endChar": 20
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71775219_171c2585",
        "filename": "sdk/android/instrumentationtests/src/org/webrtc/YuvHelperTest.java",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Using native memset seems like overkill. Please do a plain java method to zero the buffer (I\u0027m not familiar enough with java to know or recommend appropriate std library tools).",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 3
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f6d800c_878c69c0",
        "filename": "sdk/android/instrumentationtests/src/org/webrtc/YuvHelperTest.java",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "+1 We should only use native code when performance matters (which it does not for this test)\n\nAlso this should be unnecessary. Java docs say:\nThe new buffer\u0027s position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. Whether or not it has a backing array is unspecified.\n\nSo it should already be initialized to 0.",
      "parentUuid": "71775219_171c2585",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 3
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7a2f44d3_aeee1b65",
        "filename": "sdk/android/instrumentationtests/src/org/webrtc/YuvHelperTest.java",
        "patchSetId": 2
      },
      "lineNbr": 58,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f6d800c_878c69c0",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 3
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b8cc45f_19e71c51",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-15T14:22:06Z",
      "side": 1,
      "message": "Why this change to public?",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 6
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5676362_c41b1f5e",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5b8cc45f_19e71c51",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 6
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9fa95529_9b8a8ce4",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 14994
      },
      "writtenOn": "2021-12-15T13:59:27Z",
      "side": 1,
      "message": "Could you move all this logic to the getInputFormatXxx methods? This method is already large, and that would remove the need for these intermediate local variables. You could have something like:\n\n  int getStride(MediaFormat inputFormat) {\n    if (Build.VERSION.SDK_INT \u003e\u003d Build.VERSION_CODES.M\n        \u0026\u0026 inputFormat !\u003d null\n        \u0026\u0026 inputFormat.containsKey(MediaFormat.KEY_STRIDE)) {\n      return inputFormat.getInteger(MediaFormat.KEY_STRIDE);\n    }\n    return width;\n  }",
      "range": {
        "startLine": 289,
        "startChar": 0,
        "endLine": 303,
        "endChar": 0
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76d56b80_3bb48655",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 5112
      },
      "writtenOn": "2021-12-15T16:15:22Z",
      "side": 1,
      "message": "+1 but as a nit I would also make the method static and pass the width as a parameter.",
      "parentUuid": "9fa95529_9b8a8ce4",
      "range": {
        "startLine": 289,
        "startChar": 0,
        "endLine": 303,
        "endChar": 0
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0ed83326_c166210a",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 303,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76d56b80_3bb48655",
      "range": {
        "startLine": 289,
        "startChar": 0,
        "endLine": 303,
        "endChar": 0
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41bae9b8_89abaabd",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 730,
      "author": {
        "id": 14994
      },
      "writtenOn": "2021-12-15T13:59:27Z",
      "side": 1,
      "message": "These aren’t used by the tests, so you keep the same signature as before and use the instance variables in the implementation.",
      "range": {
        "startLine": 730,
        "startChar": 60,
        "endLine": 730,
        "endChar": 91
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c51dbbe_bc59ccfd",
        "filename": "sdk/android/src/java/org/webrtc/HardwareVideoEncoder.java",
        "patchSetId": 2
      },
      "lineNbr": 730,
      "author": {
        "id": 9405
      },
      "writtenOn": "2021-12-22T17:08:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "41bae9b8_89abaabd",
      "range": {
        "startLine": 730,
        "startChar": 60,
        "endLine": 730,
        "endChar": 91
      },
      "revId": "61f86742d6f6d2d4143d9baa212f1c9df1260f2c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}