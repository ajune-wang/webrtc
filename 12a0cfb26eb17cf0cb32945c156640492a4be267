{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "29a84364_759fde44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-21T15:15:22Z",
      "side": 1,
      "message": "Cool! Guess it works in some manual end-to-end testing?",
      "revId": "12a0cfb26eb17cf0cb32945c156640492a4be267",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5322d628_48b23a21",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-22T15:01:44Z",
      "side": 1,
      "message": "Yes. Also added wpt here: https://chromium-review.googlesource.com/c/chromium/src/+/4790142/1",
      "parentUuid": "29a84364_759fde44",
      "revId": "12a0cfb26eb17cf0cb32945c156640492a4be267",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90bd8d81_be42001e",
        "filename": "audio/channel_send_frame_transformer_delegate.cc",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-21T15:15:22Z",
      "side": 1,
      "message": "This means we have different timestamp behaviours for sender and receiver frames right?\nIf I take an audio frame about to be sent, then re-write the rtp timestamp field in JS, the frame which actually gets sent on the RTP connection will have a timestamp of `my_timestamp - outgoing_start_timestamp + outgoing_start_timestamp  \u003d my_timestamp`, but if I take a received frame, re-write the rtp ts, then the actual sent RTP packet will have ts `my_timestamp + outgoing_start_timestamp`. Is this an issue?",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 171,
        "endChar": 3
      },
      "revId": "12a0cfb26eb17cf0cb32945c156640492a4be267",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95cec113_ee4ba10c",
        "filename": "audio/channel_send_frame_transformer_delegate.cc",
        "patchSetId": 7
      },
      "lineNbr": 171,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-22T15:01:44Z",
      "side": 1,
      "message": "It does seem inconsistent for sender and receiver frames. Should we instead change rtp_timestamp_ \u003d timestamp here?\n https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/audio/channel_send_frame_transformer_delegate.cc;l\u003d93;drc\u003d392e4714e763da9fecb0d93ee30821bef8ee8597",
      "parentUuid": "90bd8d81_be42001e",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 171,
        "endChar": 3
      },
      "revId": "12a0cfb26eb17cf0cb32945c156640492a4be267",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ace8f35_3d6af4da",
        "filename": "audio/channel_send_frame_transformer_delegate_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-21T15:15:22Z",
      "side": 1,
      "message": "What if we just have a MockTransformableFrame which says it\u0027s an incoming frame here? Then we can leave TransformableIncomingAudioFrame just in the .cc and avoid leaking the implementation details outside of the class.\nBut maybe that\u0027s then testing less - but it would be testing that this sender side can handle any frame which implements the TransformableFrameInterface which is maybe better? WDYT?",
      "revId": "12a0cfb26eb17cf0cb32945c156640492a4be267",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5bd29b81_76cceff9",
        "filename": "audio/channel_send_frame_transformer_delegate_unittest.cc",
        "patchSetId": 7
      },
      "lineNbr": 134,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-22T15:01:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ace8f35_3d6af4da",
      "revId": "12a0cfb26eb17cf0cb32945c156640492a4be267",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}