{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cd10dad1_fa1d9f09",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 20429
      },
      "writtenOn": "2024-04-08T21:23:14Z",
      "side": 1,
      "message": "Hi Ilya and Sergey,\n\nThis CL is more of a bug report. I am usng the CL to describe the bug. The changes I proposed are probably not the right way to fix the bug.\n\nIf the off-by-one error of VideoFrame::UpdateRect is not serious, we can just add a comment to acknowledge that we are ignore the bug.",
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21f41067_ad90a5f7",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1962,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-04-09T08:19:36Z",
      "side": 1,
      "message": "nit: could you rephrase it to make it shorter and more focused? There\u0027s so much information here now and it doesn\u0027t really say \"why\" this code here is needed.",
      "range": {
        "startLine": 1958,
        "startChar": 8,
        "endLine": 1962,
        "endChar": 13
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f2b4e80_86670088",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1972,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-04-09T07:32:00Z",
      "side": 1,
      "message": "Maybe use switch() without default? So that when someone adds a new format (4:1:1, for example) to https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/video/video_frame_buffer.h;l\u003d54 he/she will have to update this place?",
      "range": {
        "startLine": 1963,
        "startChar": 6,
        "endLine": 1972,
        "endChar": 7
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66335765_a4005a77",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1972,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-04-09T08:19:36Z",
      "side": 1,
      "message": "It might be cleaner to add something to webrtc::VideoFrameBuffer interface regarding required alignment.\nLike HeightAlignment() and WidthAlignment(), default implementations return 1, but I422 overrides them both to return 2, I422 overrides only HeightAlignment(), etc.\n\nThen here you just do \n```\noffset_x -\u003d offset_x % video_frame_buffer()-\u003eWidthAlignment();\noffset_y -\u003d offset_y % video_frame_buffer()-\u003eHeightAlignment();\n```",
      "parentUuid": "3f2b4e80_86670088",
      "range": {
        "startLine": 1963,
        "startChar": 6,
        "endLine": 1972,
        "endChar": 7
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8048d596_783f3d69",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1972,
      "author": {
        "id": 20429
      },
      "writtenOn": "2024-04-10T00:44:47Z",
      "side": 1,
      "message": "Thank you both for suggesting improvements. I like Ilya\u0027s suggestion of adding new methods to the webrtc::VideoFrameBuffer interface regarding the required alignment because it is object-oriented. Sergey, if that approach is okay with you, I will go ahead and implement it.\n\nIt also has the nice side effect that the comment I added at line 1957 won\u0027t be needed.\n\nIlya, the two methods should be named OffsetXAlignment and OffsetYAlignment, because the width and height can be odd for I420 and I422.",
      "parentUuid": "66335765_a4005a77",
      "range": {
        "startLine": 1963,
        "startChar": 6,
        "endLine": 1972,
        "endChar": 7
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "005a2ffd_0b4ceab3",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1972,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-04-10T07:44:24Z",
      "side": 1,
      "message": "Maybe call it WidthSubsampling and HeightSubsampling. Because there\u0027s no offset intrinsic to the buffer. The offset is important, when doing cropping, alright, but it would be weird to have something cropping specific in the buffer class.",
      "parentUuid": "8048d596_783f3d69",
      "range": {
        "startLine": 1963,
        "startChar": 6,
        "endLine": 1972,
        "endChar": 7
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68df3220_22cc9e87",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1972,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-04-10T08:00:15Z",
      "side": 1,
      "message": "Adding Width/HeightSubsampling methods SG.\n\nI just realized I do not fully understand why we need to make it even. WebRTC allows odd resolutions and expects codecs to handle it. In case of 420/422 number of chroma samples is calculated as (dimension + 1) / 2.",
      "parentUuid": "005a2ffd_0b4ceab3",
      "range": {
        "startLine": 1963,
        "startChar": 6,
        "endLine": 1972,
        "endChar": 7
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42b5746b_dc108a9e",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1972,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-04-10T08:04:46Z",
      "side": 1,
      "message": "We can have odd width/height, right. In that case the last pixel in a row will have it\u0027s own u/v 2x2 block.\n\nBut we can\u0027t crop with odd offset, since in the format the first two pixels share the same U/V big pixel. But if we have odd offset, we will have the first two pixels from two different U/V 2x2 blocks, so this will require remixing all the U/V data, which would change all the colors slightly.",
      "parentUuid": "68df3220_22cc9e87",
      "range": {
        "startLine": 1963,
        "startChar": 6,
        "endLine": 1972,
        "endChar": 7
      },
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0b63493_b5f8dc83",
        "filename": "video/video_stream_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 1974,
      "author": {
        "id": 20429
      },
      "writtenOn": "2024-04-08T21:27:34Z",
      "side": 1,
      "message": "A better way to fix the bug is for `CropAndScale()` to output the `offset_x` and `offset_y` values actually used, e.g., by making them in/out parameters. Then the right values of `offset_x` and `offset_y` will be used in lines 1976-1977.",
      "revId": "9aa6582756bfc1d8b86baee0dcb57cf3104fda33",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}