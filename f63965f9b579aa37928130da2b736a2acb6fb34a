{
  "comments": [
    {
      "key": {
        "uuid": "362c331a_e719c3d9",
        "filename": "video/overuse_frame_detector_resource_adaptation_module.cc",
        "patchSetId": 9
      },
      "lineNbr": 155,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-01-15T10:17:35Z",
      "side": 1,
      "message": "Why is this changed to a DCHECK? Is it the comment above?",
      "range": {
        "startLine": 155,
        "startChar": 4,
        "endLine": 155,
        "endChar": 68
      },
      "revId": "f63965f9b579aa37928130da2b736a2acb6fb34a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "964fef09_08fc071a",
        "filename": "video/overuse_frame_detector_resource_adaptation_module.cc",
        "patchSetId": 9
      },
      "lineNbr": 409,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-01-15T10:17:35Z",
      "side": 1,
      "message": "Can this method just be removed? It seems to do nothing, and I think does nothing in prod builds.",
      "range": {
        "startLine": 407,
        "startChar": 0,
        "endLine": 409,
        "endChar": 27
      },
      "revId": "f63965f9b579aa37928130da2b736a2acb6fb34a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4405dcb3_281d977c",
        "filename": "video/overuse_frame_detector_resource_adaptation_module.h",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-01-15T09:57:18Z",
      "side": 1,
      "message": "Question to reviewers: Now that EVERYTHING is guarded by a sequence checker... do we want to keep the sequence checker in OveruseFrameDetectorResourceAdaptationModule? If the module instances are RTC_GUARDED_BY a sequence checker or task queue, safety would be ensured at usage place - and this class doesn\u0027t even have to care about the existence of sequences. VideoStreamEncoder already protects it with RTC_GUARDED_BY. That said it doesn\u0027t hurt to check proper usage inside this class as well, other than possibly readability.",
      "revId": "f63965f9b579aa37928130da2b736a2acb6fb34a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06d31908_ce19b992",
        "filename": "video/overuse_frame_detector_resource_adaptation_module.h",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-01-15T10:17:35Z",
      "side": 1,
      "message": "I don\u0027t have a definitive answer, but my slight preference is to remove the sequence checking in this class (maybe not directly in this CL, but as a follow up) and advertise that this class is single threaded. In my experience, most classes just document this fact and its up to a user to not use it incorrectly, versus guarding against it. For example base::Thread in chromium https://cs.chromium.org/chromium/src/base/threading/thread.h.",
      "parentUuid": "4405dcb3_281d977c",
      "revId": "f63965f9b579aa37928130da2b736a2acb6fb34a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aafe44b8_8e34ff20",
        "filename": "video/overuse_frame_detector_resource_adaptation_module.h",
        "patchSetId": 9
      },
      "lineNbr": 204,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-01-15T10:39:29Z",
      "side": 1,
      "message": "I also slightly prefer if the extra check is removed.",
      "parentUuid": "06d31908_ce19b992",
      "revId": "f63965f9b579aa37928130da2b736a2acb6fb34a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd3740c1_3ccbefba",
        "filename": "video/overuse_frame_detector_resource_adaptation_module.h",
        "patchSetId": 9
      },
      "lineNbr": 207,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-01-15T10:17:35Z",
      "side": 1,
      "message": "Why the guard here? I understand that this variable is purely used with DCHECKS, but it is cleaner to avoid ifdef if possible",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 207,
        "endChar": 27
      },
      "revId": "f63965f9b579aa37928130da2b736a2acb6fb34a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}