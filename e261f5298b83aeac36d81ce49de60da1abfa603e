{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "757c41d3_1e901633",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-07-20T09:22:35Z",
      "side": 1,
      "message": "Adding Tommi for global approval.",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0141f5a1_a268f7dc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-20T10:01:01Z",
      "side": 1,
      "message": "some minor comments but lgtm",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d0c4e9a_6515293d",
        "filename": "modules/audio_coding/neteq/tools/neteq_delay_analyzer.cc",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-20T10:01:01Z",
      "side": 1,
      "message": "nit: {} not necessary here?",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dc34298_e371ba38",
        "filename": "modules/audio_coding/neteq/tools/neteq_delay_analyzer.cc",
        "patchSetId": 4
      },
      "lineNbr": 201,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-07-20T10:57:26Z",
      "side": 1,
      "message": "With parentheses, the compiler parses this as a function declaration (so won\u0027t compile).",
      "parentUuid": "9d0c4e9a_6515293d",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92c9fc4f_71e0d4cb",
        "filename": "modules/audio_coding/neteq/tools/neteq_rtpplay.cc",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-20T10:01:01Z",
      "side": 1,
      "message": "nit: is `std::string str_str \u003d std::string(str)` preferred over `std::string str_str(str)`?",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bbdc17c_123978c9",
        "filename": "modules/audio_coding/neteq/tools/neteq_rtpplay.cc",
        "patchSetId": 4
      },
      "lineNbr": 171,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-07-20T10:57:26Z",
      "side": 1,
      "message": "My reading of the style guide is that it doesn\u0027t matter, but https://abseil.io/tips/88 (totw/88) states that using assignment syntax should be preferred.",
      "parentUuid": "92c9fc4f_71e0d4cb",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfb30ad4_8152983e",
        "filename": "modules/audio_coding/neteq/tools/neteq_rtpplay.cc",
        "patchSetId": 4
      },
      "lineNbr": 204,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-20T10:01:01Z",
      "side": 1,
      "message": "Can also do:\n\nprintf(\"Invalid SSRC: %.*s\\n\", static_cast\u003cint\u003e(str.size()), str.data());\n\n(see `FormatStringView` for an example)",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea2d85a3_5fc7e681",
        "filename": "modules/audio_coding/neteq/tools/neteq_rtpplay.cc",
        "patchSetId": 4
      },
      "lineNbr": 204,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-07-20T10:57:26Z",
      "side": 1,
      "message": "Ah, great tip! Thanks.",
      "parentUuid": "dfb30ad4_8152983e",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6541a95_6699cfc8",
        "filename": "modules/audio_coding/test/RTPFile.cc",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-20T10:01:01Z",
      "side": 1,
      "message": "not sure if going through operator\u003d() is preferred",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21dd13b3_af67a435",
        "filename": "modules/audio_coding/test/RTPFile.cc",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-07-20T10:57:26Z",
      "side": 1,
      "message": "I believe this uses the copy constructor, not operator\u003d(), right? If so, see my previous comment.",
      "parentUuid": "d6541a95_6699cfc8",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc724007_1bf7dcf1",
        "filename": "modules/audio_coding/test/RTPFile.cc",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-20T11:41:29Z",
      "side": 1,
      "message": "Ack - yes that\u0027s right. I was thinking semantically - but I think that totw tip has been pointed out to me in the past so I had a vague recollection of it being preferred but couldn\u0027t quite remember. Thanks for the link. Why I was thinking that this would perhaps being an exception to that rule is because the expression on the right side of `\u003d` actually uses the constructor that is being avoided ðŸ˜Š",
      "parentUuid": "21dd13b3_af67a435",
      "revId": "e261f5298b83aeac36d81ce49de60da1abfa603e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}