{
  "comments": [
    {
      "key": {
        "uuid": "790fc296_0b024cdd",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 10
      },
      "lineNbr": 699,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-07-15T21:29:00Z",
      "side": 1,
      "message": "Factor these loops into a helper.\n\nstatic void AppendIceCredentialsFromSessionDescription(const SessionDescriptionInterface\u0026 desc, std::set\u003c...\u003e* credentials)",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98a1ed49_8ba1cfeb",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 10
      },
      "lineNbr": 699,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-07-16T16:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "790fc296_0b024cdd",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5fe8446d_ead15a20",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 10
      },
      "lineNbr": 715,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-07-15T21:29:00Z",
      "side": 1,
      "message": "!ufrags_.empty()",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79388a6a_5cc5415e",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 10
      },
      "lineNbr": 715,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-07-16T16:09:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5fe8446d_ead15a20",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab0c801a_298e6663",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 10
      },
      "lineNbr": 2498,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-07-15T21:29:00Z",
      "side": 1,
      "message": "This would be a lot clearer just as local_ufrags_to_replace_.clear()",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caaaa12d_3636851d",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 10
      },
      "lineNbr": 2498,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-07-16T16:09:27Z",
      "side": 1,
      "message": "Done (ClearIceCredentials)",
      "parentUuid": "ab0c801a_298e6663",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1c3cc3e_157446b9",
        "filename": "pc/peer_connection.h",
        "patchSetId": 10
      },
      "lineNbr": 1379,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-07-15T21:29:00Z",
      "side": 1,
      "message": "In my opinion we should just inline this class into PeerConnection. Right now it doesn\u0027t really reduce the number of fields or methods on PeerConnection and is not testable by itself since it\u0027s private.",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a34a07d_affacdba",
        "filename": "pc/peer_connection.h",
        "patchSetId": 10
      },
      "lineNbr": 1379,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-07-16T16:09:27Z",
      "side": 1,
      "message": "OK I moved it but then I had to make it std::unique_ptr\u003c\u003e instead because the size of it is not known in the header.",
      "parentUuid": "c1c3cc3e_157446b9",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c09dc49_e1b91110",
        "filename": "pc/peer_connection.h",
        "patchSetId": 10
      },
      "lineNbr": 1379,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-07-16T18:15:03Z",
      "side": 1,
      "message": "Ah, I meant more to just make the set a member of PeerConnection and move the member functions to PeerConnection too. But I\u0027m fine with either way.",
      "parentUuid": "4a34a07d_affacdba",
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76fa3067_3d87735f",
        "filename": "pc/peer_connection.h",
        "patchSetId": 10
      },
      "lineNbr": 1395,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-07-15T21:29:00Z",
      "side": 1,
      "message": "Why does this check both ufrag and pwd if the name/spec seems to imply it should just check ufrag? Is this an implementation bug or spec bug?",
      "range": {
        "startLine": 1395,
        "startChar": 13,
        "endLine": 1395,
        "endChar": 48
      },
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be2e5772_47e394fb",
        "filename": "pc/peer_connection.h",
        "patchSetId": 10
      },
      "lineNbr": 1395,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-07-16T16:09:27Z",
      "side": 1,
      "message": "Good question. Firefox implements it by looking at the the entire ufrag line of the SDP, which I had assumed contained both ufrag and pwd, but I just noticed that ufrag and pwd are separate a\u003d lines. And it might be strange if changing pwd counts are a restart (if you can even do that)? I changed my implementation to only look at the ufrag and filed https://github.com/w3c/webrtc-pc/issues/2229 for clarification.",
      "parentUuid": "76fa3067_3d87735f",
      "range": {
        "startLine": 1395,
        "startChar": 13,
        "endLine": 1395,
        "endChar": 48
      },
      "revId": "fb826dbc8d20ba6c2df9f9208bbffab805575d69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}