{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e173d82c_0b0cf9bc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-27T13:47:10Z",
      "side": 1,
      "message": "I don\u0027t think what this attempts is what we should do, and the W3C issue has not been resolved yet, so I doubly don\u0027t think we should go ahead with this.\n\nJust because the preference order is receive preference order only does not mean that this only affects receive codecs. You can only send what is negotiated, and you can only respond with what was offered, so what the list contains matters for both sending and receiving.\n\nWe need to support both the send-only and recv-only use cases and what the W3C setCodecPreferences() decides to do could be subtly different from the JSEP setCodecPreferences().",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "449ea881_5d81e219",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-27T13:48:59Z",
      "side": 1,
      "message": "The JSEP link doesn\u0027t really say what to do in this case either, it just says vaguely that the order relates to receiver preference",
      "parentUuid": "e173d82c_0b0cf9bc",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "35b85d9b_a3b1da03",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-27T14:57:55Z",
      "side": 1,
      "message": "This attempts to bring us in line with JSEP. I do expect changes to webrtc-pc as a result.\n\n\u003e and you can only respond with what was offered, so what the list contains matters for both sending and receiving\n\nNo, an answer *may* specify additional codecs, see https://www.rfc-editor.org/rfc/rfc8829.html#section-5.3.1\n\"Any currently available media formats that are not present in the current remote description MUST be added after all existing formats\"\n\nI don\u0027t think we do this however.",
      "parentUuid": "449ea881_5d81e219",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "870623d3_3235a0f1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-28T09:26:11Z",
      "side": 1,
      "message": "I hear you but webrtc-pc sometimes diverge from JSEP and we also have to think about backwards-compat, so let\u0027s not land code before we know what webrtc-pc wants to do, I can see this ending in several different ways. This CL is just one possibility.",
      "parentUuid": "35b85d9b_a3b1da03",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b8e94ee_3a9d1f66",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-28T09:52:33Z",
      "side": 1,
      "message": "But webrtc-pc contradicts JSEP: \"[setCodecPreferences] only affects which codecs the implementation indicates that it prefers to receive, via the offer or answer\".\n\nBackward compat seems to be ok, the WPT still pass (but that means they are not enough of them). Where this changes behavior is sendonly/recvonly codecs which are already a problematic area.\n\nI can make a branch with webrtc-pc changes that would go along with this if it helps, it should be pretty straightforward from the code changes.",
      "parentUuid": "870623d3_3235a0f1",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c94d10e_4333482f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-28T10:17:14Z",
      "side": 1,
      "message": "If webrtc-pc needs fixing, let\u0027s make webrtc-pc PRs first and land CLs second.\n\nI\u0027m not even sure what the contradiction is, since webrtc-pc just says to update the user agent\u0027s default preferences and everything else happens in SDP land, but if there is stuff to fix, let\u0027s fix webrtc-pc first.",
      "parentUuid": "0b8e94ee_3a9d1f66",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0508340b_dc4dbafa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-28T10:43:03Z",
      "side": 1,
      "message": "the algorithm in webrtc-pc takes send codecs into account. Branch with the spec changes here:\nhttps://github.com/w3c/webrtc-pc/compare/main...fippo:webrtc-pc:setcodecpreferences-recvonly?expand\u003d1\n\nNote that we also had the samples do the wrong thing which then got copy-pasted around a lot but was easy to change:\nhttps://github.com/webrtc/samples/pull/1640",
      "parentUuid": "7c94d10e_4333482f",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e26f41d5_3ac18e94",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-28T10:49:03Z",
      "side": 1,
      "message": "I don\u0027t think it is weird to take send codecs into account.\n\nEven if you could add codecs after the fact according to RFC, I don\u0027t think we do this in practise, and if the RFC says any additional codecs has to be added LAST in the list, then it makes even less sense to forbid my sendonly codec to be first in the list, if only to allow the other endpoint to know that a) I support it, and b) it shall be first in the list.\n\nThe webrtc-pc guards ensures we can do both sending and receiving, which is a sensible footgun protection, but it breaks down with single direction codecs.",
      "parentUuid": "0508340b_dc4dbafa",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e31a7d07_653d2b87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-11-28T11:02:48Z",
      "side": 1,
      "message": "I think JSEP is pretty clear once we know that codec preferences are on the m-line:\n\n\"sets the codec preferences of a transceiver, which in turn affect the presence and order of codecs of the associated \"m\u003d\" section on future calls to createOffer and createAnswer. Note that setCodecPreferences does not directly affect which codec the implementation decides to send. It only affects which codecs the implementation indicates that it prefers to receive\"\n\nHaving a sendonly codec in the list for reception makes no sense to me - if the other party chooses to honor your stated preferences and sends using that codec, you will receive media you can\u0027t decode. That\u0027s a footgun.",
      "parentUuid": "449ea881_5d81e219",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d08db67c_2c439501",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-28T11:14:22Z",
      "side": 1,
      "message": "But these guards are not necessary. When you use setCodecPreferences you state what you would like to receive which is not influenced by the other side.\nNegotiation is done as offer/answer and the result is the peer sending you things you can decode (they know that from your offer) or a rejected m-line if you have no codecs in common.\nIf you want to send to the peer, you look at the codecs listed in the answer and pick any one them. Which may include the additional codecs you did not want to receive (or do not support). You know whether you support them.\n\nBut the send codecs don\u0027t need to be part of setCodecPreferences.\n\nNow oneway codecs are tricky. Lets say you only do decode for codec X. You would create an offer. But oh, this codec is not in there unless you set the transceiver direction to recvonly! That is the behavior already for codecs like VP9 profile\u003d2.\nThe current spec prevents setCodecPreferences from using that codec \nand that seems wrong.",
      "parentUuid": "e26f41d5_3ac18e94",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25684c64_03dd555b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 13,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-28T11:36:59Z",
      "side": 1,
      "message": "webrtc-pc\u0027s rationale is \"this ensures that we always have something to offer regardless of transceiver direction\". But the semantics of SDP is that we have something we offer to receive. And we can\u0027t offer to receive an empty set via setCodecPreferences because calling it with an empty set resets the preferences.\n\nNow an argument you can make here is that setCodecPreferences on a send-only m-line should not take have an effect but it does: https://jsfiddle.net/fippo/9kcf56oL/\nWhich seems ok since you can change the direction without worrying too much in subsequent negotiations.",
      "parentUuid": "d08db67c_2c439501",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c6a67ac_67f34d2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-27T12:01:16Z",
      "side": 1,
      "message": "Not asking for a review yet but please bear with me :-)\n\nPS1 just removed the whole send codecs from setCodecPreferences. This works ok in the browser but the unit tests fail.\nAs PS2 shows they are written to expect a scalabilityMode which is not present on recv codecs (on purpose).\nPS3 is the minimal way to remove setCodecPreferences from the receiver where it does not belong according to JSEP. This fixes most of the tests but makes some other tests fail.\nMostly these tests look fixable, they might need some rewriting in order to set the codec preferences on the receiver.\n\nDoes this look like it is going in the right direction?",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "89609cab_24d48418",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-27T12:02:51Z",
      "side": 1,
      "message": "PS3 is the minimal way to remove setCodecPreferences from the *sender*",
      "parentUuid": "4c6a67ac_67f34d2d",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f93e3ed3_691a7d42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-28T09:52:33Z",
      "side": 1,
      "message": "So the first five tests that are failing do things with getParameters and .codecs before negotiation. Which seems wrong since .codecs should be empty at that point?\n\nPeerConnectionEncodingsIntegrationTest.VP8_RejectsSvcAndDefaultsToL1T1 calls setParameters before negotiation when it is not clear which codec is going to be negotiated so this does not seem right either.\n\nPeerConnectionMediaTestUnifiedPlan.SetCodecPreferencesAudioMissingSendCodec no longer applies.\n\nThe last three test failures are genuine I think.",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a4c9531_143a14eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-28T10:21:23Z",
      "side": 1,
      "message": "There are a lot of tests that appear to get/setParameters before negotiating... I\u0027m not sure what this says about backwards compat?\n\nIt seems wrong to me not to be allowed to set scalabilityMode when you setCodecPreferences. Arguably you could have done this in addTransceiver, but I think real world apps create transceivers in one place and get/set parameters in another place, so I\u0027m afraid of compat",
      "parentUuid": "f93e3ed3_691a7d42",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8f93a51_3147a4e6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-11-28T10:43:03Z",
      "side": 1,
      "message": "Yeah and those tests worry me a bit. At least for web we don\u0027t expose scalability mode in getParameters/setParameters or getCapabilities (but that is because we were forced to move that to MC?)",
      "parentUuid": "1a4c9531_143a14eb",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dda6b296_38d46d72",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-11-28T10:49:03Z",
      "side": 1,
      "message": "We do both getting and setting of scalabilityMode in get/setParameters.\n\nConsidering codecs are set after the transceiver is created, I think you should be allowed to setParameters with your desired scalability mode before negotiating too.\n\nMC says which scalability modes are supported/smooth/powerEfficient for which codec, so no need for getCapabilities, but the API \"use case\" of scalabilityMode is setParamters.",
      "parentUuid": "c8f93a51_3147a4e6",
      "revId": "08644004609cfa89c713035338d0fd75d1ff0c03",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}