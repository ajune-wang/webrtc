{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "46a99111_2fd51796",
        "filename": "modules/video_capture/linux/pipewire_session.cc",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 8178
      },
      "writtenOn": "2024-08-14T14:04:28Z",
      "side": 1,
      "message": "This API is Gecko-specific for now, no?",
      "revId": "3c0dd45b556d82e7da15938297f31013ad898163",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2aa0f5d_c2bd812e",
        "filename": "modules/video_capture/linux/pipewire_session.cc",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-08-14T15:17:25Z",
      "side": 1,
      "message": "Not sure what do you mean by Gecko-specific, but it\u0027s not stated anywhere. It\u0027s probably only used in Firefox for now, but that\u0027s because Chromium didn\u0027t use WebRTC for cameras until PipeWire support was added. It still probably unimplemented there, but I don\u0027t think there is reason not to use it in Chromium as well.",
      "parentUuid": "46a99111_2fd51796",
      "revId": "3c0dd45b556d82e7da15938297f31013ad898163",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "489f7021_b10c37f1",
        "filename": "modules/video_capture/linux/pipewire_session.cc",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 8178
      },
      "writtenOn": "2024-08-15T07:48:20Z",
      "side": 1,
      "message": "Let me rephrase: does it build?\nBecause https://source.chromium.org/search?q\u003dDeviceChange%20path:third_party%2Fwebrtc\u0026sq\u003d\u0026ss\u003dchromium",
      "parentUuid": "b2aa0f5d_c2bd812e",
      "revId": "3c0dd45b556d82e7da15938297f31013ad898163",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7012581_fa41f3a9",
        "filename": "modules/video_capture/linux/pipewire_session.cc",
        "patchSetId": 2
      },
      "lineNbr": 361,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-08-15T08:02:15Z",
      "side": 1,
      "message": "I see, I\u0027m an idiot ðŸ˜Š.\n\nI\u0027ve been building this with Firefox and it never came to my mind that this might be something that\u0027s not in WebRTC upstream. \n\nI will submit this to Firefox for now and try to think about something more generic that can be used in both.",
      "parentUuid": "489f7021_b10c37f1",
      "revId": "3c0dd45b556d82e7da15938297f31013ad898163",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d6aa8917_290f1779",
        "filename": "modules/video_capture/linux/pipewire_session.cc",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 8178
      },
      "writtenOn": "2024-08-14T14:04:28Z",
      "side": 1,
      "message": "Please clarify the access policy at the declaration site, i.e. with RTC_GUARDED_BY or similar.",
      "revId": "3c0dd45b556d82e7da15938297f31013ad898163",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "962ea94d_b4a4e822",
        "filename": "modules/video_capture/linux/pipewire_session.cc",
        "patchSetId": 2
      },
      "lineNbr": 442,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-08-14T15:17:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d6aa8917_290f1779",
      "revId": "3c0dd45b556d82e7da15938297f31013ad898163",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}