{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f1ec6310_c7168e4e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-12-07T01:03:49Z",
      "side": 1,
      "message": "Sorry for the delay but I should be able to give this another review pass tomorrow.",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ecc8b63_e936a353",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-10T09:30:21Z",
      "side": 1,
      "message": "No problem; since this is low prio, I\u0027m happy if I can have your attention once a week.",
      "parentUuid": "f1ec6310_c7168e4e",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e44c30_0e9a1192",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 175,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-12-07T21:07:28Z",
      "side": 1,
      "message": "Why do s_ and is_closed_ need to be guarded? It looks like existing code only guards error_ and fSignaled_. Acquiring a mutex for each iteration of the socket loop could be costly.",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da8ddc2f_2cb8bdb8",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 175,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-10T13:07:29Z",
      "side": 1,
      "message": "For `s_`, it is accessed by public methods, like GetLocalAddress. It should be doable to make it a construction time const, and turn Create into a static factory method. \n\n`is_closed_` is accessed by Bind and Listen. \n\nIt\u0027s still not entirely clear to me when OnEvent can get DE_CLOSE. But if we access `is_closed_` only in OnEvent, GetRequestedEvents, and the destructor, then I agree it needs no mutex.",
      "parentUuid": "e0e44c30_0e9a1192",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ade4f84_43b118ee",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 175,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-01-13T23:45:14Z",
      "side": 1,
      "message": "The factory method approach sounds good.\n\nDE_CLOSE can happen even if it\u0027s not a requested event if using epoll. See: https://man7.org/linux/man-pages/man2/epoll_ctl.2.html\n\nEPOLLERR and EPOLLHUP have comments that say \"epoll_wait(2) will always report for this event; it is not necessary to set it in events when calling epoll_ctl().\" And these events will be translated as DE_CLOSE.\n\nAnd on Windows we just always register for FD_CLOSE regardless of the requested events: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/rtc_base/physical_socket_server.cc;l\u003d999;drc\u003d2df36da930f2ac9d0afb0abe29dfa7dc65dfd7cf\n\nAnyway, I see the problem of is_closed_ being accessed by Bind/Listen. But this is already a problem with existing code accessing state_...",
      "parentUuid": "da8ddc2f_2cb8bdb8",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f9cb7cc_8850d260",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 200,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-12-07T21:07:28Z",
      "side": 1,
      "message": "It looks like existing code only surfaces this error in SignalCloseEvent, and doesn\u0027t return it from GetError, only populating the GetError return value when a call like ::recv fails.\n\nCould be a bug? For now it may make sense to make the behavior of Socket and ListenSocket match, and fix both in a separate CL.",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c205dbb9_5e83d223",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 200,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-10T13:07:29Z",
      "side": 1,
      "message": "Deleting setting it here, for now. Then GetError will only report errors related to Bind and Listen, the methods that the user of the class call directly. Makes sense to me. (Even better would be to make error code part of the return value, but that\u0027s a larger redesign).",
      "parentUuid": "1f9cb7cc_8850d260",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6141af71_a1a355f8",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 200,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-01-13T23:45:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c205dbb9_5e83d223",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21cf73bf_c5d60ded",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 209,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-12-07T21:07:28Z",
      "side": 1,
      "message": "I don\u0027t think it\u0027s possible to get DE_ACCEPT with an error anymore, see ProcessEvents",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34660dab_0f46ac5f",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 209,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-01-13T23:45:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "21cf73bf_c5d60ded",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c38746db_6dd4be11",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 215,
      "author": {
        "id": 5053
      },
      "writtenOn": "2021-12-07T21:07:28Z",
      "side": 1,
      "message": "Update last error here?",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "efe6c88c_29ffa799",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 215,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-12-10T13:07:29Z",
      "side": 1,
      "message": "Not sure if that is useful, since we don\u0027t tell the application that anything went wrong, and if we have some spurious wakeups resulting in EWOULDBLOCK, that should probably be ignored.\n\nLet me know if you really think saving the error is useful, otherwise I\u0027d be inclined to just ignore (and possibly log) errors here..",
      "parentUuid": "c38746db_6dd4be11",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dfea1825_01c1a6b0",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 12
      },
      "lineNbr": 215,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-01-13T23:45:14Z",
      "side": 1,
      "message": "Right. Just logging sounds good then.",
      "parentUuid": "efe6c88c_29ffa799",
      "revId": "0bae27b17fcbe13cb73d60e9daa84d097e5b7c2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}