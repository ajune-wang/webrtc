{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e2276c1e_0c5d01d8",
        "filename": "media/sctp/sctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-02-26T10:18:00Z",
      "side": 1,
      "message": "Could you do this with unique_ptr and a custom deleter? Something like\n\nstruct DeleteByFree {\n  operator()(void* p) const { free(p); }\n};\n\nand then use std::unique_ptr\u003cvoid, DeleteByFree\u003e. unique_ptr is more familar, and then you don\u0027t need to reimplement it. (I\u0027ve never seen unique_ptr\u003cvoid\u003e before, though, so that may be a corner case).",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 88,
        "endChar": 48
      },
      "revId": "7b0a9fd8c22c149a01344baa1233498d2e94e8da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}