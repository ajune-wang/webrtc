{
  "comments": [
    {
      "key": {
        "uuid": "cbcaac8c_a0e0778b",
        "filename": "modules/pacing/packet_router.cc",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-08-15T12:42:20Z",
      "side": 1,
      "message": "The scope of this lock is quite big when the entire call tree below is considered.\nI\u0027m seeing a deadlock in tests with the below stacks:\n\n(module process thread)\n\nrtc::Event::Wait(\n      int give_up_after_ms \u003d \u003cValue unavailable error\u003e)+0x1b [d:\\src\\webrtc\\src\\rtc_base\\event.cc @ 57]\nwebrtc::test::SingleThreadedTaskQueueForTesting::SendTask(\n      class std::__1::function\u003cvoid ()\u003e * task \u003d 0x00000000`000026e1)+0x74 [d:\\src\\webrtc\\src\\test\\single_threaded_task_queue.cc @ 90]\nwebrtc::MaxPaddingSetTest\u003c`lambda at video_send_stream_tests.cc:1952:20\u0027\u003e::OnSendRtp(\n      unsigned char * packet \u003d \u003cValue unavailable error\u003e, \n      unsigned int64 length \u003d \u003cValue unavailable error\u003e)+0x6c [video_send_stream_tests.cc @ 1886]\nwebrtc::test::PacketTransport::SendRtp(\n      unsigned char * packet \u003d 0x0000022d`249fffe0 \"???\", \n      unsigned int64 length \u003d 0xf4, \n      struct webrtc::PacketOptions * options \u003d 0x00000067`dcaff9e0)+0x145 [rtp_rtcp_observer.h @ 108]\nwebrtc::RTPSender::SendPacketToNetwork(\n      class webrtc::RtpPacketToSend * packet \u003d 0x0000022d`24a967d0, \n      struct webrtc::PacketOptions * options \u003d 0x00000067`dcaff9e0, \n      struct webrtc::PacedPacketInfo * pacing_info \u003d 0x00000067`dcaffc30)+0x67 [rtp_sender.cc @ 677]\nwebrtc::RTPSender::TrySendPacket(\n      class webrtc::RtpPacketToSend * packet \u003d 0x0000022d`24a967d0, \n      struct webrtc::PacedPacketInfo * pacing_info \u003d 0x00000067`dcaffc30)+0x2f6 [rtp_sender.cc @ 832]\nwebrtc::PacketRouter::TrySendPacket(\n      class webrtc::RtpPacketToSend * packet \u003d \u003cValue unavailable error\u003e, \n      struct webrtc::PacedPacketInfo * cluster_info \u003d \u003cValue unavailable error\u003e, \n      class webrtc::RtpRtcp * rtp_module \u003d 0x0000022d`24a420f0)+0x2f [packet_router.cc @ 417]\nwebrtc::PacketRouter::SendPacket(\n      class std::__1::unique_ptr\u003cwebrtc::RtpPacketToSend,std::__1::default_delete\u003cwebrtc::RtpPacketToSend\u003e \u003e packet \u003d class std::__1::unique_ptr\u003cwebrtc::RtpPacketToSend,std::__1::default_delete\u003cwebrtc::RtpPacketToSend\u003e \u003e, \n      struct webrtc::PacedPacketInfo * cluster_info \u003d 0x00000067`dcaffc30)+0x9c [packet_router.cc @ 158]\nwebrtc::PacedSender::Process(void)+0x4b4 [paced_sender.cc @ 435]\nwebrtc::ProcessThreadImpl::Process(void)+0x202 [process_thread_impl.cc @ 195]\nwebrtc::ProcessThreadImpl::Run(\n      void * obj \u003d 0x0000022d`23102630)+0x10 [process_thread_impl.cc @ 167]\n\n\nvs\n\nrtp_send_controller TQ\n\n05 (Inline Function) --------`-------- video_engine_tests_exe!rtc::CriticalSection::Enter+0x9 [d:\\src\\webrtc\\src\\rtc_base\\critical_section.cc @ 75]\n06 00000067`dc9ff4d0 00007ff6`67f3caeb video_engine_tests_exe!rtc::CritScope::CritScope(\n                  class rtc::CriticalSection * cs \u003d \u003cValue unavailable error\u003e)+0x14 [d:\\src\\webrtc\\src\\rtc_base\\critical_section.cc @ 214]\n07 00000067`dc9ff500 00007ff6`67e4e654 video_engine_tests_exe!webrtc::PacketRouter::RemoveSendRtpModule(\n                  class webrtc::RtpRtcp * rtp_module \u003d 0x0000022d`24a420f0)+0x29 [d:\\src\\webrtc\\src\\modules\\pacing\\packet_router.cc @ 70]\n08 00000067`dc9ff550 00007ff6`67e503ce video_engine_tests_exe!webrtc::RtpVideoSender::~RtpVideoSender(void)+0x88 [d:\\src\\webrtc\\src\\call\\rtp_video_sender.cc @ 330]\n09 00000067`dc9ff5a0 00007ff6`67e4a735 video_engine_tests_exe!webrtc::RtpVideoSender::~RtpVideoSender(\n                  int should_call_delete \u003d 0n1)+0x10 [d:\\src\\webrtc\\src\\call\\rtp_video_sender.cc @ 329]\n0a (Inline Function) --------`-------- video_engine_tests_exe!std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e::operator()+0xa [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 2338]\n0b (Inline Function) --------`-------- video_engine_tests_exe!std::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e::reset+0x1b [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 2651]\n0c (Inline Function) --------`-------- video_engine_tests_exe!std::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e::~unique_ptr+0x1b [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 2605]\n0d (Inline Function) --------`-------- video_engine_tests_exe!std::__1::allocator\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e \u003e::destroy+0x1b [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 1880]\n0e (Inline Function) --------`-------- video_engine_tests_exe!std::__1::allocator_traits\u003cstd::__1::allocator\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e \u003e \u003e::__destroy+0x1b [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 1742]\n0f (Inline Function) --------`-------- video_engine_tests_exe!std::__1::allocator_traits\u003cstd::__1::allocator\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e \u003e \u003e::destroy+0x1b [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 1595]\n10 (Inline Function) --------`-------- video_engine_tests_exe!std::__1::__vector_base\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e,std::__1::allocator\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e \u003e \u003e::__destruct_at_end+0x2e [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\vector @ 426]\n11 (Inline Function) --------`-------- video_engine_tests_exe!std::__1::vector\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e,std::__1::allocator\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e \u003e \u003e::__destruct_at_end+0x2e [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\vector @ 833]\n12 (Inline Function) --------`-------- video_engine_tests_exe!std::__1::vector\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e,std::__1::allocator\u003cstd::__1::unique_ptr\u003cwebrtc::RtpVideoSenderInterface,std::__1::default_delete\u003cwebrtc::RtpVideoSenderInterface\u003e \u003e \u003e \u003e::erase+0x6a [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\vector @ 1730]\n13 00000067`dc9ff5e0 00007ff6`67fb0e66 video_engine_tests_exe!webrtc::RtpTransportControllerSend::DestroyRtpVideoSender(\n                  class webrtc::RtpVideoSenderInterface * rtp_video_sender \u003d \u003cValue unavailable error\u003e)+0xab [d:\\src\\webrtc\\src\\call\\rtp_transport_controller_send.cc @ 139]\n14 00000067`dc9ff630 00007ff6`67fb280e video_engine_tests_exe!webrtc::internal::VideoSendStreamImpl::~VideoSendStreamImpl(void)+0xd0 [d:\\src\\webrtc\\src\\video\\video_send_stream_impl.cc @ 346]\n15 00000067`dc9ff6a0 00007ff6`67fb02d7 video_engine_tests_exe!webrtc::internal::VideoSendStreamImpl::~VideoSendStreamImpl(\n                  int should_call_delete \u003d 0n1)+0x10 [d:\\src\\webrtc\\src\\video\\video_send_stream_impl.cc @ 340]\n16 (Inline Function) --------`-------- video_engine_tests_exe!std::__1::default_delete\u003cwebrtc::internal::VideoSendStreamImpl\u003e::operator()+0xb [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 2338]\n17 (Inline Function) --------`-------- video_engine_tests_exe!std::__1::unique_ptr\u003cwebrtc::internal::VideoSendStreamImpl,std::__1::default_delete\u003cwebrtc::internal::VideoSendStreamImpl\u003e \u003e::reset+0x20 [d:\\src\\webrtc\\src\\buildtools\\third_party\\libc++\\trunk\\include\\memory @ 2651]\n18 (Inline Function) --------`-------- video_engine_tests_exe!webrtc::internal::VideoSendStream::StopPermanentlyAndGetRtpStates::\u003cunnamed-tag\u003e::operator()+0x102 [d:\\src\\webrtc\\src\\video\\video_send_stream.cc @ 203]\n19 00000067`dc9ff6e0 00007ff6`67e44b8d video_engine_tests_exe!webrtc::webrtc_new_closure_impl::ClosureTask\u003c`lambda at ../../video/video_send_stream.cc:199:27\u0027\u003e::Run(void)+0x123 [d:\\src\\webrtc\\src\\rtc_base\\task_utils\\to_queued_task.h @ 32]\n1a (Inline Function) --------`-------- video_engine_tests_exe!webrtc::`anonymous namespace\u0027::TaskQueueWin::RunPendingTasks+0x2a5 [d:\\src\\webrtc\\src\\rtc_base\\task_queue_win.cc @ 268]\n\n\n\nWould it be possible to:\n- not use two threads for this?\n- reduce the scope of the locks?\n- even remove some locks? :)",
      "revId": "58ee187554a78ade9dbd95d76b5d8d892f84c7f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe0227d1_7b0246e0",
        "filename": "modules/pacing/packet_router.cc",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-08-15T14:54:20Z",
      "side": 1,
      "message": "Yes the scope is quite large, but just to be clear that did not change in this cl. The old code path took that same lock in PacketRouter::TimeToSendPacket() on L110.\nAt the moment it\u0027s not going to be easy to either remove or reduce the scope of that lock.\nThat said I am working on a refactorings that will allow to do that, most importantly a PacedSender that is run by TaskQueue instead of a module processing thread. Count on it being a number of weeks before we can do that, so if you are working on a deadlock (https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d10861 ?) I would suggest other avenues, such as not posting synchronous tasks to a single-threaded task queue...",
      "parentUuid": "cbcaac8c_a0e0778b",
      "revId": "58ee187554a78ade9dbd95d76b5d8d892f84c7f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3871a02c_c95c11f0",
        "filename": "modules/pacing/packet_router.cc",
        "patchSetId": 7
      },
      "lineNbr": 132,
      "author": {
        "id": 5508
      },
      "writtenOn": "2019-08-15T16:19:24Z",
      "side": 1,
      "message": "Thanks Erik - indeed that looks like the same issue. I was looking at issue 10880. Completely agree with your suggestion btw.",
      "parentUuid": "fe0227d1_7b0246e0",
      "revId": "58ee187554a78ade9dbd95d76b5d8d892f84c7f4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}