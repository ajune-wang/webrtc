{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3863cee9_2034e3e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6305
      },
      "writtenOn": "2022-07-21T06:03:03Z",
      "side": 1,
      "message": "Hi Henrik, Tommi and Justin!\n\nCould you please review this CL? It is the third step of providing API to inject ObjC audio device: it implements native ADM in terms of RTCAudioDevice instead of directly using any of sound APIs of iOS/Mac. \n\nThanks a lot in advance, Yury.",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "67b49c7b_903379c0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-21T08:15:27Z",
      "side": 1,
      "message": "Peter - do you mind taking a look as well?",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f31f31d9_9825ec16",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5091
      },
      "writtenOn": "2022-07-21T09:00:42Z",
      "side": 1,
      "message": "Would you mind adding some more comments in the CL description about the overall architecture here since the change is rather complex.\n\nPlease explain the dependency of RTCAudioDevice and add comments about parts that will be unused/inactive when no external ADM is injected. I am trying to understand fully what parts are \"dead\" when the default ADM is used. ",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed0721c6_eab15f1f",
        "filename": "sdk/objc/native/src/objc_audio_device.h",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 5091
      },
      "writtenOn": "2022-07-21T09:00:42Z",
      "side": 1,
      "message": "Please explain why these private methods are needed.",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 159,
        "endChar": 8
      },
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f34e298d_4db77b2e",
        "filename": "sdk/objc/native/src/objc_audio_device.h",
        "patchSetId": 4
      },
      "lineNbr": 159,
      "author": {
        "id": 6305
      },
      "writtenOn": "2022-07-21T13:25:16Z",
      "side": 1,
      "message": "ObjCAudioDeviceModule has audio device buffer which has audio parameters of playout \u0026 recording. The audio device buffer is configured to work with specific sample rate \u0026 channel count. ObjCAudioDeviceModule stores audio parameters which were used to configure ADB in fields playout_parameters_ and recording_parameters_.\n\nOn the other hand RTCAudioDevice protocol has it\u0027s own audio parameters exposed as individual properties. RTCAudioDevice audio parameters might be changed while playout/recording is in progress, for example when device is switched. RTCAudioDevice audio parameters must be kept in sync with ADB audio parameters. There helper methods are invoked when RTCAudioDevice reports that it\u0027s audio parameters are changed. They are used to re-configure ADB parameters to match parameters of RTCAudioDevice.\n\nUpdateAudioDelay is a bit different: it is invoked when RTCAudioDevice reports the latency of audio input/output is changed. When RTCAudioDevice latency update happen the latency is cached into atomic field which is later used from audio IO thread and passed to ADB. The reason why it\u0027s cached and not polled on each IO cycle - Apple strongly recommends to avoid ObjC calls from within realtime context of audio IO thread.\n\nIf you think these explanation make sense I could extend an existing comments in code.",
      "parentUuid": "ed0721c6_eab15f1f",
      "range": {
        "startLine": 159,
        "startChar": 1,
        "endLine": 159,
        "endChar": 8
      },
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13f746a8_c809dba4",
        "filename": "sdk/objc/native/src/objc_audio_device.mm",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-21T08:15:27Z",
      "side": 1,
      "message": "DLOG? Actually, do you mind going over the log statements and make sure there\u0027s consistency between what\u0027s LOG and what\u0027s DLOG? E.g. I see there are non LOG statements below for some getters which I\u0027m guessing should be DLOG.",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "09134d09_5423df0e",
        "filename": "sdk/objc/native/src/objc_audio_device.mm",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 6305
      },
      "writtenOn": "2022-07-21T13:25:16Z",
      "side": 1,
      "message": "Thanks for noticing. I\u0027ve decided to avoid usage of DLOG_F(LS_INFO) functions at all in favor of LOG_F(LS_VERBOSE) because there are only few usages of DLOG functions across code base.",
      "parentUuid": "13f746a8_c809dba4",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eef73450_0800346f",
        "filename": "sdk/objc/native/src/objc_audio_device.mm",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-21T13:52:28Z",
      "side": 1,
      "message": "Sorry, I meant to indicate that this should be a DLOG and not a LOG. The cost of LOG statements is higher, it adds binary bytes in production builds and may impact performance in some cases. Especially for LS_VERBOSE statement, they should generally be DLOG since verbose logging generally does not get collected for post mortem diagnosis.\n\nSo, I\u0027d suggest to go for DLOG_F(LS_INFO) or DLOG_F(LS_VERBOSE) instead of LOG_F(LS_VERBOSE).",
      "parentUuid": "09134d09_5423df0e",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ced3911d_651dd8fc",
        "filename": "sdk/objc/native/src/objc_audio_device.mm",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 6305
      },
      "writtenOn": "2022-07-21T14:37:00Z",
      "side": 1,
      "message": "I might be missing something, but it seems like I\u0027ve already used `RTC_DLOG_F(LS_VERBOSE)`. Is there any chance you\u0027ve looked not at the latest patchset?",
      "parentUuid": "eef73450_0800346f",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46d8019b_1f359261",
        "filename": "sdk/objc/native/src/objc_audio_device.mm",
        "patchSetId": 4
      },
      "lineNbr": 278,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-07-21T15:52:31Z",
      "side": 1,
      "message": "yes I haven\u0027t looked in detail at the changes, was just replying to your last comment. Alright, sounds good then - I\u0027ll ping back after taking a look",
      "parentUuid": "ced3911d_651dd8fc",
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "309b25e2_b2f6d86f",
        "filename": "sdk/objc/native/src/objc_audio_device_delegate.mm",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 5091
      },
      "writtenOn": "2022-07-21T09:00:42Z",
      "side": 1,
      "message": "why use 21.3333ms buffers?",
      "range": {
        "startLine": 26,
        "startChar": 58,
        "endLine": 26,
        "endChar": 64
      },
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd5d4555_2c4a1d80",
        "filename": "sdk/objc/native/src/objc_audio_device_delegate.mm",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 6305
      },
      "writtenOn": "2022-07-21T13:25:16Z",
      "side": 1,
      "message": "This is is just preferred (default) value, implementation may use a different values. I\u0027ve took it from an existing implementation: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/sdk/objc/components/audio/RTCAudioSessionConfiguration.m;l\u003d37-45.\nJust realized that according to comment existing implementation expected to use 0.01 buffer size :)\nSo I\u0027ll update preferred buffer size to 512/48000.",
      "parentUuid": "309b25e2_b2f6d86f",
      "range": {
        "startLine": 26,
        "startChar": 58,
        "endLine": 26,
        "endChar": 64
      },
      "revId": "da300089d191eed2b6109dbf07cfb17c41ab8c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}