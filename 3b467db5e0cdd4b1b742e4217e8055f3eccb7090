{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d8890e2b_ebdd33c4",
        "filename": "api/jsep_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-07T10:53:36Z",
      "side": 1,
      "message": "#include \u003cstring\u003e\n#include \u003cmemory\u003e\n\n#include \"rtc_base/logging.h\"",
      "revId": "3b467db5e0cdd4b1b742e4217e8055f3eccb7090",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ea6ed10_e7e63c18",
        "filename": "api/jsep_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-10-07T11:16:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d8890e2b_ebdd33c4",
      "revId": "3b467db5e0cdd4b1b742e4217e8055f3eccb7090",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0317e247_4ad69aa5",
        "filename": "api/jsep_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-07T10:53:36Z",
      "side": 1,
      "message": "This test doesn\u0027t expect anything.\nMight be good to comment why is that.\n\nThough it might be possible to add an expection like\n`EXPECT_THAT(rtc::ToString(*some_dps), HasSubStr(sdp));`",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 49
      },
      "revId": "3b467db5e0cdd4b1b742e4217e8055f3eccb7090",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edd6f523_55660bff",
        "filename": "api/jsep_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-10-07T11:16:20Z",
      "side": 1,
      "message": "Quick test; I went for visual verifcation :-)\n\nI tried to use absl::StrFormat to get a string to test on, but found that this wasn\u0027t in the allowset for abseil. But I see that single-arg StrCat should be OK, so I can use that.",
      "parentUuid": "0317e247_4ad69aa5",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 49
      },
      "revId": "3b467db5e0cdd4b1b742e4217e8055f3eccb7090",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f8dc922_ced9aa95",
        "filename": "api/jsep_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-10-07T11:27:06Z",
      "side": 1,
      "message": "I\u0027m totally fine with testing with just the RTC_LOG statement,\nbut a test without expectation deserves a comment (no longer applicable)\n\nThe main point of this stringification is to use it in logs, and most reasonable way to check it is to manually check the log looks ok.\n\n\non absl::StrFormat (and siblings like absl::StreamFormat and absl::Format)\nI think they would be nice addition as they design to work well with AbslStringify - both to consume and implement it. However there likely would be binary size concerns. Might require some investigation if binary size cost is mostly one-off, or if every new usage would add noticable size.",
      "parentUuid": "edd6f523_55660bff",
      "range": {
        "startLine": 47,
        "startChar": 2,
        "endLine": 47,
        "endChar": 49
      },
      "revId": "3b467db5e0cdd4b1b742e4217e8055f3eccb7090",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}