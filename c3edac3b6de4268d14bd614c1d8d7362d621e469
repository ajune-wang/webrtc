{
  "comments": [
    {
      "key": {
        "uuid": "80042e3b_4fc30b42",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-01-29T12:41:07Z",
      "side": 1,
      "message": "if you need this kind of comparator, you can create it without modifying the rtp packet:\n\nstruct RtpPacketByTimestampAndSequenceNumberComparator {\n  bool operator()(const RtpPacket\u0026 lhs, const RtpPacket\u0026 rhs) {\n    return AheadOf\u003cuint32t\u003e(lhs.Timestamp(), rhs.Timestamp() || ...\n  }\n};",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "c3edac3b6de4268d14bd614c1d8d7362d621e469",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f7c0462_757d196c",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7641
      },
      "writtenOn": "2019-01-29T13:39:17Z",
      "side": 1,
      "message": "Most of the time we don\u0027t have the packets at hand, just two sequence numbers. The current code that does the unwrapping relies on a state to be able to do the unwrapping. So the outcome of the sequence number unwrapping is dependent on the preceding calls to the function.",
      "parentUuid": "80042e3b_4fc30b42",
      "range": {
        "startLine": 26,
        "startChar": 6,
        "endLine": 26,
        "endChar": 32
      },
      "revId": "c3edac3b6de4268d14bd614c1d8d7362d621e469",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1484fbf0_1e4f5825",
        "filename": "modules/rtp_rtcp/source/rtp_packet.h",
        "patchSetId": 1
      },
      "lineNbr": 198,
      "author": {
        "id": 5525
      },
      "writtenOn": "2019-01-29T16:05:18Z",
      "side": 1,
      "message": "timestamp_sequence_number_",
      "range": {
        "startLine": 198,
        "startChar": 29,
        "endLine": 198,
        "endChar": 53
      },
      "revId": "c3edac3b6de4268d14bd614c1d8d7362d621e469",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}