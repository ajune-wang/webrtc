{
  "comments": [
    {
      "key": {
        "uuid": "bef570fd_c022b984",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 28
      },
      "lineNbr": 27,
      "author": {
        "id": 5077
      },
      "writtenOn": "2018-03-05T12:01:46Z",
      "side": 1,
      "message": "Making the buffer size a template argument is potentially wasteful - the compiler might emit new instances of the template\u0027s methods for each buffer size used. Have you checked that the combination of build tools and flags we use will actually remove such redundancy?\n\nIf they do not, could we just have a preset buffer size and DCHECK any overshoot?",
      "revId": "fef0500aa7ae101708480e479fe5394119360493",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043a5e83_14806e13",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 28
      },
      "lineNbr": 27,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-03-05T12:27:28Z",
      "side": 1,
      "message": "I haven\u0027t checked all build tools, but I checked clang and *I think* msvc\u0027s compiler and this wasn\u0027t a problem. Essentially the only thing that changes, is the size of the buffer.\n\nIf you look at the implementation, the function that would (from obsveration) be most susceptible to this, is AppendFormat() and I think we can de-inline it as Karl put it.\n\nSame goes for the other routines that are non trivial.\n\nThis isn\u0027t meant to be the final implementation btw. Absl is on the way and I expect we\u0027ll replace the implementation of this class with something in the absl namespace.\n\nI also threw together a StringBuilder class that\u0027s currently WIP because I haven\u0027t de-inlined its implementation yet or factored out parts that could be shared between it and SimpleStringBuilder.  You can take a look here though if you\u0027re curious and/or have suggestions:\nhttps://webrtc-review.googlesource.com/c/src/+/58980\n(I\u0027ll get back to it in a couple of days)",
      "parentUuid": "bef570fd_c022b984",
      "revId": "fef0500aa7ae101708480e479fe5394119360493",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4db2d094_c9a12d14",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 28
      },
      "lineNbr": 27,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-05T12:33:31Z",
      "side": 1,
      "message": "Tommi and I discussed this, but I guess it was someplace else than in this CL. Our conclusion then was that the best way was to refactor this so that all the code belonged to a non-template base class that doesn\u0027t own a buffer, and have a templated subclass that owns a buffer that it gives to its parent. Tommi wanted to save this for a later CL.\n\nI just realized that another, possibly cleaner way to do this is to just have one SimpleStringBuilder class that\u0027s not a template, and that takes an ArrayView\u003cchar\u003e constructor argument, so that callers would do this:\n\n  char buffer[1024];\n  rtc::SimpleStringBuilder ss(buffer);\n\nNo template member functions for the linker to possibly fail to de-duplicate, and obvious at each call site where the buffer space is located and how large it is.",
      "parentUuid": "bef570fd_c022b984",
      "revId": "fef0500aa7ae101708480e479fe5394119360493",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "201f7edf_6cf922b2",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 28
      },
      "lineNbr": 27,
      "author": {
        "id": 5508
      },
      "writtenOn": "2018-03-05T12:49:23Z",
      "side": 1,
      "message": "That looks pretty clever... is it possible/worth it to somehow be able to condense this into a single line?",
      "parentUuid": "4db2d094_c9a12d14",
      "revId": "fef0500aa7ae101708480e479fe5394119360493",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60c2e405_84e7ee32",
        "filename": "rtc_base/strings/string_builder.h",
        "patchSetId": 28
      },
      "lineNbr": 27,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-03-05T13:22:03Z",
      "side": 1,
      "message": "I think no---temporaries go out of scope at the end of the current statement, so the buffer needs to either be a data member of SimpleStringBuilder or be allocated in a separate statement.\n\nWe could do it with a macro, but that would defeat the whole readability point. If you really want a single line, it\u0027s better to do it with a template subclass and a non-template base class as we discussed earlier.",
      "parentUuid": "201f7edf_6cf922b2",
      "revId": "fef0500aa7ae101708480e479fe5394119360493",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}