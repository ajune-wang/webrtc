{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3a9245cd_202b7bd9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-08-02T13:44:40Z",
      "side": 1,
      "message": "Thank you Sergey for the feedback.",
      "revId": "837717fa02464a87dec8c1893832c665bb546248",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56c60455_5e923b58",
        "filename": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_frame_in_flight.cc",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 6337
      },
      "writtenOn": "2024-08-02T14:13:57Z",
      "side": 1,
      "message": "IIUC we won\u0027t have QP for the singlecast in such case. If so, it isn\u0027t what we want. IIRC default was 0, because for singlecase there is no stream index set and we pretend that it\u0027s single stream simulcast for QP computation. Otherwise we need to store singlecast QP values somehow differently.",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "fixSuggestions": [
        {
          "fixId": "9baacf58_6a51e2c9",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_frame_in_flight.cc",
              "range": {
                "startLine": 98,
                "startChar": 0,
                "endLine": 102,
                "endChar": 0
              },
              "replacement": "  stream_layers_qp_[stream_index].AddSample(SamplesStatsCounter::StatsSample{\n      .value \u003d static_cast\u003cdouble\u003e(qp), .time \u003d time});\n"
            }
          ]
        }
      ],
      "revId": "837717fa02464a87dec8c1893832c665bb546248",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d13d56d5_35488d8a",
        "filename": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_frame_in_flight.cc",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-08-02T14:32:39Z",
      "side": 1,
      "message": "Checked it now. Yes, that is correct. Singlecast does not have the stream index set.",
      "parentUuid": "56c60455_5e923b58",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "revId": "837717fa02464a87dec8c1893832c665bb546248",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de0afd1e_606b01cf",
        "filename": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_frame_in_flight.cc",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 6337
      },
      "writtenOn": "2024-08-02T15:13:27Z",
      "side": 1,
      "message": "Do we need to keep if in such case?",
      "parentUuid": "d13d56d5_35488d8a",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "revId": "837717fa02464a87dec8c1893832c665bb546248",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a30d386d_1b0590a5",
        "filename": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_frame_in_flight.cc",
        "patchSetId": 7
      },
      "lineNbr": 101,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-08-02T16:04:53Z",
      "side": 1,
      "message": "Yes, IMO we should keep it. I don\u0027t know if singlecast is ever used in real-word RTC. Nevertheless, I guess someone sometime could be interested in a singlecast scenario. It could also be important in some tests perhaps.\n\nThe question then is more: \"What shall we do in simulcast stream if the stream index is not set?\" I don\u0027t know if this is even a realistic situation. However, the ideal would be \"not\" to sum the QP values as it is currently. IMO it is misleading to sum them and place the mean on the 0:th layer.\n\nSo my suggestion is: we can have a check such as: `if (stream_layers_qp_.count(stream_index) !\u003d 0` --\u003e `stream_layers_qp_.clear()` in default_video_quality_analyzer_frame_in_flight.cc in `OnFrameEncoded` where I did something similar in patch 8. Wdyt?\n\nIn singlecast this if check would never result in true to my best knowledge.",
      "parentUuid": "de0afd1e_606b01cf",
      "range": {
        "startLine": 98,
        "startChar": 2,
        "endLine": 101,
        "endChar": 3
      },
      "revId": "837717fa02464a87dec8c1893832c665bb546248",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f15affc_4589c6b8",
        "filename": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_internal_shared_objects.h",
        "patchSetId": 7
      },
      "lineNbr": 77,
      "author": {
        "id": 3485001
      },
      "writtenOn": "2024-08-02T13:44:40Z",
      "side": 1,
      "message": "Note: Update with bug-number when bug created!",
      "range": {
        "startLine": 77,
        "startChar": 10,
        "endLine": 77,
        "endChar": 19
      },
      "fixSuggestions": [
        {
          "fixId": "b435af6e_a75c76f4",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "test/pc/e2e/analyzer/video/default_video_quality_analyzer_internal_shared_objects.h",
              "range": {
                "startLine": 77,
                "startChar": 0,
                "endLine": 78,
                "endChar": 0
              },
              "replacement": "  // TODO(b/191125111): Replace `SamplesStatsCounter` with optional\u003cint\u003e\n"
            }
          ]
        }
      ],
      "revId": "837717fa02464a87dec8c1893832c665bb546248",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}