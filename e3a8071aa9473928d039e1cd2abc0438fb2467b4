{
  "comments": [
    {
      "key": {
        "uuid": "18d1609f_2626e6cc",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "Shouldn\u0027t gain changes like these always be ramped? Or is the expectation that you set this up once when initializing the controller and then don\u0027t touch it?",
      "range": {
        "startLine": 40,
        "startChar": 39,
        "endLine": 40,
        "endChar": 52
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26a213e5_50b9b0e8",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 40,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Yes, we set it with ApplyConfig in the APM. Afterwards it typically shouldn\u0027t be changed. The comment is there to explain why we don\u0027t have any ramping.",
      "parentUuid": "18d1609f_2626e6cc",
      "range": {
        "startLine": 40,
        "startChar": 39,
        "endLine": 40,
        "endChar": 52
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bc2d09_80151cd9",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "I _think_ this is probably always a safe comparison, but perhaps you should use some sort of epsilon for testing gain_to_apply_. Perhaps something based on the range of samples (16 bit), since changes smaller than that would not change anything anyways.",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c574edf8_4109d8c3",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4bc2d09_80151cd9",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc854266_bef61707",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T14:58:18Z",
      "side": 1,
      "message": "Close, but no cigar! Now you\u0027re _only_ processing it if it doesn\u0027t do anything. :)",
      "parentUuid": "c574edf8_4109d8c3",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93053902_dd361875",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T15:22:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fc854266_bef61707",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 30
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d17336e1_a76a45d4",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "Are these TODOs to remain in the CL, or reminders for you to do it before submitting?",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "530de616_da7e0a68",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "It\u0027s to point out where the next CLs will add functionality. I want to keep this CL roughly as is, and then add more processing in the next 2-3. I changed the wording a little.",
      "parentUuid": "d17336e1_a76a45d4",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b4877f0_66b7d0ce",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 69,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T14:58:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "530de616_da7e0a68",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 66
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "046431ed_a568a903",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "Is rtc::SafeClamp something you could use here? Best double-check it doesn\u0027t add any overhead.",
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "553a3f71_e008ba5a",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.cc",
        "patchSetId": 5
      },
      "lineNbr": 81,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "046431ed_a568a903",
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed77e239_b966e3df",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "No values are passed to the constructor, are they?",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 20
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb172c27_a7030bc9",
        "filename": "modules/audio_processing/agc2/fixed_gain_controller.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ed77e239_b966e3df",
      "range": {
        "startLine": 27,
        "startChar": 9,
        "endLine": 27,
        "endChar": 20
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b973ea55_2c4b2713",
        "filename": "modules/audio_processing/agc2/vector_float_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "Why a pointer?",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 27,
        "endChar": 30
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9450a1e1_cbce7f4e",
        "filename": "modules/audio_processing/agc2/vector_float_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 27,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Changed to reference after light reading of style guide.",
      "parentUuid": "b973ea55_2c4b2713",
      "range": {
        "startLine": 27,
        "startChar": 8,
        "endLine": 27,
        "endChar": 30
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fb04fb7_f53494ae",
        "filename": "modules/audio_processing/gain_controller2.cc",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "Why is this brace-initialized when data_dumper_ isn\u0027t? Don\u0027t think brace initialization in initializer lists are common in WebRTC.",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 35
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c614b6b_8a67222d",
        "filename": "modules/audio_processing/gain_controller2.cc",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fb04fb7_f53494ae",
      "range": {
        "startLine": 29,
        "startChar": 23,
        "endLine": 29,
        "endChar": 35
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc642773_bdae8285",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "Are there non-Mutable FloatAudioFrames? Why are they of a different type?",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8586ce24_5ad6afff",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 20,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cc642773_bdae8285",
      "range": {
        "startLine": 20,
        "startChar": 8,
        "endLine": 20,
        "endChar": 0
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66306c90_0d33eb34",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T13:59:45Z",
      "side": 1,
      "message": "So there is! Why?\nWhy not just chuck around FloatAudioFrames (that are mutable) and const FloatAudioFrames (that aren\u0027t)?",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 21
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61e136f1_778a41c0",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T14:43:10Z",
      "side": 1,
      "message": "I think I was worried about doing something like this with copying:\n\nconst MFAF x(...);\nMFAF y \u003d x;\n\nBut having two identical FAFs with a const cast and an implicit constructor is not a good solution.",
      "parentUuid": "66306c90_0d33eb34",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 21
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "30759eb7_df496239",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T14:58:18Z",
      "side": 1,
      "message": "Do you want y, in this case, to be a copy of the data, or to reference the same data? Also, what are the problems involved in using ArrayViews of ArrayViews that you want to avoid?\n\nI guess ArrayViews of ArrayViews don\u0027t really make sense. What about a vector of ArrayViews?",
      "parentUuid": "61e136f1_778a41c0",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 21
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86fae3c6_bea63fff",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5124
      },
      "writtenOn": "2018-02-12T15:22:54Z",
      "side": 1,
      "message": "\u0027y\u0027 would be a reference to the same data. You couldn\u0027t change the data through \u0027x\u0027, but you can change it through \u0027y\u0027.\n\nI think vector\u003cArrayView\u003e would work. But this is for processing audio every 10 ms. And then maybe dynamic memory allocation is suboptimal. Or so the experts say.\n\nWe\u0027ve already had the (immutable) FloadAudioFrame in our code for half a year. It was used with the ApmDebugDump. What I\u0027ve done is I\u0027ve moved it from modules/audio_processing/include/apm_dump.h. And now removed a \u0027const\u0027 from the constructor.",
      "parentUuid": "30759eb7_df496239",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 21
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83310266_b7b17cf0",
        "filename": "modules/audio_processing/include/float_audio_frame.h",
        "patchSetId": 5
      },
      "lineNbr": 56,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-12T15:30:13Z",
      "side": 1,
      "message": "Hmm, yes, you\u0027re right. If there\u0027s already an immutable FloatAudioFrame, it\u0027s possibly unwise to change those semantics. Let me have a little think about this...",
      "parentUuid": "86fae3c6_bea63fff",
      "range": {
        "startLine": 56,
        "startChar": 6,
        "endLine": 56,
        "endChar": 21
      },
      "revId": "e3a8071aa9473928d039e1cd2abc0438fb2467b4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}