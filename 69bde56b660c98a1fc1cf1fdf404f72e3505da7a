{
  "comments": [
    {
      "key": {
        "uuid": "d59bb58d_c52cf4a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-08-20T13:15:33Z",
      "side": 1,
      "message": "The grammar doesn\u0027t make sense to me here. Did you mean \"from a\"?",
      "range": {
        "startLine": 21,
        "startChar": 27,
        "endLine": 21,
        "endChar": 33
      },
      "revId": "69bde56b660c98a1fc1cf1fdf404f72e3505da7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1b99ae6_3797b866",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 21
      },
      "lineNbr": 1123,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-08-20T13:15:33Z",
      "side": 1,
      "message": "The key is 64 bits and will never wrap (at 1 billion insertions per second it will take over 500 years). Just incrementing it once and not checking is enough.\n\nFurthermore, if the key does wrap, this loop would not save you, since the ABA bug you\u0027re trying to fix would then reappear. So the loop isn\u0027t correct even in principle.",
      "range": {
        "startLine": 1121,
        "startChar": 4,
        "endLine": 1123,
        "endChar": 55
      },
      "revId": "69bde56b660c98a1fc1cf1fdf404f72e3505da7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "185f4302_b4dadd19",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 21
      },
      "lineNbr": 1289,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-08-20T13:15:33Z",
      "side": 1,
      "message": "Make a nice name for this one too up at line 1285?",
      "range": {
        "startLine": 1289,
        "startChar": 43,
        "endLine": 1289,
        "endChar": 53
      },
      "revId": "69bde56b660c98a1fc1cf1fdf404f72e3505da7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ab92f3c_3d340a6d",
        "filename": "rtc_base/physical_socket_server.cc",
        "patchSetId": 21
      },
      "lineNbr": 1329,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-08-20T13:15:33Z",
      "side": 1,
      "message": "This comment may need updating. Specifically, we now no longer reuse handles.",
      "range": {
        "startLine": 1327,
        "startChar": 9,
        "endLine": 1329,
        "endChar": 63
      },
      "revId": "69bde56b660c98a1fc1cf1fdf404f72e3505da7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eba3ead_59ce8729",
        "filename": "rtc_base/physical_socket_server.h",
        "patchSetId": 21
      },
      "lineNbr": 115,
      "author": {
        "id": 5126
      },
      "writtenOn": "2020-08-20T13:15:33Z",
      "side": 1,
      "message": "RTC_GUARDED_BY(crit_)?\n\nAlso, if you name it `next_dispatcher_key_` instead, you can initialize it to 0 instead of -1, which makes it simpler to think about.",
      "revId": "69bde56b660c98a1fc1cf1fdf404f72e3505da7a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}