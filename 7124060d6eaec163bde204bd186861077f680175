{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8fa118ac_9458c9b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-06-28T13:48:55Z",
      "side": 1,
      "message": "PTAL:\n\n- hbos: api/ pc/\n- saza: audio/ media/\n- terelius: call/\n\nThanks!",
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec8cb6c7_65f6df70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-06-28T14:27:51Z",
      "side": 1,
      "message": "RTCStats side of things LGTM.\n\nI looks like we already pass the web platform test for nackCount:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/web_tests/external/wpt/webrtc-stats/supported-stats-expected.txt;l\u003d37\n\nSo I guess the chromium test was not looking at the mediaType. Then I think you can land this without updating chromium expectations :)",
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f9d6d27_ba1ef837",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-06-28T14:45:30Z",
      "side": 1,
      "message": "The declaration in call/ looks good, but I don\u0027t quite get a clear birds-eye picture of the entire CL. Do we NACK audio streams? Where does the actual NACK counting (e.g. nacks++) take place?",
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34492fe7_fa397958",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-06-28T15:11:40Z",
      "side": 1,
      "message": "NACK can be enabled for audio streams by adding rtcp-fb nack to the SDP.\n\nnack_packets is updated here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/rtp_rtcp/source/rtcp_sender.cc;l\u003d605;drc\u003dc14f6f4b9c44fe479a8d004576b42723b2a5feb6",
      "parentUuid": "8f9d6d27_ba1ef837",
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e78952bf_947d4b88",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-06-28T15:29:40Z",
      "side": 1,
      "message": "Are you adding it to the local or remote SDP? Remember that local SDP munging is illegal according to spec and that we should not increase the need to use the API that way",
      "parentUuid": "34492fe7_fa397958",
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01add96d_781523a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-06-28T15:34:06Z",
      "side": 1,
      "message": "Remote description for NACKing packets on audio receive streams.\n\nFor retransmitting packets on the sender side, munging local description is needed. So we will likely need to figure out some other way of enabling that :)",
      "parentUuid": "e78952bf_947d4b88",
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66b0f5e2_157148f4",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 3
      },
      "lineNbr": 880,
      "author": {
        "id": 5150
      },
      "writtenOn": "2021-06-28T14:45:30Z",
      "side": 1,
      "message": "Is this called anywhere?",
      "range": {
        "startLine": 880,
        "startChar": 0,
        "endLine": 880,
        "endChar": 51
      },
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8ca19287_433884b3",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 3
      },
      "lineNbr": 880,
      "author": {
        "id": 8038
      },
      "writtenOn": "2021-06-28T15:11:40Z",
      "side": 1,
      "message": "Yes, it is called from here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/rtp_rtcp/source/rtcp_sender.cc;l\u003d750;drc\u003dc14f6f4b9c44fe479a8d004576b42723b2a5feb6\n\nSorry I had missed to add the rtcp_packet_type_counter_observer to the RtpRtcpInterface::Configuration :)",
      "parentUuid": "66b0f5e2_157148f4",
      "range": {
        "startLine": 880,
        "startChar": 0,
        "endLine": 880,
        "endChar": 51
      },
      "revId": "7124060d6eaec163bde204bd186861077f680175",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}