{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6dbeb2c7_5fb262c1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-10T15:19:03Z",
      "side": 1,
      "message": "Some more fixes. I wonder if anyone cares about the AudioCodecPairId, but there was a test using it, so we might as well plumb it through.",
      "revId": "3af8687d027705f1cc41053818182a0d99ec92d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a81bc927_161a9ff5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5077
      },
      "writtenOn": "2023-02-10T16:40:29Z",
      "side": 1,
      "message": "It should be possible to remove AudioCodecPairId now that ISAC is gone and we don\u0027t need to associate send/receive codec instances. Perhaps ping hlundin@ to create a CL for that so you don\u0027t have to add all this cruft here?",
      "parentUuid": "6dbeb2c7_5fb262c1",
      "revId": "3af8687d027705f1cc41053818182a0d99ec92d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2783b453_a1a83799",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-10T16:51:17Z",
      "side": 1,
      "message": "Ah, that explains why a singularly obscure test was the only thing that broke when I broke it!\n\nI couldn\u0027t quite get why that test was checking the codec pair ID.",
      "parentUuid": "a81bc927_161a9ff5",
      "revId": "3af8687d027705f1cc41053818182a0d99ec92d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70fef127_a42d1caf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-02-10T16:51:17Z",
      "side": 1,
      "message": "All the rocks we turn over...",
      "revId": "3af8687d027705f1cc41053818182a0d99ec92d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac8d034c_2d75680f",
        "filename": "pc/rtp_transceiver.cc",
        "patchSetId": 27
      },
      "lineNbr": 225,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-02-14T11:54:25Z",
      "side": 1,
      "message": "Returning if a stream could not be created is not new with this CL, but still wondering: why would we fail here? Is this an error? Seems strange to silently abort like this rather than DCHECKing and/or RTC_LOG(LS_ERROR).",
      "revId": "3af8687d027705f1cc41053818182a0d99ec92d6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}