{
  "comments": [
    {
      "key": {
        "uuid": "34df2fe7_0cfa3e50",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-03-11T15:28:06Z",
      "side": 1,
      "message": "Is it supposed to be that way? Sounds strange to me, and would, e.g., defeat some of the benefit of using overlapping protection windows, if we ever try to implement that.",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81f6e54a_d8418e86",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-03-11T15:37:14Z",
      "side": 1,
      "message": "IIUC if packet is recovered by FEC it won\u0027t come here at all, so it should be done in some other way. This one basically should intercept packets recovered through RTX.",
      "parentUuid": "34df2fe7_0cfa3e50",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15b6a197_30993a6f",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 5019
      },
      "writtenOn": "2020-03-11T15:40:19Z",
      "side": 1,
      "message": "yes. unfortunately. e.g. there is repaired rtp stream id (rrsid) extension that only makes sense on an rtx packet, rtp stream id means slightly different on rtx and on media packet it protects (might have different values). Transport sequence number of a media packet is unrecoverable too (and now we have mechanics to include it only sometimes).\nso it is non-trivial to restore same extensions (and in the same order) of a media packet from an rtx packet.\n\nbut ulpfec makes no difference between rtp payload and metadata (rtp header extensions): it treats everything after first base 12 bytes of rtp header as payload.\nthat was sort of ok while we had stable size and order of the header extensions (same header extensions that are not important for the rtp payload got corrupted that way), but we are more dynamic these days.",
      "parentUuid": "34df2fe7_0cfa3e50",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f2847b_428bc422",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 6290
      },
      "writtenOn": "2020-03-11T16:11:47Z",
      "side": 1,
      "message": "I think the problem Nisse mentiond here is that is_recovered is set with both RTX and FEC packets. (https://cs.corp.google.com/piper///depot/google3/third_party/webrtc/files/stable/webrtc/modules/rtp_rtcp/source/rtp_packet_received.h?q\u003dRtpPacketReceived+\u0026g\u003d0\u0026l\u003d50)\nAs we have multi-layer FEC protection, disable using FEC recovered packet for FEC recovering will reduce FEC efficiency.\nOne solution is to differentiate RTX and FEC recovered packets, another way is that we revert the change in https://webrtc-review.googlesource.com/c/src/+/146480.",
      "parentUuid": "15b6a197_30993a6f",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d41a9305_af1a9d7a",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-03-11T16:16:36Z",
      "side": 1,
      "message": "I think we can distinguish RTX and FEC. When we add newly arrived packet in UlpfecReceiverImpl::AddReceivedRedPacket right now we can get there only regular packets or RTX. FEC recovered packet right now can\u0027t get into received_packets IIUC. So when we will add this ability we can rename is_recovered to is_rtx and for FEC recovered packet set it to false. But maybe we will need some insurance, that only RTX recovered packets will be coming to UlpfecReceiverImpl::AddReceivedRedPacket in future.",
      "parentUuid": "67f2847b_428bc422",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5d90452_062941b8",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 6290
      },
      "writtenOn": "2020-03-11T16:25:26Z",
      "side": 1,
      "message": "Right, I see the FEC packets does not go through that path, so that should be fine, thanks!",
      "parentUuid": "d41a9305_af1a9d7a",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e64293f2_d398d3dc",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 5
      },
      "lineNbr": 196,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-03-12T08:05:23Z",
      "side": 1,
      "message": "Thanks for explaining. So the issue is that RTX doesn\u0027t work nicely together with FEC. While packets recovered by FEC should be identical to the original transmission, and work with more advanced FEC modes like the \"multi-layer\" mode Ying mentions.\n\nAs for the is_recovered flag, as I understand it it\u0027s mainly intended to aid stats. E.g, to get receive rate counting original transmissions only, or network latency measures excluding recovered packets. In principle, I think it\u0027s nice to not have to expose distinctions between different kinds of recovery to those layers.",
      "parentUuid": "c5d90452_062941b8",
      "range": {
        "startLine": 190,
        "startChar": 0,
        "endLine": 196,
        "endChar": 5
      },
      "revId": "6817394eac2e6f3b65bbcbb84160c0831c88a308",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}