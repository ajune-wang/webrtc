{
  "comments": [
    {
      "key": {
        "uuid": "ebd42fd8_0492b21d",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-12T20:15:17Z",
      "side": 1,
      "message": "why does it inherit from mock? \u003cconfused\u003e",
      "range": {
        "startLine": 55,
        "startChar": 45,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c5a4e8_00a6ad17",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-02-12T22:14:06Z",
      "side": 1,
      "message": "Basically mock observer is a default one for testing peer connection as I understand. I don\u0027t know why it is mock... Also PeerConnectionWrapper requires it and I want to keep signaling part of PeerConnectionWrapper. It will simplify test fixture implementation a lot for now.",
      "parentUuid": "ebd42fd8_0492b21d",
      "range": {
        "startLine": 55,
        "startChar": 45,
        "endLine": 55,
        "endChar": 49
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87d7661d_6902e453",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-12T20:15:17Z",
      "side": 1,
      "message": "which one fires first? I would suggest ordering them in order of firing.",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b8659b6_f637ee20",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-02-12T22:14:06Z",
      "side": 1,
      "message": "OnTrack will be called first when we will exchange offer/answer and then we will connect",
      "parentUuid": "87d7661d_6902e453",
      "range": {
        "startLine": 60,
        "startChar": 10,
        "endLine": 60,
        "endChar": 27
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f56cf5f1_fe6fe4f4",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-12T20:15:17Z",
      "side": 1,
      "message": "ideally we would want to get a metric out of it (how long did it take to connect)",
      "range": {
        "startLine": 61,
        "startChar": 8,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afeed58c_006c05d0",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-02-12T22:14:06Z",
      "side": 1,
      "message": "I think we will be able to put metric cals into callback implementation, so should get what we need.",
      "parentUuid": "f56cf5f1_fe6fe4f4",
      "range": {
        "startLine": 61,
        "startChar": 8,
        "endLine": 61,
        "endChar": 30
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "048bd530_cc096497",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-12T20:15:17Z",
      "side": 1,
      "message": "Can you check with Jonas if it uses media transport? I know there were some issues with this standardized event.",
      "range": {
        "startLine": 70,
        "startChar": 7,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8c2e3ff7_038bc46b",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-02-14T09:52:03Z",
      "side": 1,
      "message": "Done: switched to OnIceConnectionChange",
      "parentUuid": "048bd530_cc096497",
      "range": {
        "startLine": 70,
        "startChar": 7,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1138b57d_5e39f65c",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-12T20:15:17Z",
      "side": 1,
      "message": "you could call it multiple times, no? Do you want to put some kind of protection?\n(technically ice can disconnect and reconnect)",
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d26535a_a73cbe6f",
        "filename": "test/pc/e2e/peer_connection_quality_test.cc",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 6337
      },
      "writtenOn": "2019-02-12T22:14:06Z",
      "side": 1,
      "message": "Add doc on callback and protection into passed method (actually it was protected by implementation implicitly, but I put explicit in case if implementation will be changed)",
      "parentUuid": "1138b57d_5e39f65c",
      "revId": "df7e8d0fdcf9044167c303b1c91331bd0c3de83d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}