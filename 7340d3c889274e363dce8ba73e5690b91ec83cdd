{
  "comments": [
    {
      "key": {
        "uuid": "9a3fd873_f5080ac6",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 7
      },
      "lineNbr": 560,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "nit: Add {}",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ce708a_6005b810",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 7
      },
      "lineNbr": 560,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3fd873_f5080ac6",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eea7fce8_66ba143d",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 7
      },
      "lineNbr": 562,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "(No change needed, just talking)\n\nI suspect that in all cases where the restrictions are updated for a reason - except for the \"quality rampup experiment double-adapt\" - we already know about the adaptation counters before and after since the processor is the one who triggered the adaptation.\n\nPerhaps in the future, OnVideoSourceRestrictionsUpdated() does not have to take adaptation counters are arguments? Maybe it can be just take the restrictions? Or is this still needed?",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e53cf843_b46d51f3",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 7
      },
      "lineNbr": 562,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "I think that it can be cleaned up yes, but not currently. There is complexity regarding the filtering. I tried to remove that in general but that did not work very cleanly, which is why there are two restriction arguments. \n\nIn the future I would like to just remove the dependency on counters altogether, but the problem is that they are fundemental to the model (reducing fps requires counters), as well as AdaptUp(AdaptDown(R)) !\u003d R for restrictions R, making comparing restrictions impossible. \n\nIn summary, to remove the counters we would have to,\n1) Make all adaptations work without counters,\n2) Make restrictions comparable (fix the Up(Down(R)) !\u003d R problem)",
      "parentUuid": "eea7fce8_66ba143d",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91e98dbe_5e761804",
        "filename": "call/adaptation/resource_adaptation_processor.cc",
        "patchSetId": 7
      },
      "lineNbr": 562,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-07-01T08:02:01Z",
      "side": 1,
      "message": "Ack!",
      "parentUuid": "e53cf843_b46d51f3",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "22de5c51_ae56f3a4",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 394,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "Add a comment why we do not broadcase (because broadcast is handled by ClearRestrictions)",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80cb3d5e_5e44bc6f",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 394,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22de5c51_ae56f3a4",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a605977_9ad606cb",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 556,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "nit: {}",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c76d2a09_570be2a1",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 556,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a605977_9ad606cb",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2157070_6778f904",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 561,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "Would the copy of the restrictor also have the restrictions listener copied?\n\nPeeking restrictions must not broadcast to the original listener that things have changed when they have not. Let\u0027s add a test for that.",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a3e3fd7d_db756661",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 561,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "The VideoStreamAdapter does the broadcasting, not the restrictor. I will add a test to prove this.",
      "parentUuid": "d2157070_6778f904",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "446c4287_1ad4a9d9",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 604,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "Would this be spammy? Should this be removed before landing? Also lower case and .. looks debuggy",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98540346_50cdf10d",
        "filename": "call/adaptation/video_stream_adapter.cc",
        "patchSetId": 7
      },
      "lineNbr": 604,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "Yes.",
      "parentUuid": "446c4287_1ad4a9d9",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "41335913_d19e8620",
        "filename": "call/adaptation/video_stream_adapter.h",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "If VideoStreamAdapter is documented as a class that is not thread-safe, and all external uses use RTC_GUARDED_BY (e.g. ResourceAdaptationProcessor::stream_adapter_ and VideoStreamEncoder::video_stream_adapter_ are both RTC_GUARDED_BY so its impossible that these classes accidentally invokes it on the wrong sequence).\n\nDo we really need the SequenceChecker if correct usage is and should be imposed by the caller?",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a11aa5a_4949c149",
        "filename": "call/adaptation/video_stream_adapter.h",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "This is prep for the future which can happen sooner rather than later. When there are potentially multiple stream or new mitigations, the ResourceAdaptationProcessor would need to save the queues that these need to be posted on. We probably want to avoid that, and this sequence checker will ensure that this gets caught if posting on the wrong queue.",
      "parentUuid": "41335913_d19e8620",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "231d62d4_b2d608b2",
        "filename": "call/adaptation/video_stream_adapter.h",
        "patchSetId": 7
      },
      "lineNbr": 197,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-07-01T08:02:01Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "7a11aa5a_4949c149",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "899dbee2_7702048e",
        "filename": "call/adaptation/video_stream_input_state.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-06-23T09:39:34Z",
      "side": 1,
      "message": "Remove before landing?",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bff10e45_4492861a",
        "filename": "call/adaptation/video_stream_input_state.cc",
        "patchSetId": 7
      },
      "lineNbr": 35,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-06-30T10:21:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "899dbee2_7702048e",
      "revId": "7340d3c889274e363dce8ba73e5690b91ec83cdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}