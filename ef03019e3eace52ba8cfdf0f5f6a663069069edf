{
  "comments": [
    {
      "key": {
        "uuid": "2cd2e31c_cb610171",
        "filename": "media/base/rtpdataengine.cc",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "Maybe \"kData\" would be a useful distinction?",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b16dd3a9_abe37253",
        "filename": "media/base/rtpdataengine.cc",
        "patchSetId": 4
      },
      "lineNbr": 331,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2cd2e31c_cb610171",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c31f9bc_96fb707e",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 4
      },
      "lineNbr": 1565,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "It seems like you could push this further down, like in MediaChannel::DoSendPacket or RtpTransport::SendPacket or perhaps even further down into DtlsTransport to IceTransport or Port.  All packets from any of those should be of this type (except for the TURN/STUN/check that IceTransport should know about).",
      "range": {
        "startLine": 1564,
        "startChar": 56,
        "endLine": 1565,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e4fd326_0478e21a",
        "filename": "media/engine/webrtcvideoengine.cc",
        "patchSetId": 4
      },
      "lineNbr": 1565,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Do you think slicing kMedia or kData further to kAudio/kVideo/kData can be useful? Logging at these source sites would give us finer categories. I was originally thinking about this in case we want to add more types. I made the change with more types in the new patch. Let me know what you think.",
      "parentUuid": "7c31f9bc_96fb707e",
      "range": {
        "startLine": 1564,
        "startChar": 56,
        "endLine": 1565,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b7c02d_ed8a6591",
        "filename": "media/engine/webrtcvoiceengine.h",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "packet_type not set here?",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40d83fb3_41f032a6",
        "filename": "media/engine/webrtcvoiceengine.h",
        "patchSetId": 4
      },
      "lineNbr": 210,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "My mistake. Thanks for spotting this!",
      "parentUuid": "c7b7c02d_ed8a6591",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0b087dc7_0bb9fbf4",
        "filename": "media/sctp/sctptransport.cc",
        "patchSetId": 4
      },
      "lineNbr": 924,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "It seems like this should be taken care of by the DtlsTransport underneath, which is always data (not ICE/STUN/TURN), or perhaps even further down into IceTransport or Port.",
      "range": {
        "startLine": 923,
        "startChar": 44,
        "endLine": 924,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e660f2b_b3541238",
        "filename": "media/sctp/sctptransport.cc",
        "patchSetId": 4
      },
      "lineNbr": 924,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Similar to my other reply, I am wondering if we want three buckets of kAudio/kVideo/kData in the traffic breakdown. I made the change with these types in the new patch.",
      "parentUuid": "0b087dc7_0bb9fbf4",
      "range": {
        "startLine": 923,
        "startChar": 44,
        "endLine": 924,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cbf25ab_3c63f4a1",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1212,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "Couldn\u0027t this be done in the implementation of Port::SendTo? Then there would be no need for LogPortInformationInPacketOptions to be public.",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0c1f55e7_3affef9d",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1212,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "I think that\u0027s a good idea.",
      "parentUuid": "6cbf25ab_3c63f4a1",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc3e1632_0510c7f0",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1212,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "I was trying to also cover TCPConnection, where it is wired to the packet socket directly. Once in the packet socket level, some port information is lost. Should I handled TCPConnection separately or am I missing the point?",
      "parentUuid": "6cbf25ab_3c63f4a1",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "918ab4af_463858e2",
        "filename": "p2p/base/p2ptransportchannel.cc",
        "patchSetId": 4
      },
      "lineNbr": 1212,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-10T15:17:25Z",
      "side": 1,
      "message": "Handling in TCPConnection separately makes sense. It\u0027s friends with TCPPort so it could access LogPortInformationInPacketOptions even if private.\n\nThis doesn\u0027t make a big difference. It just seems more intuitive to me that the class that knows about the metadata is the one that adds it.",
      "parentUuid": "dc3e1632_0510c7f0",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e56c04b9_e26e0ca1",
        "filename": "p2p/base/port.cc",
        "patchSetId": 4
      },
      "lineNbr": 830,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "I think a separate type for kIceConnectivityCheckResponse would make sense. Otherwise, it will be harder to tell what we would gain from making checks smaller.",
      "range": {
        "startLine": 830,
        "startChar": 63,
        "endLine": 830,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6d9839e_bd3e4aae",
        "filename": "p2p/base/port.cc",
        "patchSetId": 4
      },
      "lineNbr": 830,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e56c04b9_e26e0ca1",
      "range": {
        "startLine": 830,
        "startChar": 63,
        "endLine": 830,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56567098_b6e664c7",
        "filename": "p2p/base/port.cc",
        "patchSetId": 4
      },
      "lineNbr": 936,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "This is kind of weird as options.  I think it would be better to have all the places  LogPortInformationInPacketOptions is called to instead fire a SignalPacketSent on the port.  Then have the IceTransport listen to those events and bubble them up further.  But then you\u0027d be filling in a PacketSentInfo (or whatever it\u0027s called) instead of an Options struct.",
      "range": {
        "startLine": 936,
        "startChar": 43,
        "endLine": 936,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3695cd33_42b8dad7",
        "filename": "p2p/base/port.cc",
        "patchSetId": 4
      },
      "lineNbr": 936,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-05T22:48:36Z",
      "side": 1,
      "message": "I discussed both options with Taylor on my design proposal, and we concluded that it\u0027s easier (and probably better) to append metadata to the existing SignalSentPacket and keep one way of signaling sent packets instead of two.\n\nI think it makes sense to have a unified source of information for both BWE and stats.  It\u0027ll ensure that the stats reflect exactly what BWE saw.",
      "parentUuid": "56567098_b6e664c7",
      "range": {
        "startLine": 936,
        "startChar": 43,
        "endLine": 936,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20a1530e_3e9606f3",
        "filename": "p2p/base/port.h",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "nit: This can be const, and I\u0027d suggest renaming to \"CopyPortInformationToPacketOptions\"",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a4c6b4d_a5e0eb84",
        "filename": "p2p/base/port.h",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "20a1530e_3e9606f3",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f294e6e_414bedda",
        "filename": "p2p/base/port.h",
        "patchSetId": 4
      },
      "lineNbr": 383,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "20a1530e_3e9606f3",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9c8affb_ef7b4cb6",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "This is all weird as packet options.  I think we could just have them on SentPacketInfo (or whatever it\u0027s called) if we don\u0027t require the fields to be filled in at such a high level.   The less in PacketOptions, the better.",
      "range": {
        "startLine": 47,
        "startChar": 25,
        "endLine": 47,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1f54c1bf_6e1e7524",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-04T17:55:24Z",
      "side": 1,
      "message": "Probably worth a comment on what values this can take.  I\u0027d assume it\u0027s \"UDP\", \"TCP\", or \"TLS\", but if there are particular constants for those, it\u0027s worth pointing them out.",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bdbb365_4153b7aa",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-04T17:55:24Z",
      "side": 1,
      "message": "I wonder if it would be more general to just expose the Candidate::id instead of protocol, port type, and network separately.  I already keep a map of IDs to remote candidates, I could do the same for local candidates and look up whatever information I need.",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 23
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "558f02ee_b12e7e5e",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "I considered this but wasn\u0027t sure if it would be convenient enough for you to use. If it is, let\u0027s go with that; it provides more information. Could add a remote candidate ID too for when it\u0027s applicable.",
      "parentUuid": "3bdbb365_4153b7aa",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 23
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dddb4a5b_048d5471",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "Any reason not to just use an enum?",
      "parentUuid": "1f54c1bf_6e1e7524",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fef878b3_a63de572",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-05T22:48:36Z",
      "side": 1,
      "message": "An enum would be better, if you have one. :)",
      "parentUuid": "dddb4a5b_048d5471",
      "range": {
        "startLine": 48,
        "startChar": 23,
        "endLine": 48,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c244ba_c77fa78e",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 48,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-05T22:48:36Z",
      "side": 1,
      "message": "Qingsi pointed out to me that it\u0027s not actually feasible to add a candidate id to every packet.  Things like STUN/TURN messages are not tied to a particular candidate, as those ports may be shared by multiple candidates.  We\u0027d need to fill in candidate information at an even higher level, which doesn\u0027t seem necessary.\n\nI think I would rather have the information that is pertinent to every packet, and not bloat it with options that are only sometimes meaningful.\n\nI think what\u0027s relevant is the particular network path, which is determined by the source and destination socket addresses in the SentPacket.  That should be enough to distinguish which bits of traffic can interfere with each other.\n\nI would like a way to identify the network interface for each packet, so that I can look up the rtc::Network and gather additional information from that, if I find it necessary.  That\u0027s why I also want the network id, below.  But I suppose it should be possible to identify the network interface from the local socket address, too, in which case we could probably leave that out as well.",
      "parentUuid": "558f02ee_b12e7e5e",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 48,
        "endChar": 23
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62e2744f_9ea94c30",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-04T17:55:24Z",
      "side": 1,
      "message": "I think it\u0027s worth a comment about what values this can take.  It\u0027s these constants, right?\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/p2p/base/port.h?l\u003d48\u0026rcl\u003d8058fbbd6bc09dd64b87a479d4028a0d8a2fed5b",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d83645_6699359a",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "I\u0027d suggest leaving this off; you already know whether it\u0027s a TURN packet from other fields, and I don\u0027t imagine you care whether a packet is sent from a prflx candidate or not?",
      "parentUuid": "62e2744f_9ea94c30",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f458228_8ac96b89",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-05T22:48:36Z",
      "side": 1,
      "message": "Yeah, I don\u0027t think I really care about this unless it lets me determine overheads more accurately.  But the TURN overhead already has its own field, so I don\u0027t think I\u0027ll need this.",
      "parentUuid": "c4d83645_6699359a",
      "range": {
        "startLine": 49,
        "startChar": 24,
        "endLine": 49,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0390c536_04eebb14",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-04T17:55:24Z",
      "side": 1,
      "message": "Could we use the network id instead of the ToString() value here?  The id is the value that actually appears in Candidates.  I think it would be more useful to callers, because it would make it easier to programmatically locate the full Network object or candidates using that network.",
      "range": {
        "startLine": 50,
        "startChar": 22,
        "endLine": 50,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca606811_22e487c0",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Changed to the network id assigned by the network manager.",
      "parentUuid": "0390c536_04eebb14",
      "range": {
        "startLine": 50,
        "startChar": 22,
        "endLine": 50,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5db677a_6eb45e78",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-04-04T17:55:24Z",
      "side": 1,
      "message": "Is this actually useful?  I didn\u0027t see it used anywhere.\n\nI would rather know the total size that we actually sent, anyway.  For media packets, callers can track what they sent themselves and use the packet_id to retrieve it.",
      "range": {
        "startLine": 51,
        "startChar": 74,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75765552_15db1b39",
        "filename": "rtc_base/asyncpacketsocket.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "Removed after clean-up.",
      "parentUuid": "a5db677a_6eb45e78",
      "range": {
        "startLine": 51,
        "startChar": 74,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35fca2f0_c2d5ff13",
        "filename": "rtc_base/socket.h",
        "patchSetId": 4
      },
      "lineNbr": 128,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "kData might be a better name for it.  The ICE spec changed from calling it \"media\" to calling it \"data\".",
      "range": {
        "startLine": 127,
        "startChar": 15,
        "endLine": 128,
        "endChar": 0
      },
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d07359f_48ddf7fe",
        "filename": "rtc_base/socket.h",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 5053
      },
      "writtenOn": "2018-04-04T20:33:27Z",
      "side": 1,
      "message": "Why not add the fields directly to SentPacket?",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4883f15_5a02deac",
        "filename": "rtc_base/socket.h",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 5660
      },
      "writtenOn": "2018-04-05T20:00:46Z",
      "side": 1,
      "message": "That\u0027s what I was wondering...\n\nOn the other hand, we have two different purposes here, one for BWE and one for stats.  I could imagine having two different signals for the different uses (as I mentioned above, I think that for the stats, it would be easier to have the Ports and IceTransports fire rather than sockets underneath).",
      "parentUuid": "6d07359f_48ddf7fe",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7477a3d3_cc7189a5",
        "filename": "rtc_base/socket.h",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-04-06T21:59:22Z",
      "side": 1,
      "message": "After the discussion in the design doc, PacketInfo is now contained in both PacketOptions as a packet travels down the stack to accumulate the stats and SentPacket that we signal from the bottom.",
      "parentUuid": "6d07359f_48ddf7fe",
      "revId": "ef03019e3eace52ba8cfdf0f5f6a663069069edf",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}