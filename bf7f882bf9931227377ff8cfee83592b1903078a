{
  "comments": [
    {
      "key": {
        "uuid": "e7f937d9_42b0e93a",
        "filename": "api/video/video_stream_encoder_observer.h",
        "patchSetId": 2
      },
      "lineNbr": 98,
      "author": {
        "id": 5234
      },
      "writtenOn": "2020-03-09T07:50:12Z",
      "side": 1,
      "message": "Please document. In particular, the precise meaning of the argument is unclear. I would have expected a scale factor or scaled-to resolution or something like that.",
      "range": {
        "startLine": 98,
        "startChar": 0,
        "endLine": 98,
        "endChar": 60
      },
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5a29067_903e291f",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 2
      },
      "lineNbr": 1122,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-06T16:42:08Z",
      "side": 1,
      "message": "If the encoder internally downscales the input resolution, is this always due to BW or could it do it for other reasons as well (e.g. CPU)?",
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c1b9944_e466fe50",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 2
      },
      "lineNbr": 1122,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-06T20:09:33Z",
      "side": 1,
      "message": "Bad quality (i.e. insufficient bandwidth) is the only known to me scaling reason in the encoder. It\u0027s essentially the QP scaler, but implemented internally by libvpx vp9 encoder.",
      "parentUuid": "f5a29067_903e291f",
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e72b683f_c7a039df",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 2
      },
      "lineNbr": 1122,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-06T20:11:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6c1b9944_e466fe50",
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6744ac19_b4dac0d3",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 2
      },
      "lineNbr": 1126,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-06T16:42:08Z",
      "side": 1,
      "message": "In simulcast if we turn of layers, is it true that we don\u0027t report being quality limited neither in the spec-compliant getStats() API or if you look at legacy adapt counters?\n\nShould we file a bug and add a TODO? |bw_limited_resolution| is just one of the pieces.",
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4812aa10_0d0fdede",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 2
      },
      "lineNbr": 1126,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-06T20:09:33Z",
      "side": 1,
      "message": "No, we report it as bandwidth limited if we turn off layers. The |bw_limited_layers_| is made explicitly for that. It\u0027s wired for both legacy and standard APIs",
      "parentUuid": "6744ac19_b4dac0d3",
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70c8d010_2296e358",
        "filename": "video/send_statistics_proxy.cc",
        "patchSetId": 2
      },
      "lineNbr": 1126,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-03-06T20:11:38Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4812aa10_0d0fdede",
      "revId": "bf7f882bf9931227377ff8cfee83592b1903078a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}