{
  "comments": [
    {
      "key": {
        "uuid": "6521c75f_39f3edf9",
        "filename": "api/media_transport_interface.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T18:45:30Z",
      "side": 1,
      "message": "Why not return an empty string here?  IMHO we should do that and DCHECK that it\u0027s not empty when it\u0027s actually used (and of course delete the default implementation as soon as we can).",
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ec68f7b_5da0fb68",
        "filename": "api/media_transport_interface.cc",
        "patchSetId": 4
      },
      "lineNbr": 65,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-26T20:09:10Z",
      "side": 1,
      "message": "No preference, to me it\u0027s ephemeral code anyway. We will add a check that it can\u0027t be empty, as you mention. Done.",
      "parentUuid": "6521c75f_39f3edf9",
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5009952_37a58dba",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T19:06:32Z",
      "side": 1,
      "message": "If we remove this, how are we going to set the PSK on the caller?",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 59
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2711714_270b1713",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-26T20:09:10Z",
      "side": 1,
      "message": "Quartc Media Transport should generate its own preshared key internally moving forward, and simply put it in the GetCallersConfig(). This way nothing can mess it up or reuse it (because the code outside doesn\u0027t get to see pre-shared key standalone).\n\nWDYT?\n\n(removing the comment for now)",
      "parentUuid": "e5009952_37a58dba",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 59
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "581aa860_caea3385",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T22:07:04Z",
      "side": 1,
      "message": "I think that relies on encrypted signaling.  So does SDES, where we get the PSK today.  But there might be other/better models for getting a PSK.  Let\u0027s not box ourselves in too quickly.\n\nLet\u0027s take further discussion offline.",
      "parentUuid": "e2711714_270b1713",
      "range": {
        "startLine": 72,
        "startChar": 0,
        "endLine": 72,
        "endChar": 59
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b1ebcadb_8ef1680f",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T18:45:30Z",
      "side": 1,
      "message": "I\u0027m not sure how I feel about naming this callers_config.  It\u0027s really a serialized blob of supported transport parameters.  It\u0027s real semantic is more like \"remote supported transport parameters\" (with the getter below returning \"supported transport parameters\").\n\nThe fact that it comes from the caller and goes to the callee feels like a prescription of what the SDP layer should do, rather than a description of what the property is and should contain.\n\nI think it\u0027s pretty natural for signaling to start out by creating a transport with no remote transport parameters (the offerer doesn\u0027t know them) and passing the local transport parameters to the answerer (which can then apply them as remote parameters).\n\nBut I don\u0027t think we need to mandate it.  What if, for example, we need to support swapping perspectives during the signaling flow?  We already know of one case where the callee generates a new offer (ICE restart), though in that case we don\u0027t need to reset media transports.  Could there be cases where we *do* need to reset media transports?\n\nI don\u0027t know if it will happen, but I\u0027d rather use generic, descriptive names in the interface that aren\u0027t too prescriptive about a particular mode of operation.\n\ntl;dr I\u0027d prefer to name this something like `remote_supported_transport_parameters` (or, if that\u0027s too long, maybe just `remote_transport_parameters`.",
      "range": {
        "startLine": 77,
        "startChar": 30,
        "endLine": 77,
        "endChar": 44
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5790221b_12d94240",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-26T20:09:10Z",
      "side": 1,
      "message": "Agreed. Done",
      "parentUuid": "b1ebcadb_8ef1680f",
      "range": {
        "startLine": 77,
        "startChar": 30,
        "endLine": 77,
        "endChar": 44
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2c2b4a1b_874a7505",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T18:45:30Z",
      "side": 1,
      "message": "Are there ever cases when the perspectives need to switch?  For example, can the callee reject an offer and generate a new one with different parameters?",
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ce9d4a7_324b57a4",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-26T20:09:10Z",
      "side": 1,
      "message": "I put some thought into it and decided that it\u0027s not a scenario we have to worry about now.\nOnce we start the connection, the perspectives shouldn\u0027t change. If we restart the connection, maybe the perspective could change... but: shouldn\u0027t we recreate a new ICE?\n\nAs long as the same ICE is used, we don\u0027t want to mix packets from different perspectives. We would need more overhead (e.g. connection id) to differentiate the packets, etc.\n\nAlso, I think that at this point you cannot \"reject\" the offer and generate a new one. This would slow down the connection setup time and is impractical. Even if the standard allows this, at least for now we don\u0027t have to worry about it, IMO.",
      "parentUuid": "2c2b4a1b_874a7505",
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c7aac6_c046c0cc",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 200,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T22:07:04Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3ce9d4a7_324b57a4",
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afcd5541_b01e282e",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T18:45:30Z",
      "side": 1,
      "message": "As with naming above, I\u0027d probably call this GetSupportedTransportParameters() or GetTransportParameters().",
      "range": {
        "startLine": 208,
        "startChar": 38,
        "endLine": 208,
        "endChar": 54
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29eb95bb_24b58cfe",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 208,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-26T20:09:10Z",
      "side": 1,
      "message": "Done. I called it GetTransportParametersOffer.",
      "parentUuid": "afcd5541_b01e282e",
      "range": {
        "startLine": 208,
        "startChar": 38,
        "endLine": 208,
        "endChar": 54
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "817fd374_577b9c14",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 365,
      "author": {
        "id": 5599
      },
      "writtenOn": "2019-02-26T18:45:30Z",
      "side": 1,
      "message": "Nit: typo for caller",
      "range": {
        "startLine": 365,
        "startChar": 23,
        "endLine": 365,
        "endChar": 28
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b437d6ba_04d97921",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 365,
      "author": {
        "id": 7704
      },
      "writtenOn": "2019-02-26T20:09:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "817fd374_577b9c14",
      "range": {
        "startLine": 365,
        "startChar": 23,
        "endLine": 365,
        "endChar": 28
      },
      "revId": "9e450a7700ce5dfe8c7ea941f27cc2180d4ff5aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}