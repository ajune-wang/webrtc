{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f1189b6f_ee798703",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5053
      },
      "writtenOn": "2022-03-15T21:55:09Z",
      "side": 1,
      "message": "Removing myself as a reviewer since I\u0027m not familiar with the code in question, though you can add me back if you need an LGTM stamp for api/ after other reviewers have approved",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c442f4c1_195d3f98",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-03-15T22:07:00Z",
      "side": 1,
      "message": "Adding the reviewers for the (recent) YUV444 patch and moving myself to CC.\nNote: the YUV444 patch got rolled back 3 times ... this might fare more easily?",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c040a97_7d2c1f54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-03-16T09:32:50Z",
      "side": 1,
      "message": "I have some minor comments about the code.\n\nHowever, this patch, unlike the I444 patch before it, doesn\u0027t expose the new format via the SDP negotiation, it only adds the support. Do you plan to add it in a follow-up CL?",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f595cf7e_05ea6ac9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T09:48:37Z",
      "side": 1,
      "message": "This one is tricky. \n\nWhich profile is exposed for supporting I444? In theory, any profile exposed to support I444 would also support I422, so I don\u0027t think that we need to do anything in that regard.\n\nI have also a patch for adding 10 bit support (I010 and I210), that would require exposing Hi10P and/or Hi422P.",
      "parentUuid": "0c040a97_7d2c1f54",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "899a3bb6_71aef60f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-03-16T10:25:35Z",
      "side": 1,
      "message": "There is 4:4:4 high predictive profile. https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/video_codecs/h264_profile_level_id.h;l\u003d28;drc\u003d48a3eaf6f8ae83f7c99851f0b9088365e3edf6e6\n\nSupporting 4:4:4 doesn\u0027t imply 4:2:2. Right now, before this patch is landed, all the webrtc clients can receive I444, but not I422, because there are explicit checks for AVPixelFormat in the code.\n\nIf advertising kProfilePredictiveHigh444 implies ability to decode I422, then current webrtc implementation is terribly broken. But I suppose this isn\u0027t the case, since the standard does mention 4:2:2 profiles explicitly. Also, unlike coding primitives in different profiles, where you can advertise that you support something and just not use it in the bitstream, 4:2:2 pixel format isn\u0027t a subset of 4:4:4 pixel format. You can\u0027t advertise 4:4:4 but send 4:2:2 instead.\n\nThere seems to be too many profiles planned. We need to do something about the way SDP for H264 is generated to ensure that all these decode-only profiles are not added to default SDP but aren\u0027t filtered out if the remote client advertises it. Otherwise there will be not enough payload types to fit everything.\n\nhta@ it\u0027s how the things work now with SDP, right?\n\nAnyway, it\u0027s not blocking this CL from landing. It\u0027s just that no one on the internet can figure out if their clients can decode 422 or not. In theory people can just assume that most of their users are on a recent enough version of chrome, and everyone else should suffer, but that\u0027s not a best approach to interoperability. It will effectively make 422 format unusable. \n\nPlease follow the https://webrtc-review.googlesource.com/c/src/+/251303 to add a new profile in follow-up CL.",
      "parentUuid": "f595cf7e_05ea6ac9",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "820c333f_ca80f875",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T10:40:33Z",
      "side": 1,
      "message": "AFAIK h264 profiles are incremental:\n\nHigh 4:4:4 Predictive Profile (Hi444PP, 244)\nThis profile builds on top of the High 4:2:2 Profile, supporting up to 4:4:4 chroma sampling, up to 14 bits per sample, and additionally supporting efficient lossless region coding and the coding of each picture as three separate color planes.\n\nSo, yes, current webrtc implementation is terribly broken spec wise in this regard ðŸ˜Š\n\nNote that you would need to support not only 422, but also 10, 12 and 14 bits for 4:2:0, 4:2:2 and 4:4:4.\n\nI have a patch ready for adding 4:2:0 and 4:2:2 10 bits, which will make it fully compliant with Hi422P and Hi10P though.\n\nI agree about not adding all the profiles by default to the SDP, and only if they are enabled by the app.\n\nI have a patch also for vp9 profile 1 and 3 ready (both encoding and decoding) and the sdp is HUGE.",
      "parentUuid": "899a3bb6_71aef60f",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9d7e9d8_aa387140",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2022-03-17T06:39:16Z",
      "side": 1,
      "message": "the gremlins are gone hopefully. If this adds a new profile level id updating video_engine\u0027s IsCodecValidForLowerRange is advisable",
      "parentUuid": "c442f4c1_195d3f98",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc17d10a_61e98496",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-16T09:49:06Z",
      "side": 1,
      "message": "Is this conversion really useful? If I understand it correctly, it is expected to just duplicate each row of the input U and V planes?",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61126c50_6df8e247",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T10:15:56Z",
      "side": 1,
      "message": "It is not used at the moment, but will be required on the encoder side if the input is not I422 (for example for supporting vp9 profile\u003d1 encoding, which I also have a patch for)",
      "parentUuid": "dc17d10a_61e98496",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "789e3b6c_b34c0acd",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-16T10:51:53Z",
      "side": 1,
      "message": "I would suggest leaving it out for now, and add when it is needed.\n\nI\u0027d be a bit surprised if we have encoders that support I422, but not I420? \n\nMy mental model has been that all encoders are expected to support I420 (hence the ToI420 method), and that encoder support for other formats is useful mainly if the camera generates something different than I420, and the encoder can use that directly, without conversion to I420.",
      "parentUuid": "61126c50_6df8e247",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ae905bb_a0eb7697",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T11:02:07Z",
      "side": 1,
      "message": "I wouldn\u0027t argue that, but currently it is not done like that on the encoder side.\n\nFor example in vp9 encoder, the buffer is always converted to I010 if it is not already in that format when using profile 2\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/vp9/libvpx_vp9_encoder.cc;l\u003d1134\n\nSo in my patch that adds profile 1 and 3, i use the same schema and convert the buffers to I422 or I210 if they are not in that format.",
      "parentUuid": "789e3b6c_b34c0acd",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4965504f_22117e8f",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-16T12:16:59Z",
      "side": 1,
      "message": "I\u0027m not familiar with those profiles. Maybe it has to be done in that way. The potential problems I see:\n\n1. I\u0027m worried we\u0027ll end up with n^2 conversion functions for n supported pixel formats.\n\n2. Copying input I420 into a format with more data per pixel sounds like a waste of memory bytes.\n\nI\u0027d still prefer to leave conversion out until the code that needs that conversion is added, but I don\u0027t have a strong opinion either way.",
      "parentUuid": "9ae905bb_a0eb7697",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64ccb3a6_68edd637",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 39,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T12:23:31Z",
      "side": 1,
      "message": "I agree that converting back and forth the different profile does not make sense at all. However back and forth I420 makes sense IMHO, I would really prefer to keep it in as I will submit the next patches as soon as this one is merged.\n\nI also think that there would be a need of adding helper functions to avoid duplication of code, but I would prefer to do it on a different CL for making review/merge process easier",
      "parentUuid": "4965504f_22117e8f",
      "range": {
        "startLine": 38,
        "startChar": 0,
        "endLine": 39,
        "endChar": 80
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ecfcfd3_d868ebef",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-16T09:49:06Z",
      "side": 1,
      "message": "Please don\u0027t add deprecated functinos.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6a180104_5329faa8",
        "filename": "api/video/i422_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T10:15:56Z",
      "side": 1,
      "message": "ups, bad copy paste, removing it",
      "parentUuid": "7ecfcfd3_d868ebef",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 57,
        "endChar": 3
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fb98884e_50ff1255",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-16T09:49:06Z",
      "side": 1,
      "message": "Reference to definition of this format would be helpful. (Or brief description).",
      "range": {
        "startLine": 183,
        "startChar": 6,
        "endLine": 183,
        "endChar": 25
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4a4537ef_8a3aa6da",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 183,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T10:15:56Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "fb98884e_50ff1255",
      "range": {
        "startLine": 183,
        "startChar": 6,
        "endLine": 183,
        "endChar": 25
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d28179c0_8ba7b653",
        "filename": "common_video/video_frame_buffer_pool.cc",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-03-16T09:32:50Z",
      "side": 1,
      "message": "I422Buffer",
      "range": {
        "startLine": 168,
        "startChar": 59,
        "endLine": 168,
        "endChar": 69
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ff2cd33_2a7f0f3f",
        "filename": "common_video/video_frame_buffer_pool.cc",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T09:48:37Z",
      "side": 1,
      "message": "good catch",
      "parentUuid": "d28179c0_8ba7b653",
      "range": {
        "startLine": 168,
        "startChar": 59,
        "endLine": 168,
        "endChar": 69
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efdfc752_a51cdace",
        "filename": "common_video/video_frame_buffer_pool.cc",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T10:16:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ff2cd33_2a7f0f3f",
      "range": {
        "startLine": 168,
        "startChar": 59,
        "endLine": 168,
        "endChar": 69
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebe04fbb_a446b06a",
        "filename": "common_video/video_frame_buffer_pool.cc",
        "patchSetId": 2
      },
      "lineNbr": 168,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T10:19:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d28179c0_8ba7b653",
      "range": {
        "startLine": 168,
        "startChar": 59,
        "endLine": 168,
        "endChar": 69
      },
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "213482b7_00412ef5",
        "filename": "modules/video_coding/codecs/h264/h264_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 429,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-03-16T09:32:50Z",
      "side": 1,
      "message": "nit: This is now quite a long chain of if-else. Consider changing to switch-case instead.",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b14867d0_1146b8f4",
        "filename": "modules/video_coding/codecs/h264/h264_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 429,
      "author": {
        "id": 5963
      },
      "writtenOn": "2022-03-16T09:48:37Z",
      "side": 1,
      "message": "will do",
      "parentUuid": "213482b7_00412ef5",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e4361a7_c0ca3c3f",
        "filename": "modules/video_coding/codecs/h264/h264_decoder_impl.cc",
        "patchSetId": 2
      },
      "lineNbr": 468,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-03-16T09:32:50Z",
      "side": 1,
      "message": "nit: ditto. Consider switch-case.",
      "revId": "b5cc4c90686d8af84e58236322fbd0bd77a5ae69",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}