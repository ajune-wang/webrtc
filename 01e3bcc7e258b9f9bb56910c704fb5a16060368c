{
  "comments": [
    {
      "key": {
        "uuid": "3647dd4d_9188c2ec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-21T02:30:15Z",
      "side": 1,
      "message": "Hi Ilya, could you please take a look?",
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9be7bf6_fff81fc0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-09-21T08:38:51Z",
      "side": 1,
      "message": "Thank you for working on this. Please be in touch with eshr@ as he is currently implementing exactly the same thing.\n\n+eshr@, please review: How does this CL intersect with your work?\n",
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d52a8c3c_fb57fc28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-09-21T09:01:28Z",
      "side": 1,
      "message": "Thanks for the contribution Zhaoliang! \n\nAdded some comments above. Please try to add some tests for NV12 buffers going through the encoders, as well as proving the switch from I420 frames to NV12 (and back again) works. ",
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dedadf21_3d799ed4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "Hi Evan, how can we test both I420 and NV12 buffers for encoding? now I changed the kI420 to kNV12 for VideoCodecUnitTest at https://webrtc-review.googlesource.com/c/src/+/183840/4..5/modules/video_coding/codecs/test/video_codec_unittest.cc#78.",
      "parentUuid": "d52a8c3c_fb57fc28",
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6804b916_456975d7",
        "filename": "api/video/nv12_buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-09-21T14:55:10Z",
      "side": 1,
      "message": "This function seems inefficient, as it has to merge the planes back to NV12 after scaling. Have you tested the power impact when the input needs to be scaled?",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 112,
        "endChar": 11
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bfe9766c_c45d55c8",
        "filename": "api/video/nv12_buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "When the frame need scaling, the power difference between convertToI420Scale and NV12Scale is very small, almost no difference can be seen..., Later on, I want to try offloading the NV12Scale to gpu service(vaapi for cros) on the chromium side.",
      "parentUuid": "6804b916_456975d7",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 112,
        "endChar": 11
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "302726ab_10d1ba22",
        "filename": "api/video/nv12_buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-09-23T13:23:01Z",
      "side": 1,
      "message": "Currently there\u0027s no difference, because NV12Scale mostly converts to I420 under the hood.\n\nUtilising gpu service is a big and complicated project in itself.\n\nCurrently, for one incoming video frame, there might be up to 3 downscale calls (one due to adaptations in WebrtcVideoTrackSource) and two other for simulcast (SimulcastAdapter and LibvpxVp8Encoder).\n\nThe first approximation might be like that:\n1) a new Scale() interface should be added to VideoFrameBuffer and webrtc should use it.\n2) WebrtcVideoFrameAdapter makes calls to GPU service to perform the scaling.\n\nBut having up to 3 IPC roundtrips might add enough overhead to completely remove all benefits (comparing to optimised NV12Scale, which is being worked on).\n\nBut discussion is ongoing on a better solution and we are working on it.",
      "parentUuid": "bfe9766c_c45d55c8",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 112,
        "endChar": 11
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "950f2b89_437c1815",
        "filename": "api/video/nv12_buffer.cc",
        "patchSetId": 4
      },
      "lineNbr": 112,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-24T02:24:39Z",
      "side": 1,
      "message": "That approximation sounds great!!!, we have implemented a Mojo ImageProcessor interface as part of the gpu service, this would allow us to use ImageProcessor(https://source.chromium.org/chromium/chromium/src/+/master:media/gpu/chromeos/image_processor.h) do frame processing on any processes, the original intention of this is that we want to offload the GMB buffer rotation to GPU process from the browser process(https://bugs.chromium.org/p/chromium/issues/detail?id\u003d1031436), can we use the ImageProcessor to do frame scaling in WebRtcVideoFrameAdapter. but the IP is restricted to cros, I\u0027m not sure can we move it to all platforms? now the IP has three backend(V4l2, Vaapi, Libyuv).",
      "parentUuid": "302726ab_10d1ba22",
      "range": {
        "startLine": 112,
        "startChar": 2,
        "endLine": 112,
        "endChar": 11
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8bc0a51a_bc8b9ea3",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-09-21T08:38:51Z",
      "side": 1,
      "message": "I don\u0027t like the idea of adding another set ToXXX methods.\n\nWhat you are doing (checking if the kNative frame is NV12 under the hood) can be done with GetNV12 method. (See the comment on GetI420 and do the similar thing).\n\nCould you please remove this method and udpate GetNV12 instead?",
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37875702_e09639e3",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bc0a51a_bc8b9ea3",
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7ca4cc3_5adfe0f8",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-09-21T08:38:51Z",
      "side": 1,
      "message": "You shouldn\u0027t override this here.\nToI420() must always return converted buffer as this is the fallback to default buffer format. So it has to be undefined to force the actual implementation of the NV12BufferInterface to implement specific conversion.\n\nWell, if you want, you can override it here, but the default implementation must call libyuv::NV12toI420, as DataY, DataUV and so on are available here. But the only benefit here would be if we expect to have a lot of NV12BufferInterface implementations, which is probably not the case.",
      "range": {
        "startLine": 216,
        "startChar": 42,
        "endLine": 216,
        "endChar": 48
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6cab45b5_733aedf6",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-09-21T09:01:28Z",
      "side": 1,
      "message": "Yes ToI420 can not return nullptr as I420 is used in other codecs and for scaling in other places.",
      "parentUuid": "c7ca4cc3_5adfe0f8",
      "range": {
        "startLine": 216,
        "startChar": 42,
        "endLine": 216,
        "endChar": 48
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ae50b16_58c3b545",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 216,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6cab45b5_733aedf6",
      "range": {
        "startLine": 216,
        "startChar": 42,
        "endLine": 216,
        "endChar": 48
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc6bcce9_00fb90c4",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 217,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-09-21T08:38:51Z",
      "side": 1,
      "message": "This one goes away, and GetNV12() method can be overridden by WebRtcVideoFrameAdapter, as GetI420() already is.",
      "range": {
        "startLine": 217,
        "startChar": 42,
        "endLine": 217,
        "endChar": 48
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "604ce954_784ecd57",
        "filename": "api/video/video_frame_buffer.h",
        "patchSetId": 4
      },
      "lineNbr": 217,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc6bcce9_00fb90c4",
      "range": {
        "startLine": 217,
        "startChar": 42,
        "endLine": 217,
        "endChar": 48
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c2dc632_8ed0e551",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 961,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-09-21T09:01:28Z",
      "side": 1,
      "message": "Needs to go back to I420 when a frame with non-NV12 comes in. It would be also good to log something here so we know when the frame type has switched. If the log is spammy then there is a real problem because the frame type shouldn\u0027t change very often.",
      "range": {
        "startLine": 960,
        "startChar": 6,
        "endLine": 961,
        "endChar": 24
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "111dff9e_e3bc39cf",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 961,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7c2dc632_8ed0e551",
      "range": {
        "startLine": 960,
        "startChar": 6,
        "endLine": 961,
        "endChar": 24
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eeab5d2f_b88da9f3",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 969,
      "author": {
        "id": 8683
      },
      "writtenOn": "2020-09-21T09:01:28Z",
      "side": 1,
      "message": "This flag should be the same as \n\n  raw_images_[0].fmt \u003d\u003d VPX_IMG_FMT_I420",
      "range": {
        "startLine": 969,
        "startChar": 4,
        "endLine": 969,
        "endChar": 22
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e04707e2_31e7dbbd",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 4
      },
      "lineNbr": 969,
      "author": {
        "id": 9741
      },
      "writtenOn": "2020-09-23T03:02:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eeab5d2f_b88da9f3",
      "range": {
        "startLine": 969,
        "startChar": 4,
        "endLine": 969,
        "endChar": 22
      },
      "revId": "01e3bcc7e258b9f9bb56910c704fb5a16060368c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}