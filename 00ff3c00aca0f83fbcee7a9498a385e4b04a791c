{
  "comments": [
    {
      "key": {
        "uuid": "4ef450fb_d100828f",
        "filename": "api/media_transport_interface.cc",
        "patchSetId": 6
      },
      "lineNbr": 87,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T21:39:05Z",
      "side": 1,
      "message": "By default, should it call the other overload of CreateMediaTransport with the is_caller value from settings?",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d3eae2_f0341ef1",
        "filename": "api/media_transport_interface.cc",
        "patchSetId": 6
      },
      "lineNbr": 87,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-26T21:53:48Z",
      "side": 1,
      "message": "Given how short-lived this will be, I\u0027d rather return null, than leave illusion of working :)\n\nPlus we expect this to be implemented by all implementers. I was even considering returning RTCError here.",
      "parentUuid": "4ef450fb_d100828f",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1c17c21_aaad51b5",
        "filename": "api/media_transport_interface.cc",
        "patchSetId": 6
      },
      "lineNbr": 87,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T22:03:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "92d3eae2_f0341ef1",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc21c14a_e11fa616",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T21:39:05Z",
      "side": 1,
      "message": "Any particular reason to make it final?",
      "range": {
        "startLine": 39,
        "startChar": 30,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a8090e1d_548c7f82",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-26T21:53:48Z",
      "side": 1,
      "message": "You can always \u0027unfinalize\u0027 it and it\u0027s backward compatible, while you cannot make it final once it wasn\u0027t final (without breaking compatibility).\n\nIt seems that in webrtc they prefer to mark most things final rather than not.\n\nI have no strong preference.",
      "parentUuid": "cc21c14a_e11fa616",
      "range": {
        "startLine": 39,
        "startChar": 30,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9802aced_31a57a15",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 39,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T22:03:22Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a8090e1d_548c7f82",
      "range": {
        "startLine": 39,
        "startChar": 30,
        "endLine": 39,
        "endChar": 35
      },
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79e8933f_d528533f",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T21:39:05Z",
      "side": 1,
      "message": "Why do we declare these, only to define them `\u003d default` in the cc file?  Can\u0027t we just leave them out entirely?",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 41,
        "endChar": 28
      },
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bcf7438f_30f2aed9",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-26T21:53:48Z",
      "side": 1,
      "message": "chrome validator complains that this is a complex type and must have a constructor defined.\nChrome style complains if the definition and declaration are together, and requires you to separate to a separate file.\n\nIf I remove these two entirely:\n../../api/media_transport_interface.h:39:1: error: [chromium-style] Complex class/struct needs an explicit out-of-line constructor.\nstruct MediaTransportSettings final {\n^\n../../api/media_transport_interface.h:39:1: error: [chromium-style] Complex class/struct needs an explicit out-of-line destructor.\n2 errors generated.\n\n\nIf I inline the implementation (that is \u003d default in .h):\n../../api/media_transport_interface.h:40:3: error: [chromium-style] Complex constructor has an inlined body.\n  MediaTransportSettings() \u003d default;\n  ^",
      "parentUuid": "79e8933f_d528533f",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 41,
        "endChar": 28
      },
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d425e92d_f42016ae",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 41,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T22:03:22Z",
      "side": 1,
      "message": "It seems that chromium\u0027s linter arbitrarily deems this \"complex\" because of the templated member variable.  Since I think this is mostly about code size, that\u0027s probably ok.  If the linter wants it this way, let\u0027s just do it this way.",
      "parentUuid": "bcf7438f_30f2aed9",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 41,
        "endChar": 28
      },
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ff2d6be_f3db74df",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T21:39:05Z",
      "side": 1,
      "message": "I\u0027d probably phrase this a bit differently, something like \"must be set if a pre-shared key is used for the call\".",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28789184_8489921e",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 47,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-26T21:53:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ff2d6be_f3db74df",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d011833f_372bc5d7",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 269,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-10-26T21:39:05Z",
      "side": 1,
      "message": "Should this have a TODO to delete the default implementation once all implementations override it?",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08c96f44_4879c591",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 6
      },
      "lineNbr": 269,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-26T21:53:48Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "d011833f_372bc5d7",
      "revId": "00ff3c00aca0f83fbcee7a9498a385e4b04a791c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}