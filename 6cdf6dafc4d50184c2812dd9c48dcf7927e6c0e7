{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9e88d280_e6d6d827",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-03-03T10:42:16Z",
      "side": 1,
      "message": "Questioning the class usage. Code looks straightforward.",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16d45e2a_bf5a48bd",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-03-03T10:42:16Z",
      "side": 1,
      "message": "For symmetry and sanity, should this take a TransformableAudioFrameInterface?\n\nAs it is, calling this API with a TransformableVideoFrameInterface-derived type would not be caught by the compiler.",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "571144f4_baf4359c",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-03T12:00:41Z",
      "side": 1,
      "message": "Unfortunately, the webrtc_frame_ object that is passed to this function is only a TransformableFrameInterface [https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/peerconnection/rtc_encoded_audio_frame_delegate.h;drc\u003d68f83292c7f67163356c548a138ac2f187d8ba36;l\u003d44]\n\nThe same is true for the TransformableOutgoingAudioFrame that is returned from the function [https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/audio/channel_send_frame_transformer_delegate.cc;drc\u003da3361ff2f577b608a3bcddfa20f8248377c82002;l\u003d18]\n\nIt looks at least somewhat involved to make it so TransformableAudioFrameInterface is used in these places, but maybe it worth making an attempt at it?",
      "parentUuid": "16d45e2a_bf5a48bd",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea540d93_7e0dfbf2",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-03T12:17:58Z",
      "side": 1,
      "message": "I assume the reason that RTCEncodedAudioFrameDelegate::webrtc_frame_ is a TransformableFrameInterface because TransformableOutgoingAudioFrame is it.\n\nAdding a functional GetHeader()-implementation to TransformableOutgoingAudioFrame as required by the TransformableAudioFrameInterface seems daunting. (The corresponding TransformableVideoFrameInterface does not have a GetHeader()-method.)\n\nAn alternative to implementing TransformableOutgoingAudioFrame::GetHeader() could be to have the following hierarchy: \n\nTranformableFrameInterface\n^\n|\nTranformableAudioFrameInterface \u003c- TransformableOutgoingAudioFrame\n^\n|\nTransformableIncomingAudioFrameInterface \u003c- TransformableIncomingAudioFrame\n\nwhere only the incoming interface/implementation classes have the GetHeader()-function? (I guess this would also require some intermediary steps in order to deprecate and remove the GetHeader()-method from the TransformableAudioFrameInterface.)",
      "parentUuid": "571144f4_baf4359c",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b10aee5c_d1a9fe82",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-03T12:23:08Z",
      "side": 1,
      "message": "Giving it some more thought, I believe we only need to support cloning of TranformableIncomingAudioFrame objects at this point, so perhaps we can cast to TransformableAudioFrameInterface before calling CloneAudioFrame?",
      "parentUuid": "ea540d93_7e0dfbf2",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "593a8118_bb2c2c66",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-03T12:56:07Z",
      "side": 1,
      "message": "Proof-of-concept-change for casting on the chromium side: https://chromium-review.googlesource.com/c/chromium/src/+/4282538/3",
      "parentUuid": "b10aee5c_d1a9fe82",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4425c1e_913b9e85",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-03-03T15:56:35Z",
      "side": 1,
      "message": "A couple of layers up the stack, we know it\u0027s an audio frame, and one branch of the IF already casts it to audio:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/renderer/modules/peerconnection/rtc_encoded_audio_underlying_source.cc;drc\u003d9c380e842c2cd103807c0b4bfcf210ec629785eb;l\u003d84\n\nLet\u0027s plumb it to audio all the way down.",
      "parentUuid": "593a8118_bb2c2c66",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d70a24e1_e55b570f",
        "filename": "api/frame_transformer_factory.h",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-06T08:08:27Z",
      "side": 1,
      "message": "Ok changing to TranformableAudioFrameInterface.\n\nThe type-info is lost when assigning to MockTransformableAudioFrame::webrtc_frame_, so we will need to cast again when calling CloneAudioFrame like in the above proof-of-concept (or do some other little dance to retain the type info), but let\u0027s worry about that in the chrome CL.",
      "parentUuid": "a4425c1e_913b9e85",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cfa3193_1196891d",
        "filename": "audio/channel_send_frame_transformer_delegate.cc",
        "patchSetId": 10
      },
      "lineNbr": 136,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-03-03T10:42:16Z",
      "side": 1,
      "message": "If we make the function take a TAFI, we don\u0027t need this cast.",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "96588ff0_c33df242",
        "filename": "audio/channel_send_frame_transformer_delegate.cc",
        "patchSetId": 10
      },
      "lineNbr": 136,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-06T08:08:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4cfa3193_1196891d",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39376dea_631275c5",
        "filename": "modules/rtp_rtcp/source/frame_transformer_factory_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-03-03T10:42:16Z",
      "side": 1,
      "message": "MockTransformableAudioFrame already exists...",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "730ba0ac_209a0bf3",
        "filename": "modules/rtp_rtcp/source/frame_transformer_factory_unittest.cc",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 20299
      },
      "writtenOn": "2023-03-06T08:08:27Z",
      "side": 1,
      "message": "Alas, the only one I find is outside the webrtc directory: https://crsrc.org/c/third_party/blink/renderer/modules/peerconnection/testing/mock_transformable_audio_frame.h?q\u003dMockTransformableAudioFrame\u0026ss\u003dchromium\n\nAdded MockTransformableAudioInterface in api/test next to the MockTranformableVideoInterface.",
      "parentUuid": "39376dea_631275c5",
      "revId": "6cdf6dafc4d50184c2812dd9c48dcf7927e6c0e7",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}