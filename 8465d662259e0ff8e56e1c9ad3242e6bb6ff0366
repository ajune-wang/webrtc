{
  "comments": [
    {
      "key": {
        "uuid": "d4c1704f_adcc07c9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 5100
      },
      "writtenOn": "2018-12-05T08:39:50Z",
      "side": 1,
      "message": "Slightly wonky format for this comment.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 9,
        "endChar": 41
      },
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7fc33453_486a5179",
        "filename": "api/audio_codecs/audio_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-12-03T16:28:50Z",
      "side": 1,
      "message": "Actually, it looks like what we should do is override ParsePayload instead. These two are legacy methods that someone should clean away at some point. (The basic idea there is that NetEQ wants to parse packets immediately and put them in a queue, and then decode them on-demand. In order to make this type safe and nice, we represent the parsed-but-not-yet-decoded packets as instances of EncodedAudioFrame.)\n\n+CC Henrik and Oskar, to verify I\u0027m not making this up. I haven\u0027t touched this code in a while...",
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0ff22d61_3f996c8e",
        "filename": "api/audio_codecs/audio_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-12-03T16:59:06Z",
      "side": 1,
      "message": "All of this is made up! What you\u0027re saying is correct, though. :)\nIf you need to change the behavior of Decode/DecodeRedundant, you should override DecodeInternal och DecodeRedundantInternal, below, instead. I don\u0027t see why changing the old APIs wouldn\u0027t work, but since we want to get rid of \u0027em, don\u0027t use \u0027em!",
      "parentUuid": "7fc33453_486a5179",
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71b917f8_4a2133ee",
        "filename": "api/audio_codecs/audio_decoder.h",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-12-03T18:29:22Z",
      "side": 1,
      "message": "He wants to make a forwarding wrapper, and with the current state of the interface, his DecodeInternal has to call the wrapee\u0027s Decode, which is nontrivial because it has to reconstruct implicit parameters.",
      "parentUuid": "0ff22d61_3f996c8e",
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b562fbee_fdad1c5b",
        "filename": "modules/audio_coding/neteq/neteq_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 535,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-03T14:20:16Z",
      "side": 1,
      "message": "This is where the test fails.",
      "range": {
        "startLine": 532,
        "startChar": 0,
        "endLine": 535,
        "endChar": 37
      },
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45d7e9c3_0955d3ad",
        "filename": "modules/audio_coding/neteq/neteq_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 535,
      "author": {
        "id": 5100
      },
      "writtenOn": "2018-12-05T08:39:50Z",
      "side": 1,
      "message": "Does your new decoder produce the same number of samples in each decode call as the old code did?",
      "parentUuid": "b562fbee_fdad1c5b",
      "range": {
        "startLine": 532,
        "startChar": 0,
        "endLine": 535,
        "endChar": 37
      },
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75c64c3f_2b31846f",
        "filename": "modules/audio_coding/neteq/neteq_impl_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 535,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-12-05T14:47:57Z",
      "side": 1,
      "message": "I\u0027m running the failing test as \n\n$ ./out/Debug/modules_unittests --logs --gtest_filter\u003dNetEqImplTest.VerifyTimestampPropagation\n\nI\u0027ve added a debug printout in CountingSamplesDecoder::DecodeInternal, and both before and after my cl I see a single call, and at entry, I have next_value_ \u003d\u003d 1 and encoded_len_ \u003d\u003d 80.",
      "parentUuid": "45d7e9c3_0955d3ad",
      "range": {
        "startLine": 532,
        "startChar": 0,
        "endLine": 535,
        "endChar": 37
      },
      "revId": "8465d662259e0ff8e56e1c9ad3242e6bb6ff0366",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}