{
  "comments": [
    {
      "key": {
        "uuid": "03c0a894_e16bfb6d",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-10-03T18:10:21Z",
      "side": 1,
      "message": "I thought Encoded image is in common_video/include/video_frame.h",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "468ee35329b64a4745b322dddbbb6fb745e926be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3607103d_9a9b2030",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-03T18:19:34Z",
      "side": 1,
      "message": "oops, you are right. I noticed \u0027video_frame.h\u0027 and assumed there is one...",
      "parentUuid": "03c0a894_e16bfb6d",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "468ee35329b64a4745b322dddbbb6fb745e926be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a8408e0_3eb766de",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-03T20:03:27Z",
      "side": 1,
      "message": "resolved. I decided to forward declare it; Adding the header was creating a circular dependency.",
      "parentUuid": "3607103d_9a9b2030",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "468ee35329b64a4745b322dddbbb6fb745e926be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3887fd70_a0a4f957",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-10-04T06:43:27Z",
      "side": 1,
      "message": "What was the dependency cycle?",
      "parentUuid": "6a8408e0_3eb766de",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "468ee35329b64a4745b322dddbbb6fb745e926be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "045231cc_b440eae0",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-10-04T11:27:40Z",
      "side": 1,
      "message": "Trying to compile this, I see that a forward declaration isn\u0027t enough, since we have a non-pointer EncodedImage member in MediaTransportEncodedVideoFrame. Not sure how to resolve the dependency cycle, but after some experiments, I think it should work to let \nlibjingle_peerconnection_api depend on common_video (even if non-api dependencies are discourage), and break the dependency cycle by deleting the dependence of common_video on module_api, and delete the corresponding include of module_common_types.h, which appears unused.\n\nIn addition, I get chromium-style compilation warnings on both MediaTransportEncodedAudioFrame and MediaTransportEncodedVideoFrame:\n\n[chromium-style] Complex constructor has an inlined body.\n[chromium-style] Complex class/struct needs an explicit out-of-line destructor.",
      "parentUuid": "3887fd70_a0a4f957",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "468ee35329b64a4745b322dddbbb6fb745e926be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44fad059_3323eb68",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 1
      },
      "lineNbr": 26,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-04T15:57:32Z",
      "side": 1,
      "message": "+1 I see the same now, when I started using it.\n\nBtw how are you compiling this to test it? (we should probably add unit tests for the interface / mocks).\n\nAnother alternative is to replace the webrtc::EncodedImage with std::unique_ptr\u003cwebrtc::EncodedImage\u003e. unique_ptr allows for incomplete types.",
      "parentUuid": "045231cc_b440eae0",
      "range": {
        "startLine": 26,
        "startChar": 33,
        "endLine": 26,
        "endChar": 34
      },
      "revId": "468ee35329b64a4745b322dddbbb6fb745e926be",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}