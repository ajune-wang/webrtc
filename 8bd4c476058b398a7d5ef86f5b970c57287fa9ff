{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd63c077_a9bfaf44",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:48:42Z",
      "side": 1,
      "message": "Do want to crash in production when the contract is violated...\n",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2f9ae5d_bacd3257",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:49:21Z",
      "side": 1,
      "message": "Nearly there :-)\n",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3996cdd_9cc63515",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:48:42Z",
      "side": 1,
      "message": "This is a completely new class, right? Just using the same name?\n OK, maybe it looks tidier that way....",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58e5c149_0b6377a7",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-05-24T21:10:40Z",
      "side": 1,
      "message": "Added some comments.",
      "parentUuid": "c3996cdd_9cc63515",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea27789_10844924",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-05-25T07:32:12Z",
      "side": 1,
      "message": "It might be clearer with a new class name, over passing on void as the second template argument where it is used.\n\nAn alternative design: Replace the Default template argument with a std::function \nFunctionView (not entirely sure how that would work as a template argument though, maybe it has to be a constructor argument?), and then one can pass []{RTC_FATAL();} in the case that no default object should be constructed. And then it would be rather natural to add a second constructor accepting a unique_ptr.",
      "parentUuid": "58e5c149_0b6377a7",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dc8ea2c_287f5cba",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-05-25T14:43:04Z",
      "side": 1,
      "message": "I used your design, and it seems to work.\nNow we have three classes;\n1) `AlwaysValidPointer\u003cInterface, CreateFunc\u003e`: Generic version\n2) `AlwaysValidPointerWithDefault\u003cInterface, Default\u003e` \u003d `AlwaysValidPointer\u003cInterface, UniquePtrCreator\u003cDefault\u003e\u003e`: This is exactly the same as the behavior before this CL.\n3) `AlwaysValidPointerNoDefault\u003cInterface\u003e` \u003d `AlwaysValidPointer\u003cInterface, FatalCreator\u003cDefault\u003e\u003e`: That\u0027s what I want to use now.",
      "parentUuid": "cea27789_10844924",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5188585_a1b56a97",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:48:42Z",
      "side": 1,
      "message": "RTC_CHECK?",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4149242_7fbf0536",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 117,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-05-24T21:10:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5188585_a1b56a97",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a498b5fc_a4815dff",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:48:42Z",
      "side": 1,
      "message": "Add \"One of the arguments must be non-NULL\"?",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b10c849_81e30264",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-05-24T21:10:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a498b5fc_a4815dff",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3dd98e86_6af447ce",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 127,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:48:42Z",
      "side": 1,
      "message": "RTC_CHECK?",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32dee503_350c1dc5",
        "filename": "rtc_base/memory/always_valid_pointer.h",
        "patchSetId": 8
      },
      "lineNbr": 127,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-05-24T21:10:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3dd98e86_6af447ce",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a44b12f_afa7c845",
        "filename": "rtc_base/memory/always_valid_pointer_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-24T14:48:42Z",
      "side": 1,
      "message": "I\u0027d prefer this one to crash in production....",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0c6f1929_12b8414b",
        "filename": "rtc_base/memory/always_valid_pointer_unittest.cc",
        "patchSetId": 8
      },
      "lineNbr": 110,
      "author": {
        "id": 5634
      },
      "writtenOn": "2022-05-25T05:59:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a44b12f_afa7c845",
      "revId": "8bd4c476058b398a7d5ef86f5b970c57287fa9ff",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}