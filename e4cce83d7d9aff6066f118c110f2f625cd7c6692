{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6a6e2bbf_47d3f8bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-10-27T08:59:33Z",
      "side": 1,
      "message": "LGTM % \"can we add comments?\"\n\nAlso CC Harald for questions, because the existing behavior of our code base is surprising to me, but that is a separate issue from duplicate REDs that this CL fixes",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3cdde05f_6f5d8efe",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1067,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-10-27T08:59:33Z",
      "side": 1,
      "message": "Can you add a comment here? Suggestion\n```\n// Add this codec to the results.\n// If the codec is RED, only add it if it hasn\u0027t already been added.\n```",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bf0a474_c35f81cf",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1067,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-10-27T12:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3cdde05f_6f5d8efe",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e61fa3ff_f7b404c6",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1085,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-10-27T08:59:33Z",
      "side": 1,
      "message": "\u003e audio/red for opus gets enabled by having RED before the primary codec\n\nCan you confirm that this part is probably a bug compared to the spec, but not one we are currently interested in fixing?\n\n+CC hta: Should order between RED and codec matter? My understanding is that it shouldn\u0027t, but sounds like our code cares about order even for RED.",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "786f54ac_289069c5",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1085,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-10-27T09:05:37Z",
      "side": 1,
      "message": "If that rule did not exist, RED would be enabled by default for p2p connections which is not a good idea to do unconditionally. See https://webrtc-review.googlesource.com/c/src/+/178742",
      "parentUuid": "e61fa3ff_f7b404c6",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e300685_4176dfa0",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1085,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-10-27T12:27:17Z",
      "side": 1,
      "message": "I cannot confirm that it is a bug compared to the spec. It is logical in the sense that if RED is first in the list then that signals that RED packets with an encoding of a following codec in the list will be sent and can be received. If the agent only wants to signal that it can receive RED with an encoding of another negotiated codec, but not send RED, then it would be after the codecs of its possible encodings in the list. This change enables that latter case, which the code handled erroneously before the change.",
      "parentUuid": "786f54ac_289069c5",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b77a962_9eff8048",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1085,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-10-27T13:05:59Z",
      "side": 1,
      "message": "But if the logic is \"Use RED for the subsequent codec in the list\", wouldn\u0027t the logical thing be to allow RED to appear multiple times in the list? Once per codec you wanted to use RED for? I doubt this is what we want to do, but it is where the logic leads me. Otherwise we\u0027re saying \"you must only do RED if this exact codec gets chosen\". But it gets weirded. If you offer RED, CodecA, CodecB you\u0027re saying \"CodecA is RED, CodecB isn\u0027t\". But if the answer doesn\u0027t support CodecA and removes it from the list, you\u0027re left with RED, CodecB. Now this means \"CodecB is RED\", which triggers something the offer side never said to support in the first place.\n\nEither way we should land this, because doing setCodecPreferences() with one RED should never produce multiple REDs. But I don\u0027t think \"what SHOULD we do?\" is known yet.",
      "parentUuid": "0e300685_4176dfa0",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "480dfba1_9031b1cd",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1085,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-10-27T13:20:02Z",
      "side": 1,
      "message": "RED is codec-specific, the fmtp specifies the primary payload type it refers to, similar to (but more ancient) RTX\u0027s apt. But behold, we only have rtx in getCapabilities(\u0027video\u0027).codecs once and without any apt ;-)\n\nEither way, this CL looks good to me, still missing an example of what SDP breaks though.",
      "parentUuid": "9b77a962_9eff8048",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1832acc1_9911f2cc",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1085,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-10-27T13:48:21Z",
      "side": 1,
      "message": "As Philipp says, what links RED to the encoding is \"a\u003dFMTP:12 15/15\" if RED has payload type 12 and the encoding payload type 15. On top of that, RED should be listed with the same sample rate and number of channels as the encoding codec. RED and the encoding codec does not have to be listed right after each other, it just matters which one is before the other when it comes to what is to be sent. And again, the use case for having RED after the encoding codec is when you want to say that you can receive RED but you don\u0027t want to send it.\n\n@phancke@microsoft.com you are right that one can argue that the SDP with duplicate identical RED codec lines should work. But in this case WebRTC is used with SDP code that asserts because of the duplicate identical RED codec lines. I simply think that it is better to make sure that the SDP doesn\u0027t have the duplication than to remove the assert and potentially have to change other code that also has problems with this. Hope that makes sense and thanks for the thoughts and input on this. It\u0027s good if we all agree that this relatively small change is useful because it makes sure that the SDP produced by WebRTC is sane in this case.",
      "parentUuid": "480dfba1_9031b1cd",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d670c57_91559e88",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1094,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-10-27T08:59:33Z",
      "side": 1,
      "message": "Is my understanding correct that this part of the code does this?\n```\n// If RED is the redundant codec of `found_codec_with_correct_pt`, make sure\n// RED is listed next to `found_codec_with_correct_pt` in the resulting list.\n```\n\nHowever even if we commented out this line, RED would still be added to the result, it\u0027s just that it would be added in a different order?",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a07fdec0_e097720d",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1094,
      "author": {
        "id": 19929
      },
      "writtenOn": "2023-10-27T12:27:17Z",
      "side": 1,
      "message": "This code used to find RED and add it after the primary codec of red. But only if RED hadn\u0027t been added already. The problem was just that RED if RED was not already added, was added a second time as a regular codec above (duplication). Examples:\n[RED, Opus] or [Opus, RED, RED]. And as you say, the codec order must be kept for WebRTC to send RED packets with the specified encoding.\n\nThe purpose of \"want_red\" is not entirely clear to me. There is unfortunately no existing unit test that explains it. There is no existing unit test for this code whatsoever. So I don\u0027t dare to rewrite the code completely.",
      "parentUuid": "0d670c57_91559e88",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a7b22cda_4354ff3d",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 863,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-10-27T08:59:33Z",
      "side": 1,
      "message": "As per my other comment, my understanding is that whether we do Opus,RED or RED,Opus the result should be the same: RED is enabled. I could be wrong, though",
      "revId": "e4cce83d7d9aff6066f118c110f2f625cd7c6692",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}