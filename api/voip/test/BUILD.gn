#Copyright(c) 2020 The WebRTC project authors.All Rights Reserved.
#
#Use of this source code is governed by a BSD - style license
#that can be found in the LICENSE file in the root of the source
#tree.An additional intellectual property rights grant can be found
#in the file PATENTS.All contributing project authors may
#be found in the AUTHORS file in the root of the source tree.

import("../../../webrtc.gni")

if (rtc_include_tests) {
  rtc_library("voip_engine_builder_unittests") {
    testonly = true
    sources = [ "voip_engine_builder_unittest.cc" ]
    deps = [
      "..:voip_builder_api",
      "../../../modules/audio_device:mock_audio_device",
      "../../../modules/audio_processing:mocks",
      "../../../rtc_base:logging",
      "../../../test:audio_codec_mocks",
      "../../../test:test_support",
      "../../task_queue:task_queue",
    ]
  }

  rtc_library("voip_core_unittests") {
    testonly = true
    sources = [ "voip_core_unittest.cc" ]
    deps = [
      "..:voip_core",
      "../../../modules/audio_device:mock_audio_device",
      "../../../modules/audio_processing:mocks",
      "../../../rtc_base:logging",
      "../../../test:audio_codec_mocks",
      "../../../test:mock_transport",
      "../../../test:test_support",
      "../../audio_codecs:builtin_audio_decoder_factory",
      "../../audio_codecs:builtin_audio_encoder_factory",
      "../../task_queue:default_task_queue_factory",
    ]
  }

  rtc_library("audio_channel_unittests") {
    testonly = true
    sources = [ "audio_channel_unittest.cc" ]
    deps = [
      "..:audio_channel",
      "../..:transport_api",
      "../../../modules/audio_mixer:audio_mixer_impl",
      "../../../modules/audio_mixer:audio_mixer_test_utils",
      "../../../modules/rtp_rtcp:rtp_rtcp_format",
      "../../../modules/utility",
      "../../../rtc_base:logging",
      "../../../test:mock_transport",
      "../../../test:test_support",
      "../../audio_codecs:builtin_audio_decoder_factory",
      "../../audio_codecs:builtin_audio_encoder_factory",
      "../../task_queue:default_task_queue_factory",
      "//third_party/abseil-cpp/absl/synchronization",
    ]
  }

  rtc_library("audio_ingress_unittests") {
    testonly = true
    sources = [ "audio_ingress_unittest.cc" ]
    deps = [
      "..:audio_egress",
      "..:audio_ingress",
      "../..:transport_api",
      "../../../modules/audio_mixer:audio_mixer_test_utils",
      "../../../rtc_base:logging",
      "../../../test:mock_transport",
      "../../../test:test_support",
      "../../audio_codecs:builtin_audio_decoder_factory",
      "../../audio_codecs:builtin_audio_encoder_factory",
      "../../task_queue:default_task_queue_factory",
      "//third_party/abseil-cpp/absl/synchronization",
    ]
  }

  rtc_library("audio_egress_unittests") {
    testonly = true
    sources = [ "audio_egress_unittest.cc" ]
    deps = [
      "..:audio_egress",
      "..:audio_ingress",
      "../..:transport_api",
      "../../../modules/audio_mixer:audio_mixer_test_utils",
      "../../../modules/rtp_rtcp:rtp_rtcp_format",
      "../../../rtc_base:logging",
      "../../../test:mock_transport",
      "../../../test:test_support",
      "../../audio_codecs:builtin_audio_decoder_factory",
      "../../audio_codecs:builtin_audio_encoder_factory",
      "../../task_queue:default_task_queue_factory",
      "//third_party/abseil-cpp/absl/synchronization",
    ]
  }
}
