{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3a57e475_5f686680",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-01T07:43:56Z",
      "side": 1,
      "message": "RTP depacketizer for H265 is ready, please help review.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed982880_e3ca4727",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-01T07:43:56Z",
      "side": 1,
      "message": "RTP depacketizer for H265 is ready, please help review",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42954126_c0a4e6b4",
        "filename": "common_video/h265/h265_common.h",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "Simply say, \"Aggregation packets, See RFC 7798, section 4.4.2\". Same for Fu/Paci.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "955269bc_239ade69",
        "filename": "common_video/h265/h265_common.h",
        "patchSetId": 3
      },
      "lineNbr": 58,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42954126_c0a4e6b4",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66f71457_1c28ee00",
        "filename": "modules/rtp_rtcp/source/create_video_rtp_depacketizer.cc",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "unfortunately, the uplink RtpVideoStreamReceiver that invokes this does not check the return before putting it to the payload_type_map_. As a result, you should either handle it there, or you return a generic depacketizer.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "93ac6cb0_01b5a769",
        "filename": "modules/rtp_rtcp/source/create_video_rtp_depacketizer.cc",
        "patchSetId": 3
      },
      "lineNbr": 43,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "66f71457_1c28ee00",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7714358_e542d614",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "H.265 NAL header. Same for every comment below.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cddb92fd_78ff4fb4",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7714358_e542d614",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dcb17e3_c38f75ea",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "It should be named kH265APLengthFieldSizeInBytes.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec49e4bf_0637012c",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9dcb17e3_c38f75ea",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b815723a_e126e695",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "Maybe remove H265 prefix for all the enums as the enum class is already H265xxx. And document this.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "542cb964_112e7b67",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b815723a_e126e695",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "956d3168_e0f88324",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "I wonder if start code should be {0, 0, 1} for NALUs that\u0027s not the first NALU of an AU containing VCL NALUs. That\u0027s what I typically see, though I guess most decoders should be able to handle 4 byte start code as well. That said, saving 1 byte is always something good.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34f29b57_8d1cbd41",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 65,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Decoder will strip the start code off before decoding, to avoid parsing packets and inserting start code later in the packet buffer, we simply insert a 4-bytes start code here.",
      "parentUuid": "956d3168_e0f88324",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdb3e378_38c23c71",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "I guess you mean to say AP header size here on the right. could you use that instead of sizeof(uint16_t).",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bfee9a7b_b1d575a8",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdb3e378_38c23c71",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab40c384_f69de54c",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "your SPS parser does not take VPS-\u003evui_parameters.def_disp_win_xx_offset into account when calculating the size.\nPlease place a TODO here and with follow up CL take VPS/SPS together for the size calculation.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c98f77e_78dd7371",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 158,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ab40c384_f69de54c",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b267ea42_ab89d54c",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "Maybe fall through instead of break, and set frame type at line 172.",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "97651cdb_7702b043",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b267ea42_ab89d54c",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6b5ad7ac_39a834d3",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-11-01T08:40:17Z",
      "side": 1,
      "message": "why BLA is handled differently? It\u0027s still an i-frame? and there should be kBlaNlp?",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c86ba9a1_adbad4cf",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h265.cc",
        "patchSetId": 3
      },
      "lineNbr": 184,
      "author": {
        "id": 20534
      },
      "writtenOn": "2023-11-02T03:12:44Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b5ad7ac_39a834d3",
      "revId": "1de8a9b0119c661abd427c7627aaaba3a155b262",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}