{
  "comments": [
    {
      "key": {
        "uuid": "f8f22fc1_6e484f51",
        "filename": "modules/rtp_rtcp/source/rtp_sequence_number_map.cc",
        "patchSetId": 5
      },
      "lineNbr": 49,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-03T12:04:22Z",
      "side": 1,
      "message": "as I understand planned usage (insert packets as they sent)\nThis scenario should be extremely rare.\nMay be also log a warning",
      "revId": "bf9785d58c624a5898098edd5a397323f502a844",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a765094a_1dbb4a96",
        "filename": "modules/rtp_rtcp/source/rtp_sequence_number_map.cc",
        "patchSetId": 5
      },
      "lineNbr": 61,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-03T12:04:22Z",
      "side": 1,
      "message": "did you measure performance to backup this claim?\n(dequeue.erase performance is linear in number of removed elements)\n\nIf you worried about performance, it might be faster to use circular buffer approach.\nIf sequence_number is mostly sequential, then it would be also possible to have constant lookup.",
      "range": {
        "startLine": 61,
        "startChar": 53,
        "endLine": 61,
        "endChar": 68
      },
      "revId": "bf9785d58c624a5898098edd5a397323f502a844",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fc114e1_b17fc8b4",
        "filename": "modules/rtp_rtcp/source/rtp_sequence_number_map.h",
        "patchSetId": 5
      },
      "lineNbr": 24,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-03T12:04:22Z",
      "side": 1,
      "message": "still mismatch code",
      "range": {
        "startLine": 24,
        "startChar": 29,
        "endLine": 24,
        "endChar": 46
      },
      "revId": "bf9785d58c624a5898098edd5a397323f502a844",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "535df237_958d65e7",
        "filename": "modules/rtp_rtcp/source/rtp_sequence_number_map.h",
        "patchSetId": 5
      },
      "lineNbr": 48,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-03T12:04:22Z",
      "side": 1,
      "message": "it is recommended to document if this class is copyable and assignable\nhttps://google.github.io/styleguide/cppguide.html#Copyable_Movable_Types\n(I guess it is not intended to), i.e. add just before destructor\nRtpSequenceNumberMap(const RtpSequenceNumberMap\u0026) \u003d delete;\nRtpSequenceNumberMap\u0026 operator\u003d(const RtpSequenceNumberMap\u0026) \u003d delete;",
      "revId": "bf9785d58c624a5898098edd5a397323f502a844",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0cfaba7_65a53433",
        "filename": "modules/rtp_rtcp/source/rtp_sequence_number_map_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 31,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-03T12:04:22Z",
      "side": 1,
      "message": "static constants should use kConstantNameNotation\nhttps://google.github.io/styleguide/cppguide.html#Constant_Names",
      "range": {
        "startLine": 31,
        "startChar": 19,
        "endLine": 31,
        "endChar": 31
      },
      "revId": "bf9785d58c624a5898098edd5a397323f502a844",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "389ff871_84cccd99",
        "filename": "modules/rtp_rtcp/source/rtp_sequence_number_map_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-04-03T12:04:22Z",
      "side": 1,
      "message": "any reason for this constant to be member of the fixture?\n(technically, until c++17, such member declaration should be paired with the definition:\nuint64_t RtpSequenceNumberMapTest::kSeed; )",
      "revId": "bf9785d58c624a5898098edd5a397323f502a844",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}