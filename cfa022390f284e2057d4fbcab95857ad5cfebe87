{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bb3ec102_fa81658b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-03-08T13:45:56Z",
      "side": 1,
      "message": "Harald - can you take over from where Florent left off?",
      "revId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "907eb232_e32d9e00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-03-09T09:57:56Z",
      "side": 1,
      "message": "Thanks Florent!",
      "revId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d166bbc_bbff4ade",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 7036
      },
      "writtenOn": "2023-03-08T10:04:05Z",
      "side": 1,
      "message": "I\u0027m worried that doing this won\u0027t surface the kClosing AND the kClosed event to observers adequately.\nCould you try to check if Chrome will always see 2 events where the DC receives a state change where it currently reports as closing and another one as closed, while taking this code path?",
      "revId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1cc2002_a9a94df2",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-03-08T10:50:06Z",
      "side": 1,
      "message": "Yes I\u0027ve verified that both events are reported and handled.\n\nWhen we get here, SetState(kClosing)  has just been called and there, an observer has been notified via the `OnStateChange()` callback.\n\nAll implementations I\u0027ve seen, follow this pattern when implementing `DataChannelObserver::OnStateChange()`:\n* Synchronously call the `state()` getter, to read the current state.\n* Either synchronously or asynchronously react to the state value.\n\nHere\u0027s one example that I verified (async handling of the state value in this case):\n\n```\nvoid RTCDataChannel::Observer::OnStateChange() {\n  PostCrossThreadTask(\n      *main_thread_, FROM_HERE,\n      CrossThreadBindOnce(\u0026RTCDataChannel::Observer::OnStateChangeImpl,\n                          scoped_refptr\u003cObserver\u003e(this),\n                          webrtc_channel_-\u003estate()));\n}\n```",
      "parentUuid": "3d166bbc_bbff4ade",
      "revId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "665a133d_a244fe6c",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 560,
      "author": {
        "id": 7036
      },
      "writtenOn": "2023-03-09T09:15:51Z",
      "side": 1,
      "message": "Great, thanks!",
      "parentUuid": "b1cc2002_a9a94df2",
      "revId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "patchSetCommitId": "cfa022390f284e2057d4fbcab95857ad5cfebe87",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {
        "value": true
      }
    }
  ]
}