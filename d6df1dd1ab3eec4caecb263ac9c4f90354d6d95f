{
  "comments": [
    {
      "key": {
        "uuid": "9c2235ae_b22e5891",
        "filename": "api/test/loopback_media_transport.h",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "You don\u0027t need to override this, just add\n\n  using MediaTransportFactory::CreateMediaTransport;\n\n(Needed because step 1 of method resolution considers only method name, not signature).\n\nAnd add a TODO(bugs.webrtc.org/9938) to delete it.",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0f7bb13_032f7254",
        "filename": "api/test/loopback_media_transport.h",
        "patchSetId": 6
      },
      "lineNbr": 96,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9c2235ae_b22e5891",
      "range": {
        "startLine": 88,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d61b119_be95245e",
        "filename": "api/test/loopback_media_transport.h",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "Can you ensure that it\u0027s called only once, e.g, by setting wrapped_ \u003d nullptr at first call?",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 64
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e7c393f_4f4e467a",
        "filename": "api/test/loopback_media_transport.h",
        "patchSetId": 6
      },
      "lineNbr": 101,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Each factory is created and passed to a PeerConnectionFactory, which may use it multiple times over multiple PeerConnections.  This is actually why I made the wrapper: so that the factory can be called multiple times and hand out a new unique_ptr each time.",
      "parentUuid": "5d61b119_be95245e",
      "range": {
        "startLine": 101,
        "startChar": 0,
        "endLine": 101,
        "endChar": 64
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fb186ec_ba9491fc",
        "filename": "media/base/mediaengine.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "It looks like DCT_SCTP and DCT_MEDIA_TRANSPORT are handled equally everywhere? Does it really need a separate enum, or would it be better to rename DCT_SCTP to DCT_NON_RTP (with old name as alias)?\n\nIf we could do a data transport interface, then we wouldn\u0027t need this enum at all, I think. Then conditions on DataChannelType would instead by vtable lookup.",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 25
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf8e0d3a_e3f8a7ad",
        "filename": "media/base/mediaengine.h",
        "patchSetId": 6
      },
      "lineNbr": 166,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "They\u0027re handled the same almost everywhere.  But there are a few differences.  For example, the switch in CreateDataChannel where the branch for DCT_MEDIA_TRANSPORT sets up the media transport instead of setting up the SctpTransport.\n\nI talked to the API team about the options here, including different implementations of DataChannelInterface or DataChannelProviderInterface for different types of data channels, but we decided that would take significantly more work (we need to move a lot of code around to get there).  So we\u0027re starting with another DataChannelType, and we can refactor in the future, when we\u0027re no longer in experimental mode.",
      "parentUuid": "7fb186ec_ba9491fc",
      "range": {
        "startLine": 165,
        "startChar": 0,
        "endLine": 166,
        "endChar": 25
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60f2f326_f0d20bf5",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 285,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "are we still adding it for media transport?",
      "range": {
        "startLine": 285,
        "startChar": 13,
        "endLine": 285,
        "endChar": 35
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c8fc0ea_a5fc6b9f",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 285,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Yes, identical handling for now.  I\u0027ve gone back and forth on whether the media transport needs an \"open data channel\" method.  For now I don\u0027t think media transport needs it, but I\u0027d rather just call the provider method and have it do nothing.  That way if we need to add an open method, there\u0027s only one place to modify (the implementation of AddSctpDataStream).",
      "parentUuid": "60f2f326_f0d20bf5",
      "range": {
        "startLine": 285,
        "startChar": 13,
        "endLine": 285,
        "endChar": 35
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa9ff127_ffa10093",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 362,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "Is this the demuxing? All channels get the data, and all but the one with the right id ignores it?\n\nI\u0027d prefer to have demuxing in MediaTransport, but that\u0027s going to be a fair amount of work.\n\nWe would need to define some kind of data transport (send/receive) interfaces, where a DataChannel can be registered as a sink, and then implement those interfaces for all of MediaTransport, Rtp and Sctp.\n\nI also note that despite a separate if statement, SCTP and MEDIA_TRANSPORT are handled equally.",
      "range": {
        "startLine": 362,
        "startChar": 6,
        "endLine": 362,
        "endChar": 30
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c204515_49a4ff69",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 362,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Yes, this is demuxing.\n\nRegistering each data channel with the media transport and demuxing in media transport is probably how I would have done it, if SCTP and RTP didn\u0027t already do it this way.\n\nIncidentally, there\u0027s already an interface much like what we\u0027d need, DataChannelProviderInterface, but it has one implementation with branches on data_channel_type_ (PeerConnection implements it) and it doesn\u0027t demux (probably because it uses sigslot for callbacks).\n\nFor the moment, I am inclined to keep the code as similar as possible to what exists and works, but I definitely think there\u0027s a lot of room to improve it.  I view that as phase 2 of media transport work.  Once we get an experiment working, we can take a step back and work out the right way to structure the code.",
      "parentUuid": "aa9ff127_ffa10093",
      "range": {
        "startLine": 362,
        "startChar": 6,
        "endLine": 362,
        "endChar": 30
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b59b0af4_8454af53",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 363,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "should we RTC_LOG here? we don\u0027t expect more than one ssrc / sid, do we? (or they at least shouldn\u0027t be routed this way)",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 363,
        "endChar": 10
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ecab78d2_214893b3",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 363,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "No, I think it\u0027s expected whenever you have more than 1 data channel.  I believe we should handle this case just like RTP and SCTP do.",
      "parentUuid": "b59b0af4_8454af53",
      "range": {
        "startLine": 363,
        "startChar": 4,
        "endLine": 363,
        "endChar": 10
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d3b3b7d_eb048096",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 614,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "consider making a method\nIsSctpLikeDataChannel\n\nand then you would have if(IsSctpLikeDataChannel) and if(!IsSctpLikeDataChannel) instead of \nif(!x \u0026\u0026 !y)\nor if(x || y)",
      "range": {
        "startLine": 613,
        "startChar": 6,
        "endLine": 614,
        "endChar": 56
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83bd99da_31f72d4b",
        "filename": "pc/datachannel.cc",
        "patchSetId": 6
      },
      "lineNbr": 614,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7d3b3b7d_eb048096",
      "range": {
        "startLine": 613,
        "startChar": 6,
        "endLine": 614,
        "endChar": 56
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "90b4ef99_ae8d5995",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 645,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "redundant with 643?\n1) doesn\u0027t c++ compiler/clang-analyze recognize that all switch cases are fulfilled?\n2) and doesn\u0027t it complain about dead code?",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 27
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5339095e_a48b24f0",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 645,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Yes, it\u0027s redundant, but not all compilers can tell.\n1. The compiler used when building Android/iOS can\u0027t tell.\n2. Nope, warnings for unreachable code must be explicitly enabled (and would break portability of something like this).",
      "parentUuid": "90b4ef99_ae8d5995",
      "range": {
        "startLine": 645,
        "startChar": 0,
        "endLine": 645,
        "endChar": 27
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ef1f1337_27e180c5",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 660,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "nit: redundant with 658?",
      "range": {
        "startLine": 660,
        "startChar": 2,
        "endLine": 660,
        "endChar": 16
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da56baa5_2595f95b",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 660,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef1f1337_27e180c5",
      "range": {
        "startLine": 660,
        "startChar": 2,
        "endLine": 660,
        "endChar": 16
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4b8d4b6_e0822ef8",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 1043,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "Do we really need a separate flag for this? The logic would be simpler if we ler use_media_transport imply that we use it for data channels too. Do you see any reasonable use case with media transport for media but data channel over SCTP or RTP?",
      "range": {
        "startLine": 1043,
        "startChar": 20,
        "endLine": 1043,
        "endChar": 57
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffb1d910_0f52206b",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 1043,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "Yes. One needs to be able to test changes independently, and if needed enable data channel over media transport without media transport itself.",
      "parentUuid": "f4b8d4b6_e0822ef8",
      "range": {
        "startLine": 1043,
        "startChar": 20,
        "endLine": 1043,
        "endChar": 57
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05fe1220_5d918c07",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 1043,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ffb1d910_0f52206b",
      "range": {
        "startLine": 1043,
        "startChar": 20,
        "endLine": 1043,
        "endChar": 57
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a35b9602_73f70b15",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 1047,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "\u0027and can\u0027t be both set to true at the same time\u0027",
      "range": {
        "startLine": 1047,
        "startChar": 28,
        "endLine": 1047,
        "endChar": 38
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7119b6_aa651f4f",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 1047,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a35b9602_73f70b15",
      "range": {
        "startLine": 1047,
        "startChar": 28,
        "endLine": 1047,
        "endChar": 38
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdbbeadb_846fb252",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 2079,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "now that I think about it, I think is_caller_ should be optional, and we should DCHECK(.has_value()) when using it.\n\nRight now we could accidentally access the value before the description is applied and draw a conclusion that we are not a caller, while all it means is that we don\u0027t know if we are a caller.",
      "range": {
        "startLine": 2079,
        "startChar": 4,
        "endLine": 2079,
        "endChar": 14
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "865a13a3_73c2a4c3",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 2079,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdbbeadb_846fb252",
      "range": {
        "startLine": 2079,
        "startChar": 4,
        "endLine": 2079,
        "endChar": 14
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "482f5127_34e2c2bf",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 2165,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "(mentioned it in the other file, \u0027if(IsSctpLikeDataChannel)\u0027 would read nicer :)",
      "range": {
        "startLine": 2164,
        "startChar": 6,
        "endLine": 2165,
        "endChar": 58
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ecbdc71_52aa8103",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 2165,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "482f5127_34e2c2bf",
      "range": {
        "startLine": 2164,
        "startChar": 6,
        "endLine": 2165,
        "endChar": 58
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4ac69d_38801fa7",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 2166,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "what does this do in media transport mode? it looks like it always returns false? (or is sctp_mid populated when we use media transport?)",
      "range": {
        "startLine": 2166,
        "startChar": 6,
        "endLine": 2166,
        "endChar": 20
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "845dd164_be1c1d49",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 2166,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "It checks is_caller_.",
      "parentUuid": "3d4ac69d_38801fa7",
      "range": {
        "startLine": 2166,
        "startChar": 6,
        "endLine": 2166,
        "endChar": 20
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31656fe5_8b300597",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 4729,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "is sid a \u0027session id\u0027? I get confused because sometimes we use ssrc and sometimes sid.\nHow about \u0027for params.ssrc\u003d\u0027 \u003c\u003c params.ssrc\n?",
      "range": {
        "startLine": 4729,
        "startChar": 67,
        "endLine": 4729,
        "endChar": 70
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6456b1f3_82d23a67",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 4729,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "31656fe5_8b300597",
      "range": {
        "startLine": 4729,
        "startChar": 67,
        "endLine": 4729,
        "endChar": 70
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f104c92_2d8a469e",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 5380,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "I find it a bit confusing to try to follow the calls back and forth between PeerConnection and DataChannel.\n\nWhere is the demuxing on channel id taking place?",
      "range": {
        "startLine": 5367,
        "startChar": 0,
        "endLine": 5380,
        "endChar": 1
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c40917e7_b5b86bc6",
        "filename": "pc/peerconnection.cc",
        "patchSetId": 6
      },
      "lineNbr": 5380,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "Demuxing is in DataChannel.\n\nYes, it\u0027s confusing.  We should refactor it, but that would turn this into a much larger change.",
      "parentUuid": "5f104c92_2d8a469e",
      "range": {
        "startLine": 5367,
        "startChar": 0,
        "endLine": 5380,
        "endChar": 1
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3cad614_512632fe",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 6
      },
      "lineNbr": 3406,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T10:54:41Z",
      "side": 1,
      "message": "Are the media tracks relevant for this test?",
      "range": {
        "startLine": 3405,
        "startChar": 0,
        "endLine": 3406,
        "endChar": 34
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b198b7dd_1d8910b2",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 6
      },
      "lineNbr": 3406,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-08T15:14:58Z",
      "side": 1,
      "message": "at least one is required. m\u003dcrypto line is only added for audio/video tracks AFAIK, and we use it to set the transports pre-shared key. without pre-shared key we fall back to RTP.",
      "parentUuid": "e3cad614_512632fe",
      "range": {
        "startLine": 3405,
        "startChar": 0,
        "endLine": 3406,
        "endChar": 34
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3566d4e4_e1103dd5",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 6
      },
      "lineNbr": 3406,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-08T15:20:47Z",
      "side": 1,
      "message": "If you add audio only, you could perhaps run everything over media transport.",
      "parentUuid": "b198b7dd_1d8910b2",
      "range": {
        "startLine": 3405,
        "startChar": 0,
        "endLine": 3406,
        "endChar": 34
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89b5006f_d264c2f3",
        "filename": "pc/peerconnection_integrationtest.cc",
        "patchSetId": 6
      },
      "lineNbr": 3406,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-08T19:23:39Z",
      "side": 1,
      "message": "It\u0027s actually not necessary to add these.  I just copied them from the SCTP test cases.  I\u0027ve simplified the tests.",
      "parentUuid": "3566d4e4_e1103dd5",
      "range": {
        "startLine": 3405,
        "startChar": 0,
        "endLine": 3406,
        "endChar": 34
      },
      "revId": "d6df1dd1ab3eec4caecb263ac9c4f90354d6d95f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}