{
  "comments": [
    {
      "key": {
        "uuid": "31c3c66c_5158f06f",
        "filename": "modules/audio_coding/codecs/isac/fix/test/kenny.cc",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-02-27T13:21:10Z",
      "side": 0,
      "message": "The + 1 here is probably because all switches in here take exactly one argument (though with my change, that is no longer true). When I think of it, it\u0027s not great that the binary segfaults on argv[i + 1] when too few args are passed.",
      "range": {
        "startLine": 266,
        "startChar": 9,
        "endLine": 266,
        "endChar": 15
      },
      "revId": "defad847b1ad71440ebb782250c2b2d5627dcc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33a84026_6d1f4d17",
        "filename": "modules/audio_coding/codecs/isac/fix/test/kenny.cc",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-27T13:26:25Z",
      "side": 0,
      "message": "Yeah, I was just going to add a comment about that. Use i \u003c in the loop but check i+1 \u003c argc for the block of options taking an argument? Or, even better, check them individually and print something nice if the argument is missng.",
      "parentUuid": "31c3c66c_5158f06f",
      "range": {
        "startLine": 266,
        "startChar": 9,
        "endLine": 266,
        "endChar": 15
      },
      "revId": "defad847b1ad71440ebb782250c2b2d5627dcc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51f1bd3f_22743999",
        "filename": "modules/audio_coding/codecs/isac/fix/test/kenny.cc",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-02-27T13:26:55Z",
      "side": 0,
      "message": "Only, for instance -FIXED_FL is already broken if it is put last among the arguments, so this parser function is pretty borked as is. I could move the isolate flag and -FIXED_FL to a new loop for no-arg flags if you want...",
      "parentUuid": "31c3c66c_5158f06f",
      "range": {
        "startLine": 266,
        "startChar": 9,
        "endLine": 266,
        "endChar": 15
      },
      "revId": "defad847b1ad71440ebb782250c2b2d5627dcc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a9c9ed7_bb678570",
        "filename": "modules/audio_coding/codecs/isac/fix/test/kenny.cc",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-02-27T13:40:24Z",
      "side": 0,
      "message": "No, I don\u0027t think a new loop would make things better. I suggest doing:\nif (i+1 \u003c argc) {\n  printf(\"\u003cargument\u003e requires a parameter.\\n\");\n  exit(1);\n}\n\nfor each flag that requires looking at the next argv. I count nine of them, so it should be copy-pastable pretty quickly.",
      "parentUuid": "51f1bd3f_22743999",
      "range": {
        "startLine": 266,
        "startChar": 9,
        "endLine": 266,
        "endChar": 15
      },
      "revId": "defad847b1ad71440ebb782250c2b2d5627dcc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d9e6522_c1240fa2",
        "filename": "modules/audio_coding/codecs/isac/fix/test/kenny.cc",
        "patchSetId": 2
      },
      "lineNbr": 266,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-02-27T14:22:26Z",
      "side": 0,
      "message": "Sure.",
      "parentUuid": "0a9c9ed7_bb678570",
      "range": {
        "startLine": 266,
        "startChar": 9,
        "endLine": 266,
        "endChar": 15
      },
      "revId": "defad847b1ad71440ebb782250c2b2d5627dcc04",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}