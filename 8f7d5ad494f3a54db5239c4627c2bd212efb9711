{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c7f18cfa_1636a01f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 14069
      },
      "writtenOn": "2022-01-19T05:57:12Z",
      "side": 1,
      "message": "Hi Henrik, would you PTAL at this CL? This is expected to reduce log tasks which is less useful for normal users. Thanks!",
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b08d7af_aeef3d0c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-01-21T11:16:42Z",
      "side": 1,
      "message": "+Markus can you chime in about expensiveness of CPU wakeups and about PostTasks (not PostDelayedTask)?",
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed542085_9e7cd33d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 10557
      },
      "writtenOn": "2022-01-24T09:06:20Z",
      "side": 1,
      "message": "They are not free for sure... but I don\u0027t know the potential of the change in this CL (how much can be saved by optimizing this particular piece).",
      "parentUuid": "3b08d7af_aeef3d0c",
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60391068_d0064678",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-01-19T10:02:19Z",
      "side": 1,
      "message": "The main reason that the implementation is so complicated is because it was desired to allow logging \"past\" events, i.e. support a use case where logging is \"started\" after a problem has occurred but still capture the events that led up to the problem. For this reason, the most recent events are kept in a cyclic buffer even when the event log is not actively logging.\n\nAfaik, this feature is not used and could be deprecated. However, the cyclic buffer *is used* to ensure that events aren\u0027t lost between PeerConnection creation and the time when StartLogging is called.\n\nLet me look into alternatives.",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d33d5b21_3efcf36b",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 14069
      },
      "writtenOn": "2022-01-20T10:21:54Z",
      "side": 1,
      "message": "Thanks for the info! I\u0027ll also study this issue further to see if any better solutions.\n\nA question here:\nDo you mean, even if the case you said will not be supported, we still need to make the buffer not dropping events since PeerConnection creation?\n\nIt makes me a little confused here because, if I read the code right, the buffer will still drop some events when it\u0027s full without a valid output (L207). And the time before that happening in my test case (1:1 calls) should be less than 30s. That means we\u0027re keeping a very short period of logs but keeps waking up all the time. Am I understanding thing correct?",
      "parentUuid": "60391068_d0064678",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a5333de_dab783dd",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-01-20T12:48:02Z",
      "side": 1,
      "message": "Yes, the log will drop events once the buffer is full, but it will drop the oldest event (and insert the newest).\n\nOne possibility would be to keep the cyclic buffer, but move it out of the task queue. The disadvantage is that it requires additional locks on the buffer. (Potentially also moving some work onto the real-time threads).\n\nAnother possibility might be to deprecate the current behavior of always keeping the most recent events. However, this creates a different problem where events start to come in when the PeerConnection is created, but starting logging requires an additional function call after PeerConnection has been created.\n\nOut of curiosity, could you explain how you measured the impact of the posted tasks?",
      "parentUuid": "d33d5b21_3efcf36b",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f392edc9_50fa5fc9",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 14069
      },
      "writtenOn": "2022-01-21T10:56:19Z",
      "side": 1,
      "message": "Tasks posted could cause CPU wake-ups, which is very expensive on power consumption, especially from idle states.\n\nI\u0027ve noticed the event logs here as I\u0027m working on power optimization of Chromium. I find that the rtc_eveng_log tasks are very heavy during a Meet call using Chromium but the contents it records might be used by very few users. Also, I\u0027ve noticed some other bugs reported on the busy logs (e.g. https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d13408). That\u0027s why I\u0027m think about disable the logs by default and make it easy to enable anytime the user/developer wants during runtime.\n\nSo from the power aspect, the first possibility you said of using locks might be also expensive, as waiting might be needed sometimes. I prefer the second one you said but still not having a clear solution in my mind to the problem you mentioned, and will look into that. What do you think?",
      "parentUuid": "6a5333de_dab783dd",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb49b281_82922387",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-01-21T12:57:47Z",
      "side": 1,
      "message": "Yeah, the second option is better from a performance point of view, but will also require more work. New PeerConnection API, wire up a new JS API in chromium, call new API from Meet, etc.\n\nA third possibility might be to introduce a PostBackgroundTask() which (like PostDelayedTask) doesn\u0027t wake up the thread immediately, but when the thread actually does wave up, it processes all BackgroundTasks.",
      "parentUuid": "f392edc9_50fa5fc9",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a6025c2_b040ff5f",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 14069
      },
      "writtenOn": "2022-01-27T11:22:58Z",
      "side": 1,
      "message": "For the second option, I think we might not need to re-define the APIs. Do you think it possible to just construct this RtcEventLogImpl when StartLogging is invoked and notify the instances going to use it? (Still a lot of work to do but should be better than having new APIs :-)\n\nAnd for the third option you mentioned, it sounds like something similar to the Metronome mechanism (hbos@ did that) in Chromium. Although it only overrides the PostDelayedTask while PostTask is used here, I think it\u0027s possible to set a dedicated policy for rtc_event_log task queue to make it handle batch of events in 1 wake-up (e.g. maybe 10 wake-up per second?).\n\nI will be OOO till Feb 9 for CNY holiday and I can start on a POC implementation on which option you think more reasonable after that.",
      "parentUuid": "eb49b281_82922387",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a21e3e1_6ff3e435",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.cc",
        "patchSetId": 3
      },
      "lineNbr": 152,
      "author": {
        "id": 10557
      },
      "writtenOn": "2022-01-27T12:14:23Z",
      "side": 1,
      "message": "Assuming the impact of changing the logger is good enough - pitching in another solution: use per-thread thread_local queues which get stolen by the logger thread. Trigger the logger sequence by Metronome-enabled PostDelayedTask. Logger sequence sorts the lines correctly before writing.\n\nShould be very low occurrence of contended locks, zero post tasks and zero extra package idle wakes.",
      "parentUuid": "1a6025c2_b040ff5f",
      "range": {
        "startLine": 152,
        "startChar": 0,
        "endLine": 152,
        "endChar": 18
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "590ba4df_cea18216",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 5150
      },
      "writtenOn": "2022-01-19T10:02:19Z",
      "side": 1,
      "message": "It seems like this would need to be protected by a lock.",
      "range": {
        "startLine": 88,
        "startChar": 18,
        "endLine": 88,
        "endChar": 40
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb196c97_5ef4dd62",
        "filename": "logging/rtc_event_log/rtc_event_log_impl.h",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 14069
      },
      "writtenOn": "2022-01-20T10:21:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "590ba4df_cea18216",
      "range": {
        "startLine": 88,
        "startChar": 18,
        "endLine": 88,
        "endChar": 40
      },
      "revId": "8f7d5ad494f3a54db5239c4627c2bd212efb9711",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}