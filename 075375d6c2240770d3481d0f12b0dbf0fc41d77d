{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2948389c_ca8d40cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 19084
      },
      "writtenOn": "2024-07-31T12:19:27Z",
      "side": 1,
      "message": "I tested in a chromium built with this change that https://webrtc.github.io/samples/src/content/peerconnection/audio/ shows increasing `totalProcessingDelay` in chrome://webrtc-internals.",
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fb1d59f_f6e0a935",
        "filename": "api/frame_transformer_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-07-31T12:30:55Z",
      "side": 1,
      "message": "Hm...I don\u0027t understand why this change is needed. Can you explain?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e025d6e6_025f5d4e",
        "filename": "api/frame_transformer_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 19084
      },
      "writtenOn": "2024-07-31T13:43:56Z",
      "side": 1,
      "message": "If we do not distinguish between receiver and sender frame, when an audio frame is cloned it will always be a sender frame hence having a ReceiveTime undefined.\n\nMore pragmatically the issue is present in the unit test.",
      "parentUuid": "7fb1d59f_f6e0a935",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dda3946_cdff38b8",
        "filename": "api/frame_transformer_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-07-31T14:00:29Z",
      "side": 1,
      "message": "\"when an audio frame is cloned it will always be a sender frame\": that part seems intentional? I\u0027ll let herre@ or hta@ comment on this.",
      "parentUuid": "e025d6e6_025f5d4e",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "706ed6c5_706d75fc",
        "filename": "api/frame_transformer_factory.cc",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 17470
      },
      "writtenOn": "2024-07-31T15:50:21Z",
      "side": 1,
      "message": "Should be fine to do this these days I think. After the work in crbug.com/40791999, we can take a received frame and pass it to a sender for retransmission (in eg eCDN) without issue, so it should be fine for cloning to preserve the direction.\n\nI have tried to combine the two classes in the past, and succeeded at the blink level, but come up with too many things like what you\u0027re seeing where we want to make sure that we preserve direction-specific data across transforms.",
      "parentUuid": "6dda3946_cdff38b8",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 38,
        "endChar": 0
      },
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "623a5893_30bcc127",
        "filename": "audio/channel_receive_frame_transformer_delegate.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 8038
      },
      "writtenOn": "2024-07-31T12:30:55Z",
      "side": 1,
      "message": "Move this outside of the if/else blocks (same statement is used in both if and else)",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 181,
        "endChar": 0
      },
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c20adbe_e0173445",
        "filename": "audio/channel_receive_frame_transformer_delegate.cc",
        "patchSetId": 4
      },
      "lineNbr": 181,
      "author": {
        "id": 19084
      },
      "writtenOn": "2024-07-31T13:43:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "623a5893_30bcc127",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 181,
        "endChar": 0
      },
      "revId": "075375d6c2240770d3481d0f12b0dbf0fc41d77d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}