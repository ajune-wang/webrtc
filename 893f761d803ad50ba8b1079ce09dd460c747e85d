{
  "comments": [
    {
      "key": {
        "uuid": "38644370_8f840da5",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 2
      },
      "lineNbr": 2156,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-02-28T23:29:21Z",
      "side": 1,
      "message": "Not necessary; if parsed at the session level it will still show up at the media level.\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/pc/webrtc_sdp.cc?g\u003d0\u0026l\u003d2693",
      "revId": "893f761d803ad50ba8b1079ce09dd460c747e85d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5818923a_4dbe5fcd",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 2
      },
      "lineNbr": 2156,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-02-29T00:00:31Z",
      "side": 1,
      "message": "Oh, but maybe this will be removed from the media level and added to the session level? Guess it depends on how we fix https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d7443. Might as well leave the comment.",
      "parentUuid": "38644370_8f840da5",
      "revId": "893f761d803ad50ba8b1079ce09dd460c747e85d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a0c78f91_9a1760fa",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 2
      },
      "lineNbr": 2156,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-02-29T09:13:30Z",
      "side": 1,
      "message": "I think descriptions should reflect session level parameters at the session level; it reduces the chance of getting into silly states like divergent values. And it\u0027s actually forbidden at transport level in the SDP, not just \"can be present at both\".\n\nbut this is an API design decision.\n\nMy thought is that once we have it in the struct at session level, we\u0027ll make this into \"if present at either session or transport level, we say it\u0027s true\", with a note to remove looking at the transport level after some time.\n\nSomething like:\n\nif (true at session)\n  if (true at transport || missing at transport)\n     return true (new or transitional client, expected)\n  else (false at transport)\n     log error (transitional, confused client); return true\n  fi\nelse if (missing at session)\n  if (present at transport)\n     log warning (old client)\n  fi\n  return value at transport\nelse (false at session)\n  same logic as for true\nfi",
      "parentUuid": "5818923a_4dbe5fcd",
      "revId": "893f761d803ad50ba8b1079ce09dd460c747e85d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e385cee2_1697a2df",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3490,
      "author": {
        "id": 5053
      },
      "writtenOn": "2020-02-28T23:29:21Z",
      "side": 1,
      "message": "ASSERT_TRUE, so that test doesn\u0027t crash if false?",
      "revId": "893f761d803ad50ba8b1079ce09dd460c747e85d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38deafb5_0adf4cee",
        "filename": "pc/peer_connection_interface_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 3490,
      "author": {
        "id": 5634
      },
      "writtenOn": "2020-03-02T04:31:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e385cee2_1697a2df",
      "revId": "893f761d803ad50ba8b1079ce09dd460c747e85d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}