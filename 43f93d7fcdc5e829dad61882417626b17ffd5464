{
  "comments": [
    {
      "key": {
        "uuid": "f73dc713_24ac06eb",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 765,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-09T01:07:41Z",
      "side": 1,
      "message": "I don\u0027t understand this.  There\u0027s really only one value for RTT.  It\u0027s the transfer time in each direction, added together.  Why does it matter who does the computation?  If the remote side tells us it\u0027s observed RTT, it\u0027s just going to lag behind our latest measurement by ~1/2 RTT.",
      "range": {
        "startLine": 761,
        "startChar": 4,
        "endLine": 765,
        "endChar": 16
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "12aba49c_4353bae9",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 765,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:19:14Z",
      "side": 1,
      "message": "Yep, I am not if it\u0027s used anywhere. This RTT seems to be propagated to AudioReceiveStream::GetStats(). Maybe there is some external use, but send RTT definitely does not make sense here. \n\nThere is nisse@ comment below which says:\n\n  // TODO(nisse): This method computes RTT based on sender reports, even though\n  // a receive stream is not supposed to do that.\n\nSo maybe keep it as is for now.",
      "parentUuid": "f73dc713_24ac06eb",
      "range": {
        "startLine": 761,
        "startChar": 4,
        "endLine": 765,
        "endChar": 16
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05d8380a_4ba4ec61",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 765,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-09T09:38:48Z",
      "side": 1,
      "message": "My comment refers to an RTP quirk, which I don\u0027t quite understand. For MediaTransport, I think it makes more sense to have a single RTT for the transport and return that.\n\nIn the other hand, maybe the associated_send_channel_ should be taken into account also in the MediaTransport case? Or if it doens\u0027t matter (it would just query the same MediaTransport in the same way?), just add a comment on that.",
      "parentUuid": "12aba49c_4353bae9",
      "range": {
        "startLine": 761,
        "startChar": 4,
        "endLine": 765,
        "endChar": 16
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14c3d2a0_c7ae77f3",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 765,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "I\u0027ll remove this comment, I just copied Niels\u0027s comment.",
      "parentUuid": "05d8380a_4ba4ec61",
      "range": {
        "startLine": 761,
        "startChar": 4,
        "endLine": 765,
        "endChar": 16
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "40ad8ba7_1561345d",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 767,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-09T09:38:48Z",
      "side": 1,
      "message": "Redundant, since there\u0027s implicit conversion to bool. But feel free to keep, if you think it adds clarity.",
      "range": {
        "startLine": 767,
        "startChar": 19,
        "endLine": 767,
        "endChar": 31
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2486dab_b4eea88b",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 767,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Yeah, I didn\u0027t quite like the implicit conversion.",
      "parentUuid": "40ad8ba7_1561345d",
      "range": {
        "startLine": 767,
        "startChar": 19,
        "endLine": 767,
        "endChar": 31
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ebbb8ac_f1727cb9",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 768,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-09T09:38:48Z",
      "side": 1,
      "message": "Please shorten to just |target_rate-\u003enetwork_estimate...|",
      "range": {
        "startLine": 768,
        "startChar": 24,
        "endLine": 768,
        "endChar": 33
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d082dee_c8ddac87",
        "filename": "audio/channel_receive.cc",
        "patchSetId": 4
      },
      "lineNbr": 768,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ebbb8ac_f1727cb9",
      "range": {
        "startLine": 768,
        "startChar": 24,
        "endLine": 768,
        "endChar": 33
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14529451_7f0a0620",
        "filename": "audio/channel_receive.h",
        "patchSetId": 4
      },
      "lineNbr": 205,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-09T09:38:48Z",
      "side": 1,
      "message": "Can you do the rename as a separate cl? And by current coding style, it should be GetRttMs.",
      "range": {
        "startLine": 205,
        "startChar": 2,
        "endLine": 205,
        "endChar": 27
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01664a09_8e7754df",
        "filename": "audio/channel_receive.h",
        "patchSetId": 4
      },
      "lineNbr": 205,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Sure, I\u0027ll revert the name back.",
      "parentUuid": "14529451_7f0a0620",
      "range": {
        "startLine": 205,
        "startChar": 2,
        "endLine": 205,
        "endChar": 27
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc32c2a0_fd42caf4",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 358,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:19:14Z",
      "side": 1,
      "message": "nit. extra line",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25ea4270_6f7daf05",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 493,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:24:06Z",
      "side": 1,
      "message": "Suggestion: Maybe instead of many if media_transport ?, have one big if in the beginning. \n\nWe also do not need transport_sequence_number_allocator, retransmission_rate_limiter , etc. for media_transport. We can remove them later, but it will be easier to see if media transport stuff is separate.",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0beb88d_938900dd",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 493,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "I\u0027d prefer to remove them in a separate CL, as they are unrelated to what I am changing.\n\nAdded an if! :)",
      "parentUuid": "25ea4270_6f7daf05",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "791148ea_fab68bde",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 497,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:24:06Z",
      "side": 1,
      "message": "What does rtp_packet_sender_proxy_ means for media transport?",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58fd27e8_b5a78bef",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 497,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Not sure -- I did not investigate other fields (I assumed that since we have a working version, I am only going to change things related to bitrate allocation)\n\nAs far as I can see, RtpPacketSenderProxy is just a thread-safe sender.",
      "parentUuid": "791148ea_fab68bde",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c557dace_ec974ad7",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 514,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:24:06Z",
      "side": 1,
      "message": "Nit. Why after Init() everything else seems to be setup before calling Init().",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68b23977_343f2517",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 514,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Added comment\n// We want to invoke the \u0027TargetRateObserver\u0027 and overhead callbacks after the audio_coding_ is fully initialized.",
      "parentUuid": "c557dace_ec974ad7",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b3683d3_7b3f7368",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 517,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-09T05:12:07Z",
      "side": 1,
      "message": "Do we need to do something with the overhead?  If not, why are we calling the getter?",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9a08116_3bb4bb15",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 517,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "agrr it was supposed to be assigned. Very good catch.\nI changed the callback to the getter...",
      "parentUuid": "8b3683d3_7b3f7368",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b70db077_6bfd5bd6",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 1165,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-09T09:38:48Z",
      "side": 1,
      "message": "Is this called for MediaTransport only? It would be preferable to wire it it up similarly to how it\u0027s done in the Rtp case (I\u0027m sorry I don\u0027t really know how that is).",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1165,
        "endChar": 1
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86907df2_4d7afc10",
        "filename": "audio/channel_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 1165,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "It is wired up similarily: see ChannelSend::ReceivedRTCPPacket -- it does a few more things (like adjusting nack window), but then it calls ModifyEncoder.\n\nadded a method UpdateRtt();",
      "parentUuid": "b70db077_6bfd5bd6",
      "range": {
        "startLine": 1158,
        "startChar": 0,
        "endLine": 1165,
        "endChar": 1
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8cac216_a3b019ea",
        "filename": "audio/channel_send.h",
        "patchSetId": 4
      },
      "lineNbr": 240,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-09T01:07:41Z",
      "side": 1,
      "message": "Is there supposed to be more to this comment?  Seems like it trails off.",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa5453d6_ef58ac02",
        "filename": "audio/channel_send.h",
        "patchSetId": 4
      },
      "lineNbr": 240,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "This was supposed to be the entire comment (i missed the period). Reworded.",
      "parentUuid": "c8cac216_a3b019ea",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3be1c826_13e4ed3c",
        "filename": "call/call.cc",
        "patchSetId": 4
      },
      "lineNbr": 489,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:44:09Z",
      "side": 1,
      "message": "I think we should not register RTP observer in the first place if media transport is available.",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52f8d758_8a51afd6",
        "filename": "call/call.cc",
        "patchSetId": 4
      },
      "lineNbr": 489,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "We don\u0027t know, in the constructor of Call object, if media transport is available. We don\u0027t know if it will be available (because of fallback to RTP)",
      "parentUuid": "3be1c826_13e4ed3c",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f609fd62_0bf909ed",
        "filename": "call/call.cc",
        "patchSetId": 4
      },
      "lineNbr": 497,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-09T01:07:41Z",
      "side": 1,
      "message": "Why can\u0027t DeRegister do that?",
      "range": {
        "startLine": 497,
        "startChar": 37,
        "endLine": 497,
        "endChar": 80
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fdc7419_dd3b9997",
        "filename": "call/call.cc",
        "patchSetId": 4
      },
      "lineNbr": 497,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T01:15:15Z",
      "side": 1,
      "message": "When you register to \u0027send side\u0027, it creates a some objects with const observer (that you cannot change).\nThose objects would have to be recreated (and lose their state).\n\nI didn\u0027t decide to go and refactor eerything there, because we really don\u0027t allow for media transport to be destroyed mid-call and then continue with RTP instead -- so I wouldn\u0027t want to invest in that.\nAs soon as RTP moves to media transportt, those lines ( transport_send_-\u003eDeRegisterTargetTransferRateObserver(this) will be removed, because transport_send will not exist here :) (it will be part of media transport itself).",
      "parentUuid": "f609fd62_0bf909ed",
      "range": {
        "startLine": 497,
        "startChar": 37,
        "endLine": 497,
        "endChar": 80
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaaa9215_c7e1b42c",
        "filename": "call/call.cc",
        "patchSetId": 4
      },
      "lineNbr": 497,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T17:40:00Z",
      "side": 1,
      "message": "Added boolean to protect re-registration and removed the confusing code and comment.",
      "parentUuid": "3fdc7419_dd3b9997",
      "range": {
        "startLine": 497,
        "startChar": 37,
        "endLine": 497,
        "endChar": 80
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8d1ce82d_d9cd4903",
        "filename": "call/call.cc",
        "patchSetId": 4
      },
      "lineNbr": 1064,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:44:09Z",
      "side": 1,
      "message": "Add comment that we do it because media_transport does not guarantee callback on the worker queue.\n\nOr alternatively can we have a different callback name from media transport or we can not because we use same interface?",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6727a9dc_7d977a2f",
        "filename": "call/rtp_transport_controller_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 203,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T02:02:35Z",
      "side": 1,
      "message": "I do not understand why you need to de-register observer from RtpTransportController. \n\nWould it possible to keep RTP logic unchanged in this CL and refactor it later or you wanted to make it closer to media_transport where you have unregister?",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5019490c_bb8603be",
        "filename": "call/rtp_transport_controller_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 203,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Call object registers target rate observer in constructor (before we know whether media transport will be used).\n\nKeeping the observer would make us get incorrect callbacks from RTCP.\n\nThere are two choices\n1) Do not register the observer in the constructor, and do it later, when you know for sure that there won\u0027t be media transport (somewhat convoluted and complex).\n\n2) Allow to register the observer in the constructor, but unregister it as soon as media transport is created.\n\nI went with option (2).\n\nhttps://webrtc.googlesource.com/src/+/master/call/call.cc#435\n\n\nIf I leave it unchanged, we get incorrect callbacks from RTP/RTCP path with target transfer rate.",
      "parentUuid": "6727a9dc_7d977a2f",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b50fbb9e_4a27fe8f",
        "filename": "call/rtp_transport_controller_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-09T01:07:41Z",
      "side": 1,
      "message": "What does this part mean?  Don\u0027t unregister the transport controller from send_side_cc_?  Or don\u0027t unregister the observer from send_side_cc_?  If it\u0027s the observer, it seems like we *should* unregister it from send_side_cc_.  The observer doesn\u0027t want callbacks from RTP.",
      "range": {
        "startLine": 205,
        "startChar": 46,
        "endLine": 206,
        "endChar": 19
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b1764d2_5a3e0adf",
        "filename": "call/rtp_transport_controller_send.cc",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "Clarified in the comment. It feels like these comments are creating confusion nevertheless, I\u0027ll investigate what would it take to change send_side_cc to allow for deregistration of its observers, but it feels dangerous. We will chat in person.",
      "parentUuid": "b50fbb9e_4a27fe8f",
      "range": {
        "startLine": 205,
        "startChar": 46,
        "endLine": 206,
        "endChar": 19
      },
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f807a80f_95b430f0",
        "filename": "p2p/base/fakeicetransport.h",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-11-09T01:44:09Z",
      "side": 1,
      "message": "Was it bug before?",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fd2a082_d17ba681",
        "filename": "p2p/base/fakeicetransport.h",
        "patchSetId": 4
      },
      "lineNbr": 248,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T16:36:05Z",
      "side": 1,
      "message": "I have a separate review for it:\nhttps://webrtc-review.googlesource.com/c/src/+/110363\n\nI would say it was a missing feature :)",
      "parentUuid": "f807a80f_95b430f0",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fae2f54_42c1e17f",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 5599
      },
      "writtenOn": "2018-11-09T01:07:41Z",
      "side": 1,
      "message": "Would it make sense to pass the ICE transport down here and hook up to its network change callbacks directly, rather than requiring MediaTransport to pipe the state up?\n\nBoth PacketTransportInternal and MediaTransport should be available around here, which is on all the paths to reach this function with a non-null media transport:\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/pc/peerconnection.cc?l\u003d5624\u0026rcl\u003de769ed90c3599a131166d5a61625c1b64318fb91\n\nOn the one hand, media transport probably wants to know about network changes itself, so it\u0027s probably not hard to expose it.  But on the other hand, media transport does not own PacketTransportInternal, so there\u0027s no reason code needs to go through media transport.\n\nIf this was already hooked directly to PacketTransportInternal, we would not have to worry about the difference between media transport and RTP.  So my sense is that\u0027s the right place to attach the callback going forward as well--it may make future changes easier.\n\nThe only reason I can think to involve media transport is if a bunch of extra components need direct access to ICE that wouldn\u0027t otherwise.  But I don\u0027t think that\u0027s the case, or we\u0027d need to support multiple callbacks on media transport.",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bced2453_73158082",
        "filename": "pc/channel.cc",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-11-09T17:40:00Z",
      "side": 1,
      "message": "I think once we finalize the ownership of ICE, we should do what you suggest.",
      "parentUuid": "1fae2f54_42c1e17f",
      "revId": "43f93d7fcdc5e829dad61882417626b17ffd5464",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}