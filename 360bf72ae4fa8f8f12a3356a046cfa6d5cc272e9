{
  "comments": [
    {
      "key": {
        "uuid": "6d69c847_51a4e3a8",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoDecoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "Comment all literals with an inline comment like this: \nfalse /* fallbackToSoftware */\nSame for the other literals in this CL.",
      "range": {
        "startLine": 18,
        "startChar": 83,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2dbbde6_5bd0eee4",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoDecoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 18,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d69c847_51a4e3a8",
      "range": {
        "startLine": 18,
        "startChar": 83,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67e9ef3_c8f59287",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoDecoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "It is not necessary to use \"this.\" for example here, can you remove unnecessary this references?",
      "range": {
        "startLine": 24,
        "startChar": 27,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca0153c_7084b82b",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoDecoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 24,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b67e9ef3_c8f59287",
      "range": {
        "startLine": 24,
        "startChar": 27,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c5d60cb4_0fed1e7e",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoEncoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "We currently add the SW codecs before the HW codecs. I think we should preserve that behavior for now to reduce the risk of this cl.\n\nAlso, you can use Arrays.asList(codecs) to convert from array to list.",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 40,
        "endChar": 85
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "65c233e4_cf96d145",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoEncoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c5d60cb4_0fed1e7e",
      "range": {
        "startLine": 40,
        "startChar": 4,
        "endLine": 40,
        "endChar": 85
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a51a81da_1cfce715",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoEncoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "How is the equals() implemented for VideoCodecInfo? This is tricky to get right because for e.g. VP8 we just want to compare the name, the params doesn\u0027t matter, and we don\u0027t want to try to add multiple VP8 with different params. H264 is different, because different profiles act as different codecs. We still don\u0027t want to add multiple H264 codecs with the same profile but with different params.\n\nWe could add a static private helper method in this class \u0027IsSameCodec()\u0027 that we use instead. It will look similar to this C++ function: https://cs.chromium.org/chromium/src/third_party/webrtc/media/base/codec.cc?rcl\u003d390d01094608b1eedd7d650a6c435d5e3aa109c0\u0026l\u003d354\n\nconst VideoCodec* FindMatchingCodec(\n    const std::vector\u003cVideoCodec\u003e\u0026 supported_codecs,\n    const VideoCodec\u0026 codec) {\n  for (const VideoCodec\u0026 supported_codec : supported_codecs) {\n    if (!CodecNamesEq(codec.name, supported_codec.name))\n      continue;\n    if (CodecNamesEq(codec.name.c_str(), kH264CodecName) \u0026\u0026\n        !IsSameH264Profile(codec.params, supported_codec.params)) {\n      continue;\n    }\n    return \u0026supported_codec;\n  }\n  return nullptr;\n}",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 45
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4fff88f_5acdaa0b",
        "filename": "sdk/android/api/org/webrtc/DefaultVideoEncoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "I looked at the C++ code, and that `IsSameH264Profile` is fairly complicated in how it compares the profile level id numbers. I did not want to duplicate all that code for matching bitmasks where some bits can be either 0 or 1, various bit fiddling, and a bunch of hardcoded constants. So I exposed it through JNI.",
      "parentUuid": "a51a81da_1cfce715",
      "range": {
        "startLine": 45,
        "startChar": 10,
        "endLine": 45,
        "endChar": 45
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a9d02dd_ff6aefbf",
        "filename": "sdk/android/api/org/webrtc/HardwareVideoDecoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "Should we make this package protected so that external clients can\u0027t start depend on it?",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 8
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6d229d0_a048bedf",
        "filename": "sdk/android/api/org/webrtc/HardwareVideoDecoderFactory.java",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a9d02dd_ff6aefbf",
      "range": {
        "startLine": 45,
        "startChar": 2,
        "endLine": 45,
        "endChar": 8
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ffd9fea_5d231149",
        "filename": "sdk/android/src/jni/pc/media_jni.h",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "Can we return a unique_ptr here instead?",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 29
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dc7b3c1_ec57f142",
        "filename": "sdk/android/src/jni/pc/media_jni.h",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "I tried that at first, but ran into problems when building the null_media_jni target. I could not compile with a unique_ptr\u003ccricket::MediaEngineInterface\u003e without including the actual MediaEngineInterface in the build target, and I think that\u0027s what the null media target it supposed to avoid (it\u0027s a dependence of \"libjingle_peerconnection_datachannelonly_so\").",
      "parentUuid": "4ffd9fea_5d231149",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 29
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a7195e6_bee1b44e",
        "filename": "sdk/android/src/jni/pc/peerconnectionfactory_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "We want to get rid of video_hw_acceleration_enabled eventually, so don\u0027t use it for the new factory type, i.e. ignore it for the new path. I would write it like this:\n\nif (jencoder_factory \u003d\u003d nullptr \u0026\u0026 jdecoder_factory \u003d\u003d nullptr) {\n  if (video_hw_acceleration_enabled) {\n    video_encoder_factory \u003d CreateLegacyVideoEncoderFactory();\n    video_decoder_factory \u003d CreateLegacyVideoDecoderFactory);\n  }\n  ...\n} else {\n  ...new path...\n}",
      "range": {
        "startLine": 193,
        "startChar": 6,
        "endLine": 193,
        "endChar": 35
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0799d9ea_38f9a21d",
        "filename": "sdk/android/src/jni/pc/peerconnectionfactory_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 193,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a7195e6_bee1b44e",
      "range": {
        "startLine": 193,
        "startChar": 6,
        "endLine": 193,
        "endChar": 35
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "785530b6_d648bfcf",
        "filename": "sdk/android/src/jni/pc/peerconnectionfactory_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "Support only injecting decoder or only injecting encoder?",
      "range": {
        "startLine": 194,
        "startChar": 4,
        "endLine": 194,
        "endChar": 69
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c93c9c9_2ddcbc71",
        "filename": "sdk/android/src/jni/pc/peerconnectionfactory_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 194,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "I suppose if we do inject anything, we want to use the new code path. Not sure about what results to expect when only injecting one of them, but I think it\u0027s better to fail in some way than silently ignoring the injected codec and falling back to the old code path.",
      "parentUuid": "785530b6_d648bfcf",
      "range": {
        "startLine": 194,
        "startChar": 4,
        "endLine": 194,
        "endChar": 69
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65990a85_62a1e5dd",
        "filename": "sdk/android/src/jni/videodecoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "Maybe we should use FindClass(jni, \"foo\") in case someone wants to use this from C++ thread.",
      "range": {
        "startLine": 27,
        "startChar": 10,
        "endLine": 27,
        "endChar": 24
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60431563_1744d9b2",
        "filename": "sdk/android/src/jni/videodecoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "65990a85_62a1e5dd",
      "range": {
        "startLine": 27,
        "startChar": 10,
        "endLine": 27,
        "endChar": 24
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3463442d_7f0fdcd2",
        "filename": "sdk/android/src/jni/videodecoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "reinterpret_cast",
      "range": {
        "startLine": 48,
        "startChar": 43,
        "endLine": 48,
        "endChar": 58
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dfa7a28_11dc571e",
        "filename": "sdk/android/src/jni/videodecoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 48,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3463442d_7f0fdcd2",
      "range": {
        "startLine": 48,
        "startChar": 43,
        "endLine": 48,
        "endChar": 58
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e84f302_51fc7679",
        "filename": "sdk/android/src/jni/videodecoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "Can we use make_unique?",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 50,
        "endChar": 64
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7673e4e_6049aa15",
        "filename": "sdk/android/src/jni/videodecoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 50,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Seems like it\u0027s not available yet for webrtc.",
      "parentUuid": "3e84f302_51fc7679",
      "range": {
        "startLine": 50,
        "startChar": 11,
        "endLine": 50,
        "endChar": 64
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c577453c_c7ff42b7",
        "filename": "sdk/android/src/jni/videoencoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "reinterpret_cast?",
      "range": {
        "startLine": 68,
        "startChar": 43,
        "endLine": 68,
        "endChar": 58
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0e6ce102_b284095f",
        "filename": "sdk/android/src/jni/videoencoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 68,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c577453c_c7ff42b7",
      "range": {
        "startLine": 68,
        "startChar": 43,
        "endLine": 68,
        "endChar": 58
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "651e0892_11767674",
        "filename": "sdk/android/src/jni/videoencoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "make_unique?",
      "range": {
        "startLine": 70,
        "startChar": 11,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d90e7a5f_e5155e57",
        "filename": "sdk/android/src/jni/videoencoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Not available yet in webrtc",
      "parentUuid": "651e0892_11767674",
      "range": {
        "startLine": 70,
        "startChar": 11,
        "endLine": 70,
        "endChar": 40
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ae8338e_3cdc3fad",
        "filename": "sdk/android/src/jni/videoencoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5112
      },
      "writtenOn": "2017-11-02T12:17:07Z",
      "side": 1,
      "message": "codec_info.is_hardware_accelerated \u003d encoder \u003d\u003d nullptr || !jni-\u003eIsInstanceOf(encoder, *wrapped_native_encoder_class_);\n\nIs the null check needed?\n\nMaybe we should add a few TODO\u0027s here since this might be incorrect / slow way to find out this.",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 3
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "539f8622_5bc700d6",
        "filename": "sdk/android/src/jni/videoencoderfactorywrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 90,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Ack on the code simplification.\n\nI guess the null check is not important. If the wrapped factory can\u0027t create the specified encoder, it doesn\u0027t matter much what the is_hardware_accelerated flag is set to.\n\nI asked Magnus previously about this maybe being too slow, but he thinks it\u0027s fine since this method is only called once.\n\nWhen it comes to correctness I think this is the best we can do? We can\u0027t really know anything about whether encoders that the user supplies are implemented in hardware of software, but we assume hardware. I think there is some plan to get rid of this QueryVideoEncoder method altogether.",
      "parentUuid": "2ae8338e_3cdc3fad",
      "range": {
        "startLine": 86,
        "startChar": 2,
        "endLine": 90,
        "endChar": 3
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5365da6d_c820fb5e",
        "filename": "sdk/android/src/jni/vp8codec_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "Drop the _jni suffix from this file name. It\u0027s not necessary anymore since we put all jni files in a jni folder.",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 1
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcac2240_936e8cef",
        "filename": "sdk/android/src/jni/vp8codec_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5365da6d_c820fb5e",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 1
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "923884b3_1969f4fb",
        "filename": "sdk/android/src/jni/vp8codec_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5098
      },
      "writtenOn": "2017-11-02T10:24:29Z",
      "side": 1,
      "message": "Use the helper macro for this.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 34
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54e64a97_6ae74974",
        "filename": "sdk/android/src/jni/vp8codec_jni.cc",
        "patchSetId": 3
      },
      "lineNbr": 19,
      "author": {
        "id": 5249
      },
      "writtenOn": "2017-11-02T15:27:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "923884b3_1969f4fb",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 34
      },
      "revId": "360bf72ae4fa8f8f12a3356a046cfa6d5cc272e9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}