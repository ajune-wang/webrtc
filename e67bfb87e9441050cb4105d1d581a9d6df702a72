{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8a151ac0_bf00a89c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-10-11T11:49:06Z",
      "side": 1,
      "message": "I still haven\u0027t tested this yet (still building Chromium), but I think this should work so I\u0027m pushing it as WIP so you can try and take a look.",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "921fd32a_c42b789b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 19629
      },
      "writtenOn": "2022-10-11T15:04:34Z",
      "side": 1,
      "message": "Thanks for the change.",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f43d8d0c_aec765b8",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 19629
      },
      "writtenOn": "2022-10-11T15:04:34Z",
      "side": 1,
      "message": "Any idea why this was set to 16? A comment would be nice.",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "585d0c3d_64a66427",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-10-11T16:13:38Z",
      "side": 1,
      "message": "I don\u0027t remember, I\u0027ve seen it somewhere probably, but it can be also unlimited (that\u0027s what I see in PipeWire example).",
      "parentUuid": "f43d8d0c_aec765b8",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29f332cd_1332dd03",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-10-12T08:20:58Z",
      "side": 1,
      "message": "Alright, the way I did it now limits it to actually one damage region so I\u0027m setting this back to 16, which is what KWin does support. We can update this later based on what number of damage regions will be supported by Mutter.",
      "parentUuid": "585d0c3d_64a66427",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "90b2abf9_1ef3498e",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 19629
      },
      "writtenOn": "2022-10-14T17:24:48Z",
      "side": 1,
      "message": "Would you know what happens if the source / compositor wants to send more than the maximum number we are setting here? Would it send more frames with different deltas until it has communicated all the damaged rectangles? If yes, how do we ensure that we have waited for all the damaged rectangles of the frame (otherwise, we might present an inconsistent frame state to the user) or may be it just marks the complete frame as damaged (which is possibly what you were seeing in the testing)?\n\nMay be we should set the number fairly large (if not unlimited) so that we don\u0027t have to keep on waiting for all the deltas by the compositor.",
      "parentUuid": "29f332cd_1332dd03",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73235f40_e4b14f00",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 841,
      "author": {
        "id": 19629
      },
      "writtenOn": "2022-10-11T15:04:34Z",
      "side": 1,
      "message": "It would be ok to do a union for overlapping rectangles but otherwise we should add separate non-overlapping rectangles possibly using this API:\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/desktop_capture/desktop_region.h;drc\u003db44e2b7a8a0df47f5a2d114d82ff8d5375e13bd7;bpv\u003d1;bpt\u003d1;l\u003d113",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "29b222e6_224b1fd3",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 841,
      "author": {
        "id": 8046
      },
      "writtenOn": "2022-10-11T16:13:38Z",
      "side": 1,
      "message": "Thanks for this suggestion. I didn\u0027t realize the difference between DesktopRegion and DesktopRect. Fixed.",
      "parentUuid": "73235f40_e4b14f00",
      "revId": "e67bfb87e9441050cb4105d1d581a9d6df702a72",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}