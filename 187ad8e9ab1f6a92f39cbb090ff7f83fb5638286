{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fa5db62d_fb049bc6",
        "filename": "modules/rtp_rtcp/source/fec_test_helper.cc",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-03-16T16:23:01Z",
      "side": 1,
      "message": "feel free to write\nred_buffer[1] \u0026 0x7F\n\n(CopyOnWriteBuffer::operator[] is always const now)",
      "range": {
        "startLine": 193,
        "startChar": 31,
        "endLine": 193,
        "endChar": 58
      },
      "revId": "187ad8e9ab1f6a92f39cbb090ff7f83fb5638286",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8295620d_ab995592",
        "filename": "modules/rtp_rtcp/source/fec_test_helper.cc",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-03-16T16:23:01Z",
      "side": 1,
      "message": "alternatively to this line, you may later (after Parse) write\nred_packet.SetPayloadType(kRedPayloadType);\n\n(if you move red_buffer into the red_packet, it shouldn\u0027t fork it)",
      "range": {
        "startLine": 195,
        "startChar": 2,
        "endLine": 196,
        "endChar": 80
      },
      "revId": "187ad8e9ab1f6a92f39cbb090ff7f83fb5638286",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4927656_e27ded8e",
        "filename": "modules/rtp_rtcp/source/fec_test_helper.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-03-16T16:23:01Z",
      "side": 1,
      "message": "nit: std::move(red_buffer)\n(to avoid extra reference count increase/decrease)",
      "range": {
        "startLine": 202,
        "startChar": 29,
        "endLine": 202,
        "endChar": 39
      },
      "revId": "187ad8e9ab1f6a92f39cbb090ff7f83fb5638286",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22d827b9_be9a9831",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-03-16T16:23:01Z",
      "side": 1,
      "message": "RED",
      "range": {
        "startLine": 144,
        "startChar": 48,
        "endLine": 144,
        "endChar": 51
      },
      "revId": "187ad8e9ab1f6a92f39cbb090ff7f83fb5638286",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c1d69e8_4e2e96f2",
        "filename": "modules/rtp_rtcp/source/ulpfec_receiver_impl.cc",
        "patchSetId": 1
      },
      "lineNbr": 148,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-03-16T16:23:01Z",
      "side": 1,
      "message": "for symmetry it might be more readable to use `rtp_packet.size() - rtp_packet.header_size() - kRedHeaderLength` as second parameter,",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 148,
        "endChar": 37
      },
      "revId": "187ad8e9ab1f6a92f39cbb090ff7f83fb5638286",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}