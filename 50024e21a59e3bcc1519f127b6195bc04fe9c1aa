{
  "comments": [
    {
      "key": {
        "uuid": "0a215b27_3ddecb25",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-07T15:46:19Z",
      "side": 1,
      "message": "description mention this function is for\n\"where the packet isn\u0027t stored in the history during pacing\"\nwhat would it update then?\nwould it make sense to instead call PutRtpPacket function with send_time argument set?",
      "range": {
        "startLine": 216,
        "startChar": 6,
        "endLine": 216,
        "endChar": 37
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0223ec3e_ceb019af",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 1
      },
      "lineNbr": 216,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-06-08T12:36:40Z",
      "side": 1,
      "message": "I had planned on doing logic change in several steps, but now changed my mind partially.\n\nThe behavior I want to reach is that any retransmittable packet will be cloned and put into the history after it exits the pacer. Any subsequent retransmission will retrieve a new copy of that clone and put it into the pacer queue. (In a follow-up, RTX-encapsulation will happen pre-pacer too.)\n\nSo this method is used in the logic to limit number of retransmissions, make sure the same packet isn\u0027t duplicated in the queue, and that retransmissions shouldn\u0027t happen within on RTT.\n\nIf a packet in the history times out while there is a retransmission pending in the pacer queue,  we don\u0027t need to update the last retransmission time and can return early here.",
      "parentUuid": "0a215b27_3ddecb25",
      "range": {
        "startLine": 216,
        "startChar": 6,
        "endLine": 216,
        "endChar": 37
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71ecaeb6_9a6f315a",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-07T15:46:19Z",
      "side": 1,
      "message": "would it still be possible to retransmit packet before it was transmitted?",
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f789f205_58b66ef3",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-06-08T12:36:40Z",
      "side": 1,
      "message": "No, I\u0027ll make this a DCHECK instead.\nWhen old code path is cleaned up when can make this field non-optional and remove the StorageType entirely.",
      "parentUuid": "71ecaeb6_9a6f315a",
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e249d95_e108ea11",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-07T15:46:19Z",
      "side": 1,
      "message": "longer",
      "range": {
        "startLine": 226,
        "startChar": 37,
        "endLine": 226,
        "endChar": 41
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd7c9c96_f6655044",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-06-08T12:36:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e249d95_e108ea11",
      "range": {
        "startLine": 226,
        "startChar": 37,
        "endLine": 226,
        "endChar": 41
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3568e66_fcfa819a",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-07T15:46:19Z",
      "side": 1,
      "message": "may be add a function comment.\nFunction look like like simple setter, but parameter doesn\u0027t match what it actually set, so it might look confusion.\nSomething like:\nSets current time as send time to packet with |sequence_number| and counts it as retransmitted.",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 18
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96106952_08796fdd",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history.h",
        "patchSetId": 1
      },
      "lineNbr": 85,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-06-08T12:36:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3568e66_fcfa819a",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 18
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a8410f1_94f20325",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 688,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-07T15:46:19Z",
      "side": 1,
      "message": "would it mean that on sending there always be two copies:\none passed to pacer queue, another - to store in the history?\n\n[I guess it is already the case: first packet is stored, then a copy is made to send it]",
      "range": {
        "startLine": 688,
        "startChar": 2,
        "endLine": 688,
        "endChar": 69
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d2d189c_07ffec0d",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 688,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-06-08T12:36:40Z",
      "side": 1,
      "message": "See other comments, I have reworked this as I want to move directly to putting packets into the history after rather than before pacer.",
      "parentUuid": "6a8410f1_94f20325",
      "range": {
        "startLine": 688,
        "startChar": 2,
        "endLine": 688,
        "endChar": 69
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3db4031_cc70b3cf",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 713,
      "author": {
        "id": 5019
      },
      "writtenOn": "2019-06-07T15:46:19Z",
      "side": 1,
      "message": "may be \u0027for next retransmission\u0027\n(otherwise I was wondering why packet was sent while it is too early for retransmission)\nor put an empty line above and remove empty line#710",
      "range": {
        "startLine": 713,
        "startChar": 15,
        "endLine": 713,
        "endChar": 21
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "452cc387_abd066a4",
        "filename": "modules/rtp_rtcp/source/rtp_packet_history_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 713,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-06-08T12:36:40Z",
      "side": 1,
      "message": "Obsolete, this test is completely rewritten.",
      "parentUuid": "c3db4031_cc70b3cf",
      "range": {
        "startLine": 713,
        "startChar": 15,
        "endLine": 713,
        "endChar": 21
      },
      "revId": "50024e21a59e3bcc1519f127b6195bc04fe9c1aa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}