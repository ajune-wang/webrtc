{
  "comments": [
    {
      "key": {
        "uuid": "c0a19698_5d35814f",
        "filename": "pc/channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 630,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-01-25T22:39:37Z",
      "side": 1,
      "message": "This is the case of 1 rid. Side question, but when/how will this case be supported? If AddTransceiver() specifies 1 layer with a rid?\n\nAlso isn\u0027t this dechecked below that it never occurs?\nRTC_DCHECK(new_stream.has_ssrcs() || new_stream.has_rids());",
      "range": {
        "startLine": 630,
        "startChar": 5,
        "endLine": 630,
        "endChar": 50
      },
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b1466e6_e8d9b1b2",
        "filename": "pc/channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 630,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-01-26T01:14:24Z",
      "side": 1,
      "message": "with 1 rid this is fine, it will generate an SSRC for that rid.\nthe DCHECK below is only meant as a safeguard for the implementation below it. just above that DCHECK there is a \"continue\" if there are no ssrcs or rids.",
      "parentUuid": "c0a19698_5d35814f",
      "range": {
        "startLine": 630,
        "startChar": 5,
        "endLine": 630,
        "endChar": 50
      },
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b0fc42e_7d42d7f3",
        "filename": "pc/channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 678,
      "author": {
        "id": 5800
      },
      "writtenOn": "2019-01-25T22:39:37Z",
      "side": 1,
      "message": "Do you want to add a comment/TODO for supporting flex fec? Since this can be true in the case of AddStreamParams:\n const bool include_flexfec_stream \u003d ContainsFlexfecCodec(content_description-\u003ecodecs());\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/pc/media_session.cc?l\u003d536",
      "range": {
        "startLine": 678,
        "startChar": 31,
        "endLine": 678,
        "endChar": 53
      },
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7517396_a456c28d",
        "filename": "pc/channel.cc",
        "patchSetId": 3
      },
      "lineNbr": 678,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-01-26T01:14:24Z",
      "side": 1,
      "message": "https://cs.chromium.org/chromium/src/third_party/webrtc/pc/media_session.cc?type\u003dcs\u0026q\u003dmedia_session.cc\u0026g\u003d0\u0026l\u003d427\nreferences brandtr to update the code when this is supported.\nFlex does not support multiple streams. however, this code can technically be called with a single stream, so there may be an issue here.\ni\u0027ll add a bug.",
      "parentUuid": "7b0fc42e_7d42d7f3",
      "range": {
        "startLine": 678,
        "startChar": 31,
        "endLine": 678,
        "endChar": 53
      },
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc55a06c_6ebb4351",
        "filename": "pc/media_session.h",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-01-25T20:37:36Z",
      "side": 1,
      "message": "This line feels out of date.",
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ff64f7c_3989ee3a",
        "filename": "pc/media_session.h",
        "patchSetId": 3
      },
      "lineNbr": 131,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-01-25T21:17:26Z",
      "side": 1,
      "message": "it may no longer be default. in fact, i don\u0027t think \u0027default\u0027 usually means what i understand this to mean. i\u0027ll update to:\n// Simple constructor that does not set any configuration for the factory.\n// When using this constructor, the methods below can be used to set the configuration",
      "parentUuid": "bc55a06c_6ebb4351",
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1b3e31f1_09559e46",
        "filename": "pc/media_session.h",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-01-25T20:37:36Z",
      "side": 1,
      "message": "nit: remove explicit",
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35bf6093_1a8371a2",
        "filename": "pc/media_session.h",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-01-25T21:17:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b3e31f1_09559e46",
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f6d2bf5_629f7ceb",
        "filename": "pc/media_session.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-01-25T20:37:36Z",
      "side": 1,
      "message": "Maybe also mention lifetime requirement of ssrc_generator",
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7243fe65_fbf30074",
        "filename": "pc/media_session.h",
        "patchSetId": 3
      },
      "lineNbr": 136,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-01-25T21:17:26Z",
      "side": 1,
      "message": "// The TransportDescriptionFactory and the UniqueRandomIdGenerator are not\n// owned by MediaSessionDescriptionFactory, so they must be kept alive by the \n// user of this class.",
      "parentUuid": "5f6d2bf5_629f7ceb",
      "revId": "2ab1f68660c04f45a0b60105786804d9456f58f0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}