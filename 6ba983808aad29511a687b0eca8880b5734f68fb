{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "67cb03fb_a7f4dc90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-27T12:33:00Z",
      "side": 1,
      "message": "Sorry about the tests. Had to add back the const char* version of ToString to make sure the overload resolution works as expected. All green now.",
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "19e8d4dd_2b31c524",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "A couple of questions and comments after a first look.",
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db464481_4dbddb5e",
        "filename": "examples/turnserver/read_auth_file.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "Maybe clearer as absl::string_view(line).substr(sep + 1)",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 73
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "431510f1_1150f72d",
        "filename": "examples/turnserver/read_auth_file.cc",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-29T10:05:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db464481_4dbddb5e",
      "range": {
        "startLine": 29,
        "startChar": 8,
        "endLine": 29,
        "endChar": 73
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3beebed_ce080716",
        "filename": "modules/audio_coding/acm2/audio_coding_module_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1119,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "Should we have implicit conversion from rtc::Buffer to string_view?",
      "range": {
        "startLine": 1118,
        "startChar": 38,
        "endLine": 1119,
        "endChar": 61
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1edce2e7_750efe35",
        "filename": "modules/audio_coding/acm2/audio_coding_module_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1119,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-29T10:05:39Z",
      "side": 1,
      "message": "BufferT is templated on the value type T and Buffer is just a specialization of BufferT\u003cuint8_t\u003e. Adding an implicit conversion to string_view seems cumbersome. I guess we could add a templated view() method that could either return an arrayview or absl::string_view. But is it really worth it?",
      "parentUuid": "f3beebed_ce080716",
      "range": {
        "startLine": 1118,
        "startChar": 38,
        "endLine": 1119,
        "endChar": 61
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6e5b109_2d0c20b9",
        "filename": "modules/audio_coding/acm2/audio_coding_module_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 1119,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-29T11:58:26Z",
      "side": 1,
      "message": "Worth exploring, I think it should be possibly to add a string_view conversion operator that is enabled only if T is char.\n\nIf it were an rtc::ArrayView rather than string_view, then it wouldn\u0027t need a conversion operator, it should be sufficient with a plain .data() method. Maybe string_view will get the same in C++23, but I don\u0027t quite understand the meaning of overload (6) at https://en.cppreference.com/w/cpp/string/basic_string_view/basic_string_view.",
      "parentUuid": "1edce2e7_750efe35",
      "range": {
        "startLine": 1118,
        "startChar": 38,
        "endLine": 1119,
        "endChar": 61
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6524c5e1_c93cd596",
        "filename": "modules/audio_coding/neteq/test/result_sink.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "Would this be simpler with std::string?",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1bb2af2e_f2038524",
        "filename": "modules/audio_coding/neteq/test/result_sink.cc",
        "patchSetId": 2
      },
      "lineNbr": 95,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-29T10:05:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6524c5e1_c93cd596",
      "range": {
        "startLine": 95,
        "startChar": 2,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ca5f111_b89d0977",
        "filename": "modules/audio_coding/neteq/test/result_sink.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "I think .data() is more common in recent code.",
      "range": {
        "startLine": 97,
        "startChar": 18,
        "endLine": 97,
        "endChar": 28
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "888d8d01_404f3cd5",
        "filename": "modules/audio_coding/neteq/test/result_sink.cc",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-29T10:05:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ca5f111_b89d0977",
      "range": {
        "startLine": 97,
        "startChar": 18,
        "endLine": 97,
        "endChar": 28
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e72d666_db96eb70",
        "filename": "modules/audio_coding/neteq/test/result_sink.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "if digest_-\u003eSize() is the same as buffer.size(), I think implicit conversion of buffer will do.",
      "range": {
        "startLine": 99,
        "startChar": 22,
        "endLine": 99,
        "endChar": 68
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f1ce8aa_ae028323",
        "filename": "modules/audio_coding/neteq/test/result_sink.cc",
        "patchSetId": 2
      },
      "lineNbr": 99,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-29T10:05:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e72d666_db96eb70",
      "range": {
        "startLine": 99,
        "startChar": 22,
        "endLine": 99,
        "endChar": 68
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9b20a02_d92f7e9c",
        "filename": "rtc_base/string_encode.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-28T13:45:39Z",
      "side": 1,
      "message": "I wonder if string_view or ArrayView is most appropriate, given that input is binary data rather than text?",
      "range": {
        "startLine": 31,
        "startChar": 23,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fbd82ecf_ca4eab0e",
        "filename": "rtc_base/string_encode.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 10107
      },
      "writtenOn": "2022-03-29T10:05:39Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion, but since this is often called with std::string I would vote to just keep it as is. I personally don\u0027t think using arrayview makes that big a difference semantically when you only want to support dealing with chars.",
      "parentUuid": "a9b20a02_d92f7e9c",
      "range": {
        "startLine": 31,
        "startChar": 23,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df7b930d_65e60c4e",
        "filename": "rtc_base/string_encode.h",
        "patchSetId": 2
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-29T11:58:26Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion. However, you could use ArrayView for the output buffers, instead of char* buffer, size_t buflen.",
      "parentUuid": "fbd82ecf_ca4eab0e",
      "range": {
        "startLine": 31,
        "startChar": 23,
        "endLine": 31,
        "endChar": 44
      },
      "revId": "6ba983808aad29511a687b0eca8880b5734f68fb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}