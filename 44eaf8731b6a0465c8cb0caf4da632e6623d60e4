{
  "comments": [
    {
      "key": {
        "uuid": "ebe4bd15_d6ff2926",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-20T07:14:54Z",
      "side": 1,
      "message": "An alternative definition might be\n\nusing Atomic32 \u003d std::atomic\u003cint32_t\u003e;\n\nbut then we\u0027d need to track down and update or delete all (few) uses of the Value and CompareExchange methods.\n\nBut I\u0027m happy to postpone that to a later cl, if you need to resolve the deprecation warnings quickly and easily.",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 5
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9df431c6_48687a9e",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 5061
      },
      "writtenOn": "2017-10-20T08:31:36Z",
      "side": 1,
      "message": "Alternatively we might just subclass std::atomic\u003cint32_t\u003e and add Value and CompareExchange. Not sure whether it\u0027s cleaner than wrapping it in a new class...",
      "parentUuid": "ebe4bd15_d6ff2926",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 5
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2889d2bf_595402a8",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 5508
      },
      "writtenOn": "2017-10-20T15:04:34Z",
      "side": 1,
      "message": "Do we actually need the Atomic32 class?  I think it\u0027s mostly still around for legacy reasons. If we want to make changes, then it might be better to change the code that uses Atomic32 class, to use std::atomic\u003c\u003e",
      "parentUuid": "9df431c6_48687a9e",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 5
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0eaa9ba_0f924ffb",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 31,
      "author": {
        "id": 5061
      },
      "writtenOn": "2017-10-20T18:13:36Z",
      "side": 1,
      "message": "We could mass replace Atomic32 with std::atomic\u003cint32_t\u003e in webrtc, but:\n* Do we have downstream that uses webrtc::Atomic32? Note that Chromoting is waiting for this to unblock iOS 9 deprecation so we try to avoid last minute revert...\n* I\u0027m not sure what\u0027s the final decision of atomicops.h vs std::atomic in Chromium and WebRTC. I prefer not changing the interface for now...",
      "parentUuid": "2889d2bf_595402a8",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 5
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9aa0c779_2509cd05",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 5061
      },
      "writtenOn": "2017-10-18T23:21:09Z",
      "side": 1,
      "message": "Is this check still useful if we are using std::atomic now?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 41
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffc8b70d_f2d131e6",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 5234
      },
      "writtenOn": "2017-10-20T06:34:45Z",
      "side": 1,
      "message": "I don\u0027t think so, please delete.",
      "parentUuid": "9aa0c779_2509cd05",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 41
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fb0b6b5_cb5481b5",
        "filename": "system_wrappers/include/atomic32.h",
        "patchSetId": 9
      },
      "lineNbr": 50,
      "author": {
        "id": 5061
      },
      "writtenOn": "2017-10-20T18:51:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffc8b70d_f2d131e6",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 41
      },
      "revId": "44eaf8731b6a0465c8cb0caf4da632e6623d60e4",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}