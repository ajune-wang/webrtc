{
  "comments": [
    {
      "key": {
        "uuid": "94d3dc8e_c7770b37",
        "filename": "audio/audio_send_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "From the usage here, the code would perhaps be easier to read if the method would be named\nAssignEncoderToPacketizerFrameTransformer\nor maybe\nSetEncoderForPacketizerFrameTransformer",
      "range": {
        "startLine": 255,
        "startChar": 19,
        "endLine": 255,
        "endChar": 57
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af7d3128_f55b5482",
        "filename": "audio/audio_send_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Oh I see where the confusion is. The function sets a FrameTransformer in the insertion point Encoder-to-Packetizer, so the function name should be read Set(EncoderToPacketizer)FrameTransformer. FWIW I plan to replace the Set(EncoderToPacketizer/DepacketizerToDecoder)FrameTransformer with SetFrameTransformer(InsertionPoint::kEncoderToPacketizer/kDepacketizerToDecoder) in a future CL for both audio and video.\n\nFor now though I would prefer to keep this name because it\u0027s used on the video side as well, and in the common audio/video code paths between rtp sender/receiver and media channel.",
      "parentUuid": "94d3dc8e_c7770b37",
      "range": {
        "startLine": 255,
        "startChar": 19,
        "endLine": 255,
        "endChar": 57
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a62fc4b8_bda61541",
        "filename": "audio/audio_send_stream.cc",
        "patchSetId": 1
      },
      "lineNbr": 255,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T19:39:43Z",
      "side": 1,
      "message": "Ah, then I see.\nSounds good to keep it to preserve the consistency with video, but I think it is great that the method will be renamed in the future because the name is easy to misunderstand!",
      "parentUuid": "af7d3128_f55b5482",
      "range": {
        "startLine": 255,
        "startChar": 19,
        "endLine": 255,
        "endChar": 57
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0213784d_8fe45f04",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "Please add comment describing the method.",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 46
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "530f0423_530ba541",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "As commented elsewhere, the naming of this method does not seem fully correct.",
      "range": {
        "startLine": 146,
        "startChar": 7,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "edcb6872_6df17b76",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Explained in another comment.",
      "parentUuid": "530f0423_530ba541",
      "range": {
        "startLine": 146,
        "startChar": 7,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e47cb41_e9964090",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0213784d_8fe45f04",
      "range": {
        "startLine": 146,
        "startChar": 0,
        "endLine": 146,
        "endChar": 46
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87da397d_e3232f8b",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 146,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T19:39:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "edcb6872_6df17b76",
      "range": {
        "startLine": 146,
        "startChar": 7,
        "endLine": 146,
        "endChar": 45
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ad10114_27ad1280",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "Please add a comment describing this (similarly to frame_encryptor_).",
      "range": {
        "startLine": 225,
        "startChar": 2,
        "endLine": 226,
        "endChar": 37
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbd29dbc_b0ecad54",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ad10114_27ad1280",
      "range": {
        "startLine": 225,
        "startChar": 2,
        "endLine": 226,
        "endChar": 37
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3584cdc_cd546f94",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 915,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-03-28T01:46:20Z",
      "side": 1,
      "message": "do you need to std::move frame_transformer here into a param?",
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5dcb767_e572f710",
        "filename": "audio/channel_send.cc",
        "patchSetId": 1
      },
      "lineNbr": 915,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Yes, that\u0027s better.",
      "parentUuid": "c3584cdc_cd546f94",
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0305d266_17a41154",
        "filename": "call/audio_send_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "Please add a comment similar to the frame_encryptor, describing the purpose of this member.",
      "range": {
        "startLine": 162,
        "startChar": 4,
        "endLine": 162,
        "endChar": 76
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "157f3b1a_1efe5b3a",
        "filename": "call/audio_send_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 162,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0305d266_17a41154",
      "range": {
        "startLine": 162,
        "startChar": 4,
        "endLine": 162,
        "endChar": 76
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc8d0393_31f55917",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2328,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "Another question to this is as to what happens if there are no matching_streams. In that case it will fail silently to add an encoder.\nIs there then a risk that audio may be silently dropped due to an encoder not being assigned?",
      "range": {
        "startLine": 2325,
        "startChar": 0,
        "endLine": 2328,
        "endChar": 49
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37f8b18d_8126531a",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2328,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Because of how the web API is defined, the stream should always exists when the transformer is set on the rtp sender. But I might need to revisit this depending on how experimentation goes, and what the final web API will look like.",
      "parentUuid": "cc8d0393_31f55917",
      "range": {
        "startLine": 2325,
        "startChar": 0,
        "endLine": 2328,
        "endChar": 49
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ac571ac_1e1d789b",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2328,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T19:39:43Z",
      "side": 1,
      "message": "In that case there should at least be a DCHECK on that matching_stream !\u003d send_streams_.end()) but I definitely think that an error code should be returned as well. On top of that I think a LS_ERROR should be logged.\nAs a comparison, that is how it is treated on line 2319 as well as on line 1850.",
      "parentUuid": "37f8b18d_8126531a",
      "range": {
        "startLine": 2325,
        "startChar": 0,
        "endLine": 2328,
        "endChar": 49
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "576b42a4_71e6cd29",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2328,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-31T08:57:29Z",
      "side": 1,
      "message": "I added a log line (with LS_INFO, see why below). I will add a return code when I change the function name in a follow-up CL, this is an override from media channel base, overriden on video side as well.\n\nRegarding the DCHECK, I thought about it some more and I think it\u0027s possible that the stream does not exist here depending on which participant of the peer connection initiates the connection in JS. And if the stream does not exist when the sender is created, the transformer will be set when setting the ssrc[1], which will call this method again and then the stream should exist.\n\nIn conclusion, I think it is ok if the stream is not found at first, because this method gets called again when the stream does exists, and the transformer ends up being set on the stream.\n\nThat said, it\u0027s possible that I discover more corner cases when the blink and JS changes are in place as well, now I\u0027m testing with a loopback blink implementation, without reaching JS. I might need to follow up with bug fixes once we integrate this end to end.\n\n[1] https://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/pc/rtp_sender.cc;drc\u003db05ca4b6168ccad0db5f6350d438272e59a3b9ca;l\u003d300?originalUrl\u003dhttps:%2F%2Fcs.chromium.org%2F",
      "parentUuid": "9ac571ac_1e1d789b",
      "range": {
        "startLine": 2325,
        "startChar": 0,
        "endLine": 2328,
        "endChar": 49
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c4e57df_4ebc356e",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2335,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "This code is adding the encoder to the PacketizerFrameTransformer, right? \nSince this gracefully fails to add the encoder if the send_stream_ does not exist, would it make sense to add a return value to inform the caller of the fact that it was not added?",
      "range": {
        "startLine": 2330,
        "startChar": 1,
        "endLine": 2335,
        "endChar": 1
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c34fe12_d9f0e744",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2335,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "As I explained in another comment, this code sets the frame transformer between encoder and packetizer. For now the same, as with the function name, I would keep the common return type with video, but this might change in the future.",
      "parentUuid": "7c4e57df_4ebc356e",
      "range": {
        "startLine": 2330,
        "startChar": 1,
        "endLine": 2335,
        "endChar": 1
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b22c4de8_2b91d1b6",
        "filename": "media/engine/webrtc_voice_engine.cc",
        "patchSetId": 1
      },
      "lineNbr": 2335,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-30T19:39:43Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6c34fe12_d9f0e744",
      "range": {
        "startLine": 2330,
        "startChar": 1,
        "endLine": 2335,
        "endChar": 1
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "61068ad1_065a7db7",
        "filename": "media/engine/webrtc_voice_engine.h",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 5125
      },
      "writtenOn": "2020-03-27T13:49:36Z",
      "side": 1,
      "message": "This method name is a bit strange.\nIt sounds like the encoder is set to the PacketizerFrameTransformer which is not really correct.\nWhat about something along\n\nSetEncoderForPacketizerFrameTransformer?\nSetPacketizerFrameTransformerEncoder?\n\n\n\nAlso, I think it would be good with a comment describing this method.",
      "range": {
        "startLine": 212,
        "startChar": 7,
        "endLine": 212,
        "endChar": 45
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0958b619_eaa84085",
        "filename": "media/engine/webrtc_voice_engine.h",
        "patchSetId": 1
      },
      "lineNbr": 212,
      "author": {
        "id": 8594
      },
      "writtenOn": "2020-03-30T13:50:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61068ad1_065a7db7",
      "range": {
        "startLine": 212,
        "startChar": 7,
        "endLine": 212,
        "endChar": 45
      },
      "revId": "02c9849eb989a9f8d00fce369c4da32f32c85ce5",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}