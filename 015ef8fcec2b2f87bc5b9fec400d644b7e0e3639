{
  "comments": [
    {
      "key": {
        "uuid": "2c449876_735bee12",
        "filename": "api/video_codecs/vp8_frame_buffer_controller.h",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-03-11T11:14:06Z",
      "side": 1,
      "message": "I believe this method will be called for each stream index and each call is based on the same VideoBitrateAllocation instance but sliced per spatial layer.\nSo maybe change this to a const VideoBitrateAllocation\u0026 and slice internally instead?",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 94,
        "endChar": 53
      },
      "revId": "015ef8fcec2b2f87bc5b9fec400d644b7e0e3639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcb115b3_303cbce3",
        "filename": "api/video_codecs/vp8_frame_buffer_controller.h",
        "patchSetId": 3
      },
      "lineNbr": 94,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-03-19T15:35:16Z",
      "side": 1,
      "message": "As discussed offline, I\u0027m fine with doing it like this.",
      "parentUuid": "2c449876_735bee12",
      "range": {
        "startLine": 92,
        "startChar": 0,
        "endLine": 94,
        "endChar": 53
      },
      "revId": "015ef8fcec2b2f87bc5b9fec400d644b7e0e3639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "940c82b9_cf969d39",
        "filename": "api/video_codecs/vp8_temporal_layers.cc",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-03-11T11:14:06Z",
      "side": 1,
      "message": "Do we need to pass this as a pointer, or could move semantics work?",
      "range": {
        "startLine": 20,
        "startChar": 58,
        "endLine": 20,
        "endChar": 59
      },
      "revId": "015ef8fcec2b2f87bc5b9fec400d644b7e0e3639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b8dd144_120c522d",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 283,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-03-11T11:14:06Z",
      "side": 1,
      "message": "As mentioned in other comment, just\n  frame_buffer_controller-\u003eOnRatesUpdated(bitrate, new_framerate);\nbefore the loop. That could mean we set the rate to 0 for an unused layer, but it should just be a noop.",
      "range": {
        "startLine": 283,
        "startChar": 32,
        "endLine": 283,
        "endChar": 46
      },
      "revId": "015ef8fcec2b2f87bc5b9fec400d644b7e0e3639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a4eee26_6bc52be1",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 299,
      "author": {
        "id": 5147
      },
      "writtenOn": "2019-03-08T15:29:45Z",
      "side": 1,
      "message": "This checked was necessary due to a few unit tests. I wonder if we should modify those tests to call InitEncode(), and change this if-statement to a D/CHECK. Wdyt?",
      "revId": "015ef8fcec2b2f87bc5b9fec400d644b7e0e3639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f97e996b_7dd1e9e4",
        "filename": "modules/video_coding/codecs/vp8/libvpx_vp8_encoder.cc",
        "patchSetId": 3
      },
      "lineNbr": 299,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-03-11T11:14:06Z",
      "side": 1,
      "message": "Yes, I think that makes sense. Adding complexity to production code for the sake of unit tests is usually not a good idea :)",
      "parentUuid": "3a4eee26_6bc52be1",
      "revId": "015ef8fcec2b2f87bc5b9fec400d644b7e0e3639",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}