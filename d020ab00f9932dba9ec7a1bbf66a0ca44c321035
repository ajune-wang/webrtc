{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f9410511_a4724133",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 7,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-01-10T10:48:40Z",
      "side": 1,
      "message": "Please add a newline after the first sentence. It will be used for short CL description and is advised to be short.",
      "range": {
        "startLine": 6,
        "startChar": 0,
        "endLine": 7,
        "endChar": 68
      },
      "revId": "d020ab00f9932dba9ec7a1bbf66a0ca44c321035",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05d1efcb_c9aa6683",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-01-10T10:43:00Z",
      "side": 1,
      "message": "Ilya, you might be most familiar with this. I was surprised that orphis\u0027 https://orphis.github.io/webrtc-sandbox/simulcast-playground.html still works but that is probably due to SEA being used which avoids this codepath and the native OpenH264 simulcast codepath is only called in cases where the dimensions satisfy the powers-of-two condition?",
      "revId": "d020ab00f9932dba9ec7a1bbf66a0ca44c321035",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0173caaa_12489a0d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2023-01-10T10:47:36Z",
      "side": 1,
      "message": "I\u0027m not familiar with this particular workaround. Generally speaking, it\u0027s not needed. Mirta, you\u0027ve added this code. Is it still needed.",
      "revId": "d020ab00f9932dba9ec7a1bbf66a0ca44c321035",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad26b703_4df680a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 19744
      },
      "writtenOn": "2023-01-10T11:42:05Z",
      "side": 1,
      "message": "It should not be needed if the H.264 encoder can handle arbitrary scale factors now.",
      "parentUuid": "0173caaa_12489a0d",
      "revId": "d020ab00f9932dba9ec7a1bbf66a0ca44c321035",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9f4f042_055300be",
        "filename": "modules/video_coding/utility/simulcast_utility.cc",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 19744
      },
      "writtenOn": "2023-01-10T11:42:05Z",
      "side": 1,
      "message": "I think we should remove this condition now - we want to verify that `simulcastStream` widths/heights are non-decreasing for H.264 as well.",
      "range": {
        "startLine": 52,
        "startChar": 2,
        "endLine": 52,
        "endChar": 50
      },
      "revId": "d020ab00f9932dba9ec7a1bbf66a0ca44c321035",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}