{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "05d6aa8c_b944be8c",
        "filename": "video/video_send_stream.h",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T12:38:07Z",
      "side": 1,
      "message": "nit: Can you s/VideoSendStreamInternal/VideoSendStreamImpl/g? Found 2 more occurrences in VideoSendStreamImpl.",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0168ecb8_825650d5",
        "filename": "video/video_send_stream.h",
        "patchSetId": 15
      },
      "lineNbr": 50,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-03T14:30:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "05d6aa8c_b944be8c",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 50,
        "endChar": 46
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5c7c604_ae88636d",
        "filename": "video/video_send_stream.h",
        "patchSetId": 15
      },
      "lineNbr": 113,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T12:38:07Z",
      "side": 1,
      "message": "Is there a point in forward declaring Impl and having to store as unique_ptr?",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 23
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aa5867e7_a06d20d6",
        "filename": "video/video_send_stream.h",
        "patchSetId": 15
      },
      "lineNbr": 113,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-03T14:30:56Z",
      "side": 1,
      "message": "Hmm... I guess it must be because video_send_stream_impl.h #included this file and there would be a circular dependency otherwise.\n\nHowever, that\u0027s not needed anymore, so thanks for pointing that out. This is no longer a pointer.",
      "parentUuid": "a5c7c604_ae88636d",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 23
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ede08526_32bdbe22",
        "filename": "video/video_send_stream.h",
        "patchSetId": 15
      },
      "lineNbr": 113,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T15:05:42Z",
      "side": 1,
      "message": "Nice!",
      "parentUuid": "aa5867e7_a06d20d6",
      "range": {
        "startLine": 113,
        "startChar": 8,
        "endLine": 113,
        "endChar": 23
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f29eadf_5fca4dac",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 303,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T12:38:07Z",
      "side": 1,
      "message": "Is this text leftover? As we now do this from VideoSendStream.",
      "range": {
        "startLine": 300,
        "startChar": 2,
        "endLine": 303,
        "endChar": 58
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "749d9e08_ce0b481a",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 303,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-03T14:30:56Z",
      "side": 1,
      "message": "oh thanks - yes this is a note to self that I missed. Deleted now.",
      "parentUuid": "1f29eadf_5fca4dac",
      "range": {
        "startLine": 300,
        "startChar": 2,
        "endLine": 303,
        "endChar": 58
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15ac1ebd_956defa8",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 303,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T14:57:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "749d9e08_ce0b481a",
      "range": {
        "startLine": 300,
        "startChar": 2,
        "endLine": 303,
        "endChar": 58
      },
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b871555f_2b8b2549",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 373,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T12:38:07Z",
      "side": 1,
      "message": "What stops this scenario?\n1. We\u0027re called on another sequence than |rtp_transport_queue_| and the lambda is posted.\n2. VideoSendStream destroys the Impl\n3. The lambda is dropped due to no safety anymore.\n\nIn such case we won\u0027t execute StopVideoSendStream and so won\u0027t deregister observers etc.",
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6501ad8_4ee06048",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 373,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-03T14:30:56Z",
      "side": 1,
      "message": "yes this is a bit confusing. In practice the code path always goes through StopVideoSendStream because of a call to VideoSendStream::StopPermanentlyAndGetRtpStates() and then Stop() is called on the transport queue. In a follow-up change, I delete this lambda and DCHECK that Stop() is only called on the transport queue. That requires a couple of additional things to be wired up in VideoSendStream.\n\nHowever, in order to catch when this happened (at least as far as making developers aware) I\u0027ve added DCHECKs here and there, in particular in the dtor since this is a crucial step for proper teardown.",
      "parentUuid": "b871555f_2b8b2549",
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae86b8e6_a4cb4872",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 373,
      "author": {
        "id": 9515
      },
      "writtenOn": "2021-06-03T14:57:28Z",
      "side": 1,
      "message": "I see. It looks like we\u0027re calling Stop() twice for each send stream now from Call::DestroyVideoSendStream. Can we erase the first call or is that addressed in the upcoming CL? If I misunderstood please disregard.",
      "parentUuid": "b6501ad8_4ee06048",
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ab55d8e_07c715a4",
        "filename": "video/video_send_stream_impl.cc",
        "patchSetId": 15
      },
      "lineNbr": 373,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-06-03T16:00:23Z",
      "side": 1,
      "message": "yes that\u0027s indeed the case. Thanks - I moved the StopPermanentlyAndGetRtpStates() call up to where the first Stop() call was and removed the call to Stop().",
      "parentUuid": "ae86b8e6_a4cb4872",
      "revId": "a4cf82b9b347c5d0c60713647490cbc474936c0e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}