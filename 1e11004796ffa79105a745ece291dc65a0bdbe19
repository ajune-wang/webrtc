{
  "comments": [
    {
      "key": {
        "uuid": "3ab4a5fd_3db8b133",
        "filename": "modules/desktop_capture/cropping_window_capturer_win.cc",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 5166
      },
      "writtenOn": "2018-05-30T23:55:00Z",
      "side": 1,
      "message": "Thanks, that makes sense now. However, if I\u0027m reading it correctly, the effect of this CL is to ignore Chrome\u0027s sharing notification window, so that even if it intersects the window to be captured, we will still use fast capture + cropping, which means that the sharing notification will be visible in the captured session; correct? The rationale of \"falling back on GDI is bad because it might fail\" seems relevant to all occluding windows; what makes the sharing notification special?",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "1e11004796ffa79105a745ece291dc65a0bdbe19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45795b00_56ed5f8d",
        "filename": "modules/desktop_capture/cropping_window_capturer_win.cc",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 6175
      },
      "writtenOn": "2018-05-31T00:06:05Z",
      "side": 1,
      "message": "The situation to be handled here is: At sharing a window to a Hangout meeting, Hangout shows a notification that the presenting is started, which may actually fails the presenting. This is not right. I doubt this may be related to many error reports on Windows that presenting can\u0027t be started.\nYes it\u0027s possible that the sharing notification will be visible in the captured session. This is not perfect. But still better than presenting nothing. Besides user can dismiss the notification to avoid it. (Same thing happens to the notification bar already. No work-around with current capture+cropping method.)",
      "parentUuid": "3ab4a5fd_3db8b133",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "1e11004796ffa79105a745ece291dc65a0bdbe19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a77bfad_de64e7a1",
        "filename": "modules/desktop_capture/cropping_window_capturer_win.cc",
        "patchSetId": 5
      },
      "lineNbr": 51,
      "author": {
        "id": 5166
      },
      "writtenOn": "2018-05-31T00:53:20Z",
      "side": 1,
      "message": "So that window is treated specially because it will almost certainly be present? That makes sense, although I still think that the fundamental problem here is not that that window might occlude the one the user is trying to share; it\u0027s that the window the user is trying to share might not be capturable using GDI. If that failure mode is detectable, then the ideal solution is to run a simplified occlusion test for windows that are capturable with GDI, and always use clipping for windows that aren\u0027t. Otherwise I worry that you\u0027re eventually going to run into a long tail of failure cases, each needing their own specific workaround.\n\nAssuming it\u0027s not possible to solve this completely, this seems like a good compromise.",
      "parentUuid": "45795b00_56ed5f8d",
      "range": {
        "startLine": 50,
        "startChar": 23,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "1e11004796ffa79105a745ece291dc65a0bdbe19",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}