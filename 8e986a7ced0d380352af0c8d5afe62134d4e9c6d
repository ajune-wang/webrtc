{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0f12af23_28748f95",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-08T10:53:00Z",
      "side": 1,
      "message": "Seems great given the unittests!\n\nLet\u0027s chat later about how we should evolve the interface - seems annoying to have a broad C++ interface which will fail dchecks/ignore some modifications. Definitely better than before and enough for now!",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a36003a_e75aeeaa",
        "filename": "modules/rtp_rtcp/source/frame_object.h",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-08T10:53:00Z",
      "side": 1,
      "message": "Probably good to include api/video/video_frame_metadata.h explicitly",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d162da98_bd40c614",
        "filename": "modules/rtp_rtcp/source/frame_object.h",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T12:00:40Z",
      "side": 1,
      "message": "+1\nit is not just good, it is required by the style guide:\n\nhttps://google.github.io/styleguide/cppguide.html#Include_What_You_Use\n\n“If a source or header file refers to a symbol defined elsewhere, the file should directly include a header file which properly intends to provide a declaration or definition of that symbol.”\n\"Do not rely on transitive inclusions.\"",
      "parentUuid": "2a36003a_e75aeeaa",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6e0e6f8c_4fe731f0",
        "filename": "modules/rtp_rtcp/source/frame_object.h",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "I get this error while trying to do so\n\nERROR at //third_party/webrtc/modules/rtp_rtcp/source/frame_object.h:18:11: Can\u0027t include this header from here.\n#include \"api/video/video_frame_metadata.h\"\n          ^-------------------------------\nThe target:\n  //third_party/webrtc/modules/rtp_rtcp:rtp_rtcp\nis including a file from the target:\n  //third_party/webrtc/api/video:video_frame_metadata",
      "parentUuid": "d162da98_bd40c614",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7e1b6cb2_1806be7d",
        "filename": "modules/rtp_rtcp/source/frame_object.h",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T14:33:53Z",
      "side": 1,
      "message": "Error like this a reason you really should try to include and resolve problems that come with it (like circular dependencies or forbidden dependency)\n\nHowever when I try to do the same, I do not get the same error.\ndo you have more details about it, like why it can\u0027t include this header?\n\n(sure, you\u0027ll also need to modify BUILD.gn to add the dependency of rtp_rtcp on api/video:video_frame_metadata)",
      "parentUuid": "6e0e6f8c_4fe731f0",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f329c2bd_b235da8c",
        "filename": "modules/rtp_rtcp/source/frame_object.h",
        "patchSetId": 15
      },
      "lineNbr": 18,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-09T09:00:46Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e1b6cb2_1806be7d",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04b93906_5c18f857",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 62,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-08T10:53:00Z",
      "side": 1,
      "message": "Should we adjust the TransformableVideoFrameInterface::SetMetadata interface definition to explicitly say only these two fields are supported? (in a follow up cl)",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e4fc540_8a3508e0",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 62,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "04b93906_5c18f857",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81b4036e_d364a920",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T12:00:40Z",
      "side": 1,
      "message": "if this condition is just for the dcheck - you should use different DCHECK variant:\n\nRTC_DCHECK_EQ(new_metadata, Metadata()) \u003c\u003c \"same error message\";\nor (if above doesn\u0027t work)\nRTC_DCHECK(new_metadata \u003d\u003d Metadata()) \u003c\u003c \"...\";",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e6e4d861_e574eb70",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 67,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "81b4036e_d364a920",
      "range": {
        "startLine": 67,
        "startChar": 4,
        "endLine": 67,
        "endChar": 37
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9321e43a_e57645cd",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 17470
      },
      "writtenOn": "2023-08-08T10:53:00Z",
      "side": 1,
      "message": "In production builds without dchecks, this will just continue through, applying arbitrary changes to the metadata - is that safe?\n\nPotential safer way would be to construct new_metadata from Metadata(), set the frameId and dependencies from the metadata param, have a DCHECK that new_metadata \u003d\u003d metadata, and then finally call SetHeaderFromMetadata(new_metadata). Then in production we\u0027ll just throw away any unexpected changes.",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e0bb75f_df0767d7",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate.cc",
        "patchSetId": 15
      },
      "lineNbr": 68,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9321e43a_e57645cd",
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9557dcaa_1218153f",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 200,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T12:00:40Z",
      "side": 1,
      "message": "time 0 sometimes is treated as unset.\nprefer to put some bigger number",
      "range": {
        "startLine": 200,
        "startChar": 23,
        "endLine": 200,
        "endChar": 24
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "761bef09_3a9934f8",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 225,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T12:00:40Z",
      "side": 1,
      "message": "if descriptor doesn\u0027t have value, then EXPECT two lines below would crash.\nmay be\n```\nEXPECT_THAT(descriptor, \n Optional(\n   AllOf(\n     Field(\u0026RTPVideoHeader::GenericDescriptorInfo::frame_id, \n           Eq(20)),\n     Field(\u0026RTPVideoHeader::GenericDescriptorInfo::dependencies,\n           ElementsAre(15)))));\n```\n               \nor, if EXPECT above looks too wordy:\n```\nif (!descriptor.has_value()) {\n  ADD_FAILURE();\n} else {\n  EXPECT_EQ(descriptor-\u003eframe_id, 20);\n  EXPECT_EQ(descriptor-\u003edependencies, ElementsAre(15));\n}\n```\n\nor you may assert:\n```\nASSERT_TRUE(descriptor.has_value());\nEXPECT_EQ(descriptor-\u003e...\n```\nbut that is discouraged outside TEST body:\nhttp://go/totw/113#tldr",
      "range": {
        "startLine": 225,
        "startChar": 8,
        "endLine": 225,
        "endChar": 44
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d90c5a_b4e5c548",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 225,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "761bef09_3a9934f8",
      "range": {
        "startLine": 225,
        "startChar": 8,
        "endLine": 225,
        "endChar": 44
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad0b0dbd_efafc0a6",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 238,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T12:00:40Z",
      "side": 1,
      "message": "please avoid WrapUnique and .release:\nhere you don\u0027t really need unique_ptr\u003cVideoFrame\u003e, so you can update it using reference:\n\nASSERT_THAT(frame, NotNull());\nauto\u0026 video_frame \u003d static_cast\u003cTransformableVideoFrameInterface\u0026\u003e(*transformable_frame);\nVideoFrameMetadata metadata \u003d video_frame.Metadata();\n...\ncallback-\u003eOnTransformedFrame(std::move(transformable_frame));",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 238,
        "endChar": 27
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "663cc8a6_d683f422",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 238,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad0b0dbd_efafc0a6",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 238,
        "endChar": 27
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ef23c7a_40a701ac",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 239,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-08-08T12:00:40Z",
      "side": 1,
      "message": "do not use `auto` here - return type of the `frame-\u003eMetadata` is not obvious from the context.\n\nhttps://google.github.io/styleguide/cppguide.html#Type_deduction",
      "range": {
        "startLine": 239,
        "startChar": 8,
        "endLine": 239,
        "endChar": 12
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b96eb6ab_d375d493",
        "filename": "modules/rtp_rtcp/source/rtp_video_stream_receiver_frame_transformer_delegate_unittest.cc",
        "patchSetId": 15
      },
      "lineNbr": 239,
      "author": {
        "id": 20324
      },
      "writtenOn": "2023-08-08T14:26:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3ef23c7a_40a701ac",
      "range": {
        "startLine": 239,
        "startChar": 8,
        "endLine": 239,
        "endChar": 12
      },
      "revId": "8e986a7ced0d380352af0c8d5afe62134d4e9c6d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}