{
  "comments": [
    {
      "key": {
        "uuid": "d6e1c83c_5a65237e",
        "filename": "logging/rtc_event_log/events/rtc_event_alr_state.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "nit: Because the unique_ptr is only used by an inherited method, I am not sure if the style guide demands that \u003cmemory\u003e be #include-ed directly, in addition to its #inclusion via rtc_event.h. (I\u0027d love to know what the style guide says, one way or the other.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ccff9266_e1208c1e",
        "filename": "logging/rtc_event_log/events/rtc_event_alr_state.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Linter complains without it. I don\u0027t understand why, but I\u0027m also not sufficiently interested to track it down in the style guide.",
      "parentUuid": "d6e1c83c_5a65237e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e49e8d4b_b024ec96",
        "filename": "logging/rtc_event_log/events/rtc_event_alr_state.h",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Yeah, no reason to spend any time on this; just a nit.",
      "parentUuid": "ccff9266_e1208c1e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42000f49_5bf0b01a",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_incoming.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "This will be copied twice - once on this line, and once again in the ctor (line 38).\nRtpPacketReceived has a move-constructor. Perhaps we could use that to overload RtcEventRtpPacketIncoming\u0027s ctor with a private ctor that performs a move?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "10e14495_12ed0ebe",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_incoming.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Added a copy constructor for this event type instead.",
      "parentUuid": "42000f49_5bf0b01a",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea1179d_096d1ac4",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_incoming.cc",
        "patchSetId": 2
      },
      "lineNbr": 36,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "That is indeed preferable.",
      "parentUuid": "10e14495_12ed0ebe",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae94607f_168ec64b",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_incoming.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "By overloading the ctor, you could avoid this, too.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b3f70cd_a0f30d30",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_incoming.cc",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "As above.",
      "parentUuid": "ae94607f_168ec64b",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a6c0a5fd_c8fe9143",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "Same suggestions.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd534d02_482fd042",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Same response. :)",
      "parentUuid": "a6c0a5fd_c8fe9143",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c3f4d3f8_8821327a",
        "filename": "logging/rtc_event_log/events/rtc_event_rtp_packet_outgoing.cc",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bd534d02_482fd042",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91a109f1_7058eff2",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "Should both TODOs be retained?",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 539,
        "endChar": 48
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90d618fe_2fdd617f",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "I think the entire else block, including both comments, should be removed. Since this would break compatibility with (very) old log files, it should be done as a separate CL. I\u0027m retaining ivoc\u0027s comment because it is tracking one of several places that should be updated.",
      "parentUuid": "91a109f1_7058eff2",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 539,
        "endChar": 48
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7373ce5b_9436910b",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 539,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "90d618fe_2fdd617f",
      "range": {
        "startLine": 534,
        "startChar": 0,
        "endLine": 539,
        "endChar": 48
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bbdf6dd3_5e3b77bd",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.h",
        "patchSetId": 2
      },
      "lineNbr": 680,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "nit: Typo.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "573da327_df6163d9",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.h",
        "patchSetId": 2
      },
      "lineNbr": 680,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bbdf6dd3_5e3b77bd",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51fcbaeb_2b239375",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.h",
        "patchSetId": 2
      },
      "lineNbr": 684,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-01T22:34:27Z",
      "side": 1,
      "message": "nit: Style regarding newlines now clashes with probably-pre-rebase style.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "99321041_56ad0275",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.h",
        "patchSetId": 2
      },
      "lineNbr": 684,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51fcbaeb_2b239375",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4c3f5cd5_dea030ae",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Put in an anonymous namespace?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89c3eec3_80cb26a5",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c3f5cd5_dea030ae",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12d018c8_41def8d3",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: const function",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b2f23d55_fd617ea8",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "12d018c8_41def8d3",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bf5b3614_de2dfdb9",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: const function",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "af84890f_311e4c18",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bf5b3614_de2dfdb9",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49e580a4_d178d8ab",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: EventCounts makes the word \"total\" redundant, IMHO. Also, I\u0027d prefer counting A and B, not A and (A+B). So I\u0027d suggest config_events() and nonconfig_events().",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8998dffb_2cf73338",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "I wanted to highlight that it is not a getter for one of the members. I can drop total_ if you rally want.\n\nI added a total_config_events(), but I also want to retain the total_events() function.",
      "parentUuid": "49e580a4_d178d8ab",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b03f1bec_9eda8653",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8998dffb_2cf73338",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e611445_58a26461",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: All of the members of this class seem to miss the customary postfix-ed underscore. I suspect it\u0027s by design, given that it\u0027s systematic. Could you please explain the style guideline which you follow? Is it common in some part of the database to do this for test fixtures?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25cb709b_0e6c6746",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "It was retained from the old version, which probably was a struct at some point. Fixed.",
      "parentUuid": "3e611445_58a26461",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e6a5bc3d_35c40885",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: Comment about what the key of the map is?",
      "range": {
        "startLine": 115,
        "startChar": 2,
        "endLine": 118,
        "endChar": 23
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b3dbaa8_592058be",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 118,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6a5bc3d_35c40885",
      "range": {
        "startLine": 115,
        "startChar": 2,
        "endLine": 118,
        "endChar": 23
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efecd440_59dad970",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "const?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "508c3449_24fefaca",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 126,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Although we aren\u0027t changing it at the moment, I don\u0027t think this is a key feature of the class. I prefer to keep as is.",
      "parentUuid": "efecd440_59dad970",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0188e04a_073cf78e",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Anonymous namespace?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6ca784f_0a52ffb9",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 129,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0188e04a_073cf78e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e40cc9e5_aa92a6ee",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Could you use std::map::find instead?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbe03e3c_ea9edaad",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "This is a vector, so it would have to be std::find_if or similar. That doesn\u0027t look more readable to me. Change to map?",
      "parentUuid": "e40cc9e5_aa92a6ee",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaae0869_fa536983",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Oh, right; it\u0027s a vector. Would indeed not be an improvement to use std::find_if.\n\nEither is fine by me. Map seems more natural, though, doesn\u0027t it?\n\nFYI, the Chromium codebase has this:\nhttps://cs.chromium.org/chromium/src/base/containers/flat_map.h\nProbably no equivalent in WebRTC atm?",
      "parentUuid": "dbe03e3c_ea9edaad",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53e1b027_3db8e009",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 132,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Let\u0027s keep as vector for now.",
      "parentUuid": "aaae0869_fa536983",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d97d991_65298129",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "1. Suggest: const EventCounts\u0026 count\n2. This is a very long method. Long methods intimidate the reader and discourage scrutiny. I suggest breaking up some sections into their own methods.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c676322_5102a8b7",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "1) I\u0027m modifying count, so that requires some other changes and extra code.\n2) I\u0027ve tried, but I have a hard time finding suitable boundaries. The best I have found is to move the configs out, but it is tightly coupled with the rest of the code. In particular it needs to access the event log, the generator, the clock and the event counts. The later code also needs to get back the modified lists incoming_extension and outgoing_extensions.",
      "parentUuid": "2d97d991_65298129",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04ebfd32_5e320a89",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 139,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "1. Ah, that\u0027s why. Well, it\u0027s not a critical path, and it\u0027s a unit test, so efficiency is not important in this case. But maybe pass by pointer anyway? Just a suggestion. No strong opinion.\n2. I\u0027ll try to put some suggestions in the body of the function. If I can think of some. Next iteration.",
      "parentUuid": "9c676322_5102a8b7",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe32fedc_eaba494d",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "test_info-\u003etest_case_name() would give you the thing you\u0027re looking for without you having to hard-code \"RtcEventLogTest\".\n\nEmpirically:\ntest_case_name \u003d RtcEventLogTest/RtcEventLogSession\n\nSo, after the \u0027/\u0027 to \u0027_\u0027 replacement, you\u0027ll have what you need, without concatenating with a hard-coded string.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7644bdc3_2379e75f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 147,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe32fedc_eaba494d",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccf1dc4b_8b0afb18",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: I think the WebRTC repo is moving to TODO(bugs.webrtc.org/#).",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35ba4215_07352ea2",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "I think that is optional.",
      "parentUuid": "ccf1dc4b_8b0afb18",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eccd2d76_63fb9af5",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "35ba4215_07352ea2",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dc39508a_6a094f5a",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Does this not unnecessarily reduce the unit test\u0027s coverage based on assumptions on other module\u0027s behavior? (More elaborate comment about this elsewhere.)",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 75
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a2fae429_6f89044f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Discussed offline.\n\nWe could RTC_DCHECK_GE if you prefer.",
      "parentUuid": "dc39508a_6a094f5a",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 75
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4016b562_be65f3a4",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "I think it would be preferable (although still not, IMHO, optimal).",
      "parentUuid": "a2fae429_6f89044f",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 75
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb5064fa_8d7812cd",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 160,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4016b562_be65f3a4",
      "range": {
        "startLine": 158,
        "startChar": 0,
        "endLine": 160,
        "endChar": 75
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "da11f26e_213f6e77",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: Offload this logic into a helper?",
      "range": {
        "startLine": 161,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69ae3c34_ba99f511",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Lets wait until we have decided if any larger sections should be moved out.",
      "parentUuid": "da11f26e_213f6e77",
      "range": {
        "startLine": 161,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01b323f5_e91452a2",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 171,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "69ae3c34_ba99f511",
      "range": {
        "startLine": 161,
        "startChar": 0,
        "endLine": 171,
        "endChar": 55
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d679ce4_60aab236",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 705,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Replacing the clock mid-way seems a bit hacky. Why is that necessary?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f76f989_6f032d15",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 705,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "The clock DCHECKs that time doesn\u0027t move backwards, so we can\u0027t reset the same clock. Added comment.",
      "parentUuid": "5d679ce4_60aab236",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6dbd4752_a956ffcf",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 705,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-18T11:06:37Z",
      "side": 1,
      "message": "That I saw. But I was confused about why we need to move the clock back in the first place. If there is a way around this, I think it would be good to use it.",
      "parentUuid": "8f76f989_6f032d15",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "854ab106_207d3a7e",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Move this one to the header file?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ce951320_1c413178",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "854ab106_207d3a7e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1c8925e_e9bb9763",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: Perhaps an array of pairs is preferable, because it\u0027s easier to verify that the entries match, and harder to introduce errors?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a109d5af_77e1e3ed",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1c8925e_e9bb9763",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 40,
        "endChar": 37
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0153c415_e494a277",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "1. Can this go into an anonymous namespace?\n2. Replace this by arraysize?\n3. If not #2, perhaps we can use it as part of the definition of the array, so that the compiler would have a chance to warn of a mismatched value if we end up defining more entries?\n4. For #3, constexpr probably would be required?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e7a8715_0d544c99",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0153c415_e494a277",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4404de1_36351c9d",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "|prng| unused here. With the helper-class method approach which I\u0027ve suggested in the header file, you wouldn\u0027t need to pass this to maintain a uniform interface.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9aeea89_8c70872f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 50,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c4404de1_36351c9d",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1d24ed1b_2e7d970b",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "These values might go out of style. Are there any constants that could be used? If there are, maybe AudioEncoderRuntimeConfig could also DCHECK on them?\n(Similarly throughout the file.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6978c99b_4f765a69",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 59,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "As discussed offline, lets add separate non-randomized tests for corner cases and boundary values in another CL.",
      "parentUuid": "1d24ed1b_2e7d970b",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dac93f3b_8fdbb9fe",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "BandwidthUsage::kLast exists; could we use it instead?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bbc8146d_fc713c84",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dac93f3b_8fdbb9fe",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a15f0cb_136b00a0",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "const? constexpr?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb2acc03_db802d57",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 73,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Now using kLast/kNumValues to randomize enums.",
      "parentUuid": "5a15f0cb_136b00a0",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7671bd0d_f794bd0d",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "If RtcEventBweUpdateLossBased with total_packets\u003d0 should never happen, and the tests do not offer coverage for that case, than its ctor should DCHECK against it.\n(Similarly throughout the CL for cases where at-least-1 is guaranteed by the test.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2a04854_b8ee6fa4",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Discussed offline.",
      "parentUuid": "7671bd0d_f794bd0d",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "94b3477a_0492237d",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "If 4 is a legal value, the test should cover it.\nIf it isn\u0027t, RtcEventProbeClusterCreated\u0027s ctor should guard against it.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1e7161d5_71951cbe",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 100,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Discussed offline.",
      "parentUuid": "94b3477a_0492237d",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36b3daaa_5809518e",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "ProbeFailureReason::kLast exists; should we use it?\n\n(I won\u0027t check and comment for any additional instances of this comment in this file.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cf66857b_13d99c1f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "PTAL",
      "parentUuid": "36b3daaa_5809518e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b15fb29f_5a695b5f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 110,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "cf66857b_13d99c1f",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04f4c704_1a11edbc",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "const? constexpr?\n(Similar suggestion for other arrays in this function.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78bff277_ea420473",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 135,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Now using kLast/kNumValues to randomize enums.",
      "parentUuid": "04f4c704_1a11edbc",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "990e30dd_8c9eba5a",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: Would be clearer to a put the code that randomizes a selection out of this array, right below the definition of this array. With a little comment above the block, maybe even putting the block inside its own {} scope, it would be immediately clear where this is used. In this case, for local/remote candidate types. I mean to say, it would have been more immediately apparent to me that it doesn\u0027t have some cascading interaction. (Please see next comment.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b539dcc_889edd30",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 140,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Now using kLast/kNumValues to randomize enums.",
      "parentUuid": "990e30dd_8c9eba5a",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85c3c325_bba99da5",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Like the above comment, but perhaps a clearer example - |pair_id| is set quite a long way away from the first (and only) place where it is used. That makes things slightly less clear.",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd2c2db5_a2b0551c",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 166,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85c3c325_bba99da5",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adfc6cce_9dadecde",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Beg pardon; why 50?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b07ef75_f2c40bf7",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 206,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Discussed offline.",
      "parentUuid": "adfc6cce_9dadecde",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2da7c383_44de65c7",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Beg pardon; I\u0027m not completely familiar with this code. Above is the media SSRC (commented as \"remote SSRC\"). Here is the sender SSRC. Does either need to correspond to the SSRC from RtcEventLogSession::WriteLog?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b777030e_e176752b",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "No. We only need to use the real SSRC to parse RTP header extensions. We don\u0027t currently do anything like that for RTCP.",
      "parentUuid": "2da7c383_44de65c7",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f83e7c2_88a0f243",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "From the documentation: \"Enter rtc::ArrayView\u003cT\u003e. It contains a T pointer (to an array it doesn\u0027t own)\"\nDoesn\u0027t that mean that this code returns an ArrayView with a dangling pointer?\n\n(Same question for additional places in this file; I will not comment them explicitly.)",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 61
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dcbc6ec0_2dd12f8f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "The RtcEventRtcpPacketIncoming takes a pointer it does not own, but the contents are copied into an rtc::Buffer in the constructor. It does not store the pointer.",
      "parentUuid": "8f83e7c2_88a0f243",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 61
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8dd60f25_6d86e589",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 215,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "I have missed that, although RtcEventRtcpPacketIncoming\u0027s ctor accepts an ArrayView, it stores that in an rtc::Buffer. I just assumed that |packet_| had the same type as |packet|. Thanks.",
      "parentUuid": "dcbc6ec0_2dd12f8f",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 61
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88f7885c_fdda435e",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Could you please replace the hard-coded values by either constants pulled from elsewhere, or at least constants defined here (so as to make the code self-documenting)?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2a87903e_75b1a709",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Added comment.",
      "parentUuid": "88f7885c_fdda435e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f7e0663_3ef8f191",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 241,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2a87903e_75b1a709",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d5e54c3_f5cb0cb1",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "If I am not mistaken, 127 is pulled from here: https://www.iana.org/assignments/rtp-parameters/rtp-parameters.xhtml\nWe probably have a constant for this somewhere? If not, perhaps a locally defined constant would make the value clearer?",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "381dd3de_20016e53",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 245,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d5e54c3_f5cb0cb1",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a807f17_e945b0b4",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Note to self - verify these values in next iteration of code review.\nNote to Björn - would constants make sense here?",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a60a48c_f65a40a4",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "I don\u0027t think constants would make it clearer that we\u0027re generating 2 3-byte values and one 7 bit value.",
      "parentUuid": "1a807f17_e945b0b4",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ada6e37c_108e1832",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": ":-)\n\nBut maybe they could make it clear why?\n\nIf you had used TransmissionOffset::kValueSizeBytes, for instance, it would be immediately clear from the code itself, would it not? \nThat is, Rand(0x0100 * TransmissionOffset::kValueSizeBytes - 1).\n\nNote that this is not meant to make things more robust to changes (although it would, to a small degree). It\u0027s meant to make it self-documenting.",
      "parentUuid": "0a60a48c_f65a40a4",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69a581a4_0a777131",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Except that Rand(0x0100 * TransmissionOffset::kValueSizeBytes - 1) doesn\u0027t actually do what you want it to. It would have to be static_cast\u003cuint32_t\u003e(1) \u003c\u003c (kValueSizeBytes * 8) - 1. Except my precedence is wrong, so it should be (static_cast\u003cuint32_t\u003e(1) \u003c\u003c (kValueSizeBytes * 8)) - 1. And that would work for the our current extensions, but the computation would overflow if we added a 4 byte extension...\n\nI think 0x00ffffff is as clear as it gets. :)",
      "parentUuid": "ada6e37c_108e1832",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a6a997e_960869c0",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-18T11:06:37Z",
      "side": 1,
      "message": "1. Oops about my bad arithmetic; it was late at night when I wrote that.\n2. You don\u0027t need static_cast, do you? 1u would be enough. So\n1 \u003c\u003c (TransmissionOffset::kValueSizeBytes) - 1. Perhaps with additional parenthasis to make it clearer. Seems clearer to me.\n3. I don\u0027t think it\u0027s actually possible to change this from 3 to 4 for this extension, right? Such a change will not be backwards compatible. And since this is using a static variable, I am not suggesting it for all extensions, but rather for this extension only (and for AbsoluteSendTime, too). So readability should be all we care about?",
      "parentUuid": "69a581a4_0a777131",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a260cd97_d6418ba0",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-21T21:19:30Z",
      "side": 1,
      "message": "Ping",
      "parentUuid": "7a6a997e_960869c0",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4959de0b_d35d2272",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-25T17:56:41Z",
      "side": 1,
      "message": "2a. Yeah, you could use unsigned literals instead of static_cast.\n2b. Binary \"-\" has higher precedence than \"\u003c\u003c\", so parenthesis isn\u0027t just for clarity but actually for functionality. So (1u \u003c\u003c TransmissionOffset::kValueSizeBytes) - 1\n2c. This is missing the multiplication so it\u0027s 0x00ffffff vs\n(1u \u003c\u003c (TransmissionOffset::kValueSizeBytes * 8)) - 1\n3. I\u0027m not at all convinced that using a general formula is more readable than an explicit value if the general formula silently fails for some inputs.",
      "parentUuid": "7a6a997e_960869c0",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45c41f2f_30998304",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 263,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-25T19:03:18Z",
      "side": 1,
      "message": "2b. My parenthesis were around a single item; typo. :-)\n2c. Yes.\n3. But these inputs are impossible, if I understand correctly. The value 3 is now locked-in for good. The formula is not there for flexibility, but rather in order to have self-documenting code.",
      "parentUuid": "4959de0b_d35d2272",
      "range": {
        "startLine": 258,
        "startChar": 0,
        "endLine": 263,
        "endChar": 70
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a81f4f3_64bd4a7a",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 265,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "Beg pardon; I\u0027ve only looked very briefly (this is a long CL), but aren\u0027t there more than two options?\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/include/rtp_cvo.h?sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d37",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8546d27_3578fe3b",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 265,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Yes, you are right. Fixed.",
      "parentUuid": "4a81f4f3_64bd4a7a",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c2d0fd1e_0d4e1479",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "Where (4 * kMaxCsrcs) was used, was (4 * csrcs_count) meant?\nSimilarly elsewhere, and similarly for kMaxNumExtensions.\n\n(This was written before PS3 was posted. In PS3, it\u0027s comparable, but not exactly the same; I think it would be clearest to leave this comment here, than to migrate it.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78fcb2fa_6eb37e86",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "Yes, sort-of. But at this point we don\u0027t know csrc_count. We therefore compute the maximum size that the header can be and make sure that the total packet size is large enough to contain it.",
      "parentUuid": "c2d0fd1e_0d4e1479",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "904b0e81_1a789a14",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-18T11:06:37Z",
      "side": 1,
      "message": "But there\u0027s nothing preventing us from moving this\n  uint32_t csrcs_count \u003d prng-\u003eRand(0, kMaxCsrcs);\nup to precede the setting of the packet size, right?",
      "parentUuid": "78fcb2fa_6eb37e86",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a60c0a1_a39ac0ed",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-21T21:19:30Z",
      "side": 1,
      "message": "Ping",
      "parentUuid": "904b0e81_1a789a14",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "197941ee_5d6926a4",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-25T17:56:41Z",
      "side": 1,
      "message": "Then we also need to pass in the csrc_count to GenerateRtpPacket, making the API slightly messier without actually getting the exact size. To get the exact size, we would need to inspect the configured header extensions both in GenerateRtpPacket and in the calling code. Moreover we would need to know the size of each extension rather than just knowing the maximum size.",
      "parentUuid": "1a60c0a1_a39ac0ed",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f46f64b0_76d1f5d9",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "There appears to be some code duplication between here and the Incoming event. I think you could eliminate it with a helper function, since SetExtension comes from the mutual super-class, RtpPacket.",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 312,
        "endChar": 77
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a3b1624_af8cda03",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f46f64b0_76d1f5d9",
      "range": {
        "startLine": 303,
        "startChar": 0,
        "endLine": 312,
        "endChar": 77
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b354810_d2e5fc6f",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: Just a thought - using helper Generator and Verifier classes would allow you to pass the PRNG once, at construction, and forget about it with the rest of the interface. It would also create a nice segmentation of Generate/Verify functions. Lastly, it would introduce less names (and shorter ones) into the namespace. So the (using) code would look like this:\n\n  TestRtcEventGenerator gen(\u0026prng);\n  auto event \u003d gen.BweUpdateDelayBase();\n  ...\n\n(Additional motivations in the .cc file, btw.)",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b49799c4_fa53295e",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Added the generator object. There is no shared state between Verify functions. Do you still want to have a verifier object?",
      "parentUuid": "8b354810_d2e5fc6f",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d571da29_350a9038",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-08T11:03:08Z",
      "side": 1,
      "message": "It\u0027s up to you. From my side, it looks like an elegant way to segment the source code. Wdyt?",
      "parentUuid": "b49799c4_fa53295e",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82b66174_83147782",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-15T09:23:20Z",
      "side": 1,
      "message": "I\u0027ve kept those as separate function for now.",
      "parentUuid": "d571da29_350a9038",
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "69535304_d6ba6c9c",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-06-04T12:14:58Z",
      "side": 1,
      "message": "nit: Random not explicitly included by this header.",
      "range": {
        "startLine": 41,
        "startChar": 59,
        "endLine": 41,
        "endChar": 65
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f7bfa10_13e91acb",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-06-07T19:31:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69535304_d6ba6c9c",
      "range": {
        "startLine": 41,
        "startChar": 59,
        "endLine": 41,
        "endChar": 65
      },
      "revId": "31fc3dcefac218b7910aa0dfcf670a2ddd567a99",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}