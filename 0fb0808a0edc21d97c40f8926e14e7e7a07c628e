{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "06c9897f_91e3e7b1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-31T07:47:26Z",
      "side": 1,
      "message": "I take it all the affected code lives exclusively on the network thread?",
      "revId": "0fb0808a0edc21d97c40f8926e14e7e7a07c628e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c543288_075356bc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-03-31T11:02:08Z",
      "side": 1,
      "message": "Yes - WeakPtr has the added benefit of implicit thread dchecks.",
      "parentUuid": "06c9897f_91e3e7b1",
      "revId": "0fb0808a0edc21d97c40f8926e14e7e7a07c628e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ad44e2c_8736b2be",
        "filename": "p2p/base/connection.h",
        "patchSetId": 6
      },
      "lineNbr": 352,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-03-31T07:47:26Z",
      "side": 1,
      "message": "I don\u0027t quite remember how these (single-threaded) weak pointers work. What\u0027s the behavior if the port has been destroyed, will .get() crash, or will it just return nullptr? But it looks like not all callers check for null ptr. \n\nIs the intention to handle that more gracefully, or is the point just to transform any use-after-free errors into more obvious null ptr crashes?",
      "range": {
        "startLine": 352,
        "startChar": 24,
        "endLine": 352,
        "endChar": 37
      },
      "revId": "0fb0808a0edc21d97c40f8926e14e7e7a07c628e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0be9fde2_d049aad4",
        "filename": "p2p/base/connection.h",
        "patchSetId": 6
      },
      "lineNbr": 352,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-03-31T11:02:08Z",
      "side": 1,
      "message": "get() will return nullptr for an expired object. But in the case where port() is used for e.g. sigslot registration, there\u0027s still a problem with the cached pointer held by the sigslot instance.\n\nThe intention of this CL is to introduce the concept of managed pointers. They\u0027ll help with catching regressions and might also point out existing issues (and in those cases, transform uaf to nullptr deref). Moving forward though, there are a few things such as clearing up the ownership rules, getting rid of sigslot etc, that needs to happen.",
      "parentUuid": "1ad44e2c_8736b2be",
      "range": {
        "startLine": 352,
        "startChar": 24,
        "endLine": 352,
        "endChar": 37
      },
      "revId": "0fb0808a0edc21d97c40f8926e14e7e7a07c628e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}