{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "17036a9b_1b1326b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 49
      },
      "lineNbr": 23,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "Can we get the \"s\" back into Transceivers?",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff4cc68a_ed249641",
        "filename": "/COMMIT_MSG",
        "patchSetId": 49
      },
      "lineNbr": 23,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-12T09:45:39Z",
      "side": 1,
      "message": "Hah - looks like I\u0027ve consistently copy/pasted that typo all over the cl. Thanks",
      "parentUuid": "17036a9b_1b1326b7",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1d188ef6_448c9a14",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 49
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "I think this works, but I think we should move and rename things a bit.\n",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18acca31_16da4687",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2165,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "I think the name is misleading; it doesn\u0027t enumerate transceivers, it invokes a callback on them.\n\nIterateOverTransceivers? MapTransceivers? ForEachTrasnceiver?",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07ff45ac_99dd8762",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2165,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-12T09:45:39Z",
      "side": 1,
      "message": "Now that the \u0027s\u0027 is back I hope this looks better.. but how you describe what the function does sounds backwards to me (hence I can understand why the name might sound misleading). But the function *does* enumerate transceivers one by one and it *does not* invoke callbacks on them.\n\n\"IterateOverTransceivers\" and \"ForEachTransceiver\" could work as names - but both of those imply enumerating the transceivers (as in \"mention (a number of things) one by one\") to the callback.\n\nHere\u0027s a classic example of a function like this:\nhttps://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-enumwindows",
      "parentUuid": "18acca31_16da4687",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c16d83a5_b094212c",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2165,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-14T06:49:15Z",
      "side": 1,
      "message": "I would prefer ForEachTransceiver - the windows example is a good example of what I don\u0027t like :-)",
      "parentUuid": "07ff45ac_99dd8762",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "369d79dc_83348097",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2165,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-14T07:23:04Z",
      "side": 1,
      "message": "Fair enough, I\u0027ll change the name. The part I would like to change is to have the PeerConnection instance more consistently in control of how the enumeration is done. That\u0027s where these enumerations are done for the most part and I\u0027d like to start pulling those in rather than spreading them. The fact that the list currently creates a copy of a vector with additional references, is a risk of spreading handles that may affect object lifetimes, which is why I purposely did not want the interface to use the reference counted proxies.",
      "parentUuid": "c16d83a5_b094212c",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fb8e14e_8698e9fb",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2165,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-14T07:30:41Z",
      "side": 1,
      "message": "(following up again here since I like your suggestion of moving the iteration even closer to the source)\n\nInstead of PeerConnection, which is one step closer, RtpTransmissionManager would be two steps closer and TransceiverList three steps.\n\nIt\u0027s likely that there are some operations that we should tie to the signaling thread while making sure that access to other things that either must only happen on different threads for safety reasons or are more efficient to do on other threads (e.g. related to network traffic - and therefore we don\u0027t want it to be interrupted by signaling thread activity).",
      "parentUuid": "369d79dc_83348097",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a200eae6_8e7f62c8",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2165,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-14T07:40:26Z",
      "side": 1,
      "message": "When I first broke out the TransceiverList class, I wondered if this class was actually paying for itself - it was a first stab before RtpTransmissionManager I considered folding it into RtpTransmissionManager, but didn\u0027t.\n\nBut given the need to have multiple kinds of iterators, even with different threading requirements and reference requirements, I think we should keep it.\n\nThis one should then be ForEachInternal_n, and give the iterated function pointers to the internal objects rather than ProxyWithInternal objects? What locking criteria should it obey?",
      "parentUuid": "4fb8e14e_8698e9fb",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c7ee63d_d5d10936",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2169,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "I\u0027d like to make GetStats go directly to rtp_manager() for this. RtpTransmissionManager was written to (quote class comment):\n\n// The RtpTransmissionManager class is responsible for managing the lifetime\n// and relationships between objects of type RtpSender, RtpReceiver and\n// RtpTransceiver.",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4a34a28_3468fa4d",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2169,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-12T09:45:39Z",
      "side": 1,
      "message": "GetStats() already has a loop like this actually. This function isn\u0027t directly related to GetStats() though. Can you give some pseudo code of the change you\u0027d like to see?",
      "parentUuid": "1c7ee63d_d5d10936",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "486a94ea_b4cb690c",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2169,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-14T06:49:15Z",
      "side": 1,
      "message": "Old: void PeerConnection::EnumerateTransceivers_n()\n\nNew: void RtpTransmissionManager::EnumerateTransceivers_n()\n\nOn this line: for (const auto\u0026 tranceiver : transceivers()-\u003eList())",
      "parentUuid": "b4a34a28_3468fa4d",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10729de1_09c7417b",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 49
      },
      "lineNbr": 2169,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-14T07:23:04Z",
      "side": 1,
      "message": "Ah I see. Yes, sounds good.\nOn that note, would it make sense to move this to the transceiver list, make it be specifically for the \u0027internal()\u0027 pointers (not proxies) and skip creating the copy? We could also have the ScopedDisallowBlockingCalls check there to have a slightly broader scope of guarding against regressions.",
      "parentUuid": "486a94ea_b4cb690c",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a26be7_9cb20fd6",
        "filename": "pc/peer_connection.h",
        "patchSetId": 49
      },
      "lineNbr": 321,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "tranceivers -\u003e transceivers",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da8fa46a_f19446ee",
        "filename": "pc/peer_connection.h",
        "patchSetId": 49
      },
      "lineNbr": 321,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-12T09:45:39Z",
      "side": 1,
      "message": "copy/paste strikes again!",
      "parentUuid": "c0a26be7_9cb20fd6",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d31a7f1d_cc9f5493",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 49
      },
      "lineNbr": 2053,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "Now that you write transceiver_stats_infos_ on the network thread, the comment in rtc_stats_collector_ needs changing. (the downside of relegating thread safety to commentary not guards....)",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "380b1679_1845659e",
        "filename": "pc/rtc_stats_collector.cc",
        "patchSetId": 49
      },
      "lineNbr": 2053,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-12T09:45:39Z",
      "side": 1,
      "message": "Done, thanks. Yes this variable isn\u0027t a good fit as a member variable of the RTCStatsCollector class because it\u0027s naturally scoped within a set of stats gathering operations, cleare()-ed at the beginning and end of such an operation. A future improvement could remove the member variable and have it exist only while we\u0027re gathering stats (and pass ownership around as operations are performed).",
      "parentUuid": "d31a7f1d_cc9f5493",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61e3a3c8_304600d4",
        "filename": "pc/test/fake_peer_connection_for_stats.h",
        "patchSetId": 49
      },
      "lineNbr": 333,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-12T06:14:54Z",
      "side": 1,
      "message": "Can you add an \"assert plan B\" here? This is deeply bogus for Unified Plan.",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "880053cd_af57b1be",
        "filename": "pc/test/fake_peer_connection_for_stats.h",
        "patchSetId": 49
      },
      "lineNbr": 333,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-12T09:45:39Z",
      "side": 1,
      "message": "These fake classes don\u0027t hold sdp semantic state. They\u0027re essentially bare bones containers for the purposes of testing the stats classes.",
      "parentUuid": "61e3a3c8_304600d4",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "455673ed_bb3d7d79",
        "filename": "pc/test/fake_peer_connection_for_stats.h",
        "patchSetId": 49
      },
      "lineNbr": 333,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-14T06:49:15Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "880053cd_af57b1be",
      "revId": "b51285da5fccdc88c8ebbfa4f96d0b249f895aaa",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}