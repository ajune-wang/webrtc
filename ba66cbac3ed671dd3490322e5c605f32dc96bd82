{
  "comments": [
    {
      "key": {
        "uuid": "8e5f52d6_0d3eea7a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-07-17T10:46:30Z",
      "side": 1,
      "message": "Tomas, can you PTAL on /API changes",
      "revId": "ba66cbac3ed671dd3490322e5c605f32dc96bd82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2957e1f2_a446c3e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-20T09:11:43Z",
      "side": 1,
      "message": "forgot to hit the +1 for stamping.",
      "revId": "ba66cbac3ed671dd3490322e5c605f32dc96bd82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e84cde4_9f4efbec",
        "filename": "api/test/network_emulation/network_emulation_interfaces.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-20T09:11:20Z",
      "side": 1,
      "message": "any particular reason we choose to initialize this timestamp to a different \u0027unset\u0027 value than first_packet_received_time? Do we ever compare the \u0027infinite\u0027 timestamps?\nIn case of an unexpected error such as if they\u0027re both infinite when AverageReceiveRate() is called - is this then to avoid division by 0?\n(if so, you could add a comment explaining that this is a safeguard for something that should never happen)",
      "revId": "ba66cbac3ed671dd3490322e5c605f32dc96bd82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "206e4fd5_68c0d1e6",
        "filename": "api/test/network_emulation/network_emulation_interfaces.h",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-07-21T07:58:42Z",
      "side": 1,
      "message": "It was done to simplify computations. Minus infinity is less then any value, so fits better for   ongoing calculation of max met timestamp. Added a comment, that user have to assume that it\u0027s just some infinite value.",
      "parentUuid": "8e84cde4_9f4efbec",
      "revId": "ba66cbac3ed671dd3490322e5c605f32dc96bd82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb2514d3_159448fd",
        "filename": "api/test/network_emulation/network_emulation_interfaces.h",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 5508
      },
      "writtenOn": "2020-07-20T09:11:20Z",
      "side": 1,
      "message": "nit: Since these structs are becoming more like classes now, you might want to protect direct access to variables that should not be read directly and force use of the functions to get the right value.",
      "revId": "ba66cbac3ed671dd3490322e5c605f32dc96bd82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "13540ca3_170f5da3",
        "filename": "api/test/network_emulation/network_emulation_interfaces.h",
        "patchSetId": 4
      },
      "lineNbr": 108,
      "author": {
        "id": 6337
      },
      "writtenOn": "2020-07-21T07:58:42Z",
      "side": 1,
      "message": "Yep, I am thinking of it. I think I\u0027ll do it in next CL.",
      "parentUuid": "bb2514d3_159448fd",
      "revId": "ba66cbac3ed671dd3490322e5c605f32dc96bd82",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}