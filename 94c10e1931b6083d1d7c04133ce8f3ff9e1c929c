{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "554262c3_f7d21221",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-03-19T21:17:45Z",
      "side": 1,
      "message": "Since this CL imposes some arbitrary limits (16M and 8*16M) on channel and transport buffering respectively, it might be nice to think about how we can instrument how often those limits are hit.\n\nIf they\u0027re never hit, they\u0027re too high; if they\u0027re hit frequently, they\u0027re too low...\n\nbut approving.",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "caf59682_d6e38a74",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-03-19T21:17:45Z",
      "side": 1,
      "message": "this is the transport-wide limit?\ndo we have stats for how many simultaneous channels are used in practice?\nI don\u0027t think it is troublesome, but 8 seems a bit like \"pick a number\".",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cbaa6d6_5d9166fa",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 7036
      },
      "writtenOn": "2024-03-20T10:42:46Z",
      "side": 1,
      "message": "I don\u0027t think we want that type of limit, which is going to affect P2P applications disproportionately. We should not have a limit on the web, or make it the maximum possible integer (or at least maybe in the GB range).\nThe renderer processes already have limits on how much memory they can use, so it\u0027s fine to rely on this, and on the server side, you should be allowed to pick different values.",
      "parentUuid": "caf59682_d6e38a74",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b72828a5_b062ed19",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 5508
      },
      "writtenOn": "2024-03-20T18:13:36Z",
      "side": 1,
      "message": "Can you clarify - as indicated in the comment, the limit is \"practically unlimited\". Is that not a limit we want? Is there data that suggests that it would disproportionally affect p2p applications?\n(peerconnection is by definition p2p, so perhaps there\u0027s a particular p2p scenario you\u0027re thinking of?)",
      "parentUuid": "4cbaa6d6_5d9166fa",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e3b8f3b_15460458",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 12215
      },
      "writtenOn": "2024-03-20T20:53:54Z",
      "side": 1,
      "message": "The per-data-channel limit; 16MB, is the same as it was before. I have now changed the code to use the old constant - that\u0027s better.\n\n8 was just a picked number, that\u0027s true. Before this CL, there was no transport-wide limit, so let\u0027s remove it and keep the same behavior as before. We can always improve later.",
      "parentUuid": "b72828a5_b062ed19",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "10383771_eff41e4d",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 5
      },
      "lineNbr": 200,
      "author": {
        "id": 7036
      },
      "writtenOn": "2024-03-21T14:13:05Z",
      "side": 1,
      "message": "Since the blink layer assumes that we have a 16MB limit per channel and never verifies the result of the send() calls, if any application is trying to open more channels on a single peer connection for any reason, it could silently drop messages and that\u0027s not ok.\nWhile I\u0027m not aware of applications doing this, I could imagine one trying to send multiple files in parallel over DataChannels, or some stress tests doing this even.\nWe do not want a global limit for the web at all, thanks for making this change!",
      "parentUuid": "0e3b8f3b_15460458",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bab5cdf_1e92187a",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 5508
      },
      "writtenOn": "2024-03-19T12:52:20Z",
      "side": 1,
      "message": "nit: 0u ðŸ˜„",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9405774e_30b9cd37",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 5
      },
      "lineNbr": 491,
      "author": {
        "id": 12215
      },
      "writtenOn": "2024-03-20T20:53:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bab5cdf_1e92187a",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "934b67ca_48bb8962",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 5
      },
      "lineNbr": 580,
      "author": {
        "id": 5508
      },
      "writtenOn": "2024-03-19T12:52:20Z",
      "side": 1,
      "message": "just double checking - intentionally also for the error cases in SendDataMessage?",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ba358d6_c5f63d82",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 5
      },
      "lineNbr": 580,
      "author": {
        "id": 12215
      },
      "writtenOn": "2024-03-20T20:53:54Z",
      "side": 1,
      "message": "Yes, it always - intentionally - increases the value whenever having called send. It doesn\u0027t actually handle errors even (that\u0027s a TODO in blink\u0027s RTCDataChannel). But now we handle that correctly, with eventual consistency.",
      "parentUuid": "934b67ca_48bb8962",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19232e56_2964f4a3",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 5
      },
      "lineNbr": 874,
      "author": {
        "id": 5508
      },
      "writtenOn": "2024-03-19T12:52:20Z",
      "side": 1,
      "message": "any justification for how the value is picked? (even if it\u0027s arbitrary, that might be good to document)",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32da589c_62e2e734",
        "filename": "pc/sctp_data_channel.cc",
        "patchSetId": 5
      },
      "lineNbr": 874,
      "author": {
        "id": 12215
      },
      "writtenOn": "2024-03-20T20:53:54Z",
      "side": 1,
      "message": "I have added a comment. PTAL and let me know if it\u0027s understandable. Yes, it\u0027s picked by \"common sense\".",
      "parentUuid": "19232e56_2964f4a3",
      "revId": "94c10e1931b6083d1d7c04133ce8f3ff9e1c929c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}