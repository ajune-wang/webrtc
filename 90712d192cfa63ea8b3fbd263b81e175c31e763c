{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "97a58668_81bc7b77",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12234
      },
      "writtenOn": "2022-05-17T20:28:26Z",
      "side": 1,
      "message": "Windows 7 and Windows 10 trybots are failing with this CL without much information.\nI tried to run the same bots on Windows 11 and it works fine.\nUnfortunately the pool of Windows 11 machines is currently a bit small to migrate WebRTC Windows trybots.\n",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a3cc2d9c_2d6a0e80",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12234
      },
      "writtenOn": "2022-05-18T08:06:18Z",
      "side": 1,
      "message": "Little update, the current crash with the win try bots seems to be fixed when using win 10-19042 bots. This means this CL should be able to land after https://webrtc-review.googlesource.com/c/src/+/260106.",
      "parentUuid": "97a58668_81bc7b77",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef4c5aa9_775b7a76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 6193
      },
      "writtenOn": "2022-05-19T11:29:41Z",
      "side": 1,
      "message": "So I\u0027m still seeing the issue on the win_asan bot but not the rest anymore, since it\u0027s using different flags it could be timing dependent.\n\nhttps://webrtc-review.googlesource.com/c/src/+/260106",
      "parentUuid": "a3cc2d9c_2d6a0e80",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a1bad55_7456b030",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12234
      },
      "writtenOn": "2022-05-20T13:11:47Z",
      "side": 1,
      "message": "There isn\u0027t much logs but from what I understand the tests are interrupted because they hit a 900 seconds timeout (15 minutes).",
      "parentUuid": "ef4c5aa9_775b7a76",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15791ce2_f9d51e22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-20T17:46:51Z",
      "side": 1,
      "message": "FWIW, when I run this locally I see one of the tests hang because it looks like we never get the \"Closed\" event to stop one of the captures, so they test just waits for forever.",
      "parentUuid": "3a1bad55_7456b030",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93e5e7e4_84244e3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-20T19:23:26Z",
      "side": 1,
      "message": "It seems that it is capture failing in the trybots (we don\u0027t get to the Closed event portion of the test), I see the expectations from `DoCapture` failing now that I\u0027ve added kMaxTries to prevent the infinite loop, e.g.\n../../modules/desktop_capture/win/wgc_capturer_win_unittest.cc(201): error: Value of: frame_\n  Actual: false\nExpected: true\n\nI am not sure why capture fails for the Increase/Decrease and Close window mid capture tests, but not others like CaptureTime or any of the Screen capture tests.",
      "parentUuid": "15791ce2_f9d51e22",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec1b8b1d_6e743bcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-20T19:25:54Z",
      "side": 1,
      "message": "Could there be any threading races where the capturer is running on the test thread which doesn\u0027t really yield to allow the event to get fired?",
      "parentUuid": "93e5e7e4_84244e3b",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8e29471d_1193bba9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-20T19:29:10Z",
      "side": 1,
      "message": "We run our own little message pump in the CloseWindowMidCapture test to work around that. As for the FrameArrived event, it is not a requirement that we process or even allow the event to fire before we can pick up the frame from the pool.\n\nAnd I just realized CaptureTime is still stuck in the infinite loop for ASAN, it\u0027s only passing for x86. And I bet the screen capture tests are getting skipped because we check if there are monitors attached when running `IsWgcSupported`.\n\nIt\u0027s starting to make a little more sense, but I\u0027m still confused as to why these tests pass for ASAN when we add a bail-out via kMaxTries, whereas before they were stuck looping forever. And I guess they\u0027re failing in x86 because we\u0027re bailing out too soon?",
      "parentUuid": "93e5e7e4_84244e3b",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65865137_3889a747",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12234
      },
      "writtenOn": "2022-05-24T12:39:10Z",
      "side": 1,
      "message": "Could it be that win_x86_clang_rel is still red because the tests are running on Windows-10-18363 machines ?\nhttps://webrtc.googlesource.com/src/+/refs/changes/80/261780/8/infra/specs/waterfalls.pyl#596",
      "parentUuid": "8e29471d_1193bba9",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7350545_364768d3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-25T20:39:47Z",
      "side": 1,
      "message": "My understanding is that window capture should work fine on RS5+ (17763). I\u0027ve asked the API owner if there are any known issues with this version.",
      "parentUuid": "65865137_3889a747",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c03636a_16048b21",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "Hmmm, it seems like this is maybe okay because now instead of creating free threaded, we\u0027re just creating the frame pool, so this is still ~mostly tracking the same thing?\n\nI think this is probably worth at least a comment in the commit description.",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ecd42db_689903d3",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "I\u0027d be fine deprecating this and adding a new one if you think that\u0027s the better way to go, I just figured it was basically the same. I will update the commit description to mention this.",
      "parentUuid": "6c03636a_16048b21",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "193ea3db_368bded2",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:25:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ecd42db_689903d3",
      "range": {
        "startLine": 64,
        "startChar": 2,
        "endLine": 64,
        "endChar": 29
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d2b605_7eefa79c",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "I think if we direct this through std::hex it\u0027s more searchable. e.g.\n`\"Message: \" \u003c\u003c std::hex \u003c\u003c hr;` (At least, I get more hits when I can translate to a hex number and then search for HRESULT \u003chex\u003e instead of HRESULT \u003cdec\u003e, if there\u0027s a place for me to search that that doesn\u0027t matter then fine as is)\n\nSo that it will yield e.g. 0x800XXXXX instead of -245....\n\nSame below.\n\n(Don\u0027t need to change existing instances, but changing new instances/instances going forward would be helpful if you agree).",
      "range": {
        "startLine": 114,
        "startChar": 26,
        "endLine": 114,
        "endChar": 31
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64911650_ac6e9df9",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "That sounds good to me, I\u0027ll update the new uses.",
      "parentUuid": "f5d2b605_7eefa79c",
      "range": {
        "startLine": 114,
        "startChar": 26,
        "endLine": 114,
        "endChar": 31
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05434d2a_ab2cfe26",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:25:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "64911650_ac6e9df9",
      "range": {
        "startLine": 114,
        "startChar": 26,
        "endLine": 114,
        "endChar": 31
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4abf049c_243cba6e",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:29:05Z",
      "side": 1,
      "message": "Oh sorry, I did not end up doing this actually. RTC_LOG expects a char* and adding std::hex turns it into a std::ios_base type which does not compile.",
      "parentUuid": "05434d2a_ab2cfe26",
      "range": {
        "startLine": 114,
        "startChar": 26,
        "endLine": 114,
        "endChar": 31
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "44542609_6437b17e",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-20T17:46:51Z",
      "side": 1,
      "message": "Ack :(",
      "parentUuid": "4abf049c_243cba6e",
      "range": {
        "startLine": 114,
        "startChar": 26,
        "endLine": 114,
        "endChar": 31
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03a4aa84_6976d3ca",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "Since this is also done in ItemClosed, can we put it into a `RemoveHandlers` method that both call? That way if we subscribe to any other events in the future we can just add it there?",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 120,
        "endChar": 5
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ec9012f_473eb4b3",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "Good idea! I will do this.",
      "parentUuid": "03a4aa84_6976d3ca",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 120,
        "endChar": 5
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40bd3317_4c881de6",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 120,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:25:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6ec9012f_473eb4b3",
      "range": {
        "startLine": 109,
        "startChar": 0,
        "endLine": 120,
        "endChar": 5
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52715502_7de1dfda",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "Do we actually need/want this? I guess otherwise we have to lock to access the frame queue; but I want to make sure that this isn\u0027t causing more work that will block the main thread and lead to a performance regression? Are we already on our own thread?",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 189,
        "endChar": 24
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "78f97344_4ace0640",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 189,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "Yes, capture is done on its own thread. Both the NativeDesktopMediaList  DesktopCaptureDevice create a base::Thread object to run capture on.\n\nAnd yes exactly I wanted to avoid locks.",
      "parentUuid": "52715502_7de1dfda",
      "range": {
        "startLine": 187,
        "startChar": 2,
        "endLine": 189,
        "endChar": 24
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f273f09_e0474f3a",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 390,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "I think we want to ensure that this doesn\u0027t go beyond kNumBuffers? e.g. if frames are produced at ~60fps, but we end up querying for them at \u003c30fps, I think this would probably start to grow, but there\u0027s only ever two frames available?\n\n```\nif (frames_in_pool_ \u003c kNumBuffers)\n frames_in_pool_++;\n```",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a33b0fa_d68f5844",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 390,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "I don\u0027t think we will get any FrameArrived events if there\u0027s no room in the pool, but I\u0027ll double check this and add some DCHECKS (also one to ensure we don\u0027t go negative).",
      "parentUuid": "8f273f09_e0474f3a",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ee0bde23_71942c9b",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 390,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:25:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a33b0fa_d68f5844",
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66486894_ca934e01",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 410,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "Could this without the check here be the cause of the ASAN issue? e.g. is item_ still valid upon receiving this event?",
      "range": {
        "startLine": 410,
        "startChar": 2,
        "endLine": 410,
        "endChar": 48
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "74e89f01_00552d18",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 410,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "I will look into this.",
      "parentUuid": "66486894_ca934e01",
      "range": {
        "startLine": 410,
        "startChar": 2,
        "endLine": 410,
        "endChar": 48
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5e3dcf78_71656e69",
        "filename": "modules/desktop_capture/win/wgc_capture_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 410,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:25:37Z",
      "side": 1,
      "message": "item_ is still valid until we destruct it. Receiving the event simply fires the event and unregisters the event handler (since they don\u0027t expect to send the event again).",
      "parentUuid": "74e89f01_00552d18",
      "range": {
        "startLine": 410,
        "startChar": 2,
        "endLine": 410,
        "endChar": 48
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66ef627a_649a0218",
        "filename": "modules/desktop_capture/win/wgc_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 18474
      },
      "writtenOn": "2022-05-10T23:37:12Z",
      "side": 1,
      "message": "So I understand; can you point to where we do that?",
      "range": {
        "startLine": 231,
        "startChar": 69,
        "endLine": 232,
        "endChar": 19
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3e62f48_e8a0039a",
        "filename": "modules/desktop_capture/win/wgc_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-12T00:08:24Z",
      "side": 1,
      "message": "all base::Thread objects are COM initialized:\nhttps://source.chromium.org/chromium/chromium/src/+/main:base/threading/thread.cc;l\u003d384;drc\u003d72186360334350c90b9b94515b3c82bea25e27ff",
      "parentUuid": "66ef627a_649a0218",
      "range": {
        "startLine": 231,
        "startChar": 69,
        "endLine": 232,
        "endChar": 19
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb7f4d6c_1168798c",
        "filename": "modules/desktop_capture/win/wgc_capturer_win.cc",
        "patchSetId": 4
      },
      "lineNbr": 232,
      "author": {
        "id": 12416
      },
      "writtenOn": "2022-05-17T23:25:37Z",
      "side": 1,
      "message": "I updated this comment to say \"should already be COM initialized\" since it is up to the consumer to do this.",
      "parentUuid": "a3e62f48_e8a0039a",
      "range": {
        "startLine": 231,
        "startChar": 69,
        "endLine": 232,
        "endChar": 19
      },
      "revId": "90712d192cfa63ea8b3fbd263b81e175c31e763c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}