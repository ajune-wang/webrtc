{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e2e3b40f_61f0bf68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 21299
      },
      "writtenOn": "2023-08-02T20:34:54Z",
      "side": 1,
      "message": "This is the first CL I ever submitted. what is the next step here?",
      "revId": "8b69b7e126a6a6a30a988bf274367484afaa668b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0cf67eb3_18b7a389",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 21299
      },
      "writtenOn": "2023-08-11T17:21:14Z",
      "side": 1,
      "message": "Hi, \nCan you please review this diff? This is blocking the workaround to disable temporal layering for screen share.",
      "revId": "8b69b7e126a6a6a30a988bf274367484afaa668b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "233cbecf_de9e69cc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7529
      },
      "writtenOn": "2023-08-17T16:41:59Z",
      "side": 1,
      "message": "@sprang@webrtc.org could you take a look? This needs OWNERS approval.\n\nWe\u0027re happy to share more details on the issue or additional test cases if needed. Without this change, H.264 is automatically configured to use temporal layering during screenshare simulcast, and the knob that\u0027s supposed to let applications disable temporal layering (RtpSender::setParameters) does not work for H.264.",
      "revId": "8b69b7e126a6a6a30a988bf274367484afaa668b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ed418cbe_1ba11eb9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2023-08-18T09:50:30Z",
      "side": 1,
      "message": "An integration test for this would be great!\n\nI have some vague memory of something like this being tried and then being reverted because of some issue. But I can\u0027t really find any trace of that now, so I could just be misremembering. \n\ncc fippo, do you remember any issues around H264 temporal layers? Any thoughts in general, since you are bigger user of H264...",
      "revId": "8b69b7e126a6a6a30a988bf274367484afaa668b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "008a524f_aeb18400",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-08-18T11:21:36Z",
      "side": 1,
      "message": "+1, even though i\u0027m a bit surprised this is required since using insertable streams one can see temporal layers being set (the signaling to the remote end is not there without the removed frame marking extension, see issue 11637)\n\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/codecs/h264/h264_encoder_impl.cc;l\u003d279;bpv\u003d1;bpt\u003d0 configures them.\n\nNow as with anything H264 testing is tricky ;-)",
      "parentUuid": "ed418cbe_1ba11eb9",
      "revId": "8b69b7e126a6a6a30a988bf274367484afaa668b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}