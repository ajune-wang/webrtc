{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80a1e82b_a3b2b6d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "Overall looks much better, thanks for the fixes!\nI\u0027m a bit worried about that frame dropping situation though. Please clarify if I\u0027ve misunderstood.",
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f7f042a_d473351f",
        "filename": "modules/video_coding/svc/simulcast_to_svc_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 32,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "nit: switch/case and check that no unexpected value is present?",
      "range": {
        "startLine": 26,
        "startChar": 0,
        "endLine": 32,
        "endChar": 3
      },
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98ff7397_ba3fd816",
        "filename": "modules/video_coding/svc/simulcast_to_svc_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "nit: Not sure it\u0027s worth pre-sizing in this case. Id probably add a constructor to `LayerState`:\n\n```\n  LayerState::LayerState(ScalabilityMode scalability_mode)\n    : video_controller(CreateScalabilityStructure(scalability_mode)),\n      awaiting_frame(false) {\n     // Initialize the controller with arbitrary non-zero bitrates.\n     int num_temporal_layers \u003d ScalabilityModeToNumTemporalLayers(scalability_mode);\n     VideoBitrateAllocation dummy_bitrates;\n     for (int i \u003d 0; i \u003c num_temporal_layers; ++i) {\n       dummy_bitrates.SetBitrate(0, i, 10000);\n     }\n     video_controller-\u003eOnRatesUpdated(dummy_bitrates);\n   }\n```\n\n...then the initialization of the vector would just be:\n\n```\n  for (int i \u003d 0; i \u003c num_spatial_layers; ++i) {\n    layers_.emplace_back(scalability_mode);\n  }\n```",
      "range": {
        "startLine": 50,
        "startChar": 1,
        "endLine": 54,
        "endChar": 3
      },
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45f79f47_13cbee72",
        "filename": "modules/video_coding/svc/simulcast_to_svc_converter.cc",
        "patchSetId": 2
      },
      "lineNbr": 72,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "This sounds like it\u0027s assuming `FULL_SUPERFRAME_DROP` to always be the fram dropping mode? Currently, per-layer frame dropping (`LAYER_DROP`) is being enabled.\n\nI feel like this mechanism is a bit fragile and could do with some more test coverage.",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 72,
        "endChar": 43
      },
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fd071ab_de68e48b",
        "filename": "modules/video_coding/svc/simulcast_to_svc_converter.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "nit: const",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 44,
        "endChar": 4
      },
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86d81751_ae0b226d",
        "filename": "modules/video_coding/svc/simulcast_to_svc_converter.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "nit: const",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 49,
        "endChar": 2
      },
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b1ac8a8_439643ea",
        "filename": "modules/video_coding/svc/simulcast_to_svc_converter_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 131,
      "author": {
        "id": 5524
      },
      "writtenOn": "2024-08-29T13:52:21Z",
      "side": 1,
      "message": "nit: I think you can just do `EXPECT_EQ(image.SimulcastIndex(), 1);` - it should fail if the left side is a nullopt and otherwise match the values.",
      "revId": "72ab6c764bcfb44b9f78aafa63d6d0b115998011",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}