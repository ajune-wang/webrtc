{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "05502526_cadfe904",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-03-09T17:16:17Z",
      "side": 1,
      "message": "This one sure complicates analyzer, and may be make it brittle,\nbut it would use ReceiveSideCC through the same api production code uses it.\nAnd would unblock cleaning up ReceiveSideCC.",
      "revId": "d5516d1ab50a16bc68738a73071bb08525a55e4a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a3f4933a_57a1e526",
        "filename": "rtc_tools/rtc_event_log_visualizer/analyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 354,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-30T12:05:55Z",
      "side": 1,
      "message": "Do you think we should use the real header extension mapping from the stream config if available? Or it doesn\u0027t matter?",
      "range": {
        "startLine": 354,
        "startChar": 0,
        "endLine": 354,
        "endChar": 56
      },
      "revId": "d5516d1ab50a16bc68738a73071bb08525a55e4a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2830dcc_8dded0b2",
        "filename": "rtc_tools/rtc_event_log_visualizer/analyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 1541,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-03-09T17:16:17Z",
      "side": 1,
      "message": "previous code passed payload (total_length) into parameter that expects payload_size when used with transport sequence number/for send side BWE,\nand expects total packet size when used for receive side BWE.\n\nI fixed that, but that would sure change behavior in some cases.",
      "range": {
        "startLine": 1539,
        "startChar": 0,
        "endLine": 1541,
        "endChar": 0
      },
      "revId": "d5516d1ab50a16bc68738a73071bb08525a55e4a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0e870821_f3627ff6",
        "filename": "rtc_tools/rtc_event_log_visualizer/analyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 1545,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-03-09T17:16:17Z",
      "side": 1,
      "message": "here I\u0027m still not sure what bitrate acked_bitrate should count, so keeping existent behavior and existent comment.",
      "range": {
        "startLine": 1545,
        "startChar": 25,
        "endLine": 1545,
        "endChar": 77
      },
      "revId": "d5516d1ab50a16bc68738a73071bb08525a55e4a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "630153ba_73b28970",
        "filename": "rtc_tools/rtc_event_log_visualizer/analyzer.cc",
        "patchSetId": 2
      },
      "lineNbr": 1545,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-03-30T12:05:55Z",
      "side": 1,
      "message": "Looks like this should not subtract the header. The analogous production code is here https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/congestion_controller/goog_cc/acknowledged_bitrate_estimator.cc;l\u003d47;drc\u003d48340c1e35efad5fb0253025dcc36b3a9573e258, which reads SentPacket::size which apparently should be the size of the full packet including headers https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/transport/network_types.h;l\u003d106;drc\u003d48340c1e35efad5fb0253025dcc36b3a9573e258",
      "parentUuid": "0e870821_f3627ff6",
      "range": {
        "startLine": 1545,
        "startChar": 25,
        "endLine": 1545,
        "endChar": 77
      },
      "revId": "d5516d1ab50a16bc68738a73071bb08525a55e4a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}