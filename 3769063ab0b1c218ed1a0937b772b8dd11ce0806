{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e12198b2_2029af2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-02T07:12:01Z",
      "side": 1,
      "message": "ilya: can you take a high-level look? It seems the WG wants to change from rids to single-rid but I don\u0027t think that is a good idea",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b8f647c7_b442b726",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-09-05T09:44:36Z",
      "side": 1,
      "message": "For safety, can we split this CL up? The first, uncontroversal one would implement the API but always trigger the keyframes at all the streams.\n\nThe second one would allow per-stream key-frames in some scenarios. It would be easy to revert later.\n\nI\u0027m not having a second thoughts about this whole idea. We also need to be very careful to not break the PLI and FIR processing, since some SFUs might rely on keyframes generated at all streams when they send a key-frame request on any of them.",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65ad0f12_680b5361",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-09-05T09:45:27Z",
      "side": 1,
      "message": "If it\u0027s possible to change the spec, I would drop the rids completely and always generate keyframes on all of them.",
      "parentUuid": "e12198b2_2029af2d",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3fcbe72_537dda46",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 5524
      },
      "writtenOn": "2022-09-05T11:48:22Z",
      "side": 1,
      "message": "Ilya, what is your objection to per-stream keyframe requests? Complexity or something else?\nI can see the appeal of not needing to degrade all the streams based on something you have apriori knowledge will be useful on only one of them. I\u0027m not sure why we haven\u0027t moved in this direction for PLI/FIR already, assuming there is legacy baggage there. For a new API there should be no such concerns though?",
      "parentUuid": "65ad0f12_680b5361",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec257fa6_be342026",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-05T12:02:36Z",
      "side": 1,
      "message": "There is actually a quite valid use-case for per-layer keyframes in a multiparty scenario. If you have someone new joining that is only prepared to receive the lowest resolution or if you have a single participant switching from a low resolution to a mid resolution you don\u0027t need big keyframes on the high resolution stream.\nIn theory this lowers the number of keyframes and increases the utilization of the available bitrate. How big the effect is in practice is hard to quantify upfront.",
      "parentUuid": "65ad0f12_680b5361",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "476ba49f_affcb5cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-05T12:02:36Z",
      "side": 1,
      "message": "Agree, we can\u0027t easily change the RTCP behavior. This API is opt-in, if you don\u0027t use it then the current behavior should remain the same.\n\nI want to break the RTCP behavior too but that requires creating an opt-in way in the SDP (probably via an optional argument to the VLA extension) - something to be discussed in webrtc:10615?\n\nWill split out PS 1..9 as a separate CL, that should increase readability quite a bit.",
      "parentUuid": "b8f647c7_b442b726",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85621724_3a1689b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2022-09-05T12:47:54Z",
      "side": 1,
      "message": "Yes, complexity. It seems that the assumption of key-frame everywhere is running deep. I agree, ideally, key-frames should be per layer if possible. So I won\u0027t object this CL. I just want to do it extra carefully.",
      "parentUuid": "ec257fa6_be342026",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76308ea4_a064198d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 17
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-09-07T12:27:38Z",
      "side": 1,
      "message": "Agreed, I\u0027ll try to come up with a test for the existing behavior while waiting for the spec discussion to come to a conclusion (after TPAC next week)",
      "parentUuid": "85621724_3a1689b7",
      "revId": "3769063ab0b1c218ed1a0937b772b8dd11ce0806",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}