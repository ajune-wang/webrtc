{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e6c4a10_ebecf976",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 7015
      },
      "writtenOn": "2021-05-10T10:18:57Z",
      "side": 1,
      "message": "LG, but no need to change unittest?",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f4c2ef7_ae3b2737",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6876
      },
      "writtenOn": "2021-05-10T11:12:25Z",
      "side": 1,
      "message": "Thanks for the review.",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ac4a58d8_147f13f3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6876
      },
      "writtenOn": "2021-05-10T11:12:25Z",
      "side": 1,
      "message": "Not really. The unittest is testing that no refresh DTX packets (payloads \u003e\u003d 2) are sent when those packets have a larger energy than the expected comfort noise, that part is not affected by this CL.",
      "parentUuid": "0e6c4a10_ebecf976",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c64f3343_15dfc611",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 7015
      },
      "writtenOn": "2021-05-10T11:45:49Z",
      "side": 1,
      "message": "I see. do you think it makes sense to add a unittest to capture the latest failure.",
      "parentUuid": "ac4a58d8_147f13f3",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edf728a2_7422b527",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6876
      },
      "writtenOn": "2021-05-10T12:47:00Z",
      "side": 1,
      "message": "The latest failure was that the encoder created a short gap in the timestamp sequence but not in the sequence numbers. That looked like a loss at the decoder. This could actually happen in reality, entering in DTX for a really short period of time. However, the first packet after a DTX is not usually an empty (\u003c\u003d2 bytes) payload. \n\nWe could create a test for that:\n- Check that after a gap in timestamps but not in sequence number the next packet is a non empty packet (\u003e 2 bytes) or an empty packet (\u003c\u003d 2 bytes) but with a large enough timestamp gap. \n\nI think that test case does not need to be limited to this feature but I also think that it is bit too specific for a test case.\n\nWhat do you think?",
      "parentUuid": "c64f3343_15dfc611",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "038abce9_3da77f84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 7015
      },
      "writtenOn": "2021-05-10T14:02:44Z",
      "side": 1,
      "message": "In my word, the error was that audio receiver (NetEQ) has not been informed about DTX, before seeing a gap in timestamp. The DTX information replies on one byter.\n\nAn ideal test would be that we never introduce packet loss on the sender side:\n\nwe only allow the following to break after an empty packet\ntimestamp(packet(n)) + duration(packet(n)) \u003d\u003d timestamp(packet(n + 1))\nuntil next non-empty packet is released.\n\nI guess the test is then need to be written at a higher level, where timestamp packet number are defined.\n\nTo make it relatively easier and localized, we can add in the DTX test to make sure that\nopus_encoder always return \u003e2 unless the last issued payload is \u003c\u003d2",
      "parentUuid": "edf728a2_7422b527",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23108b01_319945ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6876
      },
      "writtenOn": "2021-05-11T11:58:32Z",
      "side": 1,
      "message": "Thanks for the suggestion. Right, looking at it from the Decoder side point of view makes things clearer. I have updated the unittest that was doing the filtering of the DTX refresh packets.",
      "parentUuid": "038abce9_3da77f84",
      "revId": "defb3c3fbfe1469af86b23f9adcf42d041a806da",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}