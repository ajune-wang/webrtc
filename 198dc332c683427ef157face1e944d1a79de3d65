{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "80b64a35_59d49a3b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-06-12T14:58:53Z",
      "side": 1,
      "message": "One further question, does chrome have a different packet buffer than libwebrtc? We have seen very positive results with native apps using libwebrtc directly, but I have not been able to reproduce the same behaviors on compiled chromium.",
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acd91a66_70a740cb",
        "filename": "common_video/h264/pps_parser_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-06-12T15:10:48Z",
      "side": 1,
      "message": "`ASSERT_TRUE(slice_header);`, \nmay be even clearer to `ASSERT_TRUE(slice_header.has_value());`\n\nanother option is to combine everything into single matcher:\n```\nEXPECT_THAT(PpsParser::ParseSliceHeader(\n              kH264BitstreamChunk + index.payload_start_offset,\n              index.payload_size),\n   Optional(AllOf(Field(\u0026PpsParser::SliceHeader::first_mb_in_slice, Eq(2)),\n                  Field(\u0026PpsParser::SliceHeader::pic_parameter_set_id, Eq(0)))));\n```\nbut I\u0027m not sure it would be more readable.",
      "range": {
        "startLine": 229,
        "startChar": 6,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab8537ec_0cd1fb42",
        "filename": "common_video/h264/pps_parser_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-06-12T18:03:22Z",
      "side": 1,
      "message": "I have made the first change. I can commit the second one, but seems a bit of overkill to me",
      "parentUuid": "acd91a66_70a740cb",
      "range": {
        "startLine": 229,
        "startChar": 6,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84ee1721_6b86cff3",
        "filename": "common_video/h264/pps_parser_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 5019
      },
      "writtenOn": "2024-06-13T08:54:41Z",
      "side": 1,
      "message": "still EXPECT, not ASSERT in the latest patchset for checking presence of the optional (i.e., should it fail, the test would crash next line.)\n\nhttps://google.github.io/googletest/primer.html#assertions\n\n‚ÄúASSERT_* versions generate fatal failures when they fail, and abort the current function. EXPECT_* versions generate nonfatal failures, which don‚Äôt abort the current function. Usually EXPECT_* are preferred, as they allow more than one failure to be reported in a test. However, you should use ASSERT_* if it doesn‚Äôt make sense to continue when the assertion in question fails.‚Äù",
      "parentUuid": "ab8537ec_0cd1fb42",
      "range": {
        "startLine": 229,
        "startChar": 6,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c2194eb1_0b7041c2",
        "filename": "common_video/h264/pps_parser_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-06-13T09:10:15Z",
      "side": 1,
      "message": "Sorry, I missed the ASSERT part, only changed the .has_value(). Doing it now, do you mind running the tryjobs?",
      "parentUuid": "84ee1721_6b86cff3",
      "range": {
        "startLine": 229,
        "startChar": 6,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "262d5c6e_eb372e24",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-06-12T15:13:37Z",
      "side": 1,
      "message": "all this code should be under \"if (original_nal_type\u003d\u003dslice/idr)\"",
      "range": {
        "startLine": 255,
        "startChar": 3,
        "endLine": 260,
        "endChar": 70
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dabf40eb_36185054",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-06-12T16:01:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "262d5c6e_eb372e24",
      "range": {
        "startLine": 255,
        "startChar": 3,
        "endLine": 260,
        "endChar": 70
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b736c9e3_86271bc7",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-06-12T16:19:35Z",
      "side": 1,
      "message": "Did you forget to upload the patch?",
      "parentUuid": "dabf40eb_36185054",
      "range": {
        "startLine": 255,
        "startChar": 3,
        "endLine": 260,
        "endChar": 70
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e16412c7_b4b30a22",
        "filename": "modules/rtp_rtcp/source/video_rtp_depacketizer_h264.cc",
        "patchSetId": 2
      },
      "lineNbr": 260,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-06-12T18:03:22Z",
      "side": 1,
      "message": "kind of üòÖ",
      "parentUuid": "b736c9e3_86271bc7",
      "range": {
        "startLine": 255,
        "startChar": 3,
        "endLine": 260,
        "endChar": 70
      },
      "revId": "198dc332c683427ef157face1e944d1a79de3d65",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}