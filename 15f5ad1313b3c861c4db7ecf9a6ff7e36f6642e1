{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d9a70094_12e396a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T06:04:18Z",
      "side": 1,
      "message": "If we land this one after Tommi\u0027s CL, we should be able to enable the thread checking.\nThe reduction in the number of explicit calls to internal() seems good to me.\n",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3987ebe4_2f56b646",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-19T06:42:02Z",
      "side": 1,
      "message": "lgtm. Good to see the thread checkers and I also think that moving away from the \u0027internal()\u0027 accessor would be a good thing.",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb4df448_ad357310",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-04-19T07:10:42Z",
      "side": 1,
      "message": "LGTM % nits",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb2eed6d_16852d7c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T07:16:31Z",
      "side": 1,
      "message": "Hm. Going further requires rethinking the proxy mechanism.\n",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71253d9a_c797e09c",
        "filename": "pc/sdp_offer_answer.h",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-04-19T07:10:42Z",
      "side": 1,
      "message": "nit: For both FindMediaSectionForTransceiver() and ProcessRemovalOfRemoteTrack(): Consider if we should use RtpTransceiver* or if we should use RtpTransceiver\u0026 (with or without const).",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ab517bbc_4cd498b5",
        "filename": "pc/sdp_offer_answer.h",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T18:37:02Z",
      "side": 1,
      "message": "Hm. It turns out that ProcessRemovalOfRemoteTrack actually pulls the pointer right back into a scoped_refptr (no compiler warning, seems we have auto-upcast here).\nSince such flipflopping makes me exceedingly nervous, I\u0027m going back to scoped_refptr for that function.",
      "parentUuid": "71253d9a_c797e09c",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8a1cd4e_bfe58ac0",
        "filename": "pc/sdp_offer_answer.h",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-04-19T07:10:42Z",
      "side": 1,
      "message": "nit: For both FindMediaSectionForTransceiver() and ProcessRemovalOfRemoteTrack(): do you really need both versions of the method? Prefer to have just one of them, if possible, and adjust the calling places, in order to minimize a bloaty interface.",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4a55c0f_93a791b5",
        "filename": "pc/sdp_offer_answer.h",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T18:37:02Z",
      "side": 1,
      "message": "Removed one version of FindMediaSectionForTransceiver. Also took it private.\n\nRemoved one version of ProcessRemoval ... it was already private.",
      "parentUuid": "d8a1cd4e_bfe58ac0",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c2ecb4d_849b328a",
        "filename": "pc/transceiver_list.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-19T06:42:02Z",
      "side": 1,
      "message": "down the line we could possibly go towards getting rid of the vector of proxies and instead go towards:\n\nstd::vector\u003cstd::unique_ptr\u003cRtpTransceiver\u003e\u003e transceivers_;\n\nand then return a const std::vector\u003c\u003e\u0026 here.",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e005a21_0c3b1a29",
        "filename": "pc/transceiver_list.cc",
        "patchSetId": 1
      },
      "lineNbr": 46,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T07:16:31Z",
      "side": 1,
      "message": "Only if there is a way to find the unique proxy from the transceiver object.",
      "parentUuid": "0c2ecb4d_849b328a",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2c3bd17_e88a3497",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-04-19T07:10:42Z",
      "side": 1,
      "message": "Suggestion to add after the first sentence: \"Copies the list of references, not the transceivers.\"",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b9ce0b5_8d697061",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T18:37:02Z",
      "side": 1,
      "message": "I think that\u0027s already said in the next sentence.",
      "parentUuid": "a2c3bd17_e88a3497",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76b2a1d0_2d616185",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-04-19T07:10:42Z",
      "side": 1,
      "message": "Please add the DCHECK or add a TODO with a crbug reference to a bug for adding the CHECK.",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5efe634c_fdca18a7",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T18:37:02Z",
      "side": 1,
      "message": "I\u0027m hoping that tommi\u0027s CL lands before mine so that I don\u0027t have to :-)",
      "parentUuid": "76b2a1d0_2d616185",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "724b9f1d_c1179b25",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-19T06:42:02Z",
      "side": 1,
      "message": "nit: \"and within the calling scope\"?",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46cc9543_e0421c88",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 87,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-19T07:16:31Z",
      "side": 1,
      "message": "As long as you guarantee that remove() isn\u0027t called, it\u0027s OK.",
      "parentUuid": "724b9f1d_c1179b25",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0aade192_22b1ea77",
        "filename": "pc/transceiver_list.h",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 5142
      },
      "writtenOn": "2021-04-19T07:10:42Z",
      "side": 1,
      "message": "Same here.",
      "revId": "15f5ad1313b3c861c4db7ecf9a6ff7e36f6642e1",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}