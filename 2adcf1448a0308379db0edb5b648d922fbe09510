{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1ae02fde_c0060557",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14589
      },
      "writtenOn": "2020-10-20T09:53:44Z",
      "side": 1,
      "message": "Found bug on Pixel3Xl and seems all next pixel models have the same issue.\nFixed it and tested on lots of devices.",
      "revId": "2adcf1448a0308379db0edb5b648d922fbe09510",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4226ac0_4e3ee9c2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5112
      },
      "writtenOn": "2020-10-20T12:48:20Z",
      "side": 1,
      "message": "If we need the size to be aligned by 16 somewhere, this is not the place to do it. Can you please provide more details on where the error is occurring? If you can provide a clean fix to some calculation in HW encoder, that would be great. Otherwise, I would like to keep any device specific workarounds to the app code.\n\nNormal 640x360 frames can be scaled down a lot (down to 80x45) before they are not divisible by 16. So I think the app has to be using some strange resolution if this is the problem. If using HW encoding, it is better to stick to standard 16:9 resolutions for compatibility.",
      "revId": "2adcf1448a0308379db0edb5b648d922fbe09510",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9848769_e6b45681",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 14589
      },
      "writtenOn": "2020-10-28T10:38:30Z",
      "side": 1,
      "message": "I couldn\u0027t put this fix in HW Encoder.\n\nI searched and found similar issue with description in this bug ticket and it\u0027s https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d11337\n\nThere is no good way to put this fix in application and I believe it will be good for everyone to have this fix in library, because there is lots of pixel phones already and similar one.\n\nIt will not be scaled as in your example to 80x45.\nBecause of the proposal code:\n1. 360 / 16 \u003d 22.5\n2. Because it is integer it and not double it will be converted to 23.\n3. Next step in code is to take that number and multiply it by 16.\n   23 * 16 \u003d 368 (this number is now divisible by 16)\n4. So in the end we have working video for pixel devices and VideoFrame size is really close to your original.",
      "parentUuid": "f4226ac0_4e3ee9c2",
      "revId": "2adcf1448a0308379db0edb5b648d922fbe09510",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a9ebb39_de02ec70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5112
      },
      "writtenOn": "2020-10-28T10:50:30Z",
      "side": 1,
      "message": "A trick to that is you should always use landscape resolution and use the VideoFrame rotation field to represent portrait. This way it would work. Anyway I think 80x45 is already a very low resolution.\n\nPlease note that you can already inject your own HW codecs if you want to make a HW codec that scales to a different resolution. I think it is a bad idea to magically align to 16 without any clear reason here just because thats what some HW codec requires.\n\nIf you want to go against this advice, you can set your own VideoProcessor on the VideoSource that does something different than applyFrameAdaptationParameters (and aligns to 16). I think it will work for now but I can\u0027t promise that scaling to a different resolution that requested by WebRTC will work forever.",
      "parentUuid": "e9848769_e6b45681",
      "revId": "2adcf1448a0308379db0edb5b648d922fbe09510",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}