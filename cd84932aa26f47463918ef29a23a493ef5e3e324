{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "878f76db_f0fcd301",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-03T19:08:06Z",
      "side": 1,
      "message": "hta - wdyt?",
      "revId": "cd84932aa26f47463918ef29a23a493ef5e3e324",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "69db904e_9791cafd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-04T08:47:06Z",
      "side": 1,
      "message": "I don\u0027t think this is wise.\nthere are two cases:\n\n1) open / getstats(old) / close / getstats(old) -\u003e fine, we know old getstats is used\n2) open / close / getstats(old) -\u003e no stats are collected, old getstats behavior is seen as erroneous\n\npredicting the future based on past behavior is not wise.\n",
      "revId": "cd84932aa26f47463918ef29a23a493ef5e3e324",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d470cea_27ecea42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-04T11:17:54Z",
      "side": 1,
      "message": "2) should still be unchanged:\n  open / close / getstats(old) -\u003e stats are collected\n\nWhat this changes is:\n3) open / getstats(new) / close -\u003e old stats not collected",
      "parentUuid": "69db904e_9791cafd",
      "revId": "cd84932aa26f47463918ef29a23a493ef5e3e324",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b72bd590_397f690c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-04-06T09:48:39Z",
      "side": 1,
      "message": "Can we set a flag here and add an use counter into getStats(old) when this flag is set? I\u0027m not convinced it won\u0027t happen (consider where new getstats is used by the lib that accesses PC directly, while old getstats is used by a stats-collecting library that fires every N seconds).\n\nAlso, what problem are we fixing? (bug reference or pointer to design doc)?\nI fear that if this causes issues, they will be hard to debug.\n\nBTW: release notes are generated from closed bugs. So CLs submitted without a bug will go under the radar at release-note time.",
      "parentUuid": "9d470cea_27ecea42",
      "revId": "cd84932aa26f47463918ef29a23a493ef5e3e324",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "daf02247_d93223fb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2021-04-06T09:59:56Z",
      "side": 1,
      "message": "Yes, to be clear I\u0027m on the fence myself about this.\n\nI\u0027ve been looking into how many blocking invokes we have at various places in the PeerConnection API implementation and in various places there can be many. In some places the numbers go up as a multiplication of the number of tracks.\n\nIn this particular case, I\u0027m thinking about avoiding a few Invokes (typically 3 on the signaling thread, more on other threads) for the purposes of maintaining the legacy stats collections. It would be nice if those apps that use the new getStats() and do not need the old getStats() post close(), would get an added performance boost.  However, the new getStats() implementation is not without problems:\nhttps://bugs.chromium.org/p/webrtc/issues/detail?id\u003d12644",
      "parentUuid": "b72bd590_397f690c",
      "revId": "cd84932aa26f47463918ef29a23a493ef5e3e324",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}