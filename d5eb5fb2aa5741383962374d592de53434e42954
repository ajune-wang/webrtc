{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "cab119b4_bb23740f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-07-19T23:52:57Z",
      "side": 1,
      "message": "Hi, Danil. I want to reduce the warning log that doesn\u0027t seem very important. (And I\u0027ve seen a comment on the monorail complaining about BUGBUG.) Please take a look. Thanks.",
      "revId": "d5eb5fb2aa5741383962374d592de53434e42954",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "567bc902_3dbbe722",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-20T08:52:06Z",
      "side": 1,
      "message": "to me calling 0.5 ms too early looks as bad as calling 2ms too early (same wasted wake up), it is still a bug.\n\nOn the other hand, logging it on every occurrence is probably too much, this class probably not a good place to track libevent task queue bug.\n\nmay be more advance throttling is more appropriate: add a member variable to count number of occurrences and log juest the 1st,  and every 10th (or log every x seconds) together with a number of total hits.",
      "parentUuid": "cab119b4_bb23740f",
      "revId": "d5eb5fb2aa5741383962374d592de53434e42954",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54adc88a_71f79b01",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-07-20T09:23:55Z",
      "side": 1,
      "message": "I found this log on MacOS (i.e., using task_queue_gcd). So it shouldn\u0027t be an issue with a specific task queue implementation.\n\nI saw the following comments in api/task_queue/task_queue_base.h: [1]\n// The task may execute with [-1, 17 + OS induced leeway) ms additional delay.\n\nAccording to this, running a task 1ms earlier than scheduled is not considered a bug. Right?\n\n[1] https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/task_queue/task_queue_base.h;drc\u003d8feb6fd1e9b11122d5b8530dd8184b3668bea011;l\u003d80",
      "parentUuid": "567bc902_3dbbe722",
      "revId": "d5eb5fb2aa5741383962374d592de53434e42954",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9e7d35ff_6f3d49c6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-07-21T08:12:44Z",
      "side": 1,
      "message": "personally I still think it is bad idea to allow task to execute earlier than the delay. would rather treat that as bug(s) than document as acceptable behaviour.\nBut that a bit out of topic of this change.\n\nI do not see much harm in reducing this log, it is a DLOG anyway, shouldn\u0027t be hard to reenable it to debug the issue.",
      "parentUuid": "54adc88a_71f79b01",
      "revId": "d5eb5fb2aa5741383962374d592de53434e42954",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}