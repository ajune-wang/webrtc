{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f1298631_463b94ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5613
      },
      "writtenOn": "2024-02-23T09:38:19Z",
      "side": 1,
      "message": "some nits otherwise LGTM",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "72c9f266_fe10449c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-02-23T11:21:55Z",
      "side": 1,
      "message": "Added ReceivedPacket::CopyAndSet",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b61f515_7818b2e4",
        "filename": "p2p/base/packet_transport_internal.cc",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-02-23T11:50:34Z",
      "side": 1,
      "message": "If you invert the check (check for SignalReadPacket.is_empty), you don\u0027t have to maintain the callback list count (for the normal case).\n\nYou don\u0027t support using the signal and the callback list simultaneously anyway, so all that you\u0027re using it for is to catch the state where simultaneous usage is attempted.",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aebff38a_7d9a2189",
        "filename": "p2p/base/packet_transport_internal.cc",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-02-23T13:15:40Z",
      "side": 1,
      "message": "PacketTransportInternal is overriden by DtlsTransport, RtpTransport and DCSCTP transport. I was trying to ensure each layer can be refactored separately but all usage of layer must use either Sigslot or the callback list - not both.\n\nBut it should not matter much I hope. All three pending cls are out for review and then I can remove the Sigslot. Also - there are tests covering the usecase when DTLS transport forwards packets to both RtpTransport and DCSCT transport.",
      "parentUuid": "9b61f515_7818b2e4",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc61792c_b0b031a3",
        "filename": "p2p/base/packet_transport_internal.cc",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-02-23T15:04:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "aebff38a_7d9a2189",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a353e24b_d5088c02",
        "filename": "p2p/base/packet_transport_internal.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 5613
      },
      "writtenOn": "2024-02-23T09:38:19Z",
      "side": 1,
      "message": "nit: do we really need a template F here ?\nit it not possible to have a real type ?\n(i don\u0027t remember the webrtc::CallbackList imlpementation!)",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b74d72e_c9118415",
        "filename": "p2p/base/packet_transport_internal.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-02-23T11:21:55Z",
      "side": 1,
      "message": "Should be possible but this was convenient and used elsewhere. Ex by you here:\nhttps://webrtc-review.googlesource.com/c/src/+/315100/4/p2p/base/ice_transport_internal.h",
      "parentUuid": "a353e24b_d5088c02",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4036f77a_8a12e478",
        "filename": "p2p/base/packet_transport_internal.h",
        "patchSetId": 6
      },
      "lineNbr": 85,
      "author": {
        "id": 5613
      },
      "writtenOn": "2024-02-23T12:20:45Z",
      "side": 1,
      "message": "hmm...who wrote/approved that!!",
      "parentUuid": "5b74d72e_c9118415",
      "range": {
        "startLine": 85,
        "startChar": 7,
        "endLine": 85,
        "endChar": 37
      },
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0980096a_a203c87c",
        "filename": "p2p/base/packet_transport_internal.h",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-02-23T11:50:34Z",
      "side": 1,
      "message": "Nit: callback list is two words, so this should be received_packet_callback_list_.",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f825a91_06b4e98d",
        "filename": "p2p/base/packet_transport_internal.h",
        "patchSetId": 6
      },
      "lineNbr": 128,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-02-23T13:15:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0980096a_a203c87c",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b052294_13ae18d0",
        "filename": "rtc_base/network/received_packet.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-02-23T11:50:34Z",
      "side": 1,
      "message": "\"Bypass\" seems an odd name here. What does it mean?\n- Packet was Srtp encrypted, but is now decrypted?\n- Packet is Srtp encrypted and needs decryption?\nI don\u0027t like this state variable much.... and I can\u0027t see where in the code you use the value. Is this somethign that should be done in a different CL?",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb0816b4_f274565d",
        "filename": "rtc_base/network/received_packet.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-02-23T13:15:40Z",
      "side": 1,
      "message": "Please see the usage in https://webrtc-review.googlesource.com/c/src/+/340301/7\nIt replaces the magic flag PF_SRTP_BYPASS on the receive path. \nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/p2p/base/dtls_transport_internal.h;drc\u003df4a00cc248dd2dc8ec8759fb51620d47b5114090;l\u003d37 \n\nIts used by DSCTP to ignore SRTP packets.  We can call it kSrtpEncrypted instead.\n\nI can merge the two cls if you want. But I tried to keep it relatively small.",
      "parentUuid": "9b052294_13ae18d0",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2eafa907_ff38b750",
        "filename": "rtc_base/network/received_packet.h",
        "patchSetId": 6
      },
      "lineNbr": 33,
      "author": {
        "id": 5634
      },
      "writtenOn": "2024-02-23T15:04:48Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "cb0816b4_f274565d",
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8502fe9a_c6236746",
        "filename": "rtc_base/network/received_packet.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 5613
      },
      "writtenOn": "2024-02-23T09:38:19Z",
      "side": 1,
      "message": "nit: actually I think it might be nicer with a method on the original packet.\nsomething like (haven\u0027t thought about the exact name...)\n\nnewPacket \u003d packet.copyAndSet(decryptInfo)",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 16
      },
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4509a62e_8c20c415",
        "filename": "rtc_base/network/received_packet.h",
        "patchSetId": 6
      },
      "lineNbr": 43,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-02-23T11:21:55Z",
      "side": 1,
      "message": "CopyAndSet sounds good to me.",
      "parentUuid": "8502fe9a_c6236746",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 16
      },
      "revId": "5a3b54c0d451695a910cd51610b79b3e2994d888",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}