{
  "comments": [
    {
      "key": {
        "uuid": "92c73352_d3f775e2",
        "filename": "audio/audio_send_stream_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 545,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-23T09:08:39Z",
      "side": 1,
      "message": "I wonder if this could be tested using a mock encoder and an expectation for the call to OnReceivedOverhead? Instead of having this test only method. If you do, you could also delete the GetPerPacketOverheadBytes method and inline the addition at the only remaining call site.",
      "range": {
        "startLine": 544,
        "startChar": 0,
        "endLine": 545,
        "endChar": 62
      },
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57449dc0_5e5ef4ac",
        "filename": "audio/audio_send_stream_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 545,
      "author": {
        "id": 7565
      },
      "writtenOn": "2019-01-23T13:47:04Z",
      "side": 1,
      "message": "Could be done, although I do not like that ANA is inside Encoder and things like RTT, Overhead, etc are set on Encoder. It would make more sense to mock ANA and verify these things on ANAm, but I am not sure that it\u0027s easy in current implementation.",
      "parentUuid": "92c73352_d3f775e2",
      "range": {
        "startLine": 544,
        "startChar": 0,
        "endLine": 545,
        "endChar": 62
      },
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52b0f9bf_19ccba58",
        "filename": "audio/audio_send_stream_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 545,
      "author": {
        "id": 7565
      },
      "writtenOn": "2019-01-23T23:17:59Z",
      "side": 1,
      "message": "Looked at it again, it\u0027s doable in the current test frame, but it will somewhat complicate test code. I would rather not do it now if we want to continue refactorings (ie moving ANA out of encoder).",
      "parentUuid": "57449dc0_5e5ef4ac",
      "range": {
        "startLine": 544,
        "startChar": 0,
        "endLine": 545,
        "endChar": 62
      },
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f8ca172_4c2d3fdd",
        "filename": "audio/audio_send_stream_unittest.cc",
        "patchSetId": 14
      },
      "lineNbr": 545,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-01-24T08:49:57Z",
      "side": 1,
      "message": "If owners are happy, I won\u0027t insist.",
      "parentUuid": "52b0f9bf_19ccba58",
      "range": {
        "startLine": 544,
        "startChar": 0,
        "endLine": 545,
        "endChar": 62
      },
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "05b1c5e7_cb8833e4",
        "filename": "audio/channel_send.cc",
        "patchSetId": 14
      },
      "lineNbr": 297,
      "author": {
        "id": 5077
      },
      "writtenOn": "2019-01-28T16:08:48Z",
      "side": 1,
      "message": "I don\u0027t think it is warranted to store the config in the class to be able to DCHECK and overhead_observer_ in ::Init()",
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a32d349d_c0b5966d",
        "filename": "audio/channel_send.cc",
        "patchSetId": 14
      },
      "lineNbr": 663,
      "author": {
        "id": 5077
      },
      "writtenOn": "2019-01-28T16:08:48Z",
      "side": 1,
      "message": "It doesn\u0027t look like we need to store this in the class if we get rid of Init()",
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6fff263d_a3ddaff2",
        "filename": "audio/channel_send.cc",
        "patchSetId": 14
      },
      "lineNbr": 710,
      "author": {
        "id": 5077
      },
      "writtenOn": "2019-01-28T16:08:48Z",
      "side": 1,
      "message": "Could we do this setting up in AudioSendStream ctor instead? It looks like we then could avoid the Init() function altogether.",
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "26545061_b8be7e36",
        "filename": "audio/channel_send.cc",
        "patchSetId": 14
      },
      "lineNbr": 713,
      "author": {
        "id": 5077
      },
      "writtenOn": "2019-01-28T16:08:48Z",
      "side": 1,
      "message": "If we need to keep them, they should be DCHECK_EQ",
      "revId": "7d724f61fbd9080692a0c3a95949253390b42c3b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}