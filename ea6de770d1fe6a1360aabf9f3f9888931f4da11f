{
  "comments": [
    {
      "key": {
        "uuid": "844ef7fa_8c336475",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T07:46:10Z",
      "side": 1,
      "message": "I\u0027m not that fond of this name (\"generate\" is so abstract that it doesn\u0027t aid in describing what the method does), but I understand that renaming now (e.g., to RequestKeyFrameReliably) would slow you down. Would you consider renaming when the dust has settled and you take care of the other TODOs here?",
      "range": {
        "startLine": 144,
        "startChar": 15,
        "endLine": 144,
        "endChar": 31
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c6c1d91_909494c6",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Names will always be subjective, therefore unless misleading my name should be as good as yours, with the difference that following the suggestion causes more work for me. And ultimately doesn\u0027t matter. The semantic is described in the comment above the method name. Just curious, what about \"generate\" do you find more abstract than \"request\"?\n\nRequesting something is not the same as having it delivered. Generate however carries the notion that something is produced. It\u0027s that the message can get lost due to RTCP packet drops that is the issue, and the uses of \"Request\" that I\u0027ve seen in the code base carries that semantic. \n\nRequesting the key frame was always reliable even with \"RequestKeyFrame\", hence RequestKeyFrameReliably is just more characters. \n\nI added a todo on working on finding the optimal naming of this method.",
      "parentUuid": "844ef7fa_8c336475",
      "range": {
        "startLine": 144,
        "startChar": 15,
        "endLine": 144,
        "endChar": 31
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c420b68_5ca71f7f",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 144,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T10:30:29Z",
      "side": 1,
      "message": "\u003e Names will always be subjective, therefore unless misleading my name should be as good as yours, with the difference that following the suggestion causes more work for me. And ultimately doesn\u0027t matter. The semantic is described in the comment above the method name. Just curious, what about \"generate\" do you find more abstract than \"request\"?\n\nThere are two great unsolved problems in computer science: Cache invalidation, and how to name things properly. :-) And I think naming matters, clarity for *both* compilers and humans is important.\n\nI prefer \"Request\" because (i) it\u0027s consistent with the naming of similar methods on other classes in webrtc, and (ii) this class doesn\u0027t actually know how to generate the key frame, it will typically ask some peer elsewhere on the internet to generate a keyframe for us, and keep nagging until we get one. (If I\u0027ve understood it correctly).",
      "parentUuid": "9c6c1d91_909494c6",
      "range": {
        "startLine": 144,
        "startChar": 15,
        "endLine": 144,
        "endChar": 31
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa58551f_20b90d36",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T08:38:56Z",
      "side": 1,
      "message": "please add a bug number to the todos to track this work.",
      "range": {
        "startLine": 149,
        "startChar": 18,
        "endLine": 149,
        "endChar": 19
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3605c64_12d8c5d9",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Sure. Will you take care of filing bugs for your own todos in the code (you have two of them above)?",
      "parentUuid": "aa58551f_20b90d36",
      "range": {
        "startLine": 149,
        "startChar": 18,
        "endLine": 149,
        "endChar": 19
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7ea03bb_e8d46c0c",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T10:30:29Z",
      "side": 1,
      "message": "I don\u0027t think you need to file a separate issue for the TODOs, I think it\u0027s fine to link them to the same chromium bug as this cl.",
      "parentUuid": "f3605c64_12d8c5d9",
      "range": {
        "startLine": 149,
        "startChar": 18,
        "endLine": 149,
        "endChar": 19
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78b168d3_06b5e7e6",
        "filename": "api/media_stream_interface.h",
        "patchSetId": 9
      },
      "lineNbr": 149,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T10:39:10Z",
      "side": 1,
      "message": "Sorry, yes, typically use the same bug you used when wanting to add the todo in tehf irst place. But  a separate I guess is also ok that refers back to the original.",
      "parentUuid": "b7ea03bb_e8d46c0c",
      "range": {
        "startLine": 149,
        "startChar": 18,
        "endLine": 149,
        "endChar": 19
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5eaba5fc_60f797c8",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T08:38:56Z",
      "side": 1,
      "message": "I know you love comments about naming! Why Recordable? Any can this also be used for encoded audio data? \nMaybe EncodedVideoFrame?",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3db8e33_ab2e1db5",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Can we please close these naming discussions? In summary, they\u0027re both subjective, and reviewers suggestions contradict themselves.\n\nIn this particular case, here\u0027s some history on this particular name. The term was initially coined by nisse, I wrote it off as too application specific, touting variations of EncodedFrame theme like you suggested. This was written off as \"yet another EncodedFrame\" (even though both unique and not declared in the same name space). Then philipel proposed Recordable too. And after some thinking, since this class carries both encoded bitstream data as well as information added via frame_buffer2, I think that Recordable is a good term for it.\n\nAnd ultimately, what really matters is that the identifier is unique to the compiler.",
      "parentUuid": "5eaba5fc_60f797c8",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1365f96a_6bbb153e",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 24,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T10:39:10Z",
      "side": 1,
      "message": "Nope we cant. But If you have two persons that like this name, ok.",
      "parentUuid": "b3db8e33_ab2e1db5",
      "range": {
        "startLine": 24,
        "startChar": 6,
        "endLine": 24,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb7cb298_190e9763",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T07:46:10Z",
      "side": 1,
      "message": "Maybe comment that this may be different from the colorspace after decoding.",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 59
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "056d5c54_abad4e13",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T08:38:56Z",
      "side": 1,
      "message": "is that even useful information for an encoded stream?",
      "parentUuid": "fb7cb298_190e9763",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 59
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e8865e3_b6c01feb",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Sure.\nYes, due to downstream project making use of HDR...",
      "parentUuid": "056d5c54_abad4e13",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 59
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "932a087b_6e132dfa",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 38,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T10:39:10Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "8e8865e3_b6c01feb",
      "range": {
        "startLine": 38,
        "startChar": 2,
        "endLine": 38,
        "endChar": 59
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ec8f271_91ea6a6a",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T07:46:10Z",
      "side": 1,
      "message": "Spelling.",
      "range": {
        "startLine": 44,
        "startChar": 13,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ef3259c_a112821f",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T07:46:10Z",
      "side": 1,
      "message": "nit: Decide if \"key frame\" is one or two words, and be consistent between comment and method name.",
      "range": {
        "startLine": 44,
        "startChar": 43,
        "endLine": 44,
        "endChar": 51
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "834607d9_b60d379a",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8ef3259c_a112821f",
      "range": {
        "startLine": 44,
        "startChar": 43,
        "endLine": 44,
        "endChar": 51
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b26c08e_1f37d3aa",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 44,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9ec8f271_91ea6a6a",
      "range": {
        "startLine": 44,
        "startChar": 13,
        "endLine": 44,
        "endChar": 19
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f3286f3_35979755",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T08:38:56Z",
      "side": 1,
      "message": "should this be of type webrtc::TimeStamp or is that not used by video frames yet?",
      "range": {
        "startLine": 52,
        "startChar": 10,
        "endLine": 52,
        "endChar": 17
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2afeb19c_3e9908cc",
        "filename": "api/video/recordable_encoded_frame.h",
        "patchSetId": 9
      },
      "lineNbr": 52,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "No it doesn\u0027t seem to be used. I\u0027ll change it though to modernize.",
      "parentUuid": "9f3286f3_35979755",
      "range": {
        "startLine": 52,
        "startChar": 10,
        "endLine": 52,
        "endChar": 17
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "735b6052_1f1f991c",
        "filename": "api/video_track_source_proxy.h",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 5578
      },
      "writtenOn": "2019-11-21T08:38:56Z",
      "side": 1,
      "message": "AddOrUpdateSink  is proxied to the worker thread. Shouldnt the EncodedSink be treated the same way?",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "be386098_0f99616d",
        "filename": "api/video_track_source_proxy.h",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:04:42Z",
      "side": 1,
      "message": "Sounds good.\nIs there a guideline or doc around these proxies? The thinking behind them is opaque.",
      "parentUuid": "735b6052_1f1f991c",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e131bb9_07dcbc17",
        "filename": "api/video_track_source_proxy.h",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-11-21T10:30:29Z",
      "side": 1,
      "message": "\u003e Sounds good.\n\u003e Is there a guideline or doc around these proxies? The thinking behind them is opaque.\n\nThe idea is that to have state owned by a particular thread, and operate on the state by asking the thread to do it. These proxies do that, and blocks on completion which isn\u0027t so nice, and has caused a few deadlock bugs. I think they are mainly intended to be be used for objects given out to the webrtc application, so that the application can call the proxy methods on any thread.\n\nSo in this case, you have to decide which thread should own the state associated with AddEncodedSink and RemoveEncodedSink. Or if you\u0027re going to use locks anyway, maybe have the proxy object short circuit without any thread hop. (I made an effort a while ago to delete related thread hops for AddOrUpdateSink, since those are typically backed by a VideoBroadcaster which needs locks anyway, but got myself into some difficulties).",
      "parentUuid": "be386098_0f99616d",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba4ecefa_4ceec2fc",
        "filename": "api/video_track_source_proxy.h",
        "patchSetId": 9
      },
      "lineNbr": 40,
      "author": {
        "id": 9515
      },
      "writtenOn": "2019-11-21T10:58:16Z",
      "side": 1,
      "message": "Thanks. I\u0027m going with worker proxy methods and taking the consequences.",
      "parentUuid": "7e131bb9_07dcbc17",
      "range": {
        "startLine": 40,
        "startChar": 14,
        "endLine": 40,
        "endChar": 28
      },
      "revId": "ea6de770d1fe6a1360aabf9f3f9888931f4da11f",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}