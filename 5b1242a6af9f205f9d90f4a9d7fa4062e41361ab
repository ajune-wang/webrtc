{
  "comments": [
    {
      "key": {
        "uuid": "8895279f_0ad5b593",
        "filename": "sdk/objc/Framework/Classes/Video/RTCI420Buffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5600
      },
      "writtenOn": "2018-04-17T20:09:52Z",
      "side": 1,
      "message": "it might be more consistent to pass in const uint8_t *",
      "range": {
        "startLine": 35,
        "startChar": 40,
        "endLine": 35,
        "endChar": 45
      },
      "revId": "5b1242a6af9f205f9d90f4a9d7fa4062e41361ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f0da932_53278b4c",
        "filename": "sdk/objc/Framework/Classes/Video/RTCI420Buffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 7029
      },
      "writtenOn": "2018-04-17T20:48:13Z",
      "side": 1,
      "message": "I was wondering - this is an objective-c api -- would you rather have a caller do the casting \"(const uint8_t *) [[yuv u] bytes]\"? In objective-c you are unlikely to have a pointer to the const uint8_t to begin with, right? (I might be making some incorrect assumptions here), so this felt like a more natural fit to the objective c interfaces.\n\nCan you give me examples of the consistency? Where do we currently accept (const uint8_t *)?",
      "parentUuid": "8895279f_0ad5b593",
      "range": {
        "startLine": 35,
        "startChar": 40,
        "endLine": 35,
        "endChar": 45
      },
      "revId": "5b1242a6af9f205f9d90f4a9d7fa4062e41361ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a37bbb8_0da29f02",
        "filename": "sdk/objc/Framework/Classes/Video/RTCI420Buffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5249
      },
      "writtenOn": "2018-04-18T11:09:31Z",
      "side": 1,
      "message": "It would be consistent with the dataY, dataU, dataV getter methods on this class. This is a pretty thin wrapper around the underlying C++ implementation, and I think this class would be likely to be used from a more low-level context where you\u0027re dealing with C pointers, so I also think accepting uint8_t* makes sense.",
      "parentUuid": "8f0da932_53278b4c",
      "range": {
        "startLine": 35,
        "startChar": 40,
        "endLine": 35,
        "endChar": 45
      },
      "revId": "5b1242a6af9f205f9d90f4a9d7fa4062e41361ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d776ec56_1ac74066",
        "filename": "sdk/objc/Framework/Classes/Video/RTCI420Buffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 5600
      },
      "writtenOn": "2018-04-19T16:29:01Z",
      "side": 1,
      "message": "Even from an ObjC API standpoint, it is more consistent to use 8byte pointer in video APIs because of AVFoundation, where we get most of our frames. In the general case you\u0027d be right, it\u0027d be easier to manipulate data using NSData/NSMutableData; but this is somewhat of a special case.\n\nhttps://developer.apple.com/documentation/corevideo/1457115-cvpixelbuffergetbaseaddress?language\u003dobjc",
      "parentUuid": "0a37bbb8_0da29f02",
      "range": {
        "startLine": 35,
        "startChar": 40,
        "endLine": 35,
        "endChar": 45
      },
      "revId": "5b1242a6af9f205f9d90f4a9d7fa4062e41361ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdab7240_86a2ae63",
        "filename": "sdk/objc/Framework/Classes/Video/RTCI420Buffer.mm",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 5249
      },
      "writtenOn": "2018-04-18T11:09:31Z",
      "side": 1,
      "message": "The convention is that chroma plane strides are rounded up in case of odd luma stride, so do `(width + 1) / 2` to make sure we round up in this case.",
      "revId": "5b1242a6af9f205f9d90f4a9d7fa4062e41361ab",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}