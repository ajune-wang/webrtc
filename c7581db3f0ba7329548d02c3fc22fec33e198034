{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a6f891a7_09f59501",
        "filename": "modules/rtp_rtcp/source/playback_timing_processor/playback_timing_processor.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-11T09:20:07Z",
      "side": 1,
      "message": "You forgot to remove this.",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 52
      },
      "revId": "c7581db3f0ba7329548d02c3fc22fec33e198034",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96228bba_b3eb4750",
        "filename": "modules/rtp_rtcp/source/playback_timing_processor/playback_timing_processor.cc",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 7641
      },
      "writtenOn": "2020-03-11T09:26:05Z",
      "side": 1,
      "message": "I should have marked this more clear. The composition of RTCP packets (\u003dthis code) was not part of the initial review. I planned to update the review with this code today, however, as of today it seems as if this CL is not needed at all so I have moved it to Work-in-progress.\nWill remove all reviewers as well.",
      "parentUuid": "a6f891a7_09f59501",
      "range": {
        "startLine": 43,
        "startChar": 2,
        "endLine": 43,
        "endChar": 52
      },
      "revId": "c7581db3f0ba7329548d02c3fc22fec33e198034",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47f4b149_52d5d2c5",
        "filename": "modules/rtp_rtcp/source/playback_timing_processor/playback_timing_processor.cc",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 5117
      },
      "writtenOn": "2020-03-11T09:20:07Z",
      "side": 1,
      "message": "Ok, it looks like you need this output for testing this WIP feature.\nPlease change all std::cout to RTC_LOG() instead. We can\u0027t have this direct output happening inside chrome for example.\n\nHowever, better approach would be to keep that debug output in your local POC and land a CL where the non-functional module isn\u0027t really wired to the call yet and has a NOT_REACHED() here instead.",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 49
      },
      "revId": "c7581db3f0ba7329548d02c3fc22fec33e198034",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "If the author is a webrtc committer, code review is required from one other committer. Otherwise, code review is required from two committers."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "((uploaderin:cria/project-webrtc-committers AND label:Code-Review\u003dMAX,user\u003dnon_uploader) OR label:Code-Review\u003dMAX,count\u003e\u003d2) AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"((uploaderin:cria/project-webrtc-committers AND label:Code-Review=MAX,user=non_uploader) OR label:Code-Review=MAX,count>=2) AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["uploaderin:cria/project-webrtc-committers"],"failingAtoms":["label:Code-Review=MIN","label:Code-Review=MAX,user=non_uploader","label:Code-Review=MAX,count>=2"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "c7581db3f0ba7329548d02c3fc22fec33e198034",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7581db3f0ba7329548d02c3fc22fec33e198034",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}