{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9f13dbb4_cb5bcfe6",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-06T07:59:30Z",
      "side": 1,
      "message": "I think \u003e1 temporal layers should be behind a separate flag. Since this is inside WebRTC that would be a field trial flag.\n\nIn the case of VP9 HW we initially launched L1T1 successfully and had a separate rollout for L1T2 but discovered issues with it so that never launched. It\u0027s good to limit scope for these things to one launch at a time.",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e19bbbb4_226ddaa2",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-06T08:31:39Z",
      "side": 1,
      "message": "The plan is to control that at VEA/VD level and RTCVideoEncoder in blink. HEVC is different as it\u0027s HW only so we\u0027re going to add feature flag in RTCVideoEncoder and external RTC decoder/encoder factories.",
      "parentUuid": "9f13dbb4_cb5bcfe6",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "647b80d3_445e226b",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-06T11:42:36Z",
      "side": 1,
      "message": "OK sgtm",
      "parentUuid": "e19bbbb4_226ddaa2",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0407624c_2984340c",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-06T11:42:36Z",
      "side": 1,
      "message": "I prefer not to special-case H265 here, see other comment.",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2b54961b_89a271c7",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-06T14:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0407624c_2984340c",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecb1c597_a274548a",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-06T11:42:36Z",
      "side": 1,
      "message": "I prefer the scalability mode to already be set and then handle the failure here instead, for example by resetting the scalability mode and RTC_LOG(LS_WARNING) that we\u0027re falling back due to not supporting the scalability mode.\n\nActually check what we do in the VP8 case:\n```\n      // Validate specified scalability modes. If some layer has an unsupported\n      // mode, store it as the top-level scalability mode, which will make\n      // InitEncode fail with an appropriate error.\n```\nLet\u0027s do the same thing here?",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef013520_7be9324e",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 357,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-06T14:13:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ecb1c597_a274548a",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26f28bc9_e3f9c699",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-06T11:42:36Z",
      "side": 1,
      "message": "What if different scalability modes are used on different layers?\n\nThis is an existing problem for all codecs, the fact that we express scalability mode both at `video_codec.Get/SetScalabilityMode()` and at `video_codec.simulcastStream[i]-\u003enumberOfTemporalLayers` (allowing one encoding to do L1T1 and another encoding to do L1T3).\n\nIf we try {L1T3,L1T1} then `numberOfTemporalLayers` would either say 1 or 3 depending on the the index of `simulcastStream`, but should `video_codec.GetScalabilityMode()` say L1T3 (encoding[0] value) or should it say std::nullopt (because there isn\u0027t a single correct value here)?\n\nCan you check what we do for other codecs and do the same thing here?",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d99251d_587125b7",
        "filename": "modules/video_coding/video_codec_initializer.cc",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-06T14:13:57Z",
      "side": 1,
      "message": "According to the comment here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/video_coding/video_codec_initializer.cc;l\u003d124;drc\u003d8037fc6ffa131805248c2a63c3edec69155b05cf Looks like it should be std::nullopt.\n\nAlso added a test to validate the example you list here.",
      "parentUuid": "26f28bc9_e3f9c699",
      "revId": "3a9e074bb905a46122fbc7a76bdb5e17dd08d4b9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}