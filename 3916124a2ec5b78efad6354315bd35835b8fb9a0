{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c27f0aaf_102079b6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-25T11:16:49Z",
      "side": 1,
      "message": "Some comments on documenting your APIs.\n\nIt is important to make it clear to the API reader that these calls do not affect the bits sent over the wire.\n",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "95752d7f_423ed03a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-01-25T16:03:32Z",
      "side": 1,
      "message": "extended class comment for RtpPacketReceived/RtpPacketToSend since it\u0027s there point to carry extra information that is no sent over the wire.",
      "parentUuid": "c27f0aaf_102079b6",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "54c321c0_50d363dc",
        "filename": "modules/rtp_rtcp/source/rtp_packet_received.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-01-25T10:50:09Z",
      "side": 1,
      "message": "On a 2nd though I consider \"user_data\" is slightly misleading name.\nAnd I do not see how to easily keep the old \u0027application_data\u0027 name.\nso, reading the explaining comment, considering another meaningless name.",
      "range": {
        "startLine": 67,
        "startChar": 42,
        "endLine": 67,
        "endChar": 57
      },
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ee07722_6b4fec68",
        "filename": "modules/rtp_rtcp/source/rtp_packet_received.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 13704
      },
      "writtenOn": "2021-01-25T11:01:27Z",
      "side": 1,
      "message": "Naming is hard :) maybe auxiliary_data is even better? One could be misled into believing that additional_data() is associated to data()",
      "parentUuid": "54c321c0_50d363dc",
      "range": {
        "startLine": 67,
        "startChar": 42,
        "endLine": 67,
        "endChar": 57
      },
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2d81e3e8_d8a6a5a2",
        "filename": "modules/rtp_rtcp/source/rtp_packet_received.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-01-25T11:09:17Z",
      "side": 1,
      "message": "auxiliary is too complicated word for me (had to look up it\u0027s meaning).\nAnother ideas I have:\n- application_specific_data\n- Use an extra change to reuse application_data after current application_data is removed. \n\nSo far name \u0027additional_data\u0027 seems simple enough and okeish enough for this transition.",
      "parentUuid": "1ee07722_6b4fec68",
      "range": {
        "startLine": 67,
        "startChar": 42,
        "endLine": 67,
        "endChar": 57
      },
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9958d387_6f13b536",
        "filename": "modules/rtp_rtcp/source/rtp_packet_to_send.h",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-25T11:16:49Z",
      "side": 1,
      "message": "As a matter of open source documentation, this needs more text.\nI suggest something like:\n\n\"An application can attach arbitrary data to an RTP packet using additional_data. The additional data will not affect WebRTC processing. It must be a RefCounted object.\"",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f959a745_3fdf7fd4",
        "filename": "modules/rtp_rtcp/source/rtp_packet_to_send.h",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-01-25T16:03:32Z",
      "side": 1,
      "message": "I used something like that with few modification:\nMade it single comment both about addtional_data and application_data to stress they have the same purpose and that additional_data is there to replace application_data.\nAnd I omit the type of the additional_data (i.e. no mentioning of Ref Counting) in spirit of \"avoid comments that just repeat what the code does\"\n\nhttps://testing.googleblog.com/2017/07/code-health-to-comment-or-not-to-comment.html",
      "parentUuid": "9958d387_6f13b536",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92466ff4_234e7395",
        "filename": "modules/rtp_rtcp/source/rtp_packet_to_send.h",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-01-25T11:16:49Z",
      "side": 1,
      "message": "I would suggest defining an AdditionalData class that is a RefCountedBase, and has no methods. This makes the API easier to read, and gives an additional point on which to hang documentation of the class properties.",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe5bee0a_699ae33a",
        "filename": "modules/rtp_rtcp/source/rtp_packet_to_send.h",
        "patchSetId": 3
      },
      "lineNbr": 82,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-01-25T16:03:32Z",
      "side": 1,
      "message": "i.e. adding an alias\nusing AdditionalData \u003d rtc::RefCountedBase;\n\nI do not understand how adding a new name would make it cleaner.\nNor what can be added to the class documention. The run-time class of the *additiona_data object has to be derived from rtc::RefCountedBase. That is the only requirement but that requirement is \"documented\" by function signatures.\n\n(tbh instead of scoped_refptr\u003cRefCountedBase\u003e I would rather use std::shared_ptr\u003cvoid\u003e as better known type for a usage like this one, but std::shared_ptr is banned in webrtc.\nIn std world another potential option would be std::any, but that would be banned too since it doesn\u0027t work in chromium component build)",
      "parentUuid": "92466ff4_234e7395",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9a6b0e88_db6010b9",
        "filename": "modules/rtp_rtcp/source/rtp_packet_to_send.h",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 13704
      },
      "writtenOn": "2021-01-25T11:01:27Z",
      "side": 1,
      "message": "Nit: This still refers to user_data",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5432ed54_d15179fb",
        "filename": "modules/rtp_rtcp/source/rtp_packet_to_send.h",
        "patchSetId": 3
      },
      "lineNbr": 134,
      "author": {
        "id": 5019
      },
      "writtenOn": "2021-01-25T11:09:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a6b0e88_db6010b9",
      "revId": "3916124a2ec5b78efad6354315bd35835b8fb9a0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}