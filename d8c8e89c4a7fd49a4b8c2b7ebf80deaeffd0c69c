{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "adfde4f6_5d435609",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-11-04T09:34:59Z",
      "side": 1,
      "message": "Can you create a bug for \"Casting from child stats object to parent stats object DCHECK crashes\"?",
      "revId": "d8c8e89c4a7fd49a4b8c2b7ebf80deaeffd0c69c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "957812e3_929b6a31",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-11-04T09:35:41Z",
      "side": 1,
      "message": "Evan might be interested in this, I think he would also like to see an enum instead of const char[] for type",
      "revId": "d8c8e89c4a7fd49a4b8c2b7ebf80deaeffd0c69c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af33ea29_01806eed",
        "filename": "stats/rtc_stats_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 557,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-11-04T09:34:00Z",
      "side": 1,
      "message": "Do you need to split these up into separate tests? If we do the correct thing and die, we wouldn\u0027t run the rest of the lines of the test so we have no test coverage for that?",
      "revId": "d8c8e89c4a7fd49a4b8c2b7ebf80deaeffd0c69c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "99cb35f7_edfb1785",
        "filename": "stats/rtc_stats_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 557,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-11-04T10:00:09Z",
      "side": 1,
      "message": "googletest\u0027s EXPECT_DEATH internally calls `fork()` and checks whether the statement causes a crash in the child process, so there is no problem.\n\nOther parts of the code also use multiple `EXPECT_DEATH` statements in the following link:\nhttps://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/pc/used_ids_unittest.cc;l\u003d174;drc\u003dc24a2189d72b2bf37e91ffe99605912de4d633a7",
      "parentUuid": "af33ea29_01806eed",
      "revId": "d8c8e89c4a7fd49a4b8c2b7ebf80deaeffd0c69c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b035651_ff41caed",
        "filename": "stats/rtc_stats_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 617,
      "author": {
        "id": 5142
      },
      "writtenOn": "2022-11-04T09:34:00Z",
      "side": 1,
      "message": "I think this shows that using the \"static const char kType[]\" for type checks is fundamentally flawed when it comes to hierarchies.\n\nIdea for a follow-up CL to fix this: Can we have an enum class with all the enums?\n\nThat way there is just one type value for kMediaSource, and casting from between audio/video and its parent would not DCHECK fail?\n\ntype() could return a string based on a lookup table mapping enums to strings.\nkType could eventually be deleted, but probably needed until dependencies stop using it",
      "revId": "d8c8e89c4a7fd49a4b8c2b7ebf80deaeffd0c69c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f33c34b5_915dd426",
        "filename": "stats/rtc_stats_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 617,
      "author": {
        "id": 9405
      },
      "writtenOn": "2022-11-04T10:00:09Z",
      "side": 1,
      "message": "I also prefer to use enums instead of this workarounds.",
      "parentUuid": "9b035651_ff41caed",
      "revId": "d8c8e89c4a7fd49a4b8c2b7ebf80deaeffd0c69c",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}