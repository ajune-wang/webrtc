{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "51462b86_af20f370",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-22T14:47:56Z",
      "side": 1,
      "message": "This was subtly wrong. With libwebrtc on the other side this should have no impact since typically there would be a receiver report for the RTX ssrc for the probes already.",
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21afbad6_439efeb6",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-12-22T15:31:06Z",
      "side": 1,
      "message": "probably (send_mid_rid || send_mid_rid_on_rtx) \u0026\u0026 !mid_.empty()",
      "range": {
        "startLine": 766,
        "startChar": 14,
        "endLine": 766,
        "endChar": 26
      },
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cca7186d_c111e835",
        "filename": "modules/rtp_rtcp/source/rtp_sender.cc",
        "patchSetId": 1
      },
      "lineNbr": 766,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-22T15:58:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "21afbad6_439efeb6",
      "range": {
        "startLine": 766,
        "startChar": 14,
        "endLine": 766,
        "endChar": 26
      },
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8c821473_b5956869",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 948,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-12-22T15:31:06Z",
      "side": 1,
      "message": "until ssrc is acked, rrid might need to be sent together with mid (rrid alone might not be enough to associate rtx ssrc)",
      "range": {
        "startLine": 948,
        "startChar": 5,
        "endLine": 948,
        "endChar": 9
      },
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85080ad2_b5b548b4",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 948,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-22T15:58:25Z",
      "side": 1,
      "message": "Hm... if the main ssrc is ack\u0027d there is an association for the rid and mid to the primary ssrc on the other side so theoretically mid should no longer be required.\nBut https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/modules/rtp_rtcp/source/rtp_sender.cc;l\u003d674?q\u003drtp_sender.cc shows that both mid and rrid are sent if the rtx ssrc has not been acked so you\u0027re right.\n(and not sending MID would be more convoluted anyway!)",
      "parentUuid": "8c821473_b5956869",
      "range": {
        "startLine": 948,
        "startChar": 5,
        "endLine": 948,
        "endChar": 9
      },
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2f8952e_aeee44fb",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 948,
      "author": {
        "id": 5019
      },
      "writtenOn": "2022-12-22T16:07:08Z",
      "side": 1,
      "message": "My theoretical view that if there are two m lines each with 2 rids/two rtp streams:\nmid\u003d\u0027a\u0027\nrid\u003d\u0027media\u0027\nrid\u003d\u0027repair\u0027\nmid\u003d\u0027b\u0027\nrid\u003d\u0027media\u0027\nrid\u003d\u0027repair\u0027\n\nThen receiver might know that\nmid\u003d\u0027a\u0027, rid\u003d\u0027media\u0027 means ssrc \u003d 123\nmid\u003d\u0027b\u0027, rid\u003d\u0027media\u0027 means ssrc \u003d 124\nbut if then receives \nssrc\u003d222, (nomid), rid\u003d\u0027repair\u0027, rrid\u003d\u0027media\u0027, then it wouldn\u0027t know if that repair packet is for ssrc\u003d123 or ssrc\u003d124.",
      "parentUuid": "85080ad2_b5b548b4",
      "range": {
        "startLine": 948,
        "startChar": 5,
        "endLine": 948,
        "endChar": 9
      },
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "84016bed_6d614ef5",
        "filename": "modules/rtp_rtcp/source/rtp_sender_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 948,
      "author": {
        "id": 19549
      },
      "writtenOn": "2022-12-22T16:26:20Z",
      "side": 1,
      "message": "rid and rrid have the same value so (with an example using multiple rids in a single mid):\nmid\u003d\u0027a\u0027\nrid\u003d\u0027low\u0027\nrrid\u003d\u0027low\u0027\nrid\u003d\u0027high\u0027\nrrid\u003d\u0027high\u0027\n\nmid\u003da rid\u003dlow means ssrc\u003d123\nmid\u003da rid\u003dhigh means ssrc\u003d124\nwhen receiving\nssrc\u003d222, (nomid) rrid\u003dlow...\nthis would look for the rid\u003dlow and find mid\u003da.\n\nHowever, https://datatracker.ietf.org/doc/html/rfc8852#section-3 says that rids are only unique within the context of a mid so one always needs mid.",
      "parentUuid": "b2f8952e_aeee44fb",
      "range": {
        "startLine": 948,
        "startChar": 5,
        "endLine": 948,
        "endChar": 9
      },
      "revId": "3f44ef4d7a0e0252c44e24e9b9eb44901fb35e89",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}