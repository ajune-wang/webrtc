{
  "comments": [
    {
      "key": {
        "uuid": "3b708f0c_11a4843d",
        "filename": "pc/ice_server_parsing_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-03-18T14:49:40Z",
      "side": 0,
      "message": "Keep the test for user@host around - it should now return false. Add a comment that this behavior has been removed from the spec.",
      "revId": "2e6552d5b72113b7eed2695e5f7c0e29b2bbbcdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c37c955_ec9da669",
        "filename": "pc/ice_server_parsing_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-03-18T15:14:28Z",
      "side": 0,
      "message": "Where should the validation code go? Currently there\u0027s nothing in ice_server_parsing.cc that really checks if the syntax of the host part matches \n\n  IP-literal / IPv4address / reg-name\n\nand doing that isn\u0027t entirely trivial. I\u0027d guess this is checked elsewhere, where the address is used, e.g, checking for errors from getaddrinfo.\n\nSo the call \n   \n   ParseTurnUrl(\"turn:user@hostname\")\n\nstill returns true, and at some later point we\u0027d attempt to connect to a host named \"user@hostname\".\n\nThe closest thing to syntax validation is ParseHostnameAndPortFromString, but it only splits the string based on location of \u0027[\u0027, \u0027]\u0027 and \u0027:\u0027 characters, and checks that the port-part consists of decimal digits only. I could add an explicit check to reject any input that contains a @ character, would that make sense?",
      "parentUuid": "3b708f0c_11a4843d",
      "revId": "2e6552d5b72113b7eed2695e5f7c0e29b2bbbcdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a0a624f_ad462b0f",
        "filename": "pc/ice_server_parsing_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-03-18T15:26:56Z",
      "side": 0,
      "message": "You could simply check that the URL doesn\u0027t contain @, since @ is illegal in a hostname. If you want to be fancy, check for [-:a-zA-Z0-9\\[\\]]. ([] and : in order to allow IPv6 literals)\n\nSince we\u0027re breaking stuff that used to work, checking for @ and returning an explicit error message that \"this isn\u0027t going to work any more\" would be a Good Idea in general; it would be nice if the test could verify that.",
      "parentUuid": "1c37c955_ec9da669",
      "revId": "2e6552d5b72113b7eed2695e5f7c0e29b2bbbcdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b7c23fc2_561235af",
        "filename": "pc/ice_server_parsing_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 205,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-03-18T15:57:10Z",
      "side": 0,
      "message": "Did the simple thing, to just reject \u0027@\u0027.",
      "parentUuid": "0a0a624f_ad462b0f",
      "revId": "2e6552d5b72113b7eed2695e5f7c0e29b2bbbcdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "205a08df_3ee0d05a",
        "filename": "pc/peer_connection_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-03-18T14:41:31Z",
      "side": 0,
      "message": "Not sure if using a different username here improved test coverage in some way. With this cl, kTurnUsername is used everywhere.",
      "range": {
        "startLine": 67,
        "startChar": 11,
        "endLine": 67,
        "endChar": 28
      },
      "revId": "2e6552d5b72113b7eed2695e5f7c0e29b2bbbcdd",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}