{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fd4cfa41_58a43823",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 19549
      },
      "writtenOn": "2023-05-16T10:11:39Z",
      "side": 1,
      "message": "over to more appropriate reviewers",
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2cee011e_c03aa61c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-05-16T10:46:15Z",
      "side": 1,
      "message": "this is an improvement,\n\nthough longer term I would like to deprecated and delete RTPHeaderExtension and RTPHeader in favor of RtpPacket.",
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fdb96d26_c66e08e8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-05-16T12:55:27Z",
      "side": 1,
      "message": "Code lgtm, but it seems a bit inconsistent with the other header extensions that seem to follow\n```\nbool hasFoo;\nFooType foo;\n```\npattern.\n\nWhat\u0027s the plan for the other extensions?",
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f0ebd649_61ef5868",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 20759
      },
      "writtenOn": "2023-05-19T10:47:18Z",
      "side": 1,
      "message": "hi,\n\nI saw this struct and some extensions are using \"hasFoo\" and\nothers are using absl::optional.\n\nThere is a comment in the code, saying TODO: convert to absl::optional\n\n\nI wanted to help out with this effort, so I converted one\nextension type from \"hasFoo\" to absl::optional.\nIf the patch is accepted, I will convert more types.\n\n\nI did not see that the class is part of the public API,\nand that native users can poke directly into the class members.\nBetter to add setters and getters.",
      "parentUuid": "fdb96d26_c66e08e8",
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "01a8b840_dfd4f798",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 5150
      },
      "writtenOn": "2023-05-23T09:27:54Z",
      "side": 1,
      "message": "LGTM, though I think the general goal is to deprecate this class altogether in favor of the RtpPacket class. See https://bugs.chromium.org/p/webrtc/issues/detail?id\u003d15054\n\nFor the video rotation extension in particular, it looks like the RTPHeaderExtension struct is only used in logging/debugging tools. Iiuc, the production library reads the extension directly from the RtpPacket class using GetExtension\u003cVideoOrientation\u003e() https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/video/rtp_video_stream_receiver2.cc;l\u003d572;drc\u003d8095d0288440866a2d425fedea725934cfa5512b",
      "parentUuid": "f0ebd649_61ef5868",
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14843514_0dc0cfeb",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-05-16T10:46:15Z",
      "side": 1,
      "message": "here and in other files\nprefer to derefernce optional using \u0027*\u0027 instead of \u0027.value()\u0027\n\nhttps://abseil.io/tips/181#solution\n\n“Testing the ... object for validity (as you would a smart pointer or optional) and accessing it using operator* or operator-\u003e is readable, efficient, and safe.”",
      "range": {
        "startLine": 1031,
        "startChar": 15,
        "endLine": 1031,
        "endChar": 59
      },
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f94e45c_5918fdee",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 1
      },
      "lineNbr": 1031,
      "author": {
        "id": 20759
      },
      "writtenOn": "2023-05-16T18:44:18Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14843514_0dc0cfeb",
      "range": {
        "startLine": 1031,
        "startChar": 15,
        "endLine": 1031,
        "endChar": 59
      },
      "revId": "3ab18de2a447a5f0938f5ee49cdc67b0e12553d8",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}