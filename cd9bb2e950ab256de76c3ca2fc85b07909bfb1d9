{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d2422043_adbfd308",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-17T13:56:34Z",
      "side": 1,
      "message": "There is still a weird interaction between the depacketizer and the sps pps tracker as the tracker checks the Nalu information from the video header on a per packet base, so the depakcetizer has to add the out of bound Nalu info even if it doesn\u0027t modify the buffer on the Parse() step.\n\nAfter reviewing it, I am not sure if the tracker makes sense anymore or if it could be removed altogether and just rely on the AssembleFrame() output for requesting an key frame as in any other codec.\n\nDue to that, I had to remove teh OutOfBound tests from the rtp_video_stream_receiver2_unittest as the OnReceivedPayload is skipping the depacketizer Parse(). I can modify add those tests by using the OnReceivedPacket insted and avoid creating the video header manually on the tests.",
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f15ef6b_ba835b8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-10-18T08:20:19Z",
      "side": 1,
      "message": "I don\u0027t mind tracker being removed.",
      "parentUuid": "d2422043_adbfd308",
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6557752b_76e9e32d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-22T08:18:41Z",
      "side": 1,
      "message": "I have removed in the latest commit, woudl be easi to revert if we decide not to do it.",
      "parentUuid": "2f15ef6b_ba835b8e",
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c53f53ea_724dd77c",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 6
      },
      "lineNbr": 697,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-10-22T08:37:43Z",
      "side": 1,
      "message": "where has this functionality moved now?",
      "range": {
        "startLine": 697,
        "startChar": 8,
        "endLine": 697,
        "endChar": 48
      },
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db41e4bd_0867d348",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 6
      },
      "lineNbr": 697,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-22T09:37:37Z",
      "side": 1,
      "message": "This is what I commented out before. The SPS/PPS tracker is only requesting an iframe earlier in case of an idr packet without a previous sps/pps is received. Now the depacketizer will return an empty frame in that case (which will allow to receive an out of order sps/pps without requesting a key frame) and if no decodable frame is received we will request an iframe in 200ms (I think).\nI can add back the sps/pps tracker if this behaviour is not acceptable.",
      "parentUuid": "c53f53ea_724dd77c",
      "range": {
        "startLine": 697,
        "startChar": 8,
        "endLine": 697,
        "endChar": 48
      },
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cefbeb23_0d010251",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 6
      },
      "lineNbr": 697,
      "author": {
        "id": 5117
      },
      "writtenOn": "2024-10-22T10:39:45Z",
      "side": 1,
      "message": "That\u0027s acceptable, but better still, could you please explicitly request the keyframe once depacketizer fails like that.\n\nIn any case, add the description of this change in behavior in the CL description.",
      "parentUuid": "db41e4bd_0867d348",
      "range": {
        "startLine": 697,
        "startChar": 8,
        "endLine": 697,
        "endChar": 48
      },
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27091776_4a934ac2",
        "filename": "video/rtp_video_stream_receiver2.cc",
        "patchSetId": 6
      },
      "lineNbr": 697,
      "author": {
        "id": 5963
      },
      "writtenOn": "2024-10-22T12:45:50Z",
      "side": 1,
      "message": "We can\u0027t really do that as we are not doing anything speciall now for H264, if the bitstream is empty, we will discard the frame here: https://source.chromium.org/chromium/chromium/src/+/main:third_party/webrtc/api/video/rtp_video_frame_assembler.cc;l\u003d173;drc\u003d08efa89c7d73d72e6ebcddbf053c41a230dc1ba8;bpv\u003d1;bpt\u003d1\n\nI can add back the sps/pps if we really want to request the key frame inmediatelly",
      "parentUuid": "cefbeb23_0d010251",
      "range": {
        "startLine": 697,
        "startChar": 8,
        "endLine": 697,
        "endChar": 48
      },
      "revId": "cd9bb2e950ab256de76c3ca2fc85b07909bfb1d9",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}