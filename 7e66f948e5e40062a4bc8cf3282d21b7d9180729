{
  "comments": [
    {
      "key": {
        "uuid": "d8e19e91_8bc093ee",
        "filename": "modules/rtp_rtcp/source/contributing_sources.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-05T15:07:53Z",
      "side": 1,
      "message": "is it same as calling\nUpdate(now_ms, csrcs, absl::nullopt);\nmay be just call the other version here to avoid code duplication.",
      "range": {
        "startLine": 43,
        "startChar": 71,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d89b15c3_f93b9f68",
        "filename": "modules/rtp_rtcp/source/contributing_sources.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-05T15:15:05Z",
      "side": 1,
      "message": "+1. Or delete this version of the method and update callers.",
      "parentUuid": "d8e19e91_8bc093ee",
      "range": {
        "startLine": 43,
        "startChar": 71,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75de8138_3d8c1f23",
        "filename": "modules/rtp_rtcp/source/contributing_sources.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-11-05T15:38:00Z",
      "side": 1,
      "message": "Although I was sure we had such a ban, I cannot find a ban on default arguments anymore, so that could also be an option (i.e. add \u003d absl::nullopt to the declaration of Update in the header and you\u0027re set). Though, I may start a style war with this. :)",
      "parentUuid": "d89b15c3_f93b9f68",
      "range": {
        "startLine": 43,
        "startChar": 71,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6da5a955_684b90c4",
        "filename": "modules/rtp_rtcp/source/contributing_sources.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-05T15:41:24Z",
      "side": 1,
      "message": "Default argumenta banned for virtual functions (not this case)\nand discouraged in favor of overloads (this case)\nhttps://google.github.io/styleguide/cppguide.html#Default_Arguments",
      "parentUuid": "75de8138_3d8c1f23",
      "range": {
        "startLine": 43,
        "startChar": 71,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "531ff3e0_5c76703f",
        "filename": "modules/rtp_rtcp/source/contributing_sources.cc",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-11-05T16:14:03Z",
      "side": 1,
      "message": "I\u0027d not say overloads are an improvement in this case, but if the two-parameter variant just redirected to the three-parameter variant, I guess it\u0027s fine. If you do that in the header file, it can just inline away, which makes it essentially a default argument anyways. :)\n\nBacktracking a bit, I just took a look at how many places Update is called from and I find two outside of tests. Just update the callsites and remove the two-parameter variant.",
      "parentUuid": "6da5a955_684b90c4",
      "range": {
        "startLine": 43,
        "startChar": 71,
        "endLine": 43,
        "endChar": 72
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ee3aed4c_8662edad",
        "filename": "modules/rtp_rtcp/source/contributing_sources.h",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 5019
      },
      "writtenOn": "2018-11-05T15:07:53Z",
      "side": 1,
      "message": "put child type before the function [DeleteOldEntries]\nhttps://google.github.io/styleguide/cppguide.html#Declaration_Order",
      "range": {
        "startLine": 46,
        "startChar": 2,
        "endLine": 46,
        "endChar": 16
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db761a45_b6032bf2",
        "filename": "modules/rtp_rtcp/source/contributing_sources.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-05T14:21:46Z",
      "side": 1,
      "message": "I\u0027m a bit confused as to which operators are needed.\n\nIt seems we rely on the default assignment operator, in order to update values in the map?\n\nI guess default constructor is needed for map insertion. It\u0027s not so nice that it leaves the last_seem_ms_ member uninitialized (but no real problem, I think, since it\u0027s immediately assigned).",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e4c4908_aff86d91",
        "filename": "modules/rtp_rtcp/source/contributing_sources.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-11-05T14:40:04Z",
      "side": 1,
      "message": "No, I don\u0027t think you need default construction for map insertion, unless you insist on using the [] operator. It\u0027s a bit cumbersome without it, though: until c++17, you\u0027ll have to try and find() the element and replace its contents, if it exists, or insert() (or emplace()) otherwise. A small helper lambda could make that slightly less awful, I think.",
      "parentUuid": "db761a45_b6032bf2",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79d773a0_0c7ab9c8",
        "filename": "modules/rtp_rtcp/source/contributing_sources.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5613
      },
      "writtenOn": "2018-11-05T14:50:04Z",
      "side": 1,
      "message": "are you suggesting i switch to find/insert ?",
      "parentUuid": "5e4c4908_aff86d91",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "867653a6_0196a68d",
        "filename": "modules/rtp_rtcp/source/contributing_sources.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-11-05T15:04:55Z",
      "side": 1,
      "message": "I think the ideal would be to add entries for new csrcs using emplace (possibly with the copy constructor), and update old using the assignment operator.\n\nBut if that results in a lot more complex code than simply using the [] operator, I\u0027d say stick to the [] operator, and accept that it needs to default-construct new elements of the map.\n\nSpeaking of updates, what\u0027s the intended behavior for recorded audio level in case you get a stream of packets mentioning the same csrc, and half of them carry an audio level and the others don\u0027t?",
      "parentUuid": "79d773a0_0c7ab9c8",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e2ce0b27_3797b65d",
        "filename": "modules/rtp_rtcp/source/contributing_sources.h",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 5399
      },
      "writtenOn": "2018-11-05T15:38:00Z",
      "side": 1,
      "message": "I think I\u0027d prefer changing the code to avoid the default constructor, but I\u0027m not going to battle Niels over it. Perhaps leaving the code as-is for now is fine. Up to you!",
      "parentUuid": "867653a6_0196a68d",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 47,
        "endChar": 12
      },
      "revId": "7e66f948e5e40062a4bc8cf3282d21b7d9180729",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}