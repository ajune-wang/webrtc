{
  "comments": [
    {
      "key": {
        "uuid": "1cc8962f_526f2cff",
        "filename": "call/adaptation/video_source_restrictions.cc",
        "patchSetId": 5
      },
      "lineNbr": 70,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "nit: kMaxResolution and kMaxFps. How about putting them in anonymous namespace at the top of this .cc file?",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c931a1d_4c6a4cf6",
        "filename": "call/adaptation/video_source_restrictions.cc",
        "patchSetId": 5
      },
      "lineNbr": 84,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "It feels wrong to have comparison operator DCHECK-crash instead of returning false.\n\nI think operator\u003c() is the wrong place to put the DCHECK since this is a generic \"are these restrictions less than those restrictions?\" operator but the DCHECK assumes that 1) the restrictions being compared represents before and after adaptation, and 2) that adapting down necessarily means one or both went down but we can\u0027t go down in one and up in another.\n\nWe already have DidIncreaseResolution() and DidDecreaseFrameRate() below. Would it make sense to instead add DidDecreaseResolution() and DidIncreaseFrameRate()? You could then have...\n\nbool DidRestrictionsIncrease(VideoSourceRestrictions before,\n                             VideoSourceRestrictions after) {\n  bool increase_res \u003d DidIncreaseResolution(before, after);\n  bool increase_fps \u003d DidIncreaseFrameRate(before, after);\n  bool same_res \u003d before.max_pixels_per_frame() \u003d\u003d after.max_pixels_per_frame();\n  bool same_fps \u003d before.max_frame_rate() \u003d\u003d after.max_frame_rate();\n  if (increase_res \u0026\u0026 increase_fps)\n    return true;\n  return (increase_res \u0026\u0026 same_fps) || (increase_fps \u0026\u0026 same_res);\n}\n\nAnd similarly DidRestrictionsDecrease().\n\nIf would be possible for neither \"increase\" or \"decrease\" be true (if they are equal or if one property goes up but the other goes down) but at adaptation we could DCHECK that one of them is necessarily true.",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9631081e_7c2a901d",
        "filename": "modules/video_coding/utility/quality_scaler.cc",
        "patchSetId": 5
      },
      "lineNbr": 186,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "Note that observed_enough_frames_ is something we update at CheckQp(), so it represents \"had we observed enough frames the last time we checked?\", but that could have been two seconds ago.\n\nSuggestion: Add private helper method HasObservedEnoughFrames() that you call here and in CheckQp(). That way you can tell if you\u0027ve observed enough frames regardless of the CheckQp interval but the CheckQp interval can still depend on if we had observed enough frames in the previous CheckQp call.",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bd4efaf_690b57ab",
        "filename": "modules/video_coding/utility/quality_scaler.cc",
        "patchSetId": 5
      },
      "lineNbr": 201,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "Is it on purpose that this only looks at avg_qp_high and not \"avg_qp_low\" like we do down at CheckQp()? If so, can you explain why in a comment for QpFastFilter()? If not, can CheckQp() internally invoke QpFastFilter()?",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc8c987f_b66e2871",
        "filename": "video/adaptation/quality_scaler_resource.cc",
        "patchSetId": 5
      },
      "lineNbr": 112,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "nit: With my earlier suggestion and still covering what we want to DCHECK this would be something like:\n\n  if (DidRestrictionsIncrease(restrictions_before, restrictions_after)) {\n    ++adaptations_;\n  } else if (DidRestrictionsDecrease(restrictions_before, restrictions_after)) {\n    --adaptation_;\n  } else {\n    RTC_NOTREACHED();\n  }",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90657e22_43bf8ef6",
        "filename": "video/adaptation/quality_scaler_resource.cc",
        "patchSetId": 5
      },
      "lineNbr": 142,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "Should we prevent adaptation if (this \u003d\u003d \u0026reason_resource \u0026\u0026 adaptations_ \u003d\u003d 0) to prevent DCHECK crash on negative adaptations_?\n\nIf we get rid of not adapting up due to counters then it would be possible for some resource to cause adapt down and for QP to cause adapt up, and for that resource to not prevent adapting up for some reasons (maybe circumstances have changed but that other resource has not adapted up yet).",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1a0318ff_ffadbf72",
        "filename": "video/adaptation/quality_scaler_resource.h",
        "patchSetId": 5
      },
      "lineNbr": 74,
      "author": {
        "id": 5142
      },
      "writtenOn": "2020-04-27T14:05:52Z",
      "side": 1,
      "message": "nit: These are adaptations successfully applied caused only by the QualityScaler. Should that be reflected in the name? E.g. quality_scaler_adaptations_applied_",
      "revId": "f0b617e526fc42678d56b7c9ecca5d63a31734ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}