{
  "comments": [
    {
      "key": {
        "uuid": "d13688fd_1e4c5086",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "The other functions are called ConvertToProtoFormat or ConvertXToProtoFormat. Use same here?",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 23
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24ab3953_fb7c7b28",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "I intentionally made it different, because the other functions return a rtclog2::Type, and this function doesn\u0027t. However, if you reiterate a preference for that type of name despite this difference, I\u0027ll rename. Wdys?",
      "parentUuid": "d13688fd_1e4c5086",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 23
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db9e0487_5e65ce93",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "Well, you already have ConvertPacketLossFractionToProtoFormat so I think ConvertAudioLevelToProtoFormat would be a good name.",
      "parentUuid": "24ab3953_fb7c7b28",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 23
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7bea3c1_4774157b",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 240,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db9e0487_5e65ce93",
      "range": {
        "startLine": 240,
        "startChar": 8,
        "endLine": 240,
        "endChar": 23
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00831e71_bae12fa0",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "vector\u003cuint8_t\u003e?",
      "range": {
        "startLine": 329,
        "startChar": 14,
        "endLine": 329,
        "endChar": 25
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d60df7c6_7ea123f8",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "This would require a change to EncodeBlobs(). That much is possible, of course, but what would the benefit be, other than that the (relatively safe) cast to uint8_t* would no longer be necessary?",
      "parentUuid": "00831e71_bae12fa0",
      "range": {
        "startLine": 329,
        "startChar": 14,
        "endLine": 329,
        "endChar": 25
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "93a8b6b3_889960d4",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 329,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "Ok, maybe more trouble than it is worth.",
      "parentUuid": "d60df7c6_7ea123f8",
      "range": {
        "startLine": 329,
        "startChar": 14,
        "endLine": 329,
        "endChar": 25
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "439c6753_8df85f7c",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "How about scrubbed_packets[i].data()?",
      "range": {
        "startLine": 335,
        "startChar": 51,
        "endLine": 335,
        "endChar": 73
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "250dc498_b6bb56cc",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 335,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "The non-const version of std::string::data() is not available before C++17.",
      "parentUuid": "439c6753_8df85f7c",
      "range": {
        "startLine": 335,
        "startChar": 51,
        "endLine": 335,
        "endChar": 73
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cdf1c41_054ed789",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 336,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "This seems unnecessary.",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 336,
        "endChar": 45
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec7cd7e6_57f75bf9",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 336,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "constexpr size_t kMaxEventsInHistory \u003d 10000;\n#define IP_PACKET_SIZE 1500\n\nI am worried that a malicious remote client could intentionally use 15MBs of memory, while only using a fraction of that in bandwidth to trigger the behavior. Not the worst attack possible, but there\u0027s no guarantee kMaxEventsInHistory won\u0027t be increased in the future. I therefore propose:\n1. Keep this resize(), to make sure we don\u0027t needlessly inflate our memory consumption while iterating through the loop.\n2. In RtcEventLogImpl::LogToMemory, take account not only of the number of events, but also of their total (projected) size.",
      "parentUuid": "6cdf1c41_054ed789",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 336,
        "endChar": 45
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "caa2a167_c6a9137c",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 336,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "I see. How about instead replacing \nscrubed_packets[i].resize(IP_PACKET_SIZE);\nby\nscrubed_packets[i].resize(event-\u003epacket_.size());\nand skipping the second resize?",
      "parentUuid": "ec7cd7e6_57f75bf9",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 336,
        "endChar": 45
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c03c4d7_55ed0b31",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 336,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "Replacing IP_PACKET_SIZE by event-\u003epacket_.size() is a good idea; done. But I\u0027ve not removed the second resize(). Admittedly, your suggestion makes the attack more expensive by the speed memory may be consumed to the rate of network ingress, but it\u0027s still possible to trigger the consumption of more memory than is necessary, by injecting non-whitelisted RTCP messages into the packet. If you\u0027re still strongly inclined to remove the second resize(), maybe we could discuss it offline?",
      "parentUuid": "caa2a167_c6a9137c",
      "range": {
        "startLine": 336,
        "startChar": 0,
        "endLine": 336,
        "endChar": 45
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e43272e_6f515943",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 410,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "It seems strange to reuse audio level for both level and level+voice bit. How about calling ProtoAudioLevel twice (as above).",
      "range": {
        "startLine": 410,
        "startChar": 6,
        "endLine": 410,
        "endChar": 17
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4dd6e6e1_9383ac97",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 410,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "The name in the proto is \"audio_level\". Do we perhaps want to change that to audio_level_and_voice_activity, or something similar? If so, I can use an intermediary with the appropriate name here, and for |base_audio_level|.",
      "parentUuid": "3e43272e_6f515943",
      "range": {
        "startLine": 410,
        "startChar": 6,
        "endLine": 410,
        "endChar": 17
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2151cc17_c78bf3fe",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 410,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "audio_level_byte \u003d ProtoAudioLevel(voice_activity, audio_level);\nshould be enough to convey that you are packing voice activity and audio level into one byte. \n\nCalling ProtoAudioLevel twice still seems reasonable to me.",
      "parentUuid": "4dd6e6e1_9383ac97",
      "range": {
        "startLine": 410,
        "startChar": 6,
        "endLine": 410,
        "endChar": 17
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b97ef2f_d1c374d1",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 410,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "Discussed offline; we\u0027ll break the two apart in the proto in a follow-up CL.",
      "parentUuid": "2151cc17_c78bf3fe",
      "range": {
        "startLine": 410,
        "startChar": 6,
        "endLine": 410,
        "endChar": 17
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab6903a0_bf0cc629",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 1046,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "This should use ConvertToProtoFormat, right?",
      "range": {
        "startLine": 1046,
        "startChar": 53,
        "endLine": 1046,
        "endChar": 68
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c125ab4_0feef636",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_new_format.cc",
        "patchSetId": 2
      },
      "lineNbr": 1046,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "Thanks for catching!",
      "parentUuid": "ab6903a0_bf0cc629",
      "range": {
        "startLine": 1046,
        "startChar": 53,
        "endLine": 1046,
        "endChar": 68
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ac8e7f6_e65ca8e4",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 577,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "delete",
      "range": {
        "startLine": 577,
        "startChar": 22,
        "endLine": 577,
        "endChar": 23
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd24fa37_be16368c",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 577,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0ac8e7f6_e65ca8e4",
      "range": {
        "startLine": 577,
        "startChar": 22,
        "endLine": 577,
        "endChar": 23
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12e57f6d_d5bff3b8",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 2475,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "Why is there a cast to unsigned and then to int?",
      "range": {
        "startLine": 2475,
        "startChar": 25,
        "endLine": 2475,
        "endChar": 36
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "519e6078_a33afd1b",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 2475,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "First is dchecked, to make sure the values are in the correct range.\nSecond converts unsigned to signed, for a constant bit width; no dcheck used.\nI think it\u0027s problematic that we implicitly assume that int \u003d int32 here, though. Wdyt?",
      "parentUuid": "12e57f6d_d5bff3b8",
      "range": {
        "startLine": 2475,
        "startChar": 25,
        "endLine": 2475,
        "endChar": 36
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "615d681a_d8c8bacd",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 2480,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "Same.",
      "range": {
        "startLine": 2480,
        "startChar": 0,
        "endLine": 2480,
        "endChar": 42
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15351153_dc8df12c",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 2480,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "Same answer.",
      "parentUuid": "615d681a_d8c8bacd",
      "range": {
        "startLine": 2480,
        "startChar": 0,
        "endLine": 2480,
        "endChar": 42
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9b32aee1_29733495",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T01:11:39Z",
      "side": 1,
      "message": "It should be possible to add one more zero, right? Also, is there a reason for not using abs?",
      "range": {
        "startLine": 541,
        "startChar": 49,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ffe92b43_139714f9",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 541,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T10:03:58Z",
      "side": 1,
      "message": "Yeah, abs is better than min/max, and more traditional. I wonder what I was thinking.",
      "parentUuid": "9b32aee1_29733495",
      "range": {
        "startLine": 541,
        "startChar": 49,
        "endLine": 541,
        "endChar": 55
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a5ead1c8_10c3045a",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-06T13:24:15Z",
      "side": 1,
      "message": "uses?\nSame below.",
      "range": {
        "startLine": 83,
        "startChar": 61,
        "endLine": 83,
        "endChar": 69
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63d94c59_3de593ef",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-06T15:01:05Z",
      "side": 1,
      "message": "I think \"exhibits\" conveys the nuance better.\n\"Exhibit - manifest clearly (a quality or a type of behaviour).\"\n1. It\u0027s for a unit test.\n2. \"Uses\" maintains some ambiguity about whether an extension is available or actually present, that \"exhibits\" does not seem to have.",
      "parentUuid": "a5ead1c8_10c3045a",
      "range": {
        "startLine": 83,
        "startChar": 61,
        "endLine": 83,
        "endChar": 69
      },
      "revId": "c6c66bf6b06693c18afefa05cae994ad07244f9d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}