{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0a429c64_400f6710",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-09-25T07:55:33Z",
      "side": 1,
      "message": "Thanks - I updated the Candidate class to incorporate this too for setting the type. It\u0027s not strictly necessary now but guards against potential downstream regressions. It would be nice to change this property to be an enum but the global strings are being referenced by code outside of webrtc right now.",
      "revId": "1f656740386cfdcfbed7b015a408ef343cac4b3d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94797c54_41a61755",
        "filename": "api/candidate.h",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 5019
      },
      "writtenOn": "2023-09-25T09:53:48Z",
      "side": 1,
      "message": "here (and in the constructor) this attribute is misleading: `type` is assigned to a string, and thus doesn\u0027t need to outlive this function call.",
      "range": {
        "startLine": 105,
        "startChar": 39,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "1f656740386cfdcfbed7b015a408ef343cac4b3d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34213b77_733860cc",
        "filename": "api/candidate.h",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-09-25T10:09:29Z",
      "side": 1,
      "message": "True - what I am thinking about is consistency with how the `cricket::` port type constants are used (like `cricket::LOCAL_PORT_TYPE`).\n\nIdeally these values should be enums, which I\u0027ll do a follow-up change for, but in the meantime my thinking is to lock things down to make sure that no callers are passing dynamically allocated strings for these values.",
      "parentUuid": "94797c54_41a61755",
      "range": {
        "startLine": 105,
        "startChar": 39,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "1f656740386cfdcfbed7b015a408ef343cac4b3d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5322cb40_7a1449e1",
        "filename": "api/candidate.h",
        "patchSetId": 5
      },
      "lineNbr": 105,
      "author": {
        "id": 5508
      },
      "writtenOn": "2023-09-25T12:06:16Z",
      "side": 1,
      "message": "Added comment to explain this for set_type().",
      "parentUuid": "34213b77_733860cc",
      "range": {
        "startLine": 105,
        "startChar": 39,
        "endLine": 105,
        "endChar": 68
      },
      "revId": "1f656740386cfdcfbed7b015a408ef343cac4b3d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}