{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6fdf8dd7_f60c1e21",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-13T14:11:14Z",
      "side": 1,
      "message": "Please expand",
      "range": {
        "startLine": 9,
        "startChar": 38,
        "endLine": 9,
        "endChar": 41
      },
      "revId": "f84904cff5e1048fa79e4152a523ea007e12defb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5aed0cc1_4eba3e9b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 10,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-13T14:11:14Z",
      "side": 1,
      "message": "Spelling",
      "range": {
        "startLine": 10,
        "startChar": 24,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "f84904cff5e1048fa79e4152a523ea007e12defb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fafb5b6c_b1f3dff9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2021-07-13T13:47:36Z",
      "side": 1,
      "message": "Niels, PTAL.",
      "revId": "f84904cff5e1048fa79e4152a523ea007e12defb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "641ad620_c769d159",
        "filename": "api/video_codecs/video_encoder_software_fallback_wrapper.cc",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-13T14:11:14Z",
      "side": 1,
      "message": "There seems to be a std::gcd (and std::lcm) in C++17. \n\nI take it this function isn\u0027t performance critical?",
      "range": {
        "startLine": 38,
        "startChar": 4,
        "endLine": 38,
        "endChar": 40
      },
      "revId": "f84904cff5e1048fa79e4152a523ea007e12defb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a881d6_a0dd6320",
        "filename": "media/engine/simulcast_encoder_adapter.cc",
        "patchSetId": 3
      },
      "lineNbr": 697,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-13T14:11:14Z",
      "side": 1,
      "message": "If this has to be marked as const (and the cached_encoder_contexts_ marked mutable), I think that deserves a comment. Is the method idempotent (calling it multiple times with same argument produces same result)? To me it\u0027s a bit confusing that the method appears to in some cases delete items from the cache.",
      "range": {
        "startLine": 697,
        "startChar": 35,
        "endLine": 697,
        "endChar": 40
      },
      "revId": "f84904cff5e1048fa79e4152a523ea007e12defb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da348c2f_6a1e467d",
        "filename": "media/engine/simulcast_encoder_adapter.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 5234
      },
      "writtenOn": "2021-07-13T14:11:14Z",
      "side": 1,
      "message": "Can this be a plain pass-by-value argument instead of an rvalue reference? See https://google.github.io/styleguide/cppguide.html#Rvalue_references, \"Do not use rvalue references (or apply the \u0026\u0026 qualifier to methods), except as ...\", and I don\u0027t think this usage matches the given exceptions.",
      "range": {
        "startLine": 75,
        "startChar": 19,
        "endLine": 75,
        "endChar": 47
      },
      "revId": "f84904cff5e1048fa79e4152a523ea007e12defb",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}