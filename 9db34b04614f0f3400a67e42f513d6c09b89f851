{
  "comments": [
    {
      "key": {
        "uuid": "6a734d48_052857d0",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-29T20:05:43Z",
      "side": 1,
      "message": "Maybe a comment to explain to future readers that instantiating RtcEvents will read this clock?",
      "range": {
        "startLine": 626,
        "startChar": 0,
        "endLine": 626,
        "endChar": 53
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08af22e3_1c3a3e90",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-30T13:01:42Z",
      "side": 1,
      "message": "Since the timestamp is passed to the verification function, I think it is pretty clear that it is part of the event.",
      "parentUuid": "6a734d48_052857d0",
      "range": {
        "startLine": 626,
        "startChar": 0,
        "endLine": 626,
        "endChar": 53
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c8fd8c6_9cc42c32",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 626,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-30T13:56:54Z",
      "side": 1,
      "message": "I would prefer a comment, but it\u0027s up to you.",
      "parentUuid": "08af22e3_1c3a3e90",
      "range": {
        "startLine": 626,
        "startChar": 0,
        "endLine": 626,
        "endChar": 53
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4859b9e_9261d054",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 641,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-29T20:05:43Z",
      "side": 1,
      "message": "nit: const?",
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b594eec3_c9347557",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 641,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-30T13:01:42Z",
      "side": 1,
      "message": "It\u0027s not done elsewhere in the file.",
      "parentUuid": "a4859b9e_9261d054",
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "823ccb1a_28109ef0",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 732,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-29T20:05:43Z",
      "side": 1,
      "message": "Do you think it would make sense to eliminate the somewhat significant code repetition in this file with helper functions and/or templates?",
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81e005a3_a3e691fd",
        "filename": "logging/rtc_event_log/encoder/rtc_event_log_encoder_unittest.cc",
        "patchSetId": 2
      },
      "lineNbr": 732,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-30T13:01:42Z",
      "side": 1,
      "message": "It might be nice, but there are some diffulties.\n\nWe\u0027d either have to add a bunch of helper methods to RtcEventLogEncoderTest, but which are specific to this test. In particular, we\u0027d need a template \"traits\" class that map an RTCP block type to the corresponding parsed type. We\u0027d also need a templatized wrapper around the parser to return the correct list given an RTCP type.\nA nicer solution would be to create a new fixture class that contain these wrappers. That would also let us parametrize over direction but not over force_repeated. However, this would duplicate a lot of RtcEventLogEncoderTest.\n\nA more fundamental problem is that we want a test that is both type parametrized and value parametrized. I don\u0027t know how to write such tests or even if it is supported by gtest. There is certainly no documentation of this in https://github.com/abseil/googletest/blob/master/googletest/docs/advanced.md\n\nBetween the extra template wrappers, duplicated fixture classes and hacks to enable both type and value parameterized tests, I don\u0027t think the costs are worth it.",
      "parentUuid": "823ccb1a_28109ef0",
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d4329bd_c495f876",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 963,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-29T20:05:43Z",
      "side": 1,
      "message": "nit: I think that from the parser\u0027s view, we don\u0027t parse the most important, but rather, all that\u0027s available in the log? (Also, I am not sure what \"important\" means in the context of logging. If someone is sending an RTCP message, they presumably think it to be important? If someone is debugging code, presumably it\u0027s important to one\u0027s employer?)",
      "range": {
        "startLine": 963,
        "startChar": 20,
        "endLine": 963,
        "endChar": 29
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb5dd952_80f1e592",
        "filename": "logging/rtc_event_log/rtc_event_log_parser_new.cc",
        "patchSetId": 2
      },
      "lineNbr": 963,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-30T13:01:42Z",
      "side": 1,
      "message": "We store RTCP packets as raw bytes, so they contain other RTCP block types too. We currently don\u0027t provide convenience wrappers to the other RTCP types because we haven\u0027t used them. If someone is interested in other RTCP types, they could go over the list of all RTCP and parse and extract the messages they are interested in.\n\nUpdated the comment.",
      "parentUuid": "5d4329bd_c495f876",
      "range": {
        "startLine": 963,
        "startChar": 20,
        "endLine": 963,
        "endChar": 29
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c2c7c4b_6b61d4ff",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-29T20:06:40Z",
      "side": 1,
      "message": "You should modify this, then. :-)",
      "range": {
        "startLine": 279,
        "startChar": 2,
        "endLine": 279,
        "endChar": 29
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb0b16e6_0ebcb5ff",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.cc",
        "patchSetId": 2
      },
      "lineNbr": 279,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-30T13:01:42Z",
      "side": 1,
      "message": "Done. Thanks!",
      "parentUuid": "9c2c7c4b_6b61d4ff",
      "range": {
        "startLine": 279,
        "startChar": 2,
        "endLine": 279,
        "endChar": 29
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46b3c778_9b76cd7d",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 5147
      },
      "writtenOn": "2018-11-29T20:05:43Z",
      "side": 1,
      "message": "const-ref? Here and elsewhere?",
      "range": {
        "startLine": 210,
        "startChar": 32,
        "endLine": 211,
        "endChar": 70
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "253958c9_df947acc",
        "filename": "logging/rtc_event_log/rtc_event_log_unittest_helper.h",
        "patchSetId": 2
      },
      "lineNbr": 211,
      "author": {
        "id": 5150
      },
      "writtenOn": "2018-11-30T13:01:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "46b3c778_9b76cd7d",
      "range": {
        "startLine": 210,
        "startChar": 32,
        "endLine": 211,
        "endChar": 70
      },
      "revId": "9db34b04614f0f3400a67e42f513d6c09b89f851",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}