{
  "comments": [
    {
      "key": {
        "uuid": "9f277c9d_d5556a5d",
        "filename": "sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 1
      },
      "lineNbr": 465,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-10-16T18:09:24Z",
      "side": 1,
      "message": "comment",
      "revId": "25c2152e1c00ca6537278675c353ec01d3f6b508",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bf22b006_3963c753",
        "filename": "sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 1
      },
      "lineNbr": 465,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-16T18:19:59Z",
      "side": 1,
      "message": "what\u0027s the policy on that? is duping comments between .cc and java a good thing(tm)? it feels wrong :)\n\nI see most of the variables don\u0027t have a comment:\n    public boolean disableIpv6;\n    public boolean enableDscp;\n    public boolean enableCpuOveruseDetection;\n    public boolean enableRtpDataChannel;\n    public boolean suspendBelowMinBitrate;\n    @Nullable public Integer screencastMinBitrate;\n    @Nullable public Boolean combinedAudioVideoBwe;\n    @Nullable public Boolean enableDtlsSrtp;",
      "parentUuid": "9f277c9d_d5556a5d",
      "revId": "25c2152e1c00ca6537278675c353ec01d3f6b508",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac1fd56e_8ea04922",
        "filename": "sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 1
      },
      "lineNbr": 465,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-10-16T18:32:15Z",
      "side": 1,
      "message": "Ideally a Java developer wouldn\u0027t need to go looking through C++ source code to find documentation. So I think copying docs is the least-bad choice here.",
      "parentUuid": "bf22b006_3963c753",
      "revId": "25c2152e1c00ca6537278675c353ec01d3f6b508",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "70d7d63b_d59d91aa",
        "filename": "sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 1
      },
      "lineNbr": 465,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-16T18:35:59Z",
      "side": 1,
      "message": "Ideally yes, and typically you achieve that by some sort of comment redirect  :-) \nIn reality, the java interfaces are wrappers around c++ classes, and the comments on the wrappers are very sparse or non-existing.\n\nAdded a comment though.",
      "parentUuid": "ac1fd56e_8ea04922",
      "revId": "25c2152e1c00ca6537278675c353ec01d3f6b508",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "851b7e7d_7620e093",
        "filename": "sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 1
      },
      "lineNbr": 465,
      "author": {
        "id": 5112
      },
      "writtenOn": "2018-10-17T12:42:51Z",
      "side": 1,
      "message": "Yes, I think it is good to copy the comments to Java land. Can you additionally make it javadoc please (with syntax /** Comment */)? This will make it show up in people\u0027s IDEs. :)",
      "parentUuid": "70d7d63b_d59d91aa",
      "revId": "25c2152e1c00ca6537278675c353ec01d3f6b508",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7dc3a32_5f49e353",
        "filename": "sdk/android/api/org/webrtc/PeerConnection.java",
        "patchSetId": 1
      },
      "lineNbr": 465,
      "author": {
        "id": 7704
      },
      "writtenOn": "2018-10-17T14:22:51Z",
      "side": 1,
      "message": "Done. Note that this doesn\u0027t follow an established practice in this file.",
      "parentUuid": "851b7e7d_7620e093",
      "revId": "25c2152e1c00ca6537278675c353ec01d3f6b508",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}