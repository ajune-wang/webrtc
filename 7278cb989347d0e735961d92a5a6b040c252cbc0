{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "bf029f25_321b5fe9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-06T14:00:38Z",
      "side": 1,
      "message": "Hey cool stuff! I have some questions before I start reviewing.\n\n1. Is HEVC support HW only?\n2. Is it possible to have an encoder but not a decoder or vice versa? Otherwise I wonder what happens if you have a \"sendrecv\" transciever (m\u003d section).\n3. When HEVC is compiled, does HEVC show up in `RTCRtpSender.getCapabilities(\u0027video\u0027).codecs` and `RTCRtpReceiver.getCapabilities(\u0027video\u0027).codecs` and can be set using `setCodecPreferences` or is this only available via SDP munging? E.g. would this test page work with HEVC? https://jsfiddle.net/henbos/c2zqb1yw/",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31ffc435_cecb9317",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-06T14:01:40Z",
      "side": 1,
      "message": "(Re-opening comment thread)",
      "parentUuid": "bf029f25_321b5fe9",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dd16074a_25eb314a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-12-06T15:48:09Z",
      "side": 1,
      "message": "Some comments. Mostly about making tests more readable.",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ff7530e_e54a427a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-07T00:44:41Z",
      "side": 1,
      "message": "\u003e Is HEVC support HW only?\n\nYes. If RTC team thinks it is allowed, in libWebRTC we\u0027ll add MediaCodec-based enc/dec for Android, and VT-based enc/dec for MacOS/iOS. Other HW enc/dec impl(CrOS/Win/Linux) will be only in blink.\n\n\u003e Is it possible to have an encoder but not a decoder or vice versa? Otherwise I wonder what happens if you have a \"sendrecv\" transciever (m\u003d section).\n\nHaving a decoder but no encoder is possible on a platform; but not reasonable to have an encoder without a decoder. (Dec is part of Enc process, so if IHV implements encoder, there is no reason they don\u0027t expose Dec to user).\n\n\u003e When HEVC is compiled, does HEVC show up in RTCRtpSender.getCapabilities(\u0027video\u0027).codecs and RTCRtpReceiver.getCapabilities(\u0027video\u0027).codecs and can be set using setCodecPreferences or is this only available via SDP munging? E.g. would this test page work with HEVC? https://jsfiddle.net/henbos/c2zqb1yw/\n\nCurrent status: When you disable encoder and enable decoder, HEVC shows up in RTCRtpReceiver.getCapabilities(), and is not in RTCRtpSender.getCapabilities(); reversely, if you enable encoder and disable decoder, it appears in sender\u0027s capabilities and disappear in receiver\u0027s capabilities.\nI didn\u0027t mungle SDP for the test. Your test page works for SDP negotiation but since depacketizer CL is still under review, and jitter-buffer CL is pending submission, it will not stream e2e with your page.",
      "parentUuid": "31ffc435_cecb9317",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c66ba915_07be304e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5142
      },
      "writtenOn": "2023-12-11T13:29:24Z",
      "side": 1,
      "message": "OK sounds good. When we add support to Chrome we can make more web platform tests to make sure the API can handle uni-directional codecs, it\u0027s not clear to be if SDP would accept or reject if transciever is \"sendrecv\" and we negotiate H265 but can only send or can only receive. Some high level API tests similar to those in peer_connection_encodings_integrationtest.cc but on the JavaScript layer, since HW encoding/decoding would only exist with RTCVideoEncoder/Decoder support and can\u0027t be tested in webrtc alone IIUC.\n\nBut for now all of this is behind a flag, so landing this does not immediately impact Chrome tip-of-tree until we decide to enable it, correct?\n\nI\u0027m not an expert on H265 profiles, so I\u0027ll leave that review to my colleagues, but LGTM from me assuming this is currently safely behind flag.",
      "parentUuid": "1ff7530e_e54a427a",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "259fb19e_387f020b",
        "filename": "media/base/sdp_video_format_utils_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-12-06T15:48:09Z",
      "side": 1,
      "message": "Make \"93\" a constant and call it \"locally_supported_level_id\" or something like that - you refer to it in 2 places.",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d5a4c8e_91f2e6a3",
        "filename": "media/base/sdp_video_format_utils_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-07T00:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "259fb19e_387f020b",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e9d979bd_62d597f3",
        "filename": "media/engine/internal_decoder_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-12-06T15:48:09Z",
      "side": 1,
      "message": "\"ATTENTION\" has no particular value in a comment....",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8793f129_aeb18250",
        "filename": "media/engine/internal_decoder_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-07T00:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e9d979bd_62d597f3",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eab817f5_9444e3ab",
        "filename": "media/engine/internal_decoder_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-12-06T15:48:09Z",
      "side": 1,
      "message": "Call the test H265IsNotEnabled",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c892285_5f68c86d",
        "filename": "media/engine/internal_decoder_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 106,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-07T00:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eab817f5_9444e3ab",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a7748cf_11124d65",
        "filename": "media/engine/internal_encoder_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-12-06T15:48:09Z",
      "side": 1,
      "message": "Same here",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1da1fdf9_cdd63f93",
        "filename": "media/engine/internal_encoder_factory_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 84,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-07T00:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1a7748cf_11124d65",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45cd6104_13e4e684",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 4365,
      "author": {
        "id": 5634
      },
      "writtenOn": "2023-12-06T15:48:09Z",
      "side": 1,
      "message": "Better call it something like TxModeIsDifferentDropsCodecs (or whatever this is actually checking). is the tx mode default (srst) in this case?",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0506ba3f_effd247d",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 4365,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-07T00:44:41Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45cd6104_13e4e684",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1dac86ab_b7356653",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 3
      },
      "lineNbr": 4365,
      "author": {
        "id": 18005
      },
      "writtenOn": "2023-12-08T03:02:35Z",
      "side": 1,
      "message": "SRST is the default.\nIt is required by spec that if SRST is the only tx-mode supported by endpoint,UA should not signal tx-mode explicitly in Fmtp line.\nWebRTC endpoints should support only SRST, while non-WebRTC endpoints can optionally support MRST \u0026 MRMT, besides the mandatory SRST.",
      "parentUuid": "0506ba3f_effd247d",
      "revId": "7278cb989347d0e735961d92a5a6b040c252cbc0",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}