/*
 *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.
 *
 *  Use of this source code is governed by a BSD-style license
 *  that can be found in the LICENSE file in the root of the source
 *  tree. An additional intellectual property rights grant can be found
 *  in the file PATENTS.  All contributing project authors may
 *  be found in the AUTHORS file in the root of the source tree.
 */

#include <algorithm>
#include <array>
#include <numeric>

#include "modules/audio_processing/agc2/rnn_vad/biquad.h"
#include "modules/audio_processing/agc2/rnn_vad/common.h"
#include "modules/audio_processing/agc2/rnn_vad/test_utils.h"
// TODO(https://bugs.webrtc.org/8948): Add when the issue is fixed.
// #include "test/fpe_observer.h"
#include "test/gtest.h"

namespace webrtc {
namespace rnn_vad {
namespace test {

namespace {

const BiQuadFilter::State kHpfInitialState48kHz(-45.993244171142578125f,
                                                45.930263519287109375f);

constexpr std::array<float, kFrameSize10ms48kHz> kExpectedHpFilterOutput = {
    -18.993244f,  -18.980064f,  -18.966747f,  -16.953293f,  -14.947723f,
    -15.950027f,  -15.948166f,  -14.946152f,  -12.947998f,  -12.957706f,
    -13.967247f,  -14.97261f,   -11.973804f,  -8.986874f,   -7.011799f,
    -7.044552f,   -7.077103f,   -5.109455f,   -6.149628f,   -9.185581f,
    -9.209297f,   -7.232826f,   -6.264191f,   -7.299366f,   -8.330326f,
    -7.357079f,   -5.38765f,    -5.426044f,   -5.46423f,    -6.502209f,
    -4.535973f,   -4.577557f,   -5.618927f,   -7.656075f,   -6.684998f,
    -5.717739f,   -3.754295f,   -4.798668f,   -3.838818f,   -1.882771f,
    -1.934528f,   -4.986057f,   -8.025333f,   -12.052372f,  -11.063183f,
    -8.077843f,   -7.104366f,   -10.134712f,  -12.152836f,  -11.162766f,
    -10.176544f,  -9.194168f,   -13.21563f,   -13.220875f,  -11.225967f,
    -8.238926f,   -11.263748f,  -13.27636f,   -13.280788f,  -12.285065f,
    -11.293201f,  -12.305195f,  -13.313019f,  -14.316681f,  -13.316185f,
    -14.319557f,  -16.318771f,  -18.309826f,  -18.292736f,  -19.275532f,
    -20.254204f,  -19.22876f,   -18.207226f,  -20.189598f,  -21.163841f,
    -20.133976f,  -18.108028f,  -17.090004f,  -16.075882f,  -17.065655f,
    -16.0513f,    -13.040844f,  -10.042301f,  -10.055653f,  -11.068851f,
    -11.077888f,  -7.086781f,   -4.111565f,   -3.148209f,   -4.188675f,
    -4.224937f,   -3.261013f,   -3.300911f,   -4.340614f,   -4.376114f,
    0.588573f,    1.533394f,    -1.525581f,   -2.572304f,   -3.614815f,
    -2.653118f,   -3.69524f,    -4.733158f,   -5.76688f,    -5.79641f,
    -5.825764f,   -5.854942f,   -6.883945f,   -6.908764f,   -5.933414f,
    -2.961906f,   -3.002254f,   -4.042412f,   -5.078369f,   -5.110134f,
    -4.14172f,    -3.177135f,   -4.216377f,   -2.251419f,   -0.294296f,
    -0.345001f,   0.6045f,      2.550198f,    7.488087f,    10.406151f,
    11.312439f,   11.214993f,   10.117825f,   11.024944f,   11.928326f,
    13.827976f,   15.719891f,   18.60408f,    19.476551f,   18.345337f,
    18.218468f,   19.091927f,   20.9617f,     22.823784f,   20.678192f,
    17.540977f,   15.416138f,   17.299644f,   18.175446f,   16.047562f,
    13.928028f,   13.816833f,   15.705948f,   15.587349f,   14.46907f,
    10.355122f,   10.257526f,   11.160217f,   11.059189f,   6.958454f,
    2.87405f,     1.805954f,    1.742115f,    -0.321484f,   -4.376823f,
    -8.415897f,   -8.438728f,   -8.461384f,   -12.483864f,  -19.490128f,
    -26.46817f,   -31.418037f,  -31.347794f,  -33.277519f,  -37.199196f,
    -43.104816f,  -46.986385f,  -48.851959f,  -52.709583f,  -55.55125f,
    -60.380997f,  -65.190826f,  -67.980766f,  -71.758865f,  -73.521133f,
    -75.27562f,   -74.022339f,  -74.773331f,  -76.520569f,  -77.260056f,
    -79.995819f,  -81.719841f,  -82.436157f,  -80.148788f,  -78.869774f,
    -80.595093f,  -83.312706f,  -84.018616f,  -80.720871f,  -77.435516f,
    -76.162537f,  -77.89389f,   -78.617538f,  -77.337509f,  -74.061829f,
    -72.798508f,  -72.53952f,   -71.280846f,  -69.026489f,  -63.780464f,
    -59.55479f,   -57.345428f,  -54.144333f,  -50.955502f,  -45.778919f,
    -42.622589f,  -38.478462f,  -32.350529f,  -27.246788f,  -22.163193f,
    -19.099709f,  -15.04829f,   -9.012928f,   -4.001617f,   0.989685f,
    3.961014f,    4.920418f,    7.875935f,    8.81955f,     9.759304f,
    11.695202f,   13.623238f,   14.543423f,   11.459782f,   7.388363f,
    5.333153f,    5.28611f,     6.239201f,    3.188416f,    -0.850201f,
    -1.872654f,   1.109001f,    4.078716f,    4.036514f,    2.994442f,
    5.956509f,    10.90667f,    15.836922f,   18.747292f,   22.645832f,
    26.528553f,   30.395481f,   33.246639f,   36.086063f,   41.913773f,
    46.717754f,   46.502056f,   46.286758f,   49.071861f,   54.845333f,
    59.595165f,   62.325405f,   63.044102f,   65.759293f,   71.462967f,
    78.143112f,   80.795761f,   82.436996f,   84.070847f,   88.697327f,
    92.304413f,   94.896149f,   95.47657f,    98.053719f,   101.619583f,
    105.170174f,  103.705513f,  102.245682f,  101.790672f,  103.336472f,
    102.875061f,  98.414474f,   92.970749f,   91.547867f,   91.129761f,
    90.712418f,   87.295837f,   83.892059f,   80.501068f,   77.122833f,
    72.757339f,   68.408585f,   64.076546f,   59.7612f,     55.462521f,
    52.180481f,   48.911053f,   45.654213f,   41.409946f,   38.182243f,
    31.967072f,   26.776443f,   22.606312f,   20.452637f,   17.307369f,
    15.174511f,   13.050034f,   12.933926f,   11.818153f,   12.706726f,
    14.591618f,   13.468822f,   11.350384f,   8.240307f,    6.14259f,
    7.053204f,    9.960106f,    8.855282f,    6.754787f,    3.662624f,
    2.582794f,    3.507259f,    2.42799f,     2.353016f,    0.27832f,
    -0.788082f,   -0.850212f,   -1.912083f,   0.030312f,    1.964935f,
    2.8918f,      1.814926f,    -0.25766f,    -3.321953f,   -3.373955f,
    -3.425713f,   -1.47723f,    -2.536526f,   -3.59156f,    -3.642342f,
    -3.692883f,   -2.743183f,   -2.797253f,   -4.851078f,   -7.896641f,
    -8.929943f,   -10.959023f,  -9.979877f,   -10.004547f,  -8.029022f,
    -9.061317f,   -10.089394f,  -11.113258f,  -12.132919f,  -14.148384f,
    -15.155647f,  -19.15873f,   -21.145607f,  -22.124329f,  -25.098915f,
    -27.061356f,  -30.015678f,  -33.957886f,  -37.883987f,  -42.794006f,
    -45.683956f,  -46.561893f,  -44.435856f,  -44.317883f,  -46.19994f,
    -46.074009f,  -45.948124f,  -42.822285f,  -42.708523f,  -46.594791f,
    -50.46505f,   -54.319324f,  -58.157642f,  -60.980026f,  -61.790516f,
    -64.597153f,  -67.391922f,  -69.174835f,  -71.949928f,  -74.713203f,
    -77.464676f,  -80.204376f,  -81.93232f,   -83.652542f,  -86.365051f,
    -86.065849f,  -85.766991f,  -86.468475f,  -87.16629f,   -89.860443f,
    -91.542923f,  -92.217758f,  -91.888977f,  -93.560593f,  -95.224594f,
    -95.880997f,  -96.533813f,  -96.18306f,   -95.832748f,  -95.48288f,
    -95.133461f,  -95.784492f,  -95.431969f,  -96.07991f,   -98.724304f,
    -99.357132f,  -99.986435f,  -98.612228f,  -95.242538f,  -96.885376f,
    -98.520676f,  -100.148453f, -98.768723f,  -97.393524f,  -99.022858f,
    -104.644684f, -109.242981f, -110.821793f, -109.393188f, -111.969208f,
    -113.533806f, -114.091019f, -113.644867f, -112.199371f, -112.758545f,
    -112.314362f, -108.870834f, -104.439995f, -101.025841f, -98.624336f,
    -97.231453f,  -93.84317f,   -89.467506f,  -87.108459f,  -84.75798f,
    -82.416061f,  -76.082687f,  -72.773895f,  -69.477615f,  -67.193832f,
    -65.918518f,  -64.647644f,  -62.38121f,   -60.123222f,  -57.873669f,
    -52.632538f,  -48.411846f,  -44.207554f,  -40.019642f,  -35.848083f,
    -30.692856f,  -26.557945f,  -23.439312f,  -21.33292f,   -18.234741f,
    -15.148773f,  -14.075001f,  -12.005386f,  -9.943932f,   -8.890625f,
    -6.841442f,   -5.800388f,   -2.763443f,   -0.738617f,   0.278114f,
    -1.709221f,   -1.688587f,   -2.668018f,   -1.643505f,   0.376926f,
    3.389275f,    6.389538f,    5.377735f,    6.369926f,    6.358086f,
    6.346226f,    9.334351f,    10.310432f,   10.282509f,   9.254593f};

}  // namespace

// TODO(bugs.webrtc.org/9076): Reduce sample rate and frame length before
// marking the issue as fixed.
// Compare HighPassFilter against the reference code.
TEST(RnnVadTest, ProcessHighPassFilterBitExactness) {
  // Read frame.
  auto samples_reader = CreatePcmSamplesReader(kFrameSize10ms48kHz);
  std::array<float, kFrameSize10ms48kHz> samples;
  samples_reader.first->SeekForward(18 * kFrameSize10ms48kHz);
  samples_reader.first->ReadChunk({samples.data(), samples.size()});
  ASSERT_EQ(samples[0], 27);

  // Init HPF.
  BiQuadFilter hpf({-1.99599, 0.99600, 1, -2, 1});

  // TODO(https://bugs.webrtc.org/8948): Add when the issue is fixed.
  // FloatingPointExceptionObserver fpe_observer;

  // Not in-place.
  hpf.SetState(kHpfInitialState48kHz);
  std::array<float, kFrameSize10ms48kHz> samples_filtered;
  hpf.ProcessFrame({samples}, {samples_filtered});
  ExpectNearAbsolute({kExpectedHpFilterOutput}, {samples_filtered}, 3e-6f);

  // In-place.
  hpf.SetState(kHpfInitialState48kHz);
  hpf.ProcessFrame({samples}, {samples});
  ExpectNearAbsolute({kExpectedHpFilterOutput}, {samples}, 3e-6f);
}

}  // namespace test
}  // namespace rnn_vad
}  // namespace webrtc
