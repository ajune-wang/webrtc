{
  "comments": [
    {
      "key": {
        "uuid": "844f1162_cf824369",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-10-23T11:57:47Z",
      "side": 1,
      "message": "IIRC this line should be at most 72 characters long.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 81
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6e6b38b_fb2c9222",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-10-23T13:50:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "844f1162_cf824369",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 81
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71fa191a_b146da17",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 436,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-10-23T10:10:20Z",
      "side": 1,
      "message": "Is this needed? From the code I cannot see that.",
      "range": {
        "startLine": 434,
        "startChar": 0,
        "endLine": 436,
        "endChar": 3
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6b7b0ee_1382cb60",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 436,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-10-23T13:50:28Z",
      "side": 1,
      "message": "Looks like it used to include rtc_base/win32.h",
      "parentUuid": "71fa191a_b146da17",
      "range": {
        "startLine": 434,
        "startChar": 0,
        "endLine": 436,
        "endChar": 3
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2596a13_0537590f",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 444,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-10-23T10:10:20Z",
      "side": 1,
      "message": ".h and .cc files should come in pairs (see: https://webrtc.googlesource.com/src/+/HEAD/style-guide.md#h-cc-pairs).\n\nWhy do we need the fileutils_override_api?",
      "range": {
        "startLine": 439,
        "startChar": 0,
        "endLine": 444,
        "endChar": 1
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55d2257f_94929f57",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 444,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-10-23T11:37:13Z",
      "side": 1,
      "message": "Hmm. What Artem is trying to achieve is to isolate the things we want to replace into a single target, so we can replace it with a different implementation downstream. He just wants to replace the .cc file, however. If he pairs up the .h and .cc and we replace the target, the replaced target needs to have the .h, or otherwise we break layering.\n\nI think this might be a reasonable place to break the .h/.cc pair rule. Otherwise the only solution is a runtime solution where fileutils behavior is overridden at the start of each downstream test main. I think the latter would probably work fine but is prone to breaking if we add new mains. I think breaking the .h/.cc pair rule is the lesser evil since it\u0027s a small test--only target deep in the guts of WebRTC.",
      "parentUuid": "e2596a13_0537590f",
      "range": {
        "startLine": 439,
        "startChar": 0,
        "endLine": 444,
        "endChar": 1
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5ab75bc_728eb2da",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 444,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-10-23T11:39:22Z",
      "side": 1,
      "message": "We talked about this by person. Yes, I agree it is ok to keep them separated in this situation.\n\nIIUC we can add:\n\n  visibility \u003d [\n    \":fileutils\",\n  ]\n\nAlso on the \"fileutils_override\" below, this will keep them isolated from the rest.",
      "parentUuid": "e2596a13_0537590f",
      "range": {
        "startLine": 439,
        "startChar": 0,
        "endLine": 444,
        "endChar": 1
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a83cdf7d_2b3afca9",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 444,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-10-23T13:50:28Z",
      "side": 1,
      "message": "It should be visible also for downstreams.",
      "parentUuid": "e5ab75bc_728eb2da",
      "range": {
        "startLine": 439,
        "startChar": 0,
        "endLine": 444,
        "endChar": 1
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddcbee5c_4e67c21d",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 446,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-10-23T11:37:13Z",
      "side": 1,
      "message": "perhaps fileutils_impl? fileutils_overridable?",
      "range": {
        "startLine": 446,
        "startChar": 26,
        "endLine": 446,
        "endChar": 34
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a80e2f4_497142d4",
        "filename": "test/BUILD.gn",
        "patchSetId": 4
      },
      "lineNbr": 446,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-10-23T13:50:28Z",
      "side": 1,
      "message": "what about fileutils_override_impl?",
      "parentUuid": "ddcbee5c_4e67c21d",
      "range": {
        "startLine": 446,
        "startChar": 26,
        "endLine": 446,
        "endChar": 34
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adbe890a_faeba5b4",
        "filename": "test/testsupport/fileutils_override.cc",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 5087
      },
      "writtenOn": "2018-10-23T11:57:47Z",
      "side": 1,
      "message": "In general, I think that returning true/false and using an output parameter is a better interface for a function.\n\nFor example, it will be easier to think at false as something wrong. While in this case there is a magic value (kCannotFindProjectRootDir) that will tell us if the value is good or not.",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 77
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a47c1cdf_ed0087ed",
        "filename": "test/testsupport/fileutils_override.cc",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 6337
      },
      "writtenOn": "2018-10-23T13:50:28Z",
      "side": 1,
      "message": "It is moved from origin fileutils.cc",
      "parentUuid": "adbe890a_faeba5b4",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 77
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9017990_36fbd1b7",
        "filename": "test/testsupport/fileutils_override.cc",
        "patchSetId": 4
      },
      "lineNbr": 71,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-10-23T13:52:16Z",
      "side": 1,
      "message": "FTR I agree with Mirko - returning this is pretty ridiculous, but not high priority to fix.",
      "parentUuid": "a47c1cdf_ed0087ed",
      "range": {
        "startLine": 71,
        "startChar": 0,
        "endLine": 71,
        "endChar": 77
      },
      "revId": "7d9ec433de9dcf26496b8a9880b7b85d8a03d48d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}