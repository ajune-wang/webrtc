{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fb8b623f_ae44982d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 15
      },
      "lineNbr": 0,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Thanks for this CL!\nIt really achieves the feat of paving a path towards changing the nested vector data structure in a way that improves the code overall and does not cause a huge amount of code changes.\n\nI have some specific questions on the code and two more general questions:\n-Have this been tested for bitexactness.\n-Do we need to do any benchmarking to ensure we don\u0027t regress computationally? (I don\u0027t see anything that could cause such regressions but maybe good to also test?)\n",
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e697a1_ea941177",
        "filename": "modules/audio_processing/aec3/alignment_mixer.cc",
        "patchSetId": 15
      },
      "lineNbr": 75,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Is this necessary? \nTo me it seems like we use input_channels_ only to achieve a nice call to Downmix which seems a bit backwards.\n\nCan\u0027t we instead change Downmix to avoid the pre-setup of input_channels_?",
      "range": {
        "startLine": 71,
        "startChar": 2,
        "endLine": 75,
        "endChar": 3
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4f13d0d_8a8257dd",
        "filename": "modules/audio_processing/aec3/alignment_mixer.cc",
        "patchSetId": 15
      },
      "lineNbr": 118,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Why can\u0027t we do a memcopy here?",
      "range": {
        "startLine": 116,
        "startChar": 2,
        "endLine": 118,
        "endChar": 3
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af0e2aa9_bd08cba0",
        "filename": "modules/audio_processing/aec3/block.h",
        "patchSetId": 15
      },
      "lineNbr": 53,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "I think it would be good to specify in more detail what data is actually accessed. I.e., An array to the actual 64 samples for a specific band and channel",
      "range": {
        "startLine": 53,
        "startChar": 2,
        "endLine": 53,
        "endChar": 35
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c264158c_b8db54b2",
        "filename": "modules/audio_processing/aec3/block.h",
        "patchSetId": 15
      },
      "lineNbr": 54,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Is there a need to access the raw pointer? Can\u0027t we always access the view? And if needed, retrieve the raw-pointer from that?\n\nWe could, add it as a intermediate solution to reduce the size of the CL, but it does not feel right to provide raw-pointer access into the data if we don\u0027t need to.",
      "range": {
        "startLine": 54,
        "startChar": 2,
        "endLine": 54,
        "endChar": 8
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98af419d_14eb9f2f",
        "filename": "modules/audio_processing/aec3/block.h",
        "patchSetId": 15
      },
      "lineNbr": 63,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Can we make this return\n rtc::ArrayView\u003cfloat,kBlockSize\u003e?\n \n (same below)",
      "range": {
        "startLine": 63,
        "startChar": 2,
        "endLine": 63,
        "endChar": 23
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99c99635_07c7b85c",
        "filename": "modules/audio_processing/aec3/block.h",
        "patchSetId": 15
      },
      "lineNbr": 75,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Does this have to be std::vector?\nOr can we already now change this to \nstd::vector\u003cstd::vector\u003cstd::array\u003cfloat,kBlockSize\u003e\u003e\u003e data_;",
      "range": {
        "startLine": 75,
        "startChar": 26,
        "endLine": 75,
        "endChar": 44
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7006d03e_d073f307",
        "filename": "modules/audio_processing/aec3/suppression_filter.cc",
        "patchSetId": 15
      },
      "lineNbr": 124,
      "author": {
        "id": 5125
      },
      "writtenOn": "2022-05-18T09:18:41Z",
      "side": 1,
      "message": "Here is an example where I would prefer using\nfloat* e0 \u003d e-\u003eView(/*band\u003d*/0, ch).data();\n\nand not expose a FloatArray() method\n\nI definitely agree that that is more cumbersome codewise initially, but it sets the stage for follow-up changes where the data is not accessed via raw-pointers.\n\nIf we add a FloatArray() method, it invites the use of raw-pointer access.",
      "range": {
        "startLine": 124,
        "startChar": 4,
        "endLine": 124,
        "endChar": 46
      },
      "revId": "020e1b9872795bebdc6ee12dd18a36686bbe4b53",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}