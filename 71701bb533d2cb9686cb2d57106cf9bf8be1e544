{
  "comments": [
    {
      "key": {
        "uuid": "3e481a66_c94f1029",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 7036
      },
      "writtenOn": "2019-02-04T19:37:17Z",
      "side": 1,
      "message": "The spec says otherwise here: \"If the number of RTCRtpEncodingParameters now stored in sendEncodings is 1, then remove any rid member from the lone entry.\"\n\nAlso, you should check we have at most kMaxSimulcastStreams and remove excess layers above that: \"Let maxN be the maximum number of total simultaneous encodings the user agent may support for this kind, at minimum 1.This should be an optimistic number since the codec to be used is not known yet.\n\nIf the number of RTCRtpEncodingParameters stored in sendEncodings exceeds maxN, then trim sendEncodings from the tail until its length is maxN.\"",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a11d4a36_98298591",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 1475,
      "author": {
        "id": 8244
      },
      "writtenOn": "2019-02-04T19:56:01Z",
      "side": 1,
      "message": "Few issues here.\n1. Using a single RID\nThe spec is somewhat contradictory in this case.\nOn one hand it says that a if a RID is supplied it must be used.\nOn the other hand it says that a single RID should not be communicated in the SDP.\nI understand this to mean that the user of PeerConnection can supply a single RID and it should be reflected in the parameters but not actually sent. It is currently not possible to achieve this without significant refactoring (or hacks) because of the channel implementation and conflicts with Plan-B semantics.\nRemoving the RID from the given parameters feels wrong to me (vs. informing the user that they should do it themselves), especially since |RtpTransceiverInit| is const.\nThis is also why i chose not to generate RIDs if they are not supplied at the moment.\n2. kMaxSimulcastStreams\nI didn\u0027t realize that this was an API thing, i thought it would be up to the media engine to understand its capabilities and drop from the tail if necessary.\nSince this const is in the API directory, do you think that this should return INVALID_PARAMETER or drop the layers? dropping the layers goes against the const argument in #1.\n\nWDYT? interested in hearing more feedback on this.",
      "parentUuid": "3e481a66_c94f1029",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "638bf62c_e92c00d4",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 1
      },
      "lineNbr": 3048,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "associated",
      "range": {
        "startLine": 3048,
        "startChar": 60,
        "endLine": 3048,
        "endChar": 68
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86c89ec8_8047ecee",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "What do you think about an std::vector of std::pair?",
      "range": {
        "startLine": 74,
        "startChar": 43,
        "endLine": 75,
        "endChar": 74
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c3299bd_34abbe5d",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "up to you: another option is to define a custom PeerConnectionWrapper with your overload of AddTransceiver.",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3278b690_739e2773",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 116,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "A pattern I sometimes use is to return a boolean then EXPECT_TRUE in the actual test so if you have two calls to this function you can tell which one failed.",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "31606e4b_1983a2d0",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "unused",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec1e6265_2258b1e4",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 152,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Verify the error type?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "89620d5e_62f652fd",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "ASSERT_TRUE",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a03ea257_8ba841d6",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Don\u0027t really have to check this tbh",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953ac511_503b95fb",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 202,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "or this",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0dfbd43f_5545cc1b",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 228,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Convention in other tests is caller/callee.\n\nI don\u0027t really like either of the options.\n\nPerhaps the lesser of evils is \"local/remote\". What do you think?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53ddb235_7485e034",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "Should this happen before SLD?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b6306de_932083a0",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 351,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "EXPECT_TRUE?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b3ba2cc_1ffb52be",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 355,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "it\u0027s not really recycling but rather associating",
      "range": {
        "startLine": 355,
        "startChar": 55,
        "endLine": 355,
        "endChar": 62
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc165485_8bdfeb19",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 371,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "expect that size is 2",
      "range": {
        "startLine": 371,
        "startChar": 32,
        "endLine": 371,
        "endChar": 47
      },
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2386a36e_727fee30",
        "filename": "pc/peer_connection_simulcast_unittest.cc",
        "patchSetId": 1
      },
      "lineNbr": 373,
      "author": {
        "id": 5039
      },
      "writtenOn": "2019-02-05T02:21:05Z",
      "side": 1,
      "message": "EXPECT_TRUE?",
      "revId": "71701bb533d2cb9686cb2d57106cf9bf8be1e544",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}