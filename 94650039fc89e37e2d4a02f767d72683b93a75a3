{
  "comments": [
    {
      "key": {
        "uuid": "26d798a6_ca8da144",
        "filename": "api/video_codecs/video_encoder_software_fallback_wrapper.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-10T08:54:09Z",
      "side": 1,
      "message": "Or \u003d absl::nullopt.",
      "range": {
        "startLine": 199,
        "startChar": 26,
        "endLine": 199,
        "endChar": 35
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfc6a572_5f5210ba",
        "filename": "api/video_codecs/video_encoder_software_fallback_wrapper.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-04-10T08:59:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "26d798a6_ca8da144",
      "range": {
        "startLine": 199,
        "startChar": 26,
        "endLine": 199,
        "endChar": 35
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6976c61a_f58ea534",
        "filename": "api/video_codecs/video_encoder_software_fallback_wrapper.cc",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-10T09:19:52Z",
      "side": 1,
      "message": "But not yet uploaded?",
      "parentUuid": "dfc6a572_5f5210ba",
      "range": {
        "startLine": 199,
        "startChar": 26,
        "endLine": 199,
        "endChar": 35
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "893c4abc_141caf34",
        "filename": "media/engine/simulcast_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 508,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-10T08:54:09Z",
      "side": 1,
      "message": "Should this block really be inside the i \u003c kMaxTemporalStreams loop? \n\nCould also add a comment on the intended split of bandwidth_allocation.",
      "range": {
        "startLine": 498,
        "startChar": 0,
        "endLine": 508,
        "endChar": 7
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67f3c1cf_bcc43c5c",
        "filename": "media/engine/simulcast_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 508,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-04-10T08:59:57Z",
      "side": 1,
      "message": "Yeah, I forgot to clean up this class. Just uploaded a new patch where this is fixed and a test added.",
      "parentUuid": "893c4abc_141caf34",
      "range": {
        "startLine": 498,
        "startChar": 0,
        "endLine": 508,
        "endChar": 7
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "425a4fa3_c8e768f4",
        "filename": "media/engine/simulcast_encoder_adapter.cc",
        "patchSetId": 5
      },
      "lineNbr": 508,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-10T09:19:52Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "67f3c1cf_bcc43c5c",
      "range": {
        "startLine": 498,
        "startChar": 0,
        "endLine": 508,
        "endChar": 7
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aef1cb08_c5d315a7",
        "filename": "modules/video_coding/codecs/test/videoprocessor_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-10T08:54:09Z",
      "side": 1,
      "message": "I think there should be some matcher (::testing::Field?) that lets you check expected value of a struct member, without using Invoke.",
      "range": {
        "startLine": 132,
        "startChar": 1,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0ce011f_4adbdadf",
        "filename": "modules/video_coding/codecs/test/videoprocessor_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 5524
      },
      "writtenOn": "2019-04-10T08:59:57Z",
      "side": 1,
      "message": "Right, Property\nI used below, but I changed that since I\u0027m checking several fields of that struct, and so use Invoke everywhere here for consistency. Can change here if you think that\u0027s better.",
      "parentUuid": "aef1cb08_c5d315a7",
      "range": {
        "startLine": 132,
        "startChar": 1,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b778a514_998a49c6",
        "filename": "modules/video_coding/codecs/test/videoprocessor_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 134,
      "author": {
        "id": 5234
      },
      "writtenOn": "2019-04-10T09:19:52Z",
      "side": 1,
      "message": "I guess it\u0027s more gtest/gmock style to use testing::AllOf and testing::Property / Field to check multiple fields. Give it a try and see if you think that is more readable? Example usage here:\n\nhttps://cs.chromium.org/chromium/src/third_party/webrtc/modules/rtp_rtcp/source/rtcp_receiver_unittest.cc?rcl\u003df4770401dc296637adb7aec2c8c2b80b65fc94b8\u0026l\u003d1151",
      "parentUuid": "c0ce011f_4adbdadf",
      "range": {
        "startLine": 132,
        "startChar": 1,
        "endLine": 134,
        "endChar": 42
      },
      "revId": "94650039fc89e37e2d4a02f767d72683b93a75a3",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}