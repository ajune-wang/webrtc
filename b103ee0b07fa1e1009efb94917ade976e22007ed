{
  "comments": [
    {
      "key": {
        "uuid": "fc3e6885_7a189c85",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-15T14:54:59Z",
      "side": 1,
      "message": "Try to think of a better name. I think we want to kill the video_coding namespace at some point, so don\u0027t rely on that to provide uniqueness or context.",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 15
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1c086c1c_355645b8",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T15:16:36Z",
      "side": 1,
      "message": "Yes, we want to get rid of the video_coding namespace. WDYT about webrtc::FrameKey or webrtc::FrameId?",
      "parentUuid": "fc3e6885_7a189c85",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 15
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "66f348b8_7a7cd02a",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-16T08:09:26Z",
      "side": 1,
      "message": "FrameId is in the right direction, since VP9 terminology seems to be that one \"picture\" (identified picture_id) consists of several \"frames\".\n\nBut FrameId is still bit too generic. Is there any way this can be used on the send side? For a top-level class I\u0027d suggest something fairly verbose, maybe something like webrtc::VideoFrameReceiveId or webrtc::DecodedVideoFrameId.",
      "parentUuid": "1c086c1c_355645b8",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 15
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1464816b_a9e759a0",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 20,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-16T11:37:31Z",
      "side": 1,
      "message": "Just realized it is somewhat confusing to have Id as part of the name since picture_id is one of its members. I think FrameKey is better than FrameId because of that.",
      "parentUuid": "66f348b8_7a7cd02a",
      "range": {
        "startLine": 20,
        "startChar": 7,
        "endLine": 20,
        "endChar": 15
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ba1cfb86_1e2da704",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-15T14:54:59Z",
      "side": 1,
      "message": "Do you need the default constructor? It\u0027s nicer if all instances are properly initialized. If you need to initialize it to some \"unset\" values where used in EncodedFrame, you could initialize them explicitly in that class\u0027 constructor.",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bb3f9d3b_dd53dd9a",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-15T15:16:36Z",
      "side": 1,
      "message": "It is convenient to have a default constructor since you can\u0027t always know which picture id/spatial layer a frame has until later in the pipeline.",
      "parentUuid": "ba1cfb86_1e2da704",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2410f5_39a40de2",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-03-16T08:09:26Z",
      "side": 1,
      "message": "I\u0027d suggest still taking it out from the api. You can add a |: frame_key_(-1, 0)| to the EncodedFrame constructor, if you need to construct it before these things are known.",
      "parentUuid": "bb3f9d3b_dd53dd9a",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a46a3d99_c442560a",
        "filename": "api/video/encoded_frame.h",
        "patchSetId": 3
      },
      "lineNbr": 21,
      "author": {
        "id": 5527
      },
      "writtenOn": "2018-03-16T11:37:31Z",
      "side": 1,
      "message": "It is used internally, added a TODO about it.",
      "parentUuid": "ab2410f5_39a40de2",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 12
      },
      "revId": "b103ee0b07fa1e1009efb94917ade976e22007ed",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}