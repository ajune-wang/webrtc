{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9c2a1b42_bca27e93",
        "filename": "video/rtp_video_stream_receiver2.h",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-05-10T12:39:55Z",
      "side": 1,
      "message": "This method returns a const ref, while the various GetRtpExtensionMap methods return it by value.\n\nA bit confusing, is it intended to be returned without copying or constructing it?",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 182,
        "endChar": 56
      },
      "revId": "ed1d8881d7b30f3c626aebe1d56597ddf2c0d760",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c88891f2_863dedd6",
        "filename": "video/rtp_video_stream_receiver2.h",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 5508
      },
      "writtenOn": "2022-05-10T13:25:40Z",
      "side": 1,
      "message": "Yes, in this case since it\u0027s a non-virtual method and the implementation is very specific, returning a const ref is lower overhead than the by-value variant.\n\nThe virtual method returns a copy by necessity because the audio path doesn\u0027t (yet) keep a map around. So as far as audio packets goes, we still construct a new map from the rtp extension vector for every rtp packet, but for video packets, we create a cheap copy via the copy ctor.",
      "parentUuid": "9c2a1b42_bca27e93",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 182,
        "endChar": 56
      },
      "revId": "ed1d8881d7b30f3c626aebe1d56597ddf2c0d760",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c6710a1_51bf2c4d",
        "filename": "video/rtp_video_stream_receiver2.h",
        "patchSetId": 5
      },
      "lineNbr": 182,
      "author": {
        "id": 5234
      },
      "writtenOn": "2022-05-10T13:30:33Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "c88891f2_863dedd6",
      "range": {
        "startLine": 182,
        "startChar": 0,
        "endLine": 182,
        "endChar": 56
      },
      "revId": "ed1d8881d7b30f3c626aebe1d56597ddf2c0d760",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1"]}
      },
      "patchSetCommitId": "ed1d8881d7b30f3c626aebe1d56597ddf2c0d760",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ed1d8881d7b30f3c626aebe1d56597ddf2c0d760",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}