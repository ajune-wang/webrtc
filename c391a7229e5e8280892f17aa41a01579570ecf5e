{
  "comments": [
    {
      "key": {
        "uuid": "26c8e6fe_4d778192",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-07-30T22:49:42Z",
      "side": 1,
      "message": "api/ isn\u0027t supposed to depend on things not in the API. Can this file be moved from rtc_base/ to api/ ?",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9edf643_64d83c5b",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-07-31T01:15:58Z",
      "side": 1,
      "message": "At first I was thinking of placing this file to p2p/base, given that portallocator.h and also packetsocketfactory.h are both there, but there seems to be other problems in either place 1) PeerConnectionDependencies will need it, 2) AsyncResolver depends on things like sigslot.\n\nMaybe forward declaration of AsyncResolver?",
      "parentUuid": "26c8e6fe_4d778192",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e09d652_6bf3d4d4",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-07-31T22:39:55Z",
      "side": 1,
      "message": "Not sure what the best thing to do here is.\n\nasyncresolverinterface.h depends on rtc_base/socketaddress.h and rtc_base/third_party/sigslot/sigslot.h, so just moving asyncresolverinterface wouldn\u0027t do much.\n\nrtc_base shows up a lot in api/: https://cs.chromium.org/search/?q\u003df:webrtc/api+rtc_base\u0026sq\u003dpackage:chromium\u0026type\u003dcs\n\nA forward declaration just hides the dependency, so I would avoid that.\n\nI would prefer to punt on this to avoid churn unless there is a documented best practice somewhere I am missing.",
      "parentUuid": "e9edf643_64d83c5b",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "838cc65d_f149df84",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 14,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-08-01T00:18:25Z",
      "side": 1,
      "message": "Ok, I think leaving it as is for now is fine.",
      "parentUuid": "5e09d652_6bf3d4d4",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7354729a_4d7140b8",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-07-30T22:49:42Z",
      "side": 1,
      "message": "Use the webrtc namespace for new things.",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8c74752_a29cf597",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 16,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-07-31T22:39:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7354729a_4d7140b8",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c84d08e7_7b390b4e",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-07-30T22:49:42Z",
      "side": 1,
      "message": "Maybe give some background here: This is used by WebRTC clients to provide DNS resolving functionality to the WebRTC implementation.",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25d5e395_06fe6591",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-07-31T22:39:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c84d08e7_7b390b4e",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "223f2f19_0d98503b",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-07-30T22:49:42Z",
      "side": 1,
      "message": "AsyncResolverFactoryInterface?",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92077ad4_32790168",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 6646
      },
      "writtenOn": "2018-07-31T01:15:58Z",
      "side": 1,
      "message": "I am not sure about the naming either. It seems we do not have a consistent naming convention on interfaces shared by WebRTC and Chromium, e.g. PacketSocketFactory and PortAllocator. Maybe we can come up with a consensus how we interpret https://google.github.io/styleguide/cppguide.html#Interfaces.",
      "parentUuid": "223f2f19_0d98503b",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d9e2676_af67984c",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-07-31T22:39:55Z",
      "side": 1,
      "message": "We currently have pure interfaces using both styles:\n1) ortcfactoryinterface.h, callfactoryinterface.h.\n2) audio_encoder_factory.h, audio_decoder_factory.h, video_encoder_factory.h, video_decoder_factory.h\n\nI have no strong preference.",
      "parentUuid": "92077ad4_32790168",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85db7591_1442de01",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-08-01T00:18:25Z",
      "side": 1,
      "message": "Ah, that gives me hope. I\u0027m fine with how it is.",
      "parentUuid": "9d9e2676_af67984c",
      "range": {
        "startLine": 19,
        "startChar": 6,
        "endLine": 19,
        "endChar": 26
      },
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d3b879f_14aa7407",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-07-30T22:49:42Z",
      "side": 1,
      "message": "Hmm, that is surprising behavior.",
      "range": {
        "startLine": 24,
        "startChar": 28,
        "endLine": 24,
        "endChar": 52
      },
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a9e2afa_06e7707f",
        "filename": "api/asyncresolverfactory.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-07-31T22:39:55Z",
      "side": 1,
      "message": "I agree. I think the root surprise is \"class AsyncResolver : public SignalThread\" (https://cs.chromium.org/chromium/src/third_party/webrtc/rtc_base/nethelpers.h?q\u003dasyncresolver\u0026sq\u003dpackage:chromium\u0026g\u003d0\u0026l\u003d32).\n\nI think changing this is out of scope here.",
      "parentUuid": "6d3b879f_14aa7407",
      "range": {
        "startLine": 24,
        "startChar": 28,
        "endLine": 24,
        "endChar": 52
      },
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3f73ae05_70886f23",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-07-30T22:49:42Z",
      "side": 1,
      "message": "Could add a (temporary) shim that takes a PortAllocator and exposes the CreateAsyncResolver as an implementation of AsyncResolverFactory. PeerConnectionFactory would supply that if a specific resolver factory is not specified.",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83acfc45_fab4e641",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 5281
      },
      "writtenOn": "2018-07-31T22:39:55Z",
      "side": 1,
      "message": "This was what I was thinking for Proposal A in my doc. We could go this way, but I\u0027m not sure what the advantage would be.",
      "parentUuid": "3f73ae05_70886f23",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71856c31_4faeabc4",
        "filename": "pc/peerconnection.h",
        "patchSetId": 1
      },
      "lineNbr": 931,
      "author": {
        "id": 5039
      },
      "writtenOn": "2018-08-01T00:18:25Z",
      "side": 1,
      "message": "The advantage is that the P2PTransportChannel can start right away assuming that the AsyncResolverFactory is provided. But if that\u0027s not so important then no need to change it.",
      "parentUuid": "83acfc45_fab4e641",
      "revId": "c391a7229e5e8280892f17aa41a01579570ecf5e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}