{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e823bd5d_b9b12d29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T11:22:57Z",
      "side": 1,
      "message": "As discussed in the bug report, I split the SupportedH264Codecs() function into two separate ones for decoding and encoding support. Tested using our in house app that uses High Predictive 4:4:4 as well as https://webrtc.github.io/samples/src/content/peerconnection/change-codecs/ and everything is working as expected.",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03ce0067_5a933287",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2021-10-15T12:34:02Z",
      "side": 1,
      "message": "@stefan, please RS LGTM this. The PS#1 is a reland of already approved by you change (which got reverted due internal build failures, which I\u0027ve fixed).",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1ba010d7_e25e8922",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T12:35:17Z",
      "side": 1,
      "message": "LGTM. ðŸ˜Š",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a06d97a4_1430f9f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T12:36:15Z",
      "side": 1,
      "message": "It just occurred to me that you meant Stefan Holmer...",
      "parentUuid": "1ba010d7_e25e8922",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ef3428b6_9b15b445",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5117
      },
      "writtenOn": "2021-10-15T12:43:05Z",
      "side": 1,
      "message": "The PeerConnectionE2EQualityTestSmokeTest.Smoke seems to be failing consistently.\n\nYou can run it locally by entering:\n./out/Default/test_support_unittests --gtest_filter\u003d*PeerConnectionE2EQualityTestSmokeTest.Smoke*\n\nIf there\u0027s no such executable in the output directory, then you need to either build \"all\" or \"test_support_unittests\" explicitly with ninja command.\n",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "81a8133e_63b18031",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T18:59:55Z",
      "side": 1,
      "message": "This one was kind of tricky to track down, but I think I got it now. I just don\u0027t know what is the root cause yet. \n\nIn short, when we create a union of supported send and receive codecs there are different codecs with the same ID in the union. In this case, since we populate the union with the send codecs at the front, when we are calling MediaSessionDescriptionFactory::GetCodecsForOffer(...) -\u003e MergeCodecs\u003cVideoCodec\u003e(...) -\u003e GetAssociatedCodecForRtx(...) -\u003e FindCodecById(...) (chain starts at media_session.cc:2080) the first codec with the requested id gets associated to the RTX entry, which might not be the right one.\n\nThe issue is kind of hard to explain without giving an example but I would be happy to do a vide call with someone to try and explain it better.\n\nAlso, I have no idea yet how and why this works without the separate SupportedH264Encoder/Decoder lists but I am guessing it has something to do with the asymmetrical number of available codecs between send and receive, which in my current test runs is always 6 (20 vs 26 respectively).\n\nHope this makes any sense. I will try and figure out the root cause but it might take me some time as I am not that familiar with this code base.",
      "parentUuid": "ef3428b6_9b15b445",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ce81239d_5c2b496a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T18:59:55Z",
      "side": 1,
      "message": "Still investigating the problem that is causing the tests to fail but I have an update.",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8772c4b5_ea922795",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T23:31:09Z",
      "side": 1,
      "message": "I think I got it.\nThe main problem here is that we are generating the codec IDs for send and receive codecs separately but using the same ID range (35 to 63 for the lower range and 96 to 127 for the upper range, GetPayloadTypesAndDefaultCodecs(...) function.\n\nThis will give us a set of send and receive codecs each, but each set would have an overlap of N IDs in the lower range and M IDs in the upper range corresponding to the lower number of allocated IDs per set, respectively.\n\nThis problem get\u0027s shadowed over by our MediaSessionDescriptionFactory::ComputeVideoCodecsIntersectionAndUnion() method.\nFor the creation of the union, this method checks, using the FindMatchingCodec(...) function, if the codec is already in the union and adds it if it is not.\nThis removes all the codecs with duplicate codec IDs if the sending and receiving codec sets are symmetrical.\nBut if they are not, as is the case since we have VP9 profile-level-1 and H264 High Predictive 4:4:4 profiles in the receive set but not in the send set, they get added to the tail of the union.\n\nNow the consequences of this are only seen when we call WebRtcVideoChannel::MapCodecs(...).\nLets say that we have a codec from the send set with an ID of 99 and an associated RTX of 100. And we also have a codec from the receive set with an ID of 100, that has an associated RTX codec with an ID of 101 and an APT\u003d100.\nWhen this method checks if each RTX is mapped to a regular video codec or RED codec it does a simple std::find(...) over the vector holding the set, which results in it finding the first codec with the ID of 100, pointing to an RTX entry, which fails the test.\n\nThis problem just surfaced because we added two new codecs that are only supported on the receive side, but was present even with the VP9 profile-level-1 codec which can be seen in the data I have provided at the bottom of this message.\n\nYou can find a printout of the all_video_codecs_ and video_sendrecv_codecs_ data sets representing the union and the intersection respectively at the bottom of this message.\n\nI see two possible solutions to this:\n- Keep track of the already assigned IDs, which would solve the root cause of the problem.\n- Reassign the IDs when we are calculating the union of the data sets and make sure to point the right RTX to the right codec.\n\nAny suggestions on how to solve this are, as always, more than welcome.\nI would also be more than happy to discuss this on a call as it requires a wall of text that could be hard to follow otherwise.\n\n################################## DATA DUMP #####################################\n(media_session.cc:2940): all_video_codecs_ ###############################\n(media_session.cc:2943): id: 96 name: VP8\n(media_session.cc:2948):\n(media_session.cc:2943): id: 97 name: rtx\n(media_session.cc:2946): apt\u003d96\n(media_session.cc:2948):\n(media_session.cc:2943): id: 98 name: VP9\n(media_session.cc:2946): profile-id\u003d0\n(media_session.cc:2948):\n(media_session.cc:2943): id: 99 name: rtx\n(media_session.cc:2946): apt\u003d98\n(media_session.cc:2948):\n(media_session.cc:2943): id: 100 name: VP9\n(media_session.cc:2946): profile-id\u003d2\n(media_session.cc:2948):\n(media_session.cc:2943): id: 101 name: rtx\n(media_session.cc:2946): apt\u003d100\n(media_session.cc:2948):\n(media_session.cc:2943): id: 102 name: H264\n(media_session.cc:2946): level-asymmetry-allowed\u003d1\n(media_session.cc:2946): packetization-mode\u003d1\n(media_session.cc:2946): profile-level-id\u003d42001f\n(media_session.cc:2948):\n(media_session.cc:2943): id: 103 name: rtx\n(media_session.cc:2946): apt\u003d102\n(media_session.cc:2948):\n(media_session.cc:2943): id: 104 name: H264\n(media_session.cc:2946): level-asymmetry-allowed\u003d1\n(media_session.cc:2946): packetization-mode\u003d0\n(media_session.cc:2946): profile-level-id\u003d42001f\n(media_session.cc:2948):\n(media_session.cc:2943): id: 105 name: rtx\n(media_session.cc:2946): apt\u003d104\n(media_session.cc:2948):\n(media_session.cc:2943): id: 106 name: H264\n(media_session.cc:2946): level-asymmetry-allowed\u003d1\n(media_session.cc:2946): packetization-mode\u003d1\n(media_session.cc:2946): profile-level-id\u003d42e01f\n(media_session.cc:2948):\n(media_session.cc:2943): id: 107 name: rtx\n(media_session.cc:2946): apt\u003d106\n(media_session.cc:2948):\n(media_session.cc:2943): id: 108 name: H264\n(media_session.cc:2946): level-asymmetry-allowed\u003d1\n(media_session.cc:2946): packetization-mode\u003d0\n(media_session.cc:2946): profile-level-id\u003d42e01f\n(media_session.cc:2948):\n(media_session.cc:2943): id: 109 name: rtx\n(media_session.cc:2946): apt\u003d108\n(media_session.cc:2948):\n(media_session.cc:2943): id: 35 name: AV1\n(media_session.cc:2948):\n(media_session.cc:2943): id: 36 name: rtx\n(media_session.cc:2946): apt\u003d35\n(media_session.cc:2948):\n(media_session.cc:2943): id: 110 name: red\n(media_session.cc:2948):\n(media_session.cc:2943): id: 111 name: rtx\n(media_session.cc:2946): apt\u003d110\n(media_session.cc:2948):\n(media_session.cc:2943): id: 112 name: ulpfec\n(media_session.cc:2948):\n(media_session.cc:2943): id: 37 name: flexfec-03\n(media_session.cc:2946): repair-window\u003d10000000\n(media_session.cc:2948):\n(media_session.cc:2943): id: 102 name: VP9\n(media_session.cc:2946): profile-id\u003d1\n(media_session.cc:2948):\n(media_session.cc:2943): id: 103 name: rtx\n(media_session.cc:2946): apt\u003d102\n(media_session.cc:2948):\n(media_session.cc:2943): id: 35 name: H264\n(media_session.cc:2946): level-asymmetry-allowed\u003d1\n(media_session.cc:2946): packetization-mode\u003d1\n(media_session.cc:2946): profile-level-id\u003df4001f\n(media_session.cc:2948):\n(media_session.cc:2943): id: 36 name: rtx\n(media_session.cc:2946): apt\u003d35\n(media_session.cc:2948):\n(media_session.cc:2943): id: 37 name: H264\n(media_session.cc:2946): level-asymmetry-allowed\u003d1\n(media_session.cc:2946): packetization-mode\u003d0\n(media_session.cc:2946): profile-level-id\u003df4001f\n(media_session.cc:2948):\n(media_session.cc:2943): id: 38 name: rtx\n(media_session.cc:2946): apt\u003d37\n(media_session.cc:2948):\n(media_session.cc:2950): video_sendrecv_codecs_ ################################\n(media_session.cc:2953): id: 96 name: VP8\n(media_session.cc:2959):\n(media_session.cc:2953): id: 97 name: rtx\n(media_session.cc:2956): apt\u003d96\n(media_session.cc:2959):\n(media_session.cc:2953): id: 98 name: VP9\n(media_session.cc:2956): profile-id\u003d0\n(media_session.cc:2959):\n(media_session.cc:2953): id: 99 name: rtx\n(media_session.cc:2956): apt\u003d98\n(media_session.cc:2959):\n(media_session.cc:2953): id: 100 name: VP9\n(media_session.cc:2956): profile-id\u003d2\n(media_session.cc:2959):\n(media_session.cc:2953): id: 101 name: rtx\n(media_session.cc:2956): apt\u003d100\n(media_session.cc:2959):\n(media_session.cc:2953): id: 102 name: H264\n(media_session.cc:2956): level-asymmetry-allowed\u003d1\n(media_session.cc:2956): packetization-mode\u003d1\n(media_session.cc:2956): profile-level-id\u003d42001f\n(media_session.cc:2959):\n(media_session.cc:2953): id: 103 name: rtx\n(media_session.cc:2956): apt\u003d102\n(media_session.cc:2959):\n(media_session.cc:2953): id: 104 name: H264\n(media_session.cc:2956): level-asymmetry-allowed\u003d1\n(media_session.cc:2956): packetization-mode\u003d0\n(media_session.cc:2956): profile-level-id\u003d42001f\n(media_session.cc:2959):\n(media_session.cc:2953): id: 105 name: rtx\n(media_session.cc:2956): apt\u003d104\n(media_session.cc:2959):\n(media_session.cc:2953): id: 106 name: H264\n(media_session.cc:2956): level-asymmetry-allowed\u003d1\n(media_session.cc:2956): packetization-mode\u003d1\n(media_session.cc:2956): profile-level-id\u003d42e01f\n(media_session.cc:2959):\n(media_session.cc:2953): id: 107 name: rtx\n(media_session.cc:2956): apt\u003d106\n(media_session.cc:2959):\n(media_session.cc:2953): id: 108 name: H264\n(media_session.cc:2956): level-asymmetry-allowed\u003d1\n(media_session.cc:2956): packetization-mode\u003d0\n(media_session.cc:2956): profile-level-id\u003d42e01f\n(media_session.cc:2959):\n(media_session.cc:2953): id: 109 name: rtx\n(media_session.cc:2956): apt\u003d108\n(media_session.cc:2959):\n(media_session.cc:2953): id: 35 name: AV1\n(media_session.cc:2959):\n(media_session.cc:2953): id: 36 name: rtx\n(media_session.cc:2956): apt\u003d35\n(media_session.cc:2959):\n(media_session.cc:2953): id: 110 name: red\n(media_session.cc:2959):\n(media_session.cc:2953): id: 111 name: rtx\n(media_session.cc:2956): apt\u003d110\n(media_session.cc:2959):\n(media_session.cc:2953): id: 112 name: ulpfec\n(media_session.cc:2959):\n(media_session.cc:2953): id: 37 name: flexfec-03\n(media_session.cc:2956): repair-window\u003d10000000\n(media_session.cc:2959):",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8084b0f3_6595819d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-10-16T10:38:51Z",
      "side": 1,
      "message": "Adding fippo, who\u0027s also been wrestling PTs for a living.\n",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fbd0ce42_88d1cad4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-10-16T11:10:57Z",
      "side": 1,
      "message": "surprising. Why is there rtx for ulpfec in the initial offer?!\n(peer_connection_quality_test.cc:622): Original offer: v\u003d0\n...\na\u003drtpmap:123 ulpfec/90000\n...\na\u003drtpmap:116 rtx/90000\na\u003dfmtp:116 apt\u003d123\n\nvideo_engine doesn\u0027t do that (see GetPayloadTypesAndDefaultCodecs)\n\nI\u0027ve submitted the change to put the new codecs into the lower range, if that helps... the problem we have about the exhaustion is not completly solved.",
      "parentUuid": "8084b0f3_6595819d",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00001eec_a719bcc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-10-17T15:54:14Z",
      "side": 1,
      "message": "This made things a bit clearer at least. When dumping the reference codecs in mediasessions MergeCodecs I see the following:\n...\n(media_session.cc:1066): REF AV1/35\n(media_session.cc:1066): REF rtx/36\n(media_session.cc:1066): REF red/110\n(media_session.cc:1066): REF rtx/111\n(media_session.cc:1066): REF ulpfec/112\n(media_session.cc:1066): REF flexfec-03/37\n(media_session.cc:1066): REF VP9/102\n(media_session.cc:1066): REF rtx/103\n(media_session.cc:1066): REF H264/35\n(media_session.cc:1066): REF rtx/36\n(media_session.cc:1066): REF H264/37\n(media_session.cc:1066): REF rtx/38\nsomewhere later in the code (mapcodecs as described above probably) the RTX codec 38 (with an apt 37) gets matched with flexfec?\n\nGetPayloadTypesAndDefaultCodecs has a \nAddH264ConstrainedBaselineProfileToSupportedFormats\nwhich is done only for the decoder factory.\nShouldn\u0027t this also be done for the two new formats (or instead of the current changes)? That might avoid the collision which gets resolved incorrectly.\n\nAlso note that the e2e test stops failing if one comments out the actual SetCodecPreferences call in PeerConnectionE2EQualityTest::SetPeerCodecPreferences.",
      "parentUuid": "fbd0ce42_88d1cad4",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3d3db69_f4eab352",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-18T16:23:10Z",
      "side": 1,
      "message": "Yes, it gets mapped to flexfec in MapCodecs(...), and that is also where the check fails.\n\nHigh Predictive 4:4:4 is not a superset of Constrained Baseline so this \"workaround\" is required. \nYou will notice that the problem also extends to VP9 profile-level-id\u003d1 as it\u0027s RTX pair gets mapped to completely different codec (in the dump I provided it gets mapped to H264). So the collision is not just exclusive to the newly added codecs. The reason it doesn\u0027t fail is because it is a valid codec and not flexfec.\n\nLink to original post with data in case you missed it, took me a minute to find it myself as I am now to Gerrit :) : https://webrtc-review.googlesource.com/c/src/+/235340/comments/8772c4b5_ea922795",
      "parentUuid": "00001eec_a719bcc7",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee7d76d_d8163b9a",
        "filename": "api/video/i444_buffer.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 7755
      },
      "writtenOn": "2021-10-17T15:54:14Z",
      "side": 1,
      "message": "it looks like all added files have the dos/crlf line encoding. Surprising that the presubmit does not complain about this.\nAnyway, running `git cl format` should fix that.",
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a9d02af_863a7b46",
        "filename": "modules/video_coding/codecs/h264/h264.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 5117
      },
      "writtenOn": "2021-10-15T12:43:05Z",
      "side": 1,
      "message": "This may fail on some internal builders as well.\n\nI suggest you leave the name of this function intact.",
      "range": {
        "startLine": 70,
        "startChar": 28,
        "endLine": 70,
        "endChar": 54
      },
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0dbb8a9c_faa1561a",
        "filename": "modules/video_coding/codecs/h264/h264.cc",
        "patchSetId": 2
      },
      "lineNbr": 70,
      "author": {
        "id": 18414
      },
      "writtenOn": "2021-10-15T18:59:55Z",
      "side": 1,
      "message": "Ack, will be reverted with the next PS.",
      "parentUuid": "0a9d02af_863a7b46",
      "range": {
        "startLine": 70,
        "startChar": 28,
        "endLine": 70,
        "endChar": 54
      },
      "revId": "35db0c7ff82e7f6ce193d26e8b586479eab3c2bc",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}