{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8989be75_ee5a7ed4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-02T10:58:57Z",
      "side": 1,
      "message": "Mirko\u0027s right. This doesn\u0027t work.\n\n(or rather: It\u0027s an accident of current code arrangement that it works. Don\u0027t depend on that.)\n",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ff38c73a_309ff675",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-02T12:12:59Z",
      "side": 1,
      "message": "Tried to explain in more detail.\n",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2adce0a6_1a146794",
        "filename": "p2p/base/dtls_transport_internal.h",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-02T10:58:57Z",
      "side": 1,
      "message": "This does not work. This particular signal has two listeners, and only one of them is replaced when the cricket::DtlsTransport changes; this will work correctly if SctpTransport is initialized before cricket::DtlsTransport (which is probably why the test passes), but if they are initialized in the opposite order, the wrong consumer is deregistered.",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57634dad_d13c5b83",
        "filename": "p2p/base/dtls_transport_internal.h",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 13719
      },
      "writtenOn": "2021-02-02T11:43:09Z",
      "side": 1,
      "message": "I\u0027m having hard time understanding this,\nDtlsSrtpTransport has two private members(https://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/pc/dtls_srtp_transport.h;l\u003d92-93) one for RTP and one for RTCP and each one is a DtlsTransportInternal object and each one has it\u0027s own callback_list.\nWhen creating a DtlsSrtpTransport we invoke the both the setter methods(https://screenshot.googleplex.com/7bBYfnR5B372MNC) and each one will invoke it\u0027s own disconnect on it\u0027s own callback_list.\nhttps://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/pc/dtls_srtp_transport.cc;l\u003d272-299",
      "parentUuid": "2adce0a6_1a146794",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a82063fd_c34933e1",
        "filename": "p2p/base/dtls_transport_internal.h",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 13719
      },
      "writtenOn": "2021-02-02T11:54:11Z",
      "side": 1,
      "message": "instead of screenshot link: https://source.chromium.org/chromium/chromium/src/+/master:third_party/webrtc/pc/dtls_srtp_transport.cc;l\u003d64-70",
      "parentUuid": "57634dad_d13c5b83",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "209f0295_7aad9c27",
        "filename": "p2p/base/dtls_transport_internal.h",
        "patchSetId": 12
      },
      "lineNbr": 126,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-02T12:12:59Z",
      "side": 1,
      "message": "There are two DtlsTransport objects: cricket::DtlsTransport and webrtc::DtlsTransport.\nThe webrtc::DtlsTransport is used by webrtc::SctpTransport, and uses cricket::DtlsTransport.\n\nThe cricket::DtlsTransport is replaceable; it can be switched out for a new one.\n\nBoth webrtc::SctpTransport and cricket::DtlsTransport subscribe to SignalDtlsState. The API doesn\u0027t dictate which of them subscribes first.\n\nWhat your change does is that when cricket::DtlsTransport is replaced, it will not unsubscribe the old cricket::DtlsTransport, it will unsubscribe whatever client subscribed last. This is wrong.\n\nIs this detailed enough fto understand?",
      "parentUuid": "a82063fd_c34933e1",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "005bd67b_e79fe853",
        "filename": "pc/dtls_srtp_transport.cc",
        "patchSetId": 12
      },
      "lineNbr": 280,
      "author": {
        "id": 5634
      },
      "writtenOn": "2021-02-02T10:58:57Z",
      "side": 1,
      "message": "Is this a leftover? You removed the SignalDtlsState.connect(), so there should be no reason to call SignalDtlsState.disconnect().",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91e07d98_c05bc392",
        "filename": "pc/dtls_srtp_transport.cc",
        "patchSetId": 12
      },
      "lineNbr": 280,
      "author": {
        "id": 13719
      },
      "writtenOn": "2021-02-15T12:51:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "005bd67b_e79fe853",
      "revId": "5d1d7ac37f54ef0bf58031d8d1a138b98ef15f2e",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}