{
  "comments": [
    {
      "key": {
        "uuid": "c10d0f41_10867246",
        "filename": "logging/BUILD.gn",
        "patchSetId": 18
      },
      "lineNbr": 295,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-01-22T10:29:06Z",
      "side": 1,
      "message": "Adding rtc_event_log.h here is not a good idea: the .h is paired with rtc_event_log.cc, and pulling a .h away from its .cc is confusing. You\u0027re really tricking anybody depending on this target that they can use RtcEventLog and RtcEvent etc, but if they depend on this target and not rtc_event_log_api, they will get link errors!\n\nI assume you want to do this because you want to avoid circular dependencies. All you\u0027re doing is masking them though; this will be massively annoying for future maintainers to avoid this dastardly trap.\n\nice_log should obviously depend on rtc_event_log_api here. What circular dependencies are you getting? I suspect the problem is that rtc_event_log_api is too big here and that the things ice_log needs from it should be split out into a separate target.",
      "range": {
        "startLine": 295,
        "startChar": 4,
        "endLine": 295,
        "endChar": 36
      },
      "revId": "2459359891eede48ceeb14584b70fc443cfd21f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f66408b_6d9bbc02",
        "filename": "logging/BUILD.gn",
        "patchSetId": 18
      },
      "lineNbr": 295,
      "author": {
        "id": 5887
      },
      "writtenOn": "2018-01-22T18:10:29Z",
      "side": 1,
      "message": "I have the same thought that the current rtc_event_log_api is too big. I think the root cause of circular dependencies is that rtc_event_log_api depends on several targets from call and modules, which makes targets of WebRTC depends on each other just because of using logging with rtc_event_log_api. The deps of rtc_event_log_api is in its current shape is likely because the derived RtcEvents that are specific for each call and modules targets, e.g, rtc_event_audio_network_adaptation and rtc_event_rtcp_packet_incoming, are part of rtc_event_log_api. If we factor out a smaller target of *generic* logging interface, it would probably fix the issue.\n\nThe current problem of having ice_log depending on rtc_event_log_api is when later ice_log becomes a dependency of rtc_p2p in another CL (the downstream CL of this one) where the logging is applied, build failure occurs in Chromium builds. The same failure can be reproduced if adding rtc_event_log_api to the deps of rtc_p2p for a master-branch Chromium build (i.e., with no changes related to ICE logging), or adding directly system_wrappers to deps of rtc_p2p, which is among the dependencies of call and modules targets that rtc_event_log_api depends on.",
      "parentUuid": "c10d0f41_10867246",
      "range": {
        "startLine": 295,
        "startChar": 4,
        "endLine": 295,
        "endChar": 36
      },
      "revId": "2459359891eede48ceeb14584b70fc443cfd21f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3482c47d_5d907617",
        "filename": "logging/BUILD.gn",
        "patchSetId": 18
      },
      "lineNbr": 295,
      "author": {
        "id": 5027
      },
      "writtenOn": "2018-01-22T18:58:18Z",
      "side": 1,
      "message": "\u003e The deps of rtc_event_log_api is in its current shape is likely because the derived RtcEvents that are specific for each call and modules targets, e.g, rtc_event_audio_network_adaptation and rtc_event_rtcp_packet_incoming, are part of rtc_event_log_api\n\nYep, that\u0027s your problem right there. For instance, rtc_event.h is quite abstract and rtc_event_bwe_update_delay_based.cc is quite concrete. This mix of abstraction levels is the problem. The concrete implementations, therefore, either need to move out to the code they\u0027re coupled to (like bitrate_estimator etc) or sit in a different target. Then you make the _api target to the abstract target it should be.",
      "parentUuid": "6f66408b_6d9bbc02",
      "range": {
        "startLine": 295,
        "startChar": 4,
        "endLine": 295,
        "endChar": 36
      },
      "revId": "2459359891eede48ceeb14584b70fc443cfd21f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    }
  ]
}