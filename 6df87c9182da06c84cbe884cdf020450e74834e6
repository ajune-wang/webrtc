{
  "comments": [
    {
      "key": {
        "uuid": "5ee3ccf6_10ec945b",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-24T11:16:53Z",
      "side": 1,
      "message": "Prefer to have docs for each member just above the declaration of each member.",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 52,
        "endChar": 56
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46064fd8_f64feb99",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-24T11:16:53Z",
      "side": 1,
      "message": "Maybe std::basic_string\u003cuint8_t\u003e is more appropriate?",
      "range": {
        "startLine": 67,
        "startChar": 34,
        "endLine": 67,
        "endChar": 45
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9135846_2c855c17",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 67,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-08-24T12:34:02Z",
      "side": 1,
      "message": "Either way is fine, but in wire format for QUIC we use optional bytes in photo, which is represented as std::string, so string is slightly more convenient.",
      "parentUuid": "46064fd8_f64feb99",
      "range": {
        "startLine": 67,
        "startChar": 34,
        "endLine": 67,
        "endChar": 45
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7325f191_0da3d122",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-24T11:16:53Z",
      "side": 1,
      "message": "Prefer returning an rtc::ArrayView",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 20
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec673fad_fe97ba5d",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 91,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-08-24T12:34:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7325f191_0da3d122",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 91,
        "endChar": 20
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d4d1060_03d80437",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-24T11:16:53Z",
      "side": 1,
      "message": "To me, it seems nicer to let the mapping between \"payload_type\" (arbitrary identifier passed on the wire) and codec belong to the transport, and have an enum identifying the actual codec here. \n\nBut I\u0027m not so familiar with the audio code, so I\u0027m not sure if that\u0027s a good idea or what the canonical enum type is to identify the type of encoder/decoder.",
      "range": {
        "startLine": 100,
        "startChar": 16,
        "endLine": 100,
        "endChar": 30
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "df2049cc_1a105467",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 100,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-08-24T12:34:02Z",
      "side": 1,
      "message": "We thought about it, but I think for now it\u0027s easier to have uint payload type, because it\u0027s exactly what is passed in audio and video RTP header. Added TODO to consider enum.",
      "parentUuid": "6d4d1060_03d80437",
      "range": {
        "startLine": 100,
        "startChar": 16,
        "endLine": 100,
        "endChar": 30
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "abd032d3_a5890489",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 135,
      "author": {
        "id": 5525
      },
      "writtenOn": "2018-08-27T07:49:35Z",
      "side": 1,
      "message": "I _think_ Deregister is more common in the codebase",
      "range": {
        "startLine": 135,
        "startChar": 19,
        "endLine": 135,
        "endChar": 21
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e72dc3e_2966f812",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-24T11:16:53Z",
      "side": 1,
      "message": "Spelling",
      "range": {
        "startLine": 146,
        "startChar": 45,
        "endLine": 146,
        "endChar": 55
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d551a3ab_e4723e08",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-08-24T12:34:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e72dc3e_2966f812",
      "range": {
        "startLine": 146,
        "startChar": 45,
        "endLine": 146,
        "endChar": 55
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c49785a_2fd213d0",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 5234
      },
      "writtenOn": "2018-08-24T11:16:53Z",
      "side": 1,
      "message": "Prefer \"application\"",
      "range": {
        "startLine": 151,
        "startChar": 6,
        "endLine": 151,
        "endChar": 9
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f5c0e28_70def8c7",
        "filename": "api/media_transport_interface.h",
        "patchSetId": 4
      },
      "lineNbr": 151,
      "author": {
        "id": 7565
      },
      "writtenOn": "2018-08-24T12:34:02Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c49785a_2fd213d0",
      "range": {
        "startLine": 151,
        "startChar": 6,
        "endLine": 151,
        "endChar": 9
      },
      "revId": "6df87c9182da06c84cbe884cdf020450e74834e6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}