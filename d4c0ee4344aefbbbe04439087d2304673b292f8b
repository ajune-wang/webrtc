{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c5bfff9c_6bd3b295",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 7036
      },
      "writtenOn": "2022-10-03T16:15:22Z",
      "side": 1,
      "message": "I am having a difficult time understanding in which circumstances this could happen, but I don\u0027t see how it could be an issue either.\nAre you sure this is required to fix the last few issues you\u0027ve had in your repro case?\nThe return-\u003econtinue fixes are obviously correct, but this one seems redundant on a first look.",
      "revId": "d4c0ee4344aefbbbe04439087d2304673b292f8b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a83c822_e74b0dd2",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 19814
      },
      "writtenOn": "2022-10-04T06:57:29Z",
      "side": 1,
      "message": "In my tests, when datachannel is closed by remote side, \n\n1) OnIncomingStreamsReset() is called on local side first. \nThis causes datachannel on local side to be immediately closed and SID released.\n\n2) OnStreamsResetPerformed() is called some milliseconds later - I guess it depends on network connection speed. (thats why its not easy to reproduce with simple test app if both sides are on local workstation)\n\nSo, I have observed that there is a chance for remote party to open new datachannel between events 1) and 2) with reused (same) SID as the datachannel that is in the middle of closing procedure.\n\nAs the result setting unconditionally \n\"stream_state.outgoing_reset_done \u003d true;\"\neffectively closes the new datachannel instead of old one.\n\nWith this check \n\n    if (stream_state.closure_initiated)\n      stream_state.outgoing_reset_done \u003d true;\n\nit wont happen.\n\nAlternative solution could be - to release SID only after both 1) and 2) are completed.",
      "parentUuid": "c5bfff9c_6bd3b295",
      "revId": "d4c0ee4344aefbbbe04439087d2304673b292f8b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d918d45_8ac8efbd",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 7036
      },
      "writtenOn": "2022-10-04T09:16:55Z",
      "side": 1,
      "message": "1) OnIncomingStreamsReset() does not close the data channel, it only marks it as closing. Full close should be when both directions are closed, and only then the SID is released, if it\u0027s released earlier, then it\u0027s another issue to address.\nIf the channel is fully closed, then there was a close on the local channel already or an old channel leftover from previously and some sort of race, which I can see happen with \"return\" instead of \"continue\".\n\nAre you sure the issue is not just fixed with the \"continue\" fix?",
      "parentUuid": "3a83c822_e74b0dd2",
      "revId": "d4c0ee4344aefbbbe04439087d2304673b292f8b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3f517db_c1a7954e",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 19814
      },
      "writtenOn": "2022-10-04T10:16:10Z",
      "side": 1,
      "message": "I am not sure - need to test",
      "parentUuid": "0d918d45_8ac8efbd",
      "revId": "d4c0ee4344aefbbbe04439087d2304673b292f8b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93ba4c62_ff9ab21e",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 19814
      },
      "writtenOn": "2022-10-05T16:03:00Z",
      "side": 1,
      "message": "@orphis@webrtc.org I have tested that issue is not fixed with the \"continue\" fix. Indeed this \"if (stream_state.closure_initiated)\" condition is required.",
      "parentUuid": "d3f517db_c1a7954e",
      "revId": "d4c0ee4344aefbbbe04439087d2304673b292f8b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "755001d1_87ddd039",
        "filename": "media/sctp/dcsctp_transport.cc",
        "patchSetId": 2
      },
      "lineNbr": 562,
      "author": {
        "id": 19814
      },
      "writtenOn": "2022-10-10T05:49:22Z",
      "side": 1,
      "message": "@orphis@webrtc.org Do you think this change makes sense ? \nI can walk you through what happens without this change - which leads to abrupt closure of datachannel on one side of webrtc connection only.\nbtw - is there parser available which can parse SCTP messages from verbose webrtc log?",
      "parentUuid": "93ba4c62_ff9ab21e",
      "revId": "d4c0ee4344aefbbbe04439087d2304673b292f8b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}