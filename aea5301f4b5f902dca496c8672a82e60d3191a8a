{
  "comments": [
    {
      "key": {
        "uuid": "3b0fa217_364623b5",
        "filename": "rtc_base/numerics/moving_average.cc",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T11:10:22Z",
      "side": 1,
      "message": "The comment in the header says \u003c\u003d 2**32-1, and here you say \u003c 2**32-1. Which is it?",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fe6ce83b_87538cbf",
        "filename": "rtc_base/numerics/moving_average.cc",
        "patchSetId": 5
      },
      "lineNbr": 21,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-11-05T11:55:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b0fa217_364623b5",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "336a47d9_66109f01",
        "filename": "rtc_base/numerics/moving_average.cc",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T11:10:22Z",
      "side": 1,
      "message": "Were you going to revert this conditional and zero out all the elements in Reset, to restore the code to the state it was in before I offered my \"good\" advice?",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e5479521_576516d2",
        "filename": "rtc_base/numerics/moving_average.cc",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-11-05T11:55:37Z",
      "side": 1,
      "message": "No, I like the current more - it\u0027s runtime is more consistent. Having fill in Reset is not very good.",
      "parentUuid": "336a47d9_66109f01",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31a00706_a3435d63",
        "filename": "rtc_base/numerics/moving_average.cc",
        "patchSetId": 5
      },
      "lineNbr": 29,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T12:09:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e5479521_576516d2",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ebf8d31_d44bc4cb",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T11:10:22Z",
      "side": 1,
      "message": "It just occurred to me: do you need the window size to be runtime configurable? Otherwise, it could be a template argument, and you could store the samples in a std::array.",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11d52a9b_1962fd67",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-11-05T11:55:37Z",
      "side": 1,
      "message": "I don\u0027t need the window size to be configurable, but rewriting this class to be a template is too much work for moving the class around.\n\nDo you think it\u0027s necessary?",
      "parentUuid": "1ebf8d31_d44bc4cb",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d4bcb9b8_24306df0",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 26,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T12:09:50Z",
      "side": 1,
      "message": "No, that\u0027s fine. It would have made the code easier to read (since the window size would have been a true constant) and also more efficient (for the same reason), but it\u0027s simple enough and performant enough as it is---until bugs or benchmarks prove otherwise. :-)",
      "parentUuid": "11d52a9b_1962fd67",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "237e1a7d_13562e3a",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T11:10:22Z",
      "side": 1,
      "message": "Also note that this vector always has size `window_size`, and that the unused elements are 0?",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da0a4f89_f421b607",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-11-05T11:55:37Z",
      "side": 1,
      "message": "Reworded a comment a little to make it more clear about the size of the vector.\nNo comment about 0 because it\u0027s not the case.",
      "parentUuid": "237e1a7d_13562e3a",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af54c1a1_b6a463f3",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T12:09:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "da0a4f89_f421b607",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd614c66_7253585f",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T11:10:22Z",
      "side": 1,
      "message": "Optionally, use absl::FixedArray here. It works more or less exactly like std::vector, but can\u0027t be resized after construction, which makes the code easier to read. Also, if the array size is at most some small constant (by default 256 bytes, I think, but you can ask for a specific number of elements) it\u0027ll store the elements in-line instead of on the heap.",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abf6a28e_6ffc1d0d",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5117
      },
      "writtenOn": "2018-11-05T11:55:37Z",
      "side": 1,
      "message": "I don\u0027t think the vector is too unreadable. It\u0027s not resized anywhere and is more commonly used type.",
      "parentUuid": "bd614c66_7253585f",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "88a67671_ab3771c1",
        "filename": "rtc_base/numerics/moving_average.h",
        "patchSetId": 5
      },
      "lineNbr": 58,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-11-05T12:09:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "abf6a28e_6ffc1d0d",
      "revId": "aea5301f4b5f902dca496c8672a82e60d3191a8a",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}