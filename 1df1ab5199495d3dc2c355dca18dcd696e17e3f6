{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2b39e2b9_359be5ad",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1084,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T08:51:57Z",
      "side": 1,
      "message": "nit: Prefer doing \"not video OR not kSendOnly\" and early return over nesting",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b52c582_c797c00e",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1084,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-05T09:00:51Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "2b39e2b9_359be5ad",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08874feb_43c2c3f6",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1092,
      "author": {
        "id": 5825
      },
      "writtenOn": "2024-11-11T09:36:08Z",
      "side": 1,
      "message": "HEVC -\u003e H265. For consistency with the rest WebRTC code.",
      "range": {
        "startLine": 1092,
        "startChar": 35,
        "endLine": 1092,
        "endChar": 39
      },
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a94ca34_5e8c8b3f",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1093,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T08:51:57Z",
      "side": 1,
      "message": "By \"already merged\", you you mean that the assumption is that we assume that for any profile the level is already the highest level for that profile? Maybe this can be rephrased as such",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e8a38fab_93cd973d",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1093,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-05T09:00:51Z",
      "side": 1,
      "message": "Yes. Ok will do.",
      "parentUuid": "8a94ca34_5e8c8b3f",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0404fc51_2d6e8ae7",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1113,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T08:51:57Z",
      "side": 1,
      "message": "If filtered level is less than the supported level, wouldn\u0027t this \"upgrade\" the level to a higher level that may not be supported in the SDP?\n\nDo we need to change this to \"if filtered level \u003e supported level\"?\n\nIs there an opposite test we should have that ensures we don\u0027t incorrectly upgrade?",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "692a5f23_f9282638",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1113,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-05T09:00:51Z",
      "side": 1,
      "message": "for send-only offer, what\u0027s negotiated must be exactly the one in supported_level.",
      "parentUuid": "0404fc51_2d6e8ae7",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0583d9db_94d07064",
        "filename": "pc/media_session.cc",
        "patchSetId": 4
      },
      "lineNbr": 1113,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T11:14:01Z",
      "side": 1,
      "message": "You\u0027re right that makes sense.",
      "parentUuid": "692a5f23_f9282638",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43e8ca70_dec2407e",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 4981,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T08:51:57Z",
      "side": 1,
      "message": "Since this is basically 4 different tests with a common SetUp(), I would suggest creating a separate test class for to avoid \"if-else\" code blocks that are essentially different TEST_Fs.\n\n```\nclass VideoCodecsOfferH265LevelIdTest : public ::testing::Test {\n public:\n  void SetUp() override {\n    /* the common set-up code */\n  }\n\n protected:\n  /* variables that are needed by TEST_F below */\n};\n\nTEST_F(VideoCodecsOfferH265LevelIdTest, SendOnlyDowngradesLevelId) {\n  /* code that is currently placed in if-else blocks */\n}\n\nTEST_F ... RecvOnly ...\nTEST_F ... SendRecv ...\nTEST_F ... Inactive ...\n```\n\nAlso since this test is quite specific to H265 I think you can place the `#ifdef RTC_ENABLE_H265` around the entire test class rather than in different places of the test",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4b1e08d_839dff02",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 4985,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T08:51:57Z",
      "side": 1,
      "message": "Should we do something similar on the answer side too?",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3de1c776_994b37eb",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 4985,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-05T09:00:51Z",
      "side": 1,
      "message": "Unfortunately which level-id should be included in answer remain an open. The AVTCore meeting decision allows answer level-id higher than offer level-id; while RFC 7798 mandates answer level-id not larger than offer level-id.\n\nWe can revisit this after IETF 121.",
      "parentUuid": "f4b1e08d_839dff02",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78e8db1f_9b5646a6",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 4985,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T11:14:01Z",
      "side": 1,
      "message": "OK so if the sender can do 150 and the receiver can only do 100, it\u0027s not clear whether the answer should say \"150\" or \"100\"? I would think we do 100 or else the sender could send something that the receiver can\u0027t decode.\n\nBut regardles if the answer says 150 or 100, I would expect an answer that accepts H265. Does it make sense to add some sort of test here anyway just to make sure we don\u0027t drop H265 if there is a mismatch?\n\nLet me know on chat if you want me to test this manually on my MacBook M1 Pro where I saw a difference in sender level ID and receiver level ID to make sure I can still do a loopback with this CL",
      "parentUuid": "3de1c776_994b37eb",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f6650a9e_753e82df",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 4985,
      "author": {
        "id": 18005
      },
      "writtenOn": "2024-11-05T12:03:04Z",
      "side": 1,
      "message": "It\u0027s the reverse - offerer sends 100, answer can decode 150, should the answer return level 150 or 100?  RFC says 100,  WebRTC WG meeting decides it should be 150.\n\nI\u0027ll add a test for that. We already have asymmetrical level-id on Windows meet this requirement.(sender can handle level-id 156, receiver can handle level-id 186).",
      "parentUuid": "78e8db1f_9b5646a6",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6278806a_fda4f528",
        "filename": "pc/media_session_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 4985,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-11-05T13:03:14Z",
      "side": 1,
      "message": "I see.\n\nIf I offer to send 100 and the receiver can do 150, I guess it doesn\u0027t matter if SDP says 100 or 150 because the end result is we can only send 100. I feel like 100 makes more sense, but I also see no \"harm\" in accepting an SDP answer that hints that the other endpoint can do even more.\n\nBut if I offer to send 150 and the receiver can only do 100, the only thing that makes sense to me is that the answer says 100. We should make sure this SDP answer does not get rejected due to 150 !\u003d 100.\n\nLastly for kSendRecv, I don\u0027t know, maybe to keep things simple we should just take the minimum level ID that is possible in both directions? It would be consistent with \"codec preferences are filtered out based on transceiver direction\" and it\u0027s easier to add more support in the future than to drop support after the fact",
      "parentUuid": "f6650a9e_753e82df",
      "revId": "1df1ab5199495d3dc2c355dca18dcd696e17e3f6",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}