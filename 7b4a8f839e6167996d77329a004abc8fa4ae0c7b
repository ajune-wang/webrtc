{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c3cbe495_41530187",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 18474
      },
      "writtenOn": "2024-05-10T14:39:52Z",
      "side": 1,
      "message": "Not sure how much/difficult setup is (or if it can easily be extracted to be shared), but would it be worth making this it\u0027s own separate test?",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 189,
        "endChar": 35
      },
      "revId": "7b4a8f839e6167996d77329a004abc8fa4ae0c7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b1283c64_69a068f9",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-05-10T15:33:56Z",
      "side": 1,
      "message": "I think I have tried to split this in the past, but it either didn\u0027t work as I expected or was not worth it as still some bits were duplicated. I can give it one more try.",
      "parentUuid": "c3cbe495_41530187",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 189,
        "endChar": 35
      },
      "revId": "7b4a8f839e6167996d77329a004abc8fa4ae0c7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47c2c7db_ca30a9a9",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 8046
      },
      "writtenOn": "2024-05-13T07:50:37Z",
      "side": 1,
      "message": "So I spent some time trying to split this, but it would probably need to be written differently. If I write more `TEST_F` tests, each will call the  `SetUp` method, so we are all the time initializing PipeWire and have to duplicate the initial setup and part of the test. Also not testing all the mock functions in each `TEST_F`, they get reported:\n```\nGMOCK WARNING:\nUninteresting mock function call - returning directly.\n    Function call: OnStopStreaming()\n``` \nIt\u0027s been a while I worked with this API so at this moment I have no idea how to rewrite it to be more \"cleaner\" and I would prefer not to spend that much time on it.",
      "parentUuid": "b1283c64_69a068f9",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 189,
        "endChar": 35
      },
      "revId": "7b4a8f839e6167996d77329a004abc8fa4ae0c7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46798126_041bf670",
        "filename": "modules/desktop_capture/linux/wayland/shared_screencast_stream_unittest.cc",
        "patchSetId": 5
      },
      "lineNbr": 189,
      "author": {
        "id": 18474
      },
      "writtenOn": "2024-05-13T16:10:51Z",
      "side": 1,
      "message": "Ack. I think the duplicate SetUp would be okay, I think there are ways to ignore the uninteresting call (Simplest would be to create it as a NiceMock I think: https://google.github.io/googletest/gmock_cook_book.html#NiceStrictNaggy), but we can leave as-is for now.\n\nThe benefit to splitting it up is that we get a clearer picture of what operations are buggy/failing.",
      "parentUuid": "47c2c7db_ca30a9a9",
      "range": {
        "startLine": 163,
        "startChar": 0,
        "endLine": 189,
        "endChar": 35
      },
      "revId": "7b4a8f839e6167996d77329a004abc8fa4ae0c7b",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}