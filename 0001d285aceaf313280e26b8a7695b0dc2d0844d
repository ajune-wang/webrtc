{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2f3eedba_24c4c358",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-01-18T11:43:38Z",
      "side": 1,
      "message": "Please?",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "87425597_fa2fc70e",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2004,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-01-18T14:40:53Z",
      "side": 1,
      "message": "I think encodings[0].rid is \u0027q\u0027 and encodings[2].rid is \u0027f\u0027, can you confirm?",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e51e10a_736d8983",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2004,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-01-18T15:29:51Z",
      "side": 1,
      "message": "Sorry fixed the confusing names.",
      "parentUuid": "87425597_fa2fc70e",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c7d2a1a_f708d775",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2004,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-01-23T14:26:01Z",
      "side": 1,
      "message": "Thank you, I guess we should do it for the other tests too, but that\u0027s another CL",
      "parentUuid": "1e51e10a_736d8983",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "93cab854_41ad0e1d",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2026,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-01-18T14:40:53Z",
      "side": 1,
      "message": "Encodings are scaled 4:2:1, which should mean q(uarter), h(alf) and f(ull).\n\nIs the problem that you\u0027re disabling the full (720p) resolution, but you are expecting that the quarter (180p) resolution is disabled?",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c8c8f88_233f65fc",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2026,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-01-18T15:29:51Z",
      "side": 1,
      "message": "There is nothing wrong with this test as far as I can see. Passes fine.",
      "parentUuid": "93cab854_41ad0e1d",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5549a851_e330d8dd",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2027,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-01-18T14:40:53Z",
      "side": 1,
      "message": "This is racy as in it could fail when it should pass.\n\nI think we need to inactivate and then call getStats, wait a while and then call getStats again and make sure counters are \u003d\u003d to their previous value.\n\nThat could in theory flakily pass when it should fail, but it would eventually always fail if there is a problem, which is better than flakily failing when there isn\u0027t a problem",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57781a42_e1696a8e",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2027,
      "author": {
        "id": 5578
      },
      "writtenOn": "2024-01-18T15:29:51Z",
      "side": 1,
      "message": "Not sure what you mean.",
      "parentUuid": "5549a851_e330d8dd",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19cef9d5_c6844d82",
        "filename": "pc/peer_connection_encodings_integrationtest.cc",
        "patchSetId": 3
      },
      "lineNbr": 2027,
      "author": {
        "id": 5142
      },
      "writtenOn": "2024-01-23T14:26:01Z",
      "side": 1,
      "message": "The last EXPECT of this test is that we have encoded no more than 3 additional frames (why 3?) since we inactivated the encoding. But this could be flaky on slow bots (imagine SetParameters taking unusually long time to execute and the encoder spits out a few more frames than normal until active\u003dfalse is applied). In the past these tests have been really flaky so I think it\u0027s better to that we wait until we know that the parameters have had an effect and then expect that the encoded frames counters stops incrementing.\n\nSuggestion: Write a helper method that returns if \"outbound-rtp.active\" is true or false, and then:\n\n```\n// Wait until the encoding is no longer active before getting its encoded frames\n// count.\nASSERT_TRUE_WAIT(!EncodingIsActive(local_pc_wrapper, \"f\"), kDefaultTimeout.ms());\nint encoded_frames_f \u003d EncodedFrames(local_pc_wrapper, \"f\");\n\n// Wait until the encoder has encoded another 10 frames on lower layers.\nASSERT_TRUE_WAIT(EncodedFrames(local_pc_wrapper, \"q\") \u003e encoded_frames_q + 10,\n                 kDefaultTimeout.ms());\nASSERT_TRUE_WAIT(EncodedFrames(local_pc_wrapper, \"h\") \u003e encoded_frames_h + 10,\n                kDefaultTimeout.ms());\n\n// No new frames should have been encoded on the inactive layer.\nEXPECT_LT(EncodedFrames(local_pc_wrapper, \"f\"), encoded_frames_f);\n```",
      "parentUuid": "57781a42_e1696a8e",
      "revId": "0001d285aceaf313280e26b8a7695b0dc2d0844d",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767"
    }
  ]
}