{
  "comments": [
    {
      "key": {
        "uuid": "2b44a6f5_862c0ebf",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-01-12T09:19:44Z",
      "side": 1,
      "message": "checked_cast or dchecked_cast?",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fefad0b8_e364a7c7",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-12T09:54:57Z",
      "side": 1,
      "message": "It\u0027s always safe to cast int32 to int64.",
      "parentUuid": "2b44a6f5_862c0ebf",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "58225ad8_5dd9d531",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-01-12T09:58:22Z",
      "side": 1,
      "message": "Oh, sorry---I misread the code, and thought you were doing a signed-to-unsigned conversion.\n\nThen my objection is, why not do int64_t{bitrate_bps} instead? It\u0027s safer.",
      "parentUuid": "fefad0b8_e364a7c7",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44cd94dd_7eac4fd8",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-12T11:32:05Z",
      "side": 1,
      "message": "I got a feedback from Holmer on a previous version that it should be changed to static_cast. What risks does any of them expose? Is there any way a cast from int32 to int64 can fail? Seems to me that it\u0027s mostly a question about choosing what is most familiar to other readers?\n\nThe chromium style guide says to use static_cast if the operation is safe.",
      "parentUuid": "58225ad8_5dd9d531",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a884bf7d_ab28748e",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-01-12T11:38:28Z",
      "side": 1,
      "message": "Both are safe (and do the same thing) if the target type can represent all values of the source type. The difference is in what happens if that\u0027s not the case. static_cast will silently truncate or whatever the C++ standard says should happen, whereas brace initialization will fail to compile. IOW, if you use brace initialization, the compiler will check that what you\u0027re doing is safe.\n\nhttps://google.github.io/styleguide/cppguide.html#Casting says to use brace initialization when possible to convert arithmetic types for this reason.",
      "parentUuid": "44cd94dd_7eac4fd8",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aef8fc93_729415a9",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-12T14:19:03Z",
      "side": 1,
      "message": "Ah, I see, that makes sense. Maybe the chromium guide should be updated to reflect the google style guide here?",
      "parentUuid": "a884bf7d_ab28748e",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "55918e5c_d511b434",
        "filename": "modules/pacing/alr_detector.cc",
        "patchSetId": 9
      },
      "lineNbr": 76,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-01-12T14:32:51Z",
      "side": 1,
      "message": "Yes, probably. Brace initializing integers like this is a good idea.",
      "parentUuid": "aef8fc93_729415a9",
      "range": {
        "startLine": 76,
        "startChar": 32,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "322a4929_b9b3246c",
        "filename": "rtc_base/experiments/BUILD.gn",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 5126
      },
      "writtenOn": "2018-01-12T09:19:44Z",
      "side": 1,
      "message": "I would call this alr_experiment or something instead, since it\u0027s generally better to have small build targets.",
      "range": {
        "startLine": 11,
        "startChar": 20,
        "endLine": 11,
        "endChar": 31
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60785058_968c6471",
        "filename": "rtc_base/experiments/BUILD.gn",
        "patchSetId": 9
      },
      "lineNbr": 11,
      "author": {
        "id": 5531
      },
      "writtenOn": "2018-01-12T09:54:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "322a4929_b9b3246c",
      "range": {
        "startLine": 11,
        "startChar": 20,
        "endLine": 11,
        "endChar": 31
      },
      "revId": "ae91d385df77d6eaf6b8ac8e417a4757b165fd96",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}