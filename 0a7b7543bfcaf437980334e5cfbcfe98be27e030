{
  "comments": [
    {
      "key": {
        "uuid": "7a289982_5c1af3a6",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7613,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "I think I would prefer a \"boolean implicit_rollback\" if that is the only thing this method needs to know, because I found myself wondering \"The SdpType of what...?\" when I saw this.",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0bde596_5306f340",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7613,
      "author": {
        "id": 5634
      },
      "writtenOn": "2019-10-21T10:23:05Z",
      "side": 1,
      "message": "I made him change it away from a boolean :-) - I like this style better, because a) at the calling site, it says what you\u0027re passing in (info on what kind of SDP event it is), and b) at the called site, it allows you to say \"if this is a rollback, do A; else do B\" rather than \"if the rollback flag is true, do A\" - which I think is more readable code in explaining *why* you do it.\n\nTaste differs :-)",
      "parentUuid": "7a289982_5c1af3a6",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05fdb38e_498d7f2f",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7613,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T12:06:55Z",
      "side": 1,
      "message": "OK. As long as it is clear where it comes from; since a rollback in and of itself doesn\u0027t really have a type, can you just add a comment that says this is the type of the SDP that caused the rollback? Maybe this was clear to everyone without the comment, but it was confusing to me due to discussions I\u0027ve had with Jan-Ivar about something kind of similar.",
      "parentUuid": "c0bde596_5306f340",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "038a905d_ffb2e7e0",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7613,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-21T12:34:11Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c0bde596_5306f340",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8fbd07a_66768f3a",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7635,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "Note that in blink/JavaScript land, the thing that we use to discover if we should fire \"ontrack\" (adding a track) or \"track.onmute\" (removing a track) is actually the before/after value of FiredDirection:\nhttps://cs.chromium.org/chromium/src/third_party/blink/renderer/modules/peerconnection/rtc_peer_connection.cc?q\u003drtc_peer_connection.cc\u0026sq\u003dpackage:chromium\u0026dr\u003dC\u0026l\u003d2843\n\nThe OnAddTrack and onRemoveTrack are used by native apps and are needed, but not by chromium.\n\nSo this is good and needed regardless, just wondering if we update FiredDirection for chromium or what happens in that case. Especially if implicit rollback causes track removal and then the offer being set as part of the same operation causes track addition. Do we mute-unmute?",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a66bc6d2_488a9f2b",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7635,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-21T12:34:11Z",
      "side": 1,
      "message": "Implicit rollback applies only for local offer in which case track removals do not need events, right? But I see that currently there can be duplicated events fired to JS as RTCPeerConnection::DidModifyTransceivers fires the events too. But the events in JS where definitely missing when transceiver was removed during rollback. Discovered that in wpt tests.\nI will try to upload new patch with chromium changes shortly. Then it gives full picture of the changes.",
      "parentUuid": "a8fbd07a_66768f3a",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "135b10a9_00245349",
        "filename": "pc/peer_connection.cc",
        "patchSetId": 4
      },
      "lineNbr": 7635,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T16:42:58Z",
      "side": 1,
      "message": "Hmm, yes! You\u0027re right.\nImplicit rollback only happens at setRemoteDescription and is only needed if there is a local offer, which doesn\u0027t fire any events, so there\u0027s no events to \"undo\" i.e. to fire anything new.\n\nSo I think we\u0027re good then?",
      "parentUuid": "a66bc6d2_488a9f2b",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79d5023d_a1cd8298",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1818,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "Can you add a comment saying it is not needed because the callee used AddTrack, so that track could get attached in the answer? (As opposed to if AddTransceiver was used or the callee that multiple tracks, then ONN would be true)",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a570a0a4_69f7a40f",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1818,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-21T12:34:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "79d5023d_a1cd8298",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b7e68e8_131b2d31",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1915,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "nit: RollbackHasNoEffectOnStableTransceivers?",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f930712_70c3c78a",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1915,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-21T12:34:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6b7e68e8_131b2d31",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6150afce_c89e592e",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1988,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "Naming of the test... is there any direction change in this test?\n\nBoth AddTransceiver and AddTrack default to \u0027sendrecv\u0027. Is the offer being rolled back actually also \u0027sendrecv\u0027? Should an offer attempt to set direction to \u0027inactive\u0027 and then roll that back?\n\nMaybe not, the test below does direction changes... should we simply rename this test or am I confusing myself?",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b22bb33b_0a59385c",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1988,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-21T12:34:11Z",
      "side": 1,
      "message": "The spec says something about that direction of the transceiver has to be restored in rollback but yeah, I have not managed to setup such scenario where this comes into play. Any suggestions? I guess this test just have documenting value that there is nothing to worry about in context of rollback.",
      "parentUuid": "6150afce_c89e592e",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ee15589_354bd123",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 1988,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T16:42:58Z",
      "side": 1,
      "message": "Since CurrentDirection is only set at \"answer\", in which case it is too late to rollback, I guess there is nothing to do in terms of reverting back the directions.\n\nThe only place where direction comes into play is for events firing, and what to do if you touch a transceiver in \"ontrack\"...\n\nExample:\nconst p \u003d pc-\u003eSetRemoteDescription(with \"recvonly\");\npc-\u003eontrack \u003d e \u003d\u003e () {\n  e.transceiver.direction \u003d \u0027inactive\u0027;\n}\nawait p;  // now transceiver.currentDirection \u003d\u003d \u0027inactive\u0027\npc-\u003eSetRemoteDescription(rollback);\n\nHere I guess currentDirection needs to revert to null (whether or not the transceiver is destroyed, which depends on if it was created with addTrack or in the SRD).\n\nHowever, I think transceiver.direction should remain \u0027inactive\u0027. The only thing to do is to make sure transceiver.receiver.track.onmute fires. And that is a test that I am guessing is not affected by setting the transceiver.direction attribute.",
      "parentUuid": "b22bb33b_0a59385c",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91c86e38_74d6566a",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 2008,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "nit: Since you\u0027re looking at both caller and callee transceivers in this test, how about renaming this to caller_transceiver?",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98cb76c6_6f5b13ec",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 2008,
      "author": {
        "id": 9279
      },
      "writtenOn": "2019-10-21T12:34:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91c86e38_74d6566a",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb2058f7_060c430f",
        "filename": "pc/peer_connection_jsep_unittest.cc",
        "patchSetId": 4
      },
      "lineNbr": 2018,
      "author": {
        "id": 5142
      },
      "writtenOn": "2019-10-21T10:14:16Z",
      "side": 1,
      "message": "That\u0027s correct. \"direction\" is what we are prepared to negotiate (a locally set attribute that SDP cannot modify), and \"currentDirection\" is what has been negotiated (set by an SDP answer, not otherwise settable by the application).",
      "revId": "0a7b7543bfcaf437980334e5cfbcfe98be27e030",
      "serverId": "58829da1-049c-39fb-b951-ebdcd0984767",
      "unresolved": false
    }
  ]
}